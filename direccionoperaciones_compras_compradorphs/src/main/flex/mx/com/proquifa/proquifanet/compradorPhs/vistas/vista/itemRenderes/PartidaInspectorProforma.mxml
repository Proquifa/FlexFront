<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="completeHandler(event)" resize="resizeHandler(event)"
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
				autoDrawBackground="true" xmlns:otros="skins.otros.*">
	<fx:Declarations>
		<s:Resize id="fxResizeAbrir"  duration="300" effectEnd="resetFx()" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaProforma;
			import mx.controls.listClasses.ListData;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			private var _ocultaTextoCuandoNoTieneElFocoEstaFila:Boolean = false;
			[Bindable]	private var normalIcoUno:Class;
			[Bindable]	private var HoverIcoUno:Class;
			[Bindable]	private var normalIcoDos:Class;
			[Bindable]	private var HoverIcoDos:Class;
			//[Bindable]	private var _parrafo:String = "";
			[Bindable]	private var _numeroFila:int;
			
			[Bindable]	private var _parrafoQueSeRedimensiona:String = "";
			
			protected function completeHandler(event:FlexEvent):void
			{
				if( (data as PartidaProforma).ultimo == "" ){
						compruebaLongitud( _parrafoQueSeRedimensiona );
				}
			}
			protected function resizeHandler(event:ResizeEvent):void
			{
				if( (data as PartidaProforma).ultimo == "" ){
						compruebaLongitud( _parrafoQueSeRedimensiona );
				}
			}
			override public function set data(value:Object):void{
				if( value != null){
					super.data = value;
					this._numeroFila = (data as PartidaProforma).numFila < 0 ? (data as PartidaProforma).numFila* -1: (data as PartidaProforma).numFila;
					////////////////////////////////////////////////// EL CAMPO QUE SE AJUSTA VA AQUI
					if(															  (data as PartidaProforma).conceptoProducto != null
																			&& (data as PartidaProforma).conceptoProducto != ""){
						this._parrafoQueSeRedimensiona = (data as PartidaProforma).conceptoProducto;
					}
					normalIcoUno = catalogoIconosGrid.getInstance().render_25xDisqueteCirculoAzulSuave;
					HoverIcoUno = catalogoIconosGrid.getInstance().render_25xMailCirculoAzulSuave;
					normalIcoDos = catalogoIconosGrid.getInstance().render_25xDisqueteCirculoAzulSuave;
					HoverIcoDos = catalogoIconosGrid.getInstance().render_25xMailCirculoAzulSuave;
				}
				if( (data as PartidaProforma).ultimo == "" ){
					compruebaLongitud( _parrafoQueSeRedimensiona );
					this.grpInfo.visible = true;
					this.grpInfo.includeInLayout = true;
					this.grpInfo.percentHeight = 100;
					this.grpTotal.visible = false;
					this.grpTotal.includeInLayout = false;
					this.grpTotal.height = 0;
				}else{
					this.grpInfo.visible = false;
					this.grpInfo.includeInLayout = false;
					this.grpInfo.height = 0;
					this.grpTotal.visible = true;
					this.grpTotal.includeInLayout = true;
					this.grpTotal.percentHeight = 100;
				}
				if( data.numFila > 0  && this.btnVista.label == "Ver menos"){
					this._ocultaTextoCuandoNoTieneElFocoEstaFila = true;
				}
				if(this._ocultaTextoCuandoNoTieneElFocoEstaFila == true ){
					this.btnVista.label = "Ver más";
					ocultar();
				}
			}
			private function resetFx():void{
				this.fxResizeAbrir.target = null;
				this._ocultaTextoCuandoNoTieneElFocoEstaFila = false;
			}
			protected function cambioAltura():void
			{
				if(this.btnVista.label == "Ver más"){
					this.btnVista.label = "Ver menos";
					mostrar();
				}else if(this.btnVista.label == "Ver menos"){
					this.btnVista.label = "Ver más";
					ocultar();
				}
				this.txtContenido.verticalScrollPosition = 0;
			}
			private function ocultar():void{
				fxResizeAbrir.stop();
				this.txtContenido.heightInLines=1;
				this.txtContenido.selectable = false;
				this.txtContenido.verticalScrollPosition = 0;
				this.txtContenido.mouseEnabled = false;
				fxResizeAbrir.target = this.txtContenido;
				fxResizeAbrir.heightTo = 
					int(this.txtContenido.getStyle("fontSize")) 
					+ int(this.txtContenido.getStyle("paddingTop")) 
					+ int(this.txtContenido.getStyle("paddingBotton"));
				fxResizeAbrir.play();
			}
			private function mostrar():void{
				fxResizeAbrir.stop();
				this.txtContenido.selectable = true;
				this.txtContenido.mouseEnabled = true;
				fxResizeAbrir.target = this.txtContenido;
				fxResizeAbrir.heightTo = 
					this.grpInfo.contentHeight/8
					+ int(this.txtContenido.getStyle("paddingTop")) 
					+ int(this.txtContenido.getStyle("paddingBotton"))
					+ this.txtContenido.contentHeight
					;
				fxResizeAbrir.play();
			}
			protected function compruebaLongitud($parrafo:String):void{
				var tamanioLetra:int = this.txtContenido.getStyle("fontSize");
				var longitudDeCaracteresQSoportaElRenderer:int = this.width / (tamanioLetra/2);//+tamañoLetra/8);
				if( $parrafo.length < longitudDeCaracteresQSoportaElRenderer){
					this.btnVista.visible = false;
					this.btnVista.includeInLayout = false;
					//this.btnVista.height = 0;
					//this.txtContenido.setStyle("textAlign", "left");
				}else{
					this.btnVista.visible = true;
					this.btnVista.includeInLayout = true;
				}
			}  
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<s:VGroup id="grpInfo" width="100%" height="0" paddingTop="7" >
		<s:Label id="lblNumFila" fontSize="12" fontWeight="bold" 
				 color="#CC0000" color.hovered="0x{catalogoColores.LABEL_BLANCO}" color.selected="0x{catalogoColores.LABEL_BLANCO}"
				 text="# {this._numeroFila}"
				 paddingLeft="10"
				 />
		<s:RichEditableText id="txtContenido" width="{this.width}" height="15"
							heightInLines="1" verticalAlign="middle" selectable="false" editable="false" 
							color="#000000" color.hovered="0x{catalogoColores.LABEL_BLANCO}" color.selected="0x{catalogoColores.LABEL_BLANCO}"
							textAlign="left"
							text="{ this._parrafoQueSeRedimensiona}"
							paddingTop="3" paddingBottom="3"
							mouseEnabled="false"
							paddingLeft="10" paddingRight="10"
							/>
		<s:HGroup width="100%" paddingRight="10" horizontalAlign="right">
			<mx:LinkButton id="btnVista" fontSize="10" textDecoration="underline" visible="false" includeInLayout="false"
						   color="#0053a5" color.selected="0x{catalogoColores.LABEL_BLANCO}" 
						   label="Ver más" click="cambioAltura()" />
		</s:HGroup>
		<s:HGroup width="100%" id="grpImagenes" horizontalAlign="left" paddingLeft="10">
			<s:Label id="lblCosto" width="100%" fontSize="12" 
					 color="#666666" color.hovered="0x{catalogoColores.LABEL_BLANCO}" color.selected="0x{catalogoColores.LABEL_BLANCO}"
					 text="{(data as PartidaProforma).costoCDesc + ' ' + (data as PartidaProforma).monedaProveedor}"  />
		<!--	<s:Image id="imgGlobo" source="{normalIcoUno}" source.selected="{HoverIcoUno}"/>
			<s:Image id="imgGuardar" source="{normalIcoDos}" source.selected="{HoverIcoDos}"/>-->
		</s:HGroup>
		<s:BorderContainer backgroundColor="#FFFFFF" borderColor="#FFFFFF" width="100%" height="3">
			<otros:divisionHueca/>
		</s:BorderContainer>
	</s:VGroup>
	<s:BorderContainer id="grpTotal" backgroundColor="#FFFFFF" borderColor="#FFFFFF" width="100%" height="0">
		<s:VGroup width="100%" height="100%" paddingTop="7">
			<s:Label width="100%" fontSize="14" textAlign="center"
					 text="{(data as PartidaProforma).ultimo} {(data as PartidaProforma).ultimo == '1'? 'Partida':'Partidas' }"
					 color="0x{catalogoColores.LABEL_CASI_NEGRO}"  />
			<s:Label id="lblTodas" width="100%" fontSize="14" textAlign="center"
					 text="TOTAL"
					 color="0x{catalogoColores.LABEL_GRIS}" />
		</s:VGroup>
	</s:BorderContainer>
</s:ItemRenderer>
