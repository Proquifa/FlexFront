<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		actionBarVisible="false" backgroundColor="#252b2c" gestureSwipe="slideFunction(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroNavegacion;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.pieChartDinamico.PieDinamico;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.pieChartDinamico.pqNetPiesChartDinamico;
			
			import spark.transitions.SlideViewTransition;
			import spark.transitions.ViewTransitionDirection;
			
			public var pendientesJustificados:ArrayCollection = new ArrayCollection();
			public var datosGrafica:ArrayCollection = new ArrayCollection();
			
			protected var _componentesArregloPies:pqNetPiesChartDinamico;
			protected var _listaGraficas:ArrayCollection = new ArrayCollection();
			
			
			public function set recibirPendientesJustificacion(pendientes:ArrayCollection):void{
				this.pendientesJustificados = new ArrayCollection();
				if(pendientes.length>0){
					this.pendientesJustificados = pendientes;
					this._listaGraficas.addItem( setteaGrafica("No realizados\njustificaciones",0,Util.getInstance().consultaPieChartConteoXCampo(pendientes,"tipoJustificacion","Evento(s)")));
					_componentesArregloPies = new pqNetPiesChartDinamico();
					this.addElement(_componentesArregloPies);
					_componentesArregloPies.iniciarGraficas(_listaGraficas);
				}
			}
			
			private function setteaGrafica($titulo:String,$tipo:int,$dataProvider:ArrayCollection):PieDinamico{
				var pieRegreso:PieDinamico = new PieDinamico();
				pieRegreso.lblTitulo = $titulo;
				pieRegreso.tituloColor = 0xFFFFFF;
				pieRegreso.tipoPie = $tipo;
				pieRegreso.arregloAlimentador = $dataProvider;
				pieRegreso.tituloSize = 50;
				return pieRegreso;
			}
			
			protected function slideFunction(event:TransformGestureEvent):void
			{
				if(event.offsetX == 1){
					var evento:EventoMensajeroNavegacion = new EventoMensajeroNavegacion(EventoMensajeroNavegacion.NAVEGAR_VISTA_ANTERIOR);
					evento.indiceNavegador = this.parentDocument["navegador"].length;
					//trace("getElement: " + this.navigator.getElementIndex(this) + " children: " + this.navigator.numChildren + " elements:" + this.navigator.numElements + " " + this.navigator.instanceIndex);
					trace("largo :" + this.parentDocument["navegador"].length);
					this.dispatchEvent(evento);
					var m:SlideViewTransition = new SlideViewTransition();
					m.duration =300;
					m.direction = ViewTransitionDirection.RIGHT;
					this.navigator.popView(m);
					
				}
				
			}
			
		]]>
	</fx:Script>
	
</s:View>
