<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="EN CIERRE" xmlns:botonAtras="skin.botonAtras.*"
		backgroundColor="#252b2c">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import spark.events.IndexChangeEvent;
			
			import eventos.EventoMensajeroEnCierre;
			
			[Bindable]
			public var pendientesMensajero:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var pendientesFiltrado:ArrayCollection = new ArrayCollection();
			
			public function set recibirPendientesEnCierreAgrupados(pendientes:ArrayCollection):void{
				this.pendientesMensajero = new ArrayCollection();
				if(pendientes.length > 0){
					this.pendientesMensajero = pendientes;
					this.pendientesFiltrado = pendientes;
				}
			}
			
		
			
			protected function cambio(event:IndexChangeEvent):void
			{
				var evento:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.IR_A_VISTA_PENDIENTES_EN_CIERRE);
				evento._pendientesSeleccionados = this.pendientesMensajero[event.newIndex];
				this.dispatchEvent(evento);
				this.navigator.pushView(pendientesEnCierreRealizacionView);
			}
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				this.navigator.popView();
			}
			
			private function filtrar(busqueda:String):void{
				if(busqueda != ""){
					var resultado:ArrayCollection = new ArrayCollection();
					resultado = UtilsGrid.queryCampoXLike(this.pendientesMensajero,"empresa",busqueda);
					this.pendientesFiltrado = resultado;
				}
				else{
					this.pendientesFiltrado = this.pendientesMensajero;
				}
			}
			
			
			/*public function set actualizarPendientes(resultado:Object):void{
				if(resultado != null){
					if(resultado.vista == "pendientesEnCierre"){
						var eventoCierre:EventoMensajeroCierre = new EventoMensajeroCierre(EventoMensajeroCierre.CONSULTAR_PENDIENTES_CERRADOS);
						eventoCierre._usuario =  datosGlobales.getInstance().empleado_Login.usuario;
						this.dispatchEvent(eventoCierre);
						
						var eventoEstadistica:EventoMensajeroEstadisticas = new EventoMensajeroEstadisticas(EventoMensajeroEstadisticas.TRAER_DATOS_ESTADISTICAS);
						eventoEstadistica._usuario =  datosGlobales.getInstance().empleado_Login.usuario;
						this.dispatchEvent(eventoEstadistica);
					}
				}
				else{
					trace("nulo cierre");
				}
			}*/
			
			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<botonAtras:botonAtras click="vistaAnterior(event)"/>
	</s:navigationContent>
	
	<s:Scroller width="640" height="{this.height}">
		<s:VGroup  gap="15" verticalCenter="0" horizontalCenter="0" horizontalAlign="center" height="100%" width="100%">
			<s:TextInput width="100%" id="txtFiltro" enter="filtrar(this.txtFiltro.text)"/>
			<s:List verticalScrollPolicy="off" contentBackgroundColor="#252b2c" itemRenderer="vistas.renders.renderPendientes.renderPendientes" 
				dataProvider="{this.pendientesFiltrado}" change="cambio(event)" width="100%" height="{this.pendientesFiltrado.length * 191}" />
			<s:Label  fontSize="22.64" color="#ffffff" textAlign="center"  text="{this.pendientesFiltrado.length +' Clientes'}"/>
			<s:Label  fontSize="27.17" color="#ffffff" textAlign="center" text="TOTAL"/>
		</s:VGroup>
		
	</s:Scroller>
</s:View>
