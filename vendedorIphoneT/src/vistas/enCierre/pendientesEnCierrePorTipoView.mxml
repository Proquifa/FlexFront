<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:botonAtras="skin.botonAtras.*"
		xmlns:botonLogin="skin.botonLogin.*"
		backgroundColor="#252b2c"
		xmlns:botonColor="skin.botonColor.*"
		initialize="view1_initializeHandler(event)"
		
		
		title=""   
		>
	
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroEnCierre;
			
			import modelo.objetos.PendientesMensajero;
			import modelo.singletons.enRealizacion.DatosGlobalesEnRealizacion;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import vistas.realizacion.RealizacionDePendientesView;
			
			
			private var globales:DatosGlobalesEnRealizacion = DatosGlobalesEnRealizacion.getInstance();
/* 			public function set recibeLosPendientesPorTipo($pendientes:Array):void
			{
				if(!$pendientes)
					return;
				
				lstPendientesPorVerificar.height = $pendientes.length * 158;
				lstPendientesPorVerificar.dataProvider = new ArrayCollection($pendientes);
			} */
			
			protected function view1_initializeHandler(event:FlexEvent):void
			{
				this.title = globales.currentEmpresa;
				lstPendientesPorVerificar.height = globales.currentPendientes.length * 158;
				lstPendientesPorVerificar.dataProvider = new ArrayCollection(globales.currentPendientes);
			}
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				this.navigator.popView();
			}
			
			public function verificarPendiente(pendiente:PendientesMensajero,decision:String):void
			{
				if(decision == "norealizado")
				{
					
					/* var evento:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.IR_A_VISTA_PENDIENTE_NO_VERIFICADO);
					evento._pendienteNoVerificado = pendiente;
					this.dispatchEvent(evento); */
					globales.currentPendienteNoVerificado = ObjectUtil.copy(pendiente) as PendientesMensajero;
					
					this.navigator.pushView(pendienteEnCierreNoVerificadoView);
				}
			}
			
			protected function btnRealizados_clickHandler(event:MouseEvent):void
			{
				//dispatchEvent(new Event(EventoMensajeroEnCierre.IR_A_VISTA_DE_REALIZACION_DE_PENDIENTES));
				navigator.pushView(RealizacionDePendientesView);
			}
			
			

			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<botonAtras:botonAtras click="vistaAnterior(event)"/>
	</s:navigationContent>
	
	
	<s:Scroller width="640" height="{this.height}">
		<s:VGroup id="contenedor" width="100%" gap="25" verticalCenter="0" horizontalCenter="0" horizontalAlign="center" height="100%" paddingBottom="25"> 
			
			<s:List verticalScrollPolicy="off" contentBackgroundColor="#252b2c" id="lstPendientesPorVerificar" width="100%" 
					itemRenderer="vistas.renders.renderEnCierre.itemPendienteEnCierrePorTipo" />
			
			
			
			<!--<botonLogin:botonLogin label="REALIZADO" click="botonlogin1_clickHandler(event)" />-->
			<!--click="realizarPendientes(event)"-->
			
			<botonColor:botonColor id="btnRealizados" label="REALIZADO" colorBase="#68a041" botonRedondo="true" click="btnRealizados_clickHandler(event)" />
		</s:VGroup>
	</s:Scroller>
	
</s:View>
