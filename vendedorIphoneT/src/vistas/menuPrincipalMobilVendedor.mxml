<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		destructionPolicy="auto"
		viewActivate="setarMenu(event)" 
		creationComplete="init(event)"
		actionBarVisible="false" 
		xmlns:vistas="vistas.*"
		>
	<!--backgroundColor="#252b2c"-->
	<!--title="GLOBAL"-->
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			import eventos.EventoGeneralMobilVendedor;
			
			import vistas.visitasEjecucion.VistaVisitasEjecucion;
			import vistas.vistaVisitas.VistaVisitasPrincipal;
			
			public var pendientesMensajero:ArrayCollection = new ArrayCollection();
			public var pendientesEnCierreMensajero:ArrayCollection = new ArrayCollection();
			public var pendientesCierreMensajero:ArrayCollection = new ArrayCollection();
			[Bindable]private var fontMenu:Number = 30;
			
			/*private var globales:DatosGlobalesEnRealizacion = DatosGlobalesEnRealizacion.getInstance();*/
			
			[Bindable]
			public var menu:ArrayCollection = new ArrayCollection
				([
					{label:"VISITAS",icono:"visitas",bandera:false,valor:"visitas"},
					{label:"EN EJECUCION",icono:"cierre",bandera:false,valor:"cierre"},
					{label:"COTIZACIONES",icono:"cotizaciones",bandera:false,valor:"cotizaciones"}
				]);
					/*{label:"REPORTES",icono:"reportes",bandera:false,valor:"reportes"},
					{label:"SECCIÃ“N X",icono:"seccion",bandera:false,valor:"seccion"}*/
			
			
			/*public function set recibirPendientes(pendientes:ArrayCollection):void
			{
			this.pendientesMensajero = new ArrayCollection();
			menu[0].bandera = false;
			if(pendientes.length > 0)
			{
			this.pendientesMensajero = pendientes;	
			menu[0].bandera = true;
			}
			menu.refresh();
			}
			
			public function set recibirPendientesEnCierre(pendientes:ArrayCollection):void
			{
			this.pendientesEnCierreMensajero = new ArrayCollection();
			menu[1].bandera = false;
			if(pendientes.length > 0)
			{
			this.pendientesEnCierreMensajero = pendientes;
			menu[1].bandera = true;
			}
			menu.refresh();
			}
			
			public function set recibirPendientesCierre(pendientes:ArrayCollection):void
			{
			this.pendientesCierreMensajero = new ArrayCollection();
			menu[2].bandera = false;
			if(pendientes.length > 0)
			{
			this.pendientesCierreMensajero = pendientes;
			menu[2].bandera = true;
			}
			menu.refresh();
			}*/
			
			
			protected function cambioMenu(event:IndexChangeEvent):void
			{
				/*if(event.currentTarget.selectedItem.label == "PENDIENTES")
				{
				this.navigator.pushView(pendientesView);
				}
				
				if(event.currentTarget.selectedItem.label == "EN CIERRE")
				{
				this.navigator.pushView(todosPendientesEnCierreView);
				}
				
				if(event.currentTarget.selectedItem.label == "CERRADOS")
				{
				this.navigator.pushView(pendientesCierreView);
				}
				
				if(event.currentTarget.selectedItem.label == "ESTADISTICA")
				{
				this.navigator.pushView(generalEstadisticasView);
				}*/
			}
			
			public function set actualizarPendientes(resultado:Object):void
			{
				if(resultado != null)
				{
					for(var m:int = 0; m<resultado.noVistas; m++)
					{
						this.eliminarVista();
					}
				}
				else{
					trace("nulo");
				}
			}
			
			public function actualizarEnCierre():void
			{
				/*var eventoEnCierre:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.CONSULTAR_PENDIENTES_EN_CIERRE);
				eventoEnCierre._usuario = datosGlobales.getInstance().empleado_Login.usuario;
				this.dispatchEvent(eventoEnCierre);*/
			}
			
			public function actualizarCierre():void
			{
				/*var eventoCierre:EventoMensajeroCierre = new EventoMensajeroCierre(EventoMensajeroCierre.CONSULTAR_PENDIENTES_CERRADOS);
				eventoCierre._usuario =  datosGlobales.getInstance().empleado_Login.usuario;
				this.dispatchEvent(eventoCierre);*/
			}
			
			public function actualizarEstadistica():void
			{
				/*var eventoEstadistica:EventoMensajeroEstadisticas = new EventoMensajeroEstadisticas(EventoMensajeroEstadisticas.TRAER_DATOS_ESTADISTICAS);
				eventoEstadistica._usuario =  datosGlobales.getInstance().empleado_Login.usuario;
				this.dispatchEvent(eventoEstadistica);*/
			}
			
			public function eliminarVista():void
			{
				this.navigator.popView();
			}
			
			
			public function set realizarAccionEnLasVistas($nombreVista:String):void
			{
				if(!$nombreVista)
					return;
				
				/*if($nombreVista == "listaTodosLosContactosReceptoresView")
				{
				if(navigator.activeView.className == "listaEdicionDeContactosView")
				{
				navigator.popView();
				}
				else if(navigator.activeView.className != "listaTodosLosContactosReceptoresView" )
				{
				globales.ponerLaSiguienteVista = null;
				this.navigator.pushView(listaTodosLosContactosReceptoresView);
				}
				}*/
			}
			
			
			protected function setarMenu(event:ViewNavigatorEvent):void
			{
				this.listaMenu.selectedIndex = -1;
			}
			
			protected function init(event:FlexEvent):void
			{
				/*if(AdminPopUp.parentDisplayObject == null)
				{
				AdminPopUp.parentDisplayObject = UIComponent(this.parentApplication);
				}*/
				addEventListener(EventoGeneralMobilVendedor.CAMBIAR_VISTA_MENU,cargarVista,true);
			}
			
			private function cargarVista(event:EventoGeneralMobilVendedor):void
			{
				if(event.vista == 'visitas'){
					this.navigator.pushView(VistaVisitasPrincipal);
				}else if(event.vista == 'cierre'){
					this.navigator.pushView(VistaVisitasEjecucion);
				}else if(event.vista == 'inicio'){
					this.navigator.pushView(menuPrincipalMobilVendedor);
				}
				else if(event.vista == 'LogOut'){
					this.navigator.popToFirstView();
				}
			}
			
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" gap="0">
		<vistas:plantillaVendedorMobil width="100%" height="100%" >
			<vistas:vistaPrincipal>
				<s:Group width="100%" height="100%" id="grpPrincipal">
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="#FFFFFF" />
						</s:fill>
					</s:Rect>
					
					<s:VGroup width="100%" height="100%" gap="0">
						<s:Group width="100%" height="25%" id="grpBanda">
							<s:Rect top="0" bottom="0" left="0" right="0" >
								<s:fill>
									<s:SolidColor color="#008894" />
								</s:fill>
							</s:Rect>
							
							<s:Ellipse width="200" height="200" bottom="-90"  horizontalCenter="0">
								<s:fill>
									<s:SolidColor color="#FFFFFF" />
								</s:fill>
								<s:filters>
									<s:DropShadowFilter alpha="0.5" angle="90" blurX="4" blurY="4" color="#000000" 
														distance="2" knockout="false" 
														quality="{BitmapFilterQuality.HIGH}" strength="1"/>
								</s:filters>
							</s:Ellipse>
						</s:Group>  
						
						
						<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
							<s:Spacer height="30%" />
							<s:VGroup gap="15">
								<s:HGroup>
									<s:Label text="{DatosGlobales.getInstance()._usuario.nombre}" color="#008894" fontFamily="Helvetica" textAlign="center" width="100%" fontSize="26"/>
								</s:HGroup>  
								<s:Label text="Ventas" color="#88868a" fontFamily="Helvetica" textAlign="center" width="100%" fontSize="20"  />
							</s:VGroup>
							<s:Spacer height="20" />
							<s:List id="listaMenu" contentBackgroundColor="#FFFFFF"  change="cambioMenu(event)" dataProvider="{menu}" width="80%" height="100%" itemRenderer="vistas.componentes.itemRenderer.IR_MenuVendeorMobil"/>
							
						</s:VGroup>  
						
					</s:VGroup>
				</s:Group>
			</vistas:vistaPrincipal>
		</vistas:plantillaVendedorMobil>
	</s:VGroup>
</s:View>
