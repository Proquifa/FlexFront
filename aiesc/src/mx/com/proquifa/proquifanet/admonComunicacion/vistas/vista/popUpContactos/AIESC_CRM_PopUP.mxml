<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:otros="skins.otros.*" xmlns:pqNet="skins.botones.pqNet.*"
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoPopUpContactos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.alertPqNet.ResultAlert;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.CatalogoItem;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Direccion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.core.IFlexDisplayObject;
			import mx.managers.ISystemManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosEtiquetas;
			
	
			[Bindable]
			private var _datosComboRol:ArrayCollection = new ArrayCollection([{valor:'--NINGUNO--',llave:0 },
				{valor:'DISTRIBUIDOR',llave:1 },
				{valor:'LABORATORIO',llave:2 }]);
			[Bindable]
			private var _datosComboIndustria:ArrayCollection = new ArrayCollection([{valor:'--NINGUNO--',llave:0 },
				{valor:'ALIMENTOS Y BEBIDAS',llave:1 },
				{valor:'CLINICA HOSPITALARIA',llave:2 },
				{valor:'FARMACEUTICA',llave:3 },
				{valor:'OTRA',llave:4 }]);
			[Bindable]
			private var _datosComboSector:ArrayCollection = new ArrayCollection([{valor:'--NINGUNO--',llave:0 },
				{valor:'PRIVADO',llave:1 },
				{valor:'PUBLICO',llave:2 }]);
			
			public function get defaultButton():IFlexDisplayObject{
				// TODO Auto Generated method stub
				return txtNombreCliente; // <-- PLACE THE REFERENCE FOR SOME DEFAULT FOCUSABLE COMPONENT HERE (DEFAULT BUTTON OR WHATEVER)
			}
			public function set defaultButton(value:IFlexDisplayObject):void{
				// TODO Auto Generated method stub
				
			}
			override public function get systemManager():ISystemManager{
				return super.systemManager;
				// TODO Auto Generated method stub
				//return null;
			}
			
			[Bindable]
			private var _procedencia:String = "";
			public function estableceProcedencia( $evt:EventoPopUpContactos ):void{
				_procedencia = $evt.vieneDE_PopUp;
			}
			private function validaContenido():Boolean{
				var prueba:Boolean = false;
				if(txtNombreCliente.text == "" ){
					alertaSingleton.show('Es obligatorio el nombre del cliente',catalogoAlertas.TIT_ADV_operacionImposible);
					return prueba;
				}
				
				if(txtNombreContacto.text == "" ) {
					alertaSingleton.show('Es obligatorio el nombre del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return prueba;
				}
				
				if(txtEMail.text == "" ) {
					alertaSingleton.show('Es obligatorio el Email del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return prueba;
				}
				prueba = true;
				return prueba;
			}
			
			private var _esacAleatorio:Empleado = new Empleado();
			public function set obtenEmpleadoAleatorio( $dato:Empleado ):void{
				if( $dato == null ){
					return;
				}
				_idCliente = 0;
				////this.txtESAC.text = $dato.usuario;
				_esacAleatorio = $dato;
			}
			
			private var _soloUnaVez:Boolean;
			
			private function warningGuardar():void{
				alertaSingleton.show( "Â¿Todos los datos son correctos?" ,catalogoAlertas.TIT_ADV_atencion,'EVGuardaNuevoCliente','','','SI','NO')
			}
			public function set recibeDelAlert( $dato:ResultAlert ):void{
				if( $dato == null || $dato.vieneD == null ){
					return;
				}
				if( $dato.vieneD == "EVGuardaNuevoCliente" && $dato.botonSeleccionado == "SI"){
					registrarNuevoCliente();
				}
			}
			
			private function registrarNuevoCliente():void{
				if( validaContenido() ){
						var evt:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.ASOCIA_CLIENTE_CONTACTO_NUEVO);
						evt.nuevoContacto = new Contacto();
						evt.nuevoContacto.nombre = txtNombreContacto.text;
						evt.nuevoContacto.EMail = txtEMail.text;
						evt.nuevoContacto.empresa = txtNombreCliente.text;
						evt.nuevoContacto.idEmpresa = 0;
						evt.nuevoContacto.idContacto = 0;
						evt.nuevoContacto.vieneDE_PopUp="contactoNuevoCliente"
						evt.vieneDE_PopUp = this._procedencia;
						dispatchEvent( evt );
						var evtf:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.ENVIA_CONTACTO_ASOCIADO );
						dispatchEvent( evtf );
				}
			}
			
			private var _idCliente:int;
		
			
			public function set recibirContactos( $lista:ArrayCollection ):void{
				if($lista == null){
					return;
				}
				$lista = new ArrayCollection();
				_idCliente = 0;
				limpiaVentana();
				var evt:EventoPopUpContactos = new EventoPopUpContactos(EventoPopUpContactos.CAMBIA_CRM );
				dispatchEvent(evt);
			}
			
			private function limpiaVentana():void{
				//Cliente
				this.txtNombreCliente.text = "";
				//Contacto
				this.txtNombreContacto.text = "";
				this.txtEMail.text = "";
				this.btnRegistrar.enabled = true;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" horizontalAlign="center">
		<s:HGroup width="100%" height="100%" paddingBottom="15">
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_clienteSmall}"/>
						<s:Spacer width="5"/>
						<s:Label fontWeight="bold" text="Cliente" fontSize="15"/>
					</s:HGroup>
					<otros:divisionGruesa width="100%"/>
					<s:Spacer height="15"/>
					<s:Label text="Nombre:" fontWeight="bold"/>
					<s:TextInput id="txtNombreCliente" width="100%" fontStyle="normal"/>
				</s:VGroup>
			<otros:VDivisionHueca height="100%"/>
			
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_telSmall }"/>
						<s:Spacer width="5"/>
						<s:Label fontWeight="bold" text="Contacto" fontSize="15"/>
					</s:HGroup>
					<otros:divisionGruesa width="100%"/>
					<s:Spacer height="15"/>
					<s:Label text="Nombre:" width="100%" fontWeight="bold"/>
					<s:TextInput width="100%" fontStyle="normal" id="txtNombreContacto" />
					<s:Spacer height="15"/>
					<s:Label text="E-Mail:" width="100%" fontWeight="bold"/>
					<s:TextInput width="100%" fontStyle="normal" id="txtEMail" />
				</s:VGroup>
		</s:HGroup>
		<otros:division width="100%"/>
		<s:Spacer height="15"/>
		<pqNet:botonPqNetLargo label="Asociar" id="btnRegistrar" click="registrarNuevoCliente()"/>
		<s:Spacer height="20"/>
	</s:VGroup>
</s:Group>
