<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:DocumentosEntrante="mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.*"
		  xmlns:botonesToggle="skins.botonesToggle.*"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:pqNet="skins.skin.datagrid.pqNet.*" 
		  xmlns:graficas="skins.skin.graficas.*"
		  xmlns:label="skins.skin.label.*" 
		  xmlns:btnS="skins.botones.azul.*"
		  xmlns:otros="skins.otros.*" 
		  width="100%" height="100%" gap="0" xmlns:AdvancedDataGrid="skins.skin.AdvancedDataGrid.*" 
		  >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Resize target="{this.vistaModificaciones}" widthFrom="460" widthTo="0" id="ocultaResize" duration="400"/>
		<s:Resize target="{this.vistaModificaciones}" widthFrom="0" widthTo="460" id="muestraResize" duration="600"/>
		<s:Resize target="{this.gropModificaciones}" widthFrom="380" widthTo="0" id="ocultaResizeGrp" duration="300" />
		<s:Resize target="{this.gropModificaciones}" widthFrom="0" widthTo="380" id="muestraResizeGrp" duration="300" /> <!--effectEnd="{gropModificaciones.percentWidth = 25}"-->
		<s:Fade id="fadeOcultar" target="{gropModificaciones}" duration="600" alphaFrom="1.0" alphaTo="0.0"/>
		<s:Fade id="fadeMostrar" target="{gropModificaciones}" duration="600" alphaFrom="0.0" alphaTo="1.0"/>
	</fx:Declarations>
	
	<fx:Script >
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoBusquedasCR2;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoDocumentosPendientesAEnviar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoBusquedasCR;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.advancedDataGrid.EventoDataGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DocumentoRecibido;
			import mx.events.ListEvent;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			
			[Bindable] private var _arrButton:ArrayCollection = new ArrayCollection([{label:"TODO",id :"todo", colorBase:"0x"+ catalogoColores.LABEL_VERDE_AZUL, fontSize:13 },
				{label:"Folio", id:"folio", colorBase:"0x"+ catalogoColores.LABEL_VERDE_AZUL, fontSize:13 },
				{label:"#REF", id:"referencia", colorBase:"0x"+ catalogoColores.LABEL_VERDE_AZUL, fontSize:13 }
			]);
			[Bindable]
			public var tituloEstado:String;
			[Bindable]
			private var datosGrid:ArrayCollection;
			private var _componenteEntran:DocEntraNew = null;
			private var _componeteLLam:DocRecibTabla = null;
			private var _compModificar:DocEntraViewYEdita = null;
			private var evento:EventoBusquedasCR2;
			private var _tipoBusqueda:String = "";
			private var ocultarMenu:Boolean = true;
			
			private var _boolPanelEdicionDesplegado:Boolean = false;
			
			public function iniciaComponente():void
			{
				limpiaGrid();
				this.removeEventListener( EventoDocumentosPendientesAEnviar.LIMPIA_GRID_DOC_RECIB, reiniciaGrid );
				this.addEventListener( EventoDocumentosPendientesAEnviar.LIMPIA_GRID_DOC_RECIB, reiniciaGrid );
				this._boolPanelEdicionDesplegado = true;
				botoneraBarra.selectedIndex = 0;
			}
			
			private function reiniciaGrid(evento:EventoDocumentosPendientesAEnviar):void
			{
				if ( evento.idOpcionSeleccionada == "LIMPIA")
					limpiaGrid();
			}
			
			private function limpiaGrid():void
			{
				this._boolPanelEdicionDesplegado = true;
				botoneraBarra.selectedIndex = 0;
				this.datosGrid = null;
				this.vistaModificaciones.width = 0;
				this.vistaModificaciones.visible = false;
				this.gropModificaciones.width = 0;
				this.gropModificaciones.visible = false;
				txtBusqueda.text = "";
				this._tipoBusqueda = "";
				solicitaDocu( null);
			}
			
			
			public function set recibirDocumentos(resultados:ArrayCollection):void{
				if(resultados == null)
					return;
				
				this.datosGrid = resultados;
				tablaGrid.dataProvider = datosGrid;
			}
			
			/* 			public function validarFOrigenReferencia(item:Object, column:DataGridColumn):String
			{
			var cadenaValidada:String = "";
			if(item[column.dataField] == 0 || item[column.dataField] == null || item[column.dataField] == "" )
			cadenaValidada = "ND";
			else
			cadenaValidada = item[column.dataField].toString();
			
			return cadenaValidada;
			} */
			
			private function itemClickEvent(event:EventoDataGrid):void
			{
				this.vistaModificaciones._DocumentoR = event.itemClick.itemRenderer.data as DocumentoRecibido;
				this.vistaModificaciones.inicia();
				
				if(this._boolPanelEdicionDesplegado == true)
				{
					this._boolPanelEdicionDesplegado = false;
					this.gropModificaciones.visible = true;
					this.vistaModificaciones.visible = true;
					this.vistaModificaciones.percentWidth = 100;
					muestraResizeGrp.play();
					fadeMostrar.play();
					grpTab.visible = true
				}
				else
				{
					muestraResize.end();
				}
			}
			
			private function solicitaDocu( strTipo:String ):void
			{
				if(strTipo != null)
				{
					
					this._tipoBusqueda = strTipo;
				}
				if( this._tipoBusqueda == "todo" || this._tipoBusqueda == "")
				{
					var eventt:EventoBusquedasCR = new EventoBusquedasCR(EventoBusquedasCR.BUSCAR_DOCUMENTOS_POR_FOLIO_TODOS);
					eventt.folio = txtBusqueda.text;
					dispatchEvent(eventt);
				}
				else if(this._tipoBusqueda == "folio" && txtBusqueda.text != "" &&  !isNaN(Number(txtBusqueda.text))  )
				{
					var eventt2:EventoBusquedasCR = new EventoBusquedasCR(EventoBusquedasCR.BUSCAR_DOCUMENTOS_POR_FOLIO);
					eventt2.folio = txtBusqueda.text;
					dispatchEvent(eventt2);
				}else if(this._tipoBusqueda == "referencia" && txtBusqueda.text != "")
				{
					var eventt3:EventoBusquedasCR = new EventoBusquedasCR(EventoBusquedasCR.BUSCAR_DOCUMENTOS_POR_REF);
					eventt3.referencia = txtBusqueda.text;
					dispatchEvent(eventt3);
				}
				this.txtBusqueda.setFocus();
				botoneraBarra.selectedIndex = -1
			}
			
			
			protected function vistaModificaciones_resizeHandler(event:ResizeEvent):void
			{
				this.vistaModificaciones.percentHeight = 100;// TODO Auto-generated method stub
				
			}
			
			protected function menuMuestraOculta():void
			{
				if(!muestraResize.isPlaying)
				{
					if(ocultarMenu)
					{
						fadeOcultar.play();
						ocultaResizeGrp.play();
						grpTab.visible = false;
						this._boolPanelEdicionDesplegado = true;
					}
					else
					{
						ocultarMenu = true;
						this.gropModificaciones.visible = true;
						this.vistaModificaciones.visible = true;
						this.vistaModificaciones.percentWidth = 100;
						muestraResizeGrp.play();
						fadeMostrar.play(); 
					}
				} 
			}
			
			
		]]>
	</fx:Script>
	<!--<s:Scroller width="100%" height="100%" verticalScrollPolicy="off">-->
		<s:HGroup width="100%" height="100%" ><!--horizontalAlign="center"-->
			<s:VGroup width="100%" height="100%"  gap="0" paddingRight="-11">
				<s:HGroup width="100%" paddingTop="20" paddingBottom="20">
					<s:TextInput width="50%" id="txtBusqueda" skinClass="skins.textinput.busqueda.skinTextInputBusqueda"/> 
					<s:Spacer width="50%"/>
					<botonesToggle:ButtonBarColores  width="320" height="30" id="botoneraBarra" dataProvider="{_arrButton}"
													 change="solicitaDocu(this.botoneraBarra.selectedItem.id)" creationComplete="this.botoneraBarra.selectedIndex = 0"/>
				</s:HGroup>
				<otros:divisionGruesa width="100%"/>
				
				<s:HGroup id="grpTabla" width="100%" height="100%" paddingTop="20">
					<AdvancedDataGrid:PQNetAdvanceDataGridFooter width="100%" height="100%" id="tablaGrid" anchoColumnas="{['5%','=','=','15%','=','15%','18%','=']}" tipoDeConsulta="Documentos recibidos" 
																 itemClickADG="itemClickEvent(event)"
																 disableSortableColumns="{[7]}" disableDragableColumns="{[0,7]}" disableResizableColumns="{[0,7]}" > 
						
						<AdvancedDataGrid:columns>
							<mx:AdvancedDataGridColumn headerText="#" dataField="numFila" />
							<mx:AdvancedDataGridColumn headerText="Folio" dataField="folio" />
							<mx:AdvancedDataGridColumn headerText="Tipo" dataField="tipo" />
							<mx:AdvancedDataGridColumn headerText="#REF" dataField="numero"  />
							<mx:AdvancedDataGridColumn headerText="Medio"  >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false">
											<fx:Script>
												<![CDATA[
													import skins.catalogos.catalogoIconosGrid;
													[Bindable]
													private var normalIcon:Class;
													[Bindable]
													private var hoveredIcon:Class;
													
													override public function set data(value:Object):void{
														super.data = value;
														if(data.medio == "Mail"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_mensajeVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_mensajeVerdehovered; 
														}else if(data.medio == "Tel"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_telefonoVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_telefonoVerdehovered;
														}else if(data.medio == "Fax"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_faxVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_faxVerdehovered;
														}else if(data.medio == "Cliente"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_clienteVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_clienteVerdehovered; 
														}else if(data.medio == "ESAC"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_esacVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_esacVerdehovered;
														}else if(data.medio == "Mensajero Externo"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_mensajeroexternoVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_mensajeroexternoVerdehovered;
														}else if(data.medio == "Mensajero Interno"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_mensajerointernoVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_mensajerointernoVerdehovered;
														}else if(data.medio == "EV"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_evVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_evVerdehovered;
														}else if(data.medio == "PQFMovil"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_PqfMovilVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_PqfMovilVerdehovered;
														}else if(data.medio == "Mensajero"){
															this.normalIcon = catalogoIconosGrid.getInstance().render_mensajeroVerde;
															this.hoveredIcon = catalogoIconosGrid.getInstance().render_mensajeroVerdehovered; 
														}
													}
												]]>
											</fx:Script>
											<s:states>
												<s:State name="normal"/>
												<s:State name="hovered"/>
												<s:State name="selected"/>
											</s:states>
											<mx:Image source="{normalIcon}"  source.hovered="{hoveredIcon}" source.selected="{hoveredIcon}" horizontalCenter="0" />
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							
							
							<mx:AdvancedDataGridColumn headerText="Destino" dataField="RPor" />
							<mx:AdvancedDataGridColumn headerText="Cliente" dataField="nombreEmpresa" />
							<mx:AdvancedDataGridColumn headerText="En espera" dataField="fechaFormato" />
						</AdvancedDataGrid:columns>
					</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
				</s:HGroup>
				
				<otros:divisionGruesa width="100%"/>
			</s:VGroup>
			
			<s:Group width="0" height="100%" id="grpTab" depth="500" visible="false">
				<s:Image id="imgRow" source="{catalogoIconosBotones.getInstance().tab}" horizontalCenter="10" verticalCenter="10" click="menuMuestraOculta()"/>
			</s:Group>
			<s:VGroup height="100%" id="gropModificaciones" paddingLeft="10" showEffect="{fadeMostrar}" hideEffect="{fadeOcultar}">
				<s:Scroller width="100%" height="100%">
					<DocumentosEntrante:DocEntraViewYEdita height="{this.height}" id="vistaModificaciones"  />
				</s:Scroller>
				<!---->
			</s:VGroup>	
		</s:HGroup>
		
	<!--</s:Scroller>-->
</s:VGroup>