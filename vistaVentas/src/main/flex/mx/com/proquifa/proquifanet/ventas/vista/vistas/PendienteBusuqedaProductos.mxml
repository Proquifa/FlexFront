<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
	 xmlns:maps="mx.com.proquifa.proquifanet.ventas.vista.mapas.*" 
	 initialize="inicializar()">
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.Pendiente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.InformacionVentana;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoGenerico;
			import mx.core.Application;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.ObtenerPendientesEvento;
			
			[Bindable]
			private var _listaPendientes:ArrayCollection = null;		
			[Bindable]
			private var pendiente:Pendiente = new Pendiente();			
			[Bindable]	
			private var indice:int = 0;
			[Bindable]	
			private var indice2:int = 0;
			
			/**
			 * Inicializa la aplicaci&oacute;n.
			 */
			private function inicializar():void{				
				var evento:ObtenerPendientesEvento = null;				
				var usuario:String = new String;
				var tipoPendiente:String = new String;	
				usuario = "CTirado";		
				tipoPendiente = "Buscar producto F/S"	
				evento = new ObtenerPendientesEvento(ObtenerPendientesEvento.OBTENER_PENDIENTES);
				evento.usuario = usuario;
				evento.tipoPendiente = tipoPendiente;
				dispatchEvent( evento );								
			}
			
			/**
			 * Recibe los datos del injector del mapa
			 */
			 public function set pendientes(datos:ArrayCollection):void{
			 	if(datos == null){
					return;
				}
				
				this._listaPendientes = datos;  				  				
			 }
			 
			 /**
			  *Con esta funci&oacute;n se manda allamar el pendiente BusquedaProducto
			  */
			 private function mostrarPendiente(evt:ListEvent):void{
			 	var infoVentana:InformacionVentana = new InformacionVentana();
			 	infoVentana.idVentanaCerrar = "cierrabusquedaProductos";
			 	var evet:EventoGenerico = new EventoGenerico(EventoGenerico.CERRAR_VENTANA_BUSQUEDAPRODUCTOS);
				evet.informacion = infoVentana;					
				this.dispatchEvent( evet ); 
				infoVentana.idVentana = "busquedaProductos";
				infoVentana.idCliente = this.grdPendienteVentas.selectedItem.cliente.idCliente;
				infoVentana.nombreCliente = this.grdPendienteVentas.selectedItem.cliente.nombre;		
				
			 	var evento:EventoGenerico = new EventoGenerico( EventoGenerico.ABRIR_VENTANA_EN_PENDIENTES );
			 	evento.informacion = infoVentana;					
				this.dispatchEvent( evento );
			 }
			 
			 /**
			  *Con esta funcion mostramos el nombre del Cliente en el Grid
			  */			    
			 private function mostrarValor(objeto:Object, columna:DataGridColumn):String{
				var pendiente:Pendiente = objeto as Pendiente;
				var cliente:Cliente = pendiente.cliente;
				return cliente.nombre;				
			}
			
			/**
			 * Con esta funcion mostramos el idCliente en el Grid
			 */
			private function agrgarIDCliente(objeto:Object, columna:DataGridColumn):Number{
				var pendiente:Pendiente = objeto as Pendiente;
				var cliente:Cliente = pendiente.cliente;
				return cliente.idCliente;						
			}
			
			/**
			 * Con esta funcion mostramos el idCliente en el Grid
			 */
			private function agrgarIndice(objeto:Object, renglon:DataGridColumn):Number{
				if (indice2 == 0){
					if(indice == 0){
						indice = -1;
						indice2++;
					}
				}
				indice++;
				return indice;					
			}
			
		]]>
	</mx:Script>
	<maps:obtenerPendientesMapa/>
	<mx:Panel width="100%">
		<mx:HBox width="100%">
			<mx:TextArea width="100%"/>
			<mx:Button label="Buscar"/>
		</mx:HBox>		
	</mx:Panel>
	<mx:DataGrid id="grdPendienteVentas" width="100%" height="100%" dataProvider="{this._listaPendientes}" itemClick="mostrarPendiente(event)"  textAlign="center" >
		<mx:columns>
			<mx:DataGridColumn headerText="#" labelFunction="agrgarIndice" width="50">
				<mx:itemRenderer>
					<mx:Component>
						<mx:LinkButton color="blue"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Cliente" labelFunction="mostrarValor" />
			<mx:DataGridColumn headerText="Partidas" dataField="numeroPartidas" width="100"/>
			<mx:DataGridColumn headerText="idCliente" labelFunction="agrgarIDCliente" visible="false"/>			
		</mx:columns>
	</mx:DataGrid>					
			<!--<mx:DataGridColumn headerText="Nombre" dataField="{(_listaPendientes.source.cliente.nombre as Cliente).no}" />	-->	
</mx:VBox>