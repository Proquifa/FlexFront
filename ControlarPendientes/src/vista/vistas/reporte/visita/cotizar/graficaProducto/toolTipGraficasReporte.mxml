<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				
				autoDrawBackground="false"
				mouseOut="mouseOutHandler()"
				hideEffect="{fxFade}" xmlns:label="skins.skin.label.*"
				>
	<!--width="126" height="129"-->
	
	<!--"
	creationComplete="creaTriangulo()"-->
	
	<fx:Declarations>	
		<s:Fade id="fxFade" duration="200" alphaFrom="1" alphaTo="0"/>
		<s:SolidColor id="s1" color="0x{catalogoColores.LABEL_NEGRO}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.charts.series.items.LineSeriesItem;
			import mx.core.FlexGlobals;
			
			import spark.components.Label;
			import spark.primitives.Ellipse;
			
			import skins.catalogos.catalogoColores;
			
			private var spr:Sprite = new Sprite();
			private var _color:String;
			
			private var factorScale:int = 1;
			private var osInfo:Array;
			private	var lblTipElipse:Label;
			private var elipse:Ellipse;
			[Bindable] private var monedaSim:String = "";
			[Bindable] private var abrebiatura:String = "";
			
			private var anchoMax:Number = 0;
			override protected function measure():void
			{
				super.measure();
				
				if(lblTipElipse.visible)
				{
					this.width = Math.max(anchoMax,90) * factorScale;
					this.height = Math.max(anchoMax,90) * factorScale; 
				}
				else
				{
					this.width = (Math.max(anchoMax,136) * factorScale) - 30; 
					this.height = (129 * factorScale)-30;
				}   
				
			}
			
			
			override protected function createChildren():void
			{
				super.createChildren();
				
				osInfo = Capabilities.os.split(" ");
				if(FlexGlobals.topLevelApplication.applicationDPI == 240)
				{
					factorScale = 2;
				}
				
				elipse = new Ellipse();
				if(osInfo[0] == "Mac")
				{
					with(elipse)
					{
						width = 60;
						height = 60;
						verticalCenter = 0;
						horizontalCenter = 0;
						alpha = 0.6;
						fill = s1;
					}
					this.addElement(elipse);
					
					lblTipElipse = new Label;
					with(lblTipElipse)
					{ 
						horizontalCenter = 0;
						verticalCenter=0;
						styleName= "titulo_Helvetica_10_Blanco";
					} 
				}
				else
				{
					with(elipse)
					{
						width = (90 * factorScale);
						height = (90 * factorScale);
						verticalCenter = 0;
						horizontalCenter = 0;
						alpha = 0.6;
						fill = s1;
					}
					this.addElement(elipse);
					
					lblTipElipse = new Label;
					with(lblTipElipse)
					{ 
						horizontalCenter = 0;
						verticalCenter=0;
						
						if(factorScale == 1)
							styleName= "titulo_Helvetica_10_Blanco";
						else if(factorScale == 2)
							styleName= "titulo_Helvetica_20_Blanco";
					}
				}
				
				this.addElement(lblTipElipse);
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
				var hd:HitData = value as HitData;
				var item:LineSeriesItem = hd.chartItem as LineSeriesItem;
				var _diferencia:Number = 0;
				var _porcentaje:String = new String();
				var total:Number = 0;
				var cantiadP = 0;
				var precioU= 0;
				
				elipse.visible = elipse.includeInLayout = false;
				lblTipElipse.visible = lblTipElipse.includeInLayout = false;
				rectangulo.visible = rectangulo.includeInLayout = false;
				lblTip0.text = '';
				lblTip1.text = '';
				lblTip2.text = '';
		
			
				
			
			      if(value.chartItem.element.yField == "precioNoP")
				  {
					  if(value.item.precioNoP > 0)
					  {
						  total = value.item.cantidadNoP * value.item.precioNoP;
						  cantiadP = value.item.cantidadNoP;
						  precioU = value.item.precioUnitario;
					  }
					  else{
						  total = 0;
						  cantiadP = 0;
						  precioU = 0;
					  }
					  trace("NO pedido");
				  }
				  else if(value.chartItem.element.yField == "precio")
				  {
					  if(value.item.precio > 0)
					  {
						  total = value.item.cantidad * value.item.precio;
						  cantiadP = value.item.cantidad;
						  precioU = value.item.precioUnitario;
					  }
					  else{
						  total = 0;
						  cantiadP = 0;
						  precioU = 0;
					  }
					  trace("pedido");
				  }
				
				
					lblTip0.text = value.item.monedaAbre + " "+ value.item.simboloMoneda +  precioU;
					lblTip1.text = cantiadP;
					lblTip2.text = value.item.monedaAbre + " "+ value.item.simboloMoneda + total;
					
					
					rectangulo.visible = rectangulo.includeInLayout = true;
		
				
			}
			
			override public function move(x:Number, y:Number):void
			{
				super.move(x,y);
			} 
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if(lblTipElipse.visible)
				{
					this.move(this.x-(this.unscaledWidth*0.55),y-15);
				}
				else
				{
					this.move(this.x-(this.unscaledWidth*0.55),y-this.unscaledHeight);
					
					graphics.clear();
					
					// Background
					graphics.beginFill(0x000000,0.6);   
					graphics.moveTo((unscaledWidth/2)-5,unscaledHeight);
					graphics.lineTo((unscaledWidth/2),unscaledHeight+10);
					graphics.lineTo((unscaledWidth/2)+5,unscaledHeight);
					graphics.lineTo((unscaledWidth/2)-5,unscaledHeight);
					graphics.endFill();
					graphics.beginFill(0x2e2e2e);
					
				}
				
			}
			
			protected function removerToolTip():void
			{
				visible = false;
				includeInLayout = false;
			}
			
			private var idTimeOut:uint; 
			protected function mouseOutHandler():void
			{
				clearInterval( idTimeOut );
				idTimeOut = setTimeout( removerToolTip, 4500);
			}
			
			private var arrayLabels:Array = new Array;
		]]>
	</fx:Script>
	<s:Rect id="rectangulo" width="100%" height="100%"  fill="{s1}" alpha=".6" radiusX="10" radiusY="10"/>
	<s:Group id="grpTodo" top="10" bottom="10" right="10" left="10">
		<s:VGroup id="grpContenido" verticalCenter="0" horizontalCenter="0">
			<s:VGroup id="precio" verticalAlign="middle" gap="0">
				<label:TituloHelvetica_10_Blanco id="lblTip0" />
				<label:TituloHelvetica_10_Blanco  text="Precio Unitario"/>
			</s:VGroup>
			<s:VGroup id="cantidad" verticalAlign="middle" gap="0">
				<label:TituloHelvetica_10_Blanco id="lblTip1" />
				<label:TituloHelvetica_10_Blanco  text="Piezas Vendidas"/>
			</s:VGroup>
			<s:VGroup id="objetivo" verticalAlign="middle" gap="0">
				<label:TituloHelvetica_10_Blanco id="lblTip2"/>
				<label:TituloHelvetica_10_Blanco  text="Valor Total"/>
			</s:VGroup>
		</s:VGroup>
	</s:Group>  
	
</s:ItemRenderer>