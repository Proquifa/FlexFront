<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mate="http://mate.asfusion.com/">
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			
			import vista.evento.EventoDirectorGralPrevioImportacion;
			import vista.modelo.ModeloDirectorGralPrevioImportacion;
			import vista.vistas.MenuRolesDirectorGral;
			import vista.vistas.previoImportacion.PrevioImportacionPorProveedor;
			import vista.vistas.previoImportacion.VistaDefaultPrevioImportacion;
			import vista.vistas.previoImportacion.graficas.ChartPrevioImportacionProveedor;
			import vista.vistas.previoImportacion.graficas.ChartPrevioImportacionTipoPermiso;
			import vista.vistas.previoImportacion.graficas.ChartPrevioImportacionTipoProducto;
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
	<!--	<mate:Debugger level="{Debugger.ALL}" />-->
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mate:EventHandlers type="{EventoDirectorGralPrevioImportacion.SOLICITAR_INFO_VISTA_DEFAULT_PREVIO_IMPORTACION}">
			<mate:RemoteObjectInvoker destination="{Destinos.COMPRA_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerPrevioPermisoImportacion"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloDirectorGralPrevioImportacion}"
										method="setInfoProductosEnPrevioImportacion"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloDirectorGralPrevioImportacion}"
										method="errorInfoProductosEnPrevioImportacion"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors target="{VistaDefaultPrevioImportacion}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="obtenerListaParaGridPrevioImportacion"
								   targetKey="recibeListaParaGrid"/>
		</mate:Injectors>
		
		<mate:Injectors target="{MenuRolesDirectorGral}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="regresarTotalesPendientes"
								   targetKey="conteoDePendientes"/>
		</mate:Injectors>
		
		<mate:EventHandlers type="{EventoDirectorGralPrevioImportacion.OBTENER_PRODUCTOS_POR_PROVEEDOR}">
			<mate:MethodInvoker generator="{ModeloDirectorGralPrevioImportacion}"
								method="setFiltrarProductosPorProveedor"
								arguments="{event.nombreProveedor}"/>
		</mate:EventHandlers>
		
		<mate:Injectors target="{PrevioImportacionPorProveedor}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="obtenerListaProductosPorProveedor"
								   targetKey="recibeProductosPorProveedor"/>
		</mate:Injectors>
		
		<mate:EventHandlers type="{EventoDirectorGralPrevioImportacion.CERRARPENDIENTEPREVIO_ACTUALIZARPRODUCTO_GENERARPENDIENTE}">
			<mate:RemoteObjectInvoker destination="{Destinos.COMPRA_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="cerrarPendientePrevioActualizarProductoGenerarPendiente"
									  arguments="{[event.itemPermiso,event.isConFechaET]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloDirectorGralPrevioImportacion}"
										method="setRespuestaBaseDeDatos"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloDirectorGralPrevioImportacion}"
										method="errorAlActualizarProductoCerrarPendiente"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors target="{PrevioImportacionPorProveedor}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="regresaRespuestaActualizarCerrarPendiente"
								   targetKey="confirmarActualizarProductoCerrarPendiente"/>
		</mate:Injectors>
		
		<!--=========================================INJECTORES PARA LAS GRÁFICAS================================================================================-->		
		<mate:Injectors target="{ChartPrevioImportacionProveedor}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="regresaGraficaProveedores"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		<mate:Injectors target="{ChartPrevioImportacionTipoProducto}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="regresaGraficaTipoProducto"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		<mate:Injectors target="{ChartPrevioImportacionTipoPermiso}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="regresaGraficaTipoSoliPermiso"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:EventHandlers type="{EventoAlertaPqNet.RESPUESTA_ALERTA}" >
			<mate:MethodInvoker generator="{ModeloDirectorGralPrevioImportacion}"
								method="setRespuestaActualizarProducto"
								arguments="{event.respuesta}"/>
		</mate:EventHandlers>
		<mate:Injectors target="{PrevioImportacionPorProveedor}">
			<mate:PropertyInjector source="{ModeloDirectorGralPrevioImportacion}"
								   sourceKey="regresaRespuestaActualizarProducto"
								   targetKey="recibeRespuestaDelAlert"/>
		</mate:Injectors>
	</fx:Declarations>
</mate:EventMap>
