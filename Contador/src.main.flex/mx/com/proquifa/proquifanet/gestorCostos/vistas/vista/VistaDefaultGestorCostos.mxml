<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"  
		 xmlns:vistas="mx.com.proquifa.proquifanet.gestorCostos.vistas.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:plantilla="mx.com.proquifa.proquifanet.gestorCostos.vistas.vista.plantilla.*"
		 xmlns:arribo="mx.com.proquifa.vista.mapas.gestorCompras.arribo.*"
		 xmlns:gestorCompras="mx.com.proquifa.vista.mapas.gestorCompras.*" 
		 width="100%" height="100%" 
		 creationComplete="init(event)" xmlns:mapas="mx.com.proquifa.proquifanet.gestorCostos.vistas.mapas.*">
	<fx:Declarations>
		<gestorCompras:MapaGestorCompras />
		<arribo:MapaArriboGestorCompras />
		<mapas:MapaRegistrarGastos /> 
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.gestorCostos.vistas.eventos.EventoRegistrarGastos;
			import mx.com.proquifa.proquifanet.gestorCostos.vistas.vista.componentes.registarGastos.VistaRegistrarGastos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.vista.eventos.EventoGestorCompras;
			import mx.com.proquifa.vista.vistas.gestorCompras.VistaListaArribo;
			import mx.com.proquifa.vista.vistas.gestorCompras.VistaListaArriboPub;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			/*[Bindable] private var listaPendiente:ArrayCollection = new ArrayCollection([{pendiente:'Materiales',conteo:null},{pendiente:'Publicaciones',conteo:null},{pendiente:'Generar Acuse de Recibo',conteo:null},{pendiente:'Cargar Acuse de Recibo',conteo:null}]);*/
			[Bindable] private var listaPendiente:ArrayCollection = new ArrayCollection([{pendiente:'Registrar Gastos',conteo:null}]);
			private var listaArribo:VistaListaArribo;
			private var listaArriboPublicaciones:VistaListaArriboPub;
			private var registrarGastos:VistaRegistrarGastos
			public static var accionCargarFactura:String = "reload"; 
			[Bindable] public var primera:Boolean; 
			
			protected function plantillagestorcompras1_pendienteSeleccionadoHandler(event:EventoGestorCompras):void
			{
				switch(event.pendiente.toUpperCase())
				{
					case "REGISTRAR GASTOS":
					{
						if (!registrarGastos)
							registrarGastos = new VistaRegistrarGastos();
						plantilla.agregarContenido(registrarGastos);
						
						var evtGA:EventoRegistrarGastos = new EventoRegistrarGastos(EventoRegistrarGastos.OBTENER_ORDEN_DESPACHO_REGISTRAR_GASTOS);
						/*evtGA.usuario =DatosGlobales.getInstance()._usuario.usuario;*/
						dispatchEvent(evtGA);
						dispatchEvent( new Event("recargarPendientes",true));
						break;
					}
					default: 
					{
						break;
					}
				}
			}
			
			protected function init(event:FlexEvent):void
			{
				var evento:EventoRegistrarGastos = new EventoRegistrarGastos(EventoRegistrarGastos.CARGAR_NUMERO_PENDIENTES_MENU);
				evento.usuario = DatosGlobales.getInstance()._usuario.usuario;
				evento.rol = "gestorGastos";
				dispatchEvent(evento);
				addEventListener("recargarPendientes",recargarPendientes,false,0,true);
				
			}
			
			public function set recibirIndicadorPendientes(value:ArrayCollection):void
			{
				var indice:int;
				if(plantilla.lstPendientes.lstPendientes != null){
					indice = plantilla.lstPendientes.lstPendientes.selectedIndex;
				}
				var listaAux:ArrayCollection = ObjectUtil.copy(listaPendiente) as ArrayCollection;
				for(var x:int = 0; x < listaAux.length;x++){
					for(var y:int = 0; y < value.length;y++){
						if((listaAux[x].pendiente == "Registrar Gastos") && (value[y].pendiente == "registrarGastos")){
							listaAux[x].conteo = value[y].conteo;
							break;
						}
					}	
				}
				listaPendiente = listaAux;
				plantilla.listaPendientes = listaPendiente;
					plantilla.lstPendientes.lstPendientes.selectedIndex = indice;
			}
			
			private function recargarPendientes(evt:Event):void
			{
				var event:EventoRegistrarGastos = new EventoRegistrarGastos(EventoRegistrarGastos.CARGAR_NUMERO_PENDIENTES_MENU);
				event.usuario = DatosGlobales.getInstance()._usuario.usuario;
				event.rol = "";
				dispatchEvent(event);
			}
		]]>
	</fx:Script>
	
	<plantilla:PlantillaGestorCostos id="plantilla" width="100%" height="100%" listaPendientes="{listaPendiente}" pendienteSeleccionadoPlantilla="plantillagestorcompras1_pendienteSeleccionadoHandler(event)" />

</s:Group>
