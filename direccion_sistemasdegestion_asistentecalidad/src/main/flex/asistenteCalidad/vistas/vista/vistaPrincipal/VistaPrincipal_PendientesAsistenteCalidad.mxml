<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 xmlns:vistaPrincipal="asistenteCalidad.vistas.vista.vistaPrincipal.*" 
		 xmlns:plantilla="asistenteCalidad.vistas.vista.plantilla.*" 
		 xmlns:proceso="asistenteCalidad.vistas.vista.proceso.*" 
		 xmlns:vista="asistenteCalidad.vistas.vista.*"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%"
		 creationComplete="init(event)" 
		 >
	
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.UsuarioPConnect;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import asistenteCalidad.vistas.evento.EventoAsistenteCalidad;
			import asistenteCalidad.vistas.vista.plantilla.alertas.popUp_ExitoVincular;
			
			[Bindable] public var sizeFontAsistente:Number;
			private var arratemp:ArrayCollection;
			private var popUp_Exito:popUp_ExitoVincular;
			
			protected function init(event:FlexEvent):void
			{
				lstSolicitudes.addEventListener("cambiarVistaProceso_todos",cambiaVistaProcesoTodos);
				lstSolicitudes.addEventListener("cambiarVistaProceso_individual",cambiaVistaProcesoIndividual);
				grpProceso.addEventListener("cambiarVistaDefault",cambiaDefault);
			}
			
			private function cambiaDefault(evt:Event):void
			{
				vistas.selectedIndex = 0;
			}
			
			private function cambiaVistaProcesoTodos(evt:Event):void
			{
				grpProceso.listaSolicitudes.recibeSolicitudes(lstSolicitudes.listaSolicitudes.dataProvider as ArrayCollection);
				vistas.selectedIndex = 1;
			}
			
			private function cambiaVistaProcesoIndividual(evt:Event):void
			{
				var arreglo:ArrayCollection = new ArrayCollection();
				arreglo.addItem(EventoAsistenteCalidad.usuarioSelect);
				grpProceso.listaSolicitudes.recibeSolicitudes(arreglo);
				vistas.selectedIndex = 1;
			}
			
			
			public function set recibeSolicitudes($solicitud:ArrayCollection):void
			{
				if($solicitud == null)
					return;
				
				arratemp = new ArrayCollection();
				arratemp = ObjectUtil.copy($solicitud) as ArrayCollection;
				lstSolicitudes.dataProvider = $solicitud;
				graficaPie_Solicitudes.obtenerSolicitudes = $solicitud;
				
				grpProceso.listaSolicitudes.listaSolicitudes.dataProvider = $solicitud;
				grpProceso.listaSolicitudes.listaSolicitudes.selectedIndex = 0;
				grpProceso.listaSolicitudes.itemClic();
				grpProceso.info.recibeContactoSolictud(new UsuarioPConnect());
			}
			
			
			override protected function updateDisplayList($width:Number, $height:Number):void
			{
				super.updateDisplayList($width,$height);
				
				sizeFontAsistente = (30 / 2005) * ($width);
				sizeFontAsistente = sizeFontAsistente > 30 ? 30:sizeFontAsistente;
				sizeFontAsistente = sizeFontAsistente < 15 ? 15:sizeFontAsistente;
			}
			
			private var recargarSolicitudes:Boolean = false
			public function set confirmaDescartar($resp:Boolean):void
			{
				if($resp)
				{
					recargarSolicitudes = true;
					var ev:EventoAsistenteCalidad = new EventoAsistenteCalidad(EventoAsistenteCalidad.CARGAR_PENDIENTES_REGISTRO_USUARIOS_PCONECT);
					dispatchEvent(ev);
					
					grpProceso.listaSolicitudes.listaSolicitudes.dataProvider = new ArrayCollection();
					grpProceso.listaSolicitudes.txtBuscador.text = "";
				}
			}
			
			public function set confirmarVincular($resp:Boolean):void
			{
				if($resp)
				{
					if(!popUp_Exito)
						popUp_Exito = new popUp_ExitoVincular();
					
					recargarSolicitudes = true;
					PopUpManager.addPopUp( popUp_Exito, this, true );
					PopUpManager.centerPopUp(popUp_Exito);
					grpProceso.listaClientes.listaClientes.dataProvider = new ArrayCollection();
					
					var evt:EventoAsistenteCalidad = new EventoAsistenteCalidad( EventoAsistenteCalidad.CARGAR_LISTA_CONTACTOS_CLIENTE );
					dispatchEvent( evt );
					
					setTimeout(siguientesDisparos,500);
				}
			}
			
			private function siguientesDisparos():void
			{
				var wer:EventoAsistenteCalidad = new EventoAsistenteCalidad(EventoAsistenteCalidad.PENDIENTE_SELECCIONADO);
				wer.pendiente = "validarPerfil";
				dispatchEvent(wer);
				
				var ev:EventoAsistenteCalidad = new EventoAsistenteCalidad(EventoAsistenteCalidad.CARGAR_PENDIENTES_REGISTRO_USUARIOS_PCONECT);
				dispatchEvent(ev);
				
				
				grpProceso.activarScroll();
			}
			
		]]>
	</fx:Script>
	
	
	<pq:MobViewStack id="vistas" width="100%" height="100%">
		
		<s:VGroup id="vgpListado" width="100%" height="100%" gap="0"  >
			<plantilla:Header_AsistenteCalidad id="cmpTitulo" width="100%" titulo="VALIDAR PERFIL" />
			
			<s:HGroup gap="0" width="100%" height="100%" >  
				<vistaPrincipal:VistaPrincipal_ListaSolicitudes id="lstSolicitudes" width="35%" height="100%" />
				<s:Group width="65%" height="100%" >
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="#f3f3f4" />
						</s:fill>
					</s:Rect>
					
					<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" gap="0" >
						<s:VGroup width="70%" height="90%" gap="0">
							<s:Label styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" text="SOLICITUDES" textAlign="center" fontSize="{sizeFontAsistente}" />
							<s:Spacer height="5%" />
							<vistaPrincipal:VistaPrincipal_PieChart id="graficaPie_Solicitudes" width="100%" height="100%" />
						</s:VGroup>
					</s:VGroup>  
				</s:Group>  
			</s:HGroup> 
		</s:VGroup>  
		
		<!-- VISTA DEFAULT DE EL PROCESO DE VALIDACION -->
		<proceso:VistaProceso_Default id="grpProceso" width="100%" height="100%" />
		
	</pq:MobViewStack>
	
</s:Group>
