<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:otros="skins.otros.*"
		 xmlns:botoneraFlotante="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.botoneraFlotante.*"
		 xmlns:registrarConfirmacion="mx.com.proquifa.vista.vistas.registrarConfirmacion.*" 
		 xmlns:plantilla="mx.com.proquifa.vista.vistas.plantilla.*"
		 xmlns:boton="skins.skin.botones.boton.*"
		 xmlns:label="skins.skin.label.*" 
		 width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)"
		 resize="calc(event)" xmlns:Componentes="vista.vistas.EmbalarProductos.Componentes.*"
		 >
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.ResumenInspeccionProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.PlantillaReporteAS;
			import mx.effects.Resize;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import spark.effects.Fade;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.otros.sprite.ImageAnimated;
			
			import vista.evento.EventoEmbalarProductos;
			import vista.vistas.EmbalarProductos.Componentes.PopUpColectando;
			import vista.vistas.EmbalarProductos.Componentes.popUpalertaInspeccion;		
			
			
			
			private var timeLineData:ArrayList = new ArrayList(['1 · COLECTAR ELEMENTOS', '2 · EMBALAR PRODUCTOS']);
			
			private var _sql:Query;
			[Bindable] private var colectar:VistaColectarElementos = new VistaColectarElementos;
			[Bindable] private var embalar:VistaEmbalarProductos = new VistaEmbalarProductos;
			private var etiquetar:VistaProductosInspeccionA;
			private var universo:ArrayCollection = new ArrayCollection();
			private var universoPartidasAct:ArrayCollection = new ArrayCollection();
			private var punterosPrioridad:Array;
			private var listaAux:ArrayCollection = new ArrayCollection();
			
			[Bindable]private var totalPartidas:Number = 0;
			[Bindable]private var totalPiezas:Number = 0;
			private var prioridadActual:String = 'p1';
			public function setDatos(value:ArrayCollection):void
			{
				universo = new ArrayCollection();
				universo =  ObjectUtil.copy(value) as ArrayCollection;
				
				if(value != null)
				{
					armaLista('p1');
					
				}
					
				else
				{
					lstClientes.dataProvider = new ArrayCollection();
				}
				
				totalPartidas = 0;
				
				for (var i:int = 0; i < lstClientes.dataProvider.length; i++) 
				{
					totalPartidas = totalPartidas + lstClientes.dataProvider[i].partidas.length;
				}
				
				timeLine.selectedIndex = -1;
				timeLine.Cmenu();
				timeLine.selectedIndex = 0;
			}
			
			private function armaLista(prioridad:String):void
			{
				var universoAux:ArrayCollection = ObjectUtil.copy(universo) as ArrayCollection;
				var sqlTipo:Query = new Query(universoAux,["prioridad"],true);
				var punteros:Array;
				var partidas:ArrayCollection = new ArrayCollection();
				punteros = sqlTipo.getPunteros([prioridad]);
				listaAux = sqlTipo.armarLista(punteros) as ArrayCollection;
				
				if(listaAux.length > 0)
				{
					GzonaTrabajo.visible = GzonaTrabajo.includeInLayout = true;
					textoG.visible = textoG.includeInLayout = false;
					lstClientes.dataProvider = listaAux;
					seleccionarPrimero();
				}
				else{
					GzonaTrabajo.visible = GzonaTrabajo.includeInLayout = false;
					textoG.visible = textoG.includeInLayout = true;
				}
			}
			
			private var prioridadConPendientes:String;
			private function verificarPrioridades(prioridad:String):Boolean
			{
				var universoAux:ArrayCollection = ObjectUtil.copy(universo) as ArrayCollection;
				var sqlTipo:Query = new Query(universoAux,["prioridad"],true);
				var punteros1:Array;
				var punteros2:Array;
				var resp:Boolean;
				prioridadConPendientes = "";
				
				punteros1 = sqlTipo.getPunteros(['p1']);
				punteros2 = sqlTipo.getPunteros(['p2']);
				
				
				if(prioridad == 'P2')
				{
					if(punteros1.length == 0)
					{
						resp = true;
						
					}
					else{
						
						prioridadConPendientes ="Prioridad 1";
					}
					
					
				}
				else if(prioridad == 'P3')
				{
					if(punteros1.length == 0 && punteros2.length == 0)
					{
						resp = true;
					}
					else
					{
						if(punteros1.length > 0)
						{
							prioridadConPendientes ="Prioridad 1";
						}
						else
						{
							prioridadConPendientes ="Prioridad 2";
						}
						
					}
				}
				
				
				return resp;
			}
			
			[Bindable] public var totales:ResumenInspeccionProductos;
			public function recibeTotales(to:ResumenInspeccionProductos):void
			{
				totales = to;
				
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				timeLine.data = timeLineData;
				timeLine.conPalomita = false;
				
				grpEtiquetas.addElement(hgPrueba);
				
				zonaTrabajoTimeLine.removeAllElements();
				if (!colectar)
					colectar = new VistaColectarElementos();
				colectar.llenarInfo(universoPartidasAct, prioridadActual);
				zonaTrabajoTimeLine.addElement(colectar);
				timeLine.maxItemList = 1;
				
				
				timeLine.addEventListener("verificaSiavanza",verificaSiAvanza);
				embalar.addEventListener("actualizaTotalizador", actualizaTotalizador);
				
				fxResize = new Resize( grupoUno );
				fxResize.duration = 400;
				fxResize.addEventListener( EffectEvent.EFFECT_END, resizeEndHandler, false, 0, true );
				fxResize.addEventListener( EffectEvent.EFFECT_START, startEndHandler, false, 0, true );
				fxFade = new Fade( grListaCliente );
				fxFade.duration = 400;		
				
			}
			
			protected function lstClientes_changeHandler(event:IndexChangeEvent):void
			{
				if(lstClientes.selectedItem.partidas != null && lstClientes.selectedItem.partidas.length > 0 )
				{
					totalPiezas = 0;
					universoPartidasAct = ObjectUtil.copy(lstClientes.selectedItem.partidas) as ArrayCollection;
					for (var i:int = 0; i < lstClientes.selectedItem.partidas.length; i++) 
					{
						totalPiezas = totalPiezas + lstClientes.selectedItem.partidas[i].cantidadCompra;
					}
					zonaTrabajoTimeLine.removeAllElements();
					timeLine.selectedIndex = -1;
					timeLine.Cmenu();
					timeLine.maxItemList = 1;
					timeLine.selectedIndex = 0;
					
					
					if (!colectar)
						colectar = new VistaColectarElementos();
					zonaTrabajoTimeLine.addElement(colectar);
					
				}
				
				colectar.llenarInfo(universoPartidasAct, prioridadActual);
				
			}
			
			private var almacenSelect:String;
			private var presentacionSelect:String;
			private var caducidadSelect:String;
			private var numPiezasTotal:Number;
			private var numPiezasReal:Number;
			private var loteSelect:String;
			protected function timeLine_cambiarVista(event:Event):void
			{
				
				zonaTrabajoTimeLine.removeAllElements();
				switch(timeLineData.source[timeLine.selectedIndex])
				{
					case '1 · COLECTAR ELEMENTOS':
					{
						if (!colectar)
							colectar = new VistaColectarElementos();
						colectar.llenarInfo(universoPartidasAct, prioridadActual);
						zonaTrabajoTimeLine.addElement(colectar);
						lstClientes.enabled = true;
						timeLine.maxItemList = 1;
						lblBtnSiguiente.text = 'COLECTAR';
						activaBtnContinuar(event);
						btnSiguiente.visible = btnSiguiente.includeInLayout = true;
						btnFinalizar.visible = btnFinalizar.includeInLayout = false;
						/*btnVolver.visible = btnVolver.includeInLayout = false;*/
						totalizadorPartidas.text = String (colectar.totalCongelacion + colectar.totalRefrigeracion + colectar.totalAmbiente);
						lbl_totalizadorPartidas.text = colectar.totalCongelacion + colectar.totalRefrigeracion + colectar.totalAmbiente == 1 ? 'Partida' : 'Partidas';
						
						break;
					}
					case '2 · EMBALAR PRODUCTOS':
					{
						if(!embalar)
							embalar = new VistaEmbalarProductos();
						zonaTrabajoTimeLine.addElement(embalar);
						lstClientes.enabled = false;
						embalar.iniciarVista(colectar.listaOrdenada);
						embalar.addEventListener( EventoEmbalarProductos.ACTIVA_BTN_CONTINUAR, activaBtnContinuar );
						
						lblBtnSiguiente.text = 'FINALIZAR';
						colorBtnSiguiente.color = 0xC2C3CA;
						btnSiguiente.enabled = false;
						btnSiguiente.visible = btnSiguiente.includeInLayout = true;
						btnFinalizar.visible = btnFinalizar.includeInLayout = false;
						/*btnVolver.visible = btnVolver.includeInLayout = true;*/
						actualizaTotalizador(event);
						lbl_totalizadorPartidas.text = embalar.noPartidasRestantes == 1 ? 'Partida' : 'Partidas';
						break;
					}
						/*case '3 · ETIQUETAR CAJAS':
						{
						if (!etiquetar)
						etiquetar = new VistaProductosInspeccionA();
						zonaTrabajoTimeLine.addElement(etiquetar);
						
						btnSiguiente.visible = btnSiguiente.includeInLayout = false;
						btnFinalizar.visible = btnFinalizar.includeInLayout = true;
						btnVolver.visible = true;
						break;
						}*/
					default:
					{
						break;
					}
				}
			}
			
			protected function actualizaTotalizador(event:Event):void
			{
				totalizadorPartidas.text = String (embalar.noPartidasRestantes);
			}
			
			[Bindable] private var _colorR:uint = 0xbf2932;
			[Bindable] private var _colorA:uint = 0xffffff;
			[Bindable] private var _colorv:uint = 0xffffff;
			[Bindable] public var prioridad:String = "p1";
			protected function cambio_de_boton(event:MouseEvent,tipo:String):void
			{
				
				if(tipo == 'amarillo'){
					if(verificarPrioridades('P2'))
					{
						prioridadActual = 'p2';
						_colorR = 0xffffff;
						_colorv = 0xffffff;
						_colorA = 0xf9af4c;
						
						/*rojo*/
						tex1P1.setStyle( "color","0xbf2932" );
						tex2P1.setStyle( "color","0x000000" );
						tex3P1.setStyle( "color","0x000000" );
						tex1P1.setStyle( "fontWeight","normal");
						tex2P1.setStyle( "fontWeight","normal" );
						tex3P1.setStyle( "fontWeight","normal" );
						
						/*amarillo*/
						tex1P2.setStyle( "color","0xffffff" );
						tex2P2.setStyle( "color","0xffffff" );
						tex3P2.setStyle( "color","0xffffff" );
						tex1P2.setStyle( "fontWeight","bold");
						tex2P2.setStyle( "fontWeight","bold" );
						tex3P2.setStyle( "fontWeight","bold" );
						
						
						/*verde*/
						tex1P3.setStyle( "color","0x40b34f" );
						tex2P3.setStyle( "color","0x000000" );
						tex3P3.setStyle( "color","0x000000" );
						tex1P3.setStyle( "fontWeight","normal" );
						tex2P3.setStyle( "fontWeight","normal" );
						tex3P3.setStyle( "fontWeight","normal");
						
						armaLista('p2');
					}
					else{
						abrirPopAlerta(prioridadConPendientes);
						
					}
					
					
					
					prioridad = "p2";
				}
					
				else if(tipo == 'rojo'){
					prioridadActual = 'p1';
					_colorR = 0xbf2932;
					_colorv = 0xffffff;
					_colorA = 0xffffff;
					
					/*rojo*/
					tex1P1.setStyle( "color","0xffffff" );
					tex2P1.setStyle( "color","0xffffff" );
					tex3P1.setStyle( "color","0xffffff" );
					tex1P1.setStyle( "fontWeight","bold");
					tex2P1.setStyle( "fontWeight","bold" );
					tex3P1.setStyle( "fontWeight","bold" );
					
					
					/*amarillo*/
					tex1P2.setStyle( "color","0xf9af4c" );
					tex2P2.setStyle( "color","0x000000" );
					tex3P2.setStyle( "color","0x000000" );
					tex1P2.setStyle( "fontWeight","normal");
					tex2P2.setStyle( "fontWeight","normal" );
					tex3P2.setStyle( "fontWeight","normal" );
					
					/*verde*/
					tex1P3.setStyle( "color","0x40b34f" );
					tex2P3.setStyle( "color","0x000000" );
					tex3P3.setStyle( "color","0x000000" );
					tex1P3.setStyle( "fontWeight","normal" );
					tex2P3.setStyle( "fontWeight","normal" );
					tex3P3.setStyle( "fontWeight","normal");
					
					armaLista('p1');
					
					prioridad = "p1";
				}
					
				else if(tipo == 'verde'){
					if(verificarPrioridades('P3'))
					{
						prioridadActual = 'p3';
						_colorR = 0xffffff;
						_colorv = 0x40b34f;
						_colorA = 0xffffff;
						
						/*rojo*/
						tex1P1.setStyle( "color","0xbf2932" );
						tex2P1.setStyle( "color","0x000000" );
						tex3P1.setStyle( "color","0x000000" );
						tex1P1.setStyle( "fontWeight","normal");
						tex2P1.setStyle( "fontWeight","normal" );
						tex3P1.setStyle( "fontWeight","normal" );
						
						/*amarillo*/
						tex1P2.setStyle( "color","0xf9af4c" );
						tex2P2.setStyle( "color","0x000000" );
						tex3P2.setStyle( "color","0x000000" );
						tex1P2.setStyle( "fontWeight","normal");
						tex2P2.setStyle( "fontWeight","normal" );
						tex3P2.setStyle( "fontWeight","normal" );
						
						/*verde*/
						tex1P3.setStyle( "color","0xffffff" );
						tex2P3.setStyle( "color","0xffffff" );
						tex3P3.setStyle( "color","0xffffff" );
						tex1P3.setStyle( "fontWeight","bold" );
						tex2P3.setStyle( "fontWeight","bold" );
						tex3P3.setStyle( "fontWeight","bold");
						
						armaLista('p3');
					}
					else{
						
						abrirPopAlerta(prioridadConPendientes);
						
					}
					
					
					prioridad = "p3";
					
				}
				
				colectar.llenarInfo(universoPartidasAct, prioridadActual);
				
			}
			
			private function seleccionarPrimero():void
			{
				lstClientes.selectedIndex = 0;
				lstClientes.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
				
			}
			
			private function activaBtnContinuar(event:Event):void
			{
				btnSiguiente.enabled = true;
				colorBtnSiguiente.color= 0x0C8893;
				
			}
			
			[Bindable]public var conceptoAct:String;
			[Bindable]public var imagenA:String;
			[Bindable]public var folioP:String;
			
			private function verificaVistaPartida():Boolean
			{
				var infoCompleta:Boolean = false;
				
				return infoCompleta;
			}
			
			
			private function verificaSiAvanza(event:Event):void{
				if(verificaVistaPartida())
				{
					timeLine.maxItemList = 4;
					timeLine.avanzaEntrePestanas(1);
				}
				else{
					/*alertaSingleton.show("Información Incompleta");*/
					timeLine.maxItemList = 4;
					timeLine.avanzaEntrePestanas(1);
				}
				
			}		
			
			/*Cuando se reciba la respuesta de que ya se terminó de colectar, cambiar de sección con la siguiente istrucción:
			timeLine.selectedIndex = 1;*/
			private var popupColectando:PopUpColectando;
			public function set recibeCambiaEstadoPedidoAPorColectar(actualizoEstadoPedidoAPorColectar:Boolean):void
			{
				if(actualizoEstadoPedidoAPorColectar){
					if( popupColectando == null ){
						popupColectando = PopUpColectando(PopUpManager.createPopUp( this, PopUpColectando, true ) );
						PopUpManager.centerPopUp( popupColectando );
						popupColectando.texto = 'Colectando en Dispositivo Móvil';
						(popupColectando.imgEsperar as ImageAnimated).play();
						popupColectando.addEventListener("cancelarpop",cerrarPopUpColectando);
						
					}else{
						
						PopUpManager.addPopUp( popupColectando , this, true );
						
					}
				}
			}	
			
			private function cerrarPopUpColectando(event:Event):void
			{
				var evt:EventoEmbalarProductos = new EventoEmbalarProductos( EventoEmbalarProductos.CAMBIA_ESTADOPEDIDO_A_POR_COLECTAR_A_POR_EMBALAR);
				evt.idsPPedidos = arrayIdPPedidos;
				evt.estadoPedido = 'Por embalar';
				dispatchEvent( evt );	
			}
			
			public function set recibeCambiaEstadoPedidoAPorEmbalar(actualizoEstadoPedidoAPorEmbalar:Boolean):void
			{
				if(actualizoEstadoPedidoAPorEmbalar){
					/*Actualizar la lista agrupada de clientes pero flashea el componente "timeLine"*/
					/*var evento:EventoEmbalarProductos = new EventoEmbalarProductos(EventoEmbalarProductos.OBTENER_INFORMACION_AGRUPADA);
					evento.estadoPedido = 'Por embalar';
					dispatchEvent(evento);*/
					
					PopUpManager.removePopUp( popupColectando );
					popupColectando = null;
					
				}
			}
			
			[Bindable] var arrayIdPPedidos: ArrayCollection = new ArrayCollection;
			protected function avanzar_vista(event:MouseEvent):void
			{
				if(lblBtnSiguiente.text == 'COLECTAR'){
					var evt:EventoEmbalarProductos = new EventoEmbalarProductos( EventoEmbalarProductos.CAMBIA_ESTADOPEDIDO_A_POR_COLECTAR);
					for(var i:int = 0; i < colectar.lstElementos.dataProvider.length; i++){
						if(colectar.lstElementos.dataProvider.getItemAt(i).idPPedido)
							evt.idsPPedidos.addItem(colectar.lstElementos.dataProvider.getItemAt(i).idPPedido);				
					}
					arrayIdPPedidos = ObjectUtil.copy(evt.idsPPedidos) as ArrayCollection;
					evt.estadoPedido = 'Por colectar';
					dispatchEvent( evt );
				}else if(lblBtnSiguiente.text == 'FINALIZAR'){
					var evt:EventoEmbalarProductos = new EventoEmbalarProductos( EventoEmbalarProductos.CAMBIA_ESTADOPEDIDO_DE_POR_EMBALAR_A_EMBALADO);
					for(var i:int = 0; i < embalar.lstBolsasParaEmbalar.dataProvider.length; i++){
						for(var j:int = 0; j < embalar.lstBolsasParaEmbalar.dataProvider.getItemAt(i).arrayProductos.length; j++){
							if(embalar.lstBolsasParaEmbalar.dataProvider.getItemAt(i).arrayProductos.getItemAt(j).idPPedido)
								evt.idsPPedidos.addItem(embalar.lstBolsasParaEmbalar.dataProvider.getItemAt(i).arrayProductos.getItemAt(j).idPPedido);	
						}
					}
					arrayIdPPedidos = ObjectUtil.copy(evt.idsPPedidos) as ArrayCollection;
					evt.estadoPedido = 'Embalados';
					dispatchEvent( evt );
				}				
			}
			
			protected function regresar_Vista(event:MouseEvent):void
			{
				timeLine.avanzaEntrePestanas(0);
				
			}
			
			private var popupAlert:popUpalertaInspeccion;	
			private function abrirPopAlerta(pri:String):void
			{
				if( popupAlert == null ){
					popupAlert = popUpalertaInspeccion(PopUpManager.createPopUp( this, popUpalertaInspeccion, true ) );
					PopUpManager.centerPopUp( popupAlert );
					popupAlert.prioridad = pri;
					popupAlert.addEventListener("aceptarpop",cerrarPopUP);
					
				}else{
					
					PopUpManager.addPopUp( popupAlert , this, true );
					
				}
			}
			
			private function cerrarPopUP(event:Event):void
			{
				PopUpManager.removePopUp( popupAlert );
				popupAlert = null;
			}
			
			protected function txtBuscadorClientes_changeHandler(event:TextOperationEvent):void
			{
				
				lstClientes.dataProvider = UtilsGrid.queryCampoXLike(universo,"nombreCliente",txtBuscadorClientes.text);
			}
			
			private var fxResize:Resize;
			private var fxFade:Fade;
			private var ocultarMenu:Boolean = true;
			private var isAnimacionOculta:Boolean = false;
			
			
			private var fxResizePartidas:Resize;
			private var fxFadePartidas:Fade;
			private var ocultarMenuPartidas:Boolean = true;
			private var isAnimacionOcultaPartidas:Boolean = false;
			
			protected function botonCambiorVista(vieneDe:String,tipo:String):void
			{
				vieneDeAux = tipo;
				vieneDePrincipal = "click"
				menuMuestraOculta(vieneDe);
				setTimeout(funcion, 500);
			}
			
			private function funcion():void{
				vieneDePrincipal = "resize";
			}
			
			protected function menuMuestraOculta(vieneDe:String):void
			{
				
				if(vieneDe == 'clientes')
				{
					isAnimacionOculta = true;
					
					if(!fxResize.isPlaying){
						if(ocultarMenu){
							fxResize.stop();
							fxResize.widthTo = 25;
							ocultarMenu = false;
							imgRow.rotation = 180;
							fxFade.alphaTo = 0;						
							
						}else{						
							fxResize.stop();
							fxResize.widthTo = (unscaledWidth * 0.17);
							ocultarMenu = true;
							imgRow.rotation = 0;
							fxFade.alphaTo = 1;			
							
							
							
						}
						fxFade.play();
						fxResize.play();
					}
				}
				else if(vieneDe == 'partidas')
				{
					isAnimacionOcultaPartidas = true;
					
					if(!fxResizePartidas.isPlaying){
						if(ocultarMenuPartidas){
							fxResizePartidas.stop();
							fxResizePartidas.widthTo = 10;
							ocultarMenuPartidas = false;
							fxFadePartidas.alphaTo = 0;						
							
						}else{						
							fxResizePartidas.stop();
							fxResizePartidas.widthTo = (unscaledWidth * 0.22);
							ocultarMenuPartidas = true;
							fxFadePartidas.alphaTo = 1;			
							
							
						}
						fxFadePartidas.play();
						fxResizePartidas.play();
					}
				}
				
				/*	}*/
				
			}
			
			protected function startEndHandler( event:EffectEvent ):void{
				if( !ocultarMenu ){
					
				}
				else {
					scroll.percentWidth = scroll.percentWidth - 17;
					grListaCliente.percentWidth = 100;
					trace("============start============")
				}
			}
			
			protected function resizeEndHandler( event:EffectEvent ):void{				
				if( !ocultarMenu ){
					grListaCliente.width = 10;
					imgRow.horizontalCenter = 0;
					scroll.percentWidth = scroll.percentWidth + 17;
					var evt:EventoEmbalarProductos = new EventoEmbalarProductos( EventoEmbalarProductos.CAMBIAR_DEPTH_ANIMACION);
					evt.ocultaMenu = true;
					dispatchEvent( evt );
					
				}else{		
					grupoUno.percentWidth = 17;
					grupoUno.percentHeight = 100;
					grListaCliente.percentHeight = 100;
					imgRow.horizontalCenter = -10;
					grListaCliente.percentWidth = 100;	
				}
				isAnimacionOculta = false;
				trace("============end============")
			}
			
			
			protected function startEndHandlerPartidas( event:EffectEvent ):void{
				if( !ocultarMenuPartidas ){
					
				}
				else {
					scroll.percentWidth = scroll.percentWidth - 22;
				}
			}
			
			protected function resizeEndHandlerPartidas( event:EffectEvent ):void{				
				if( !ocultarMenuPartidas ){
					scroll.percentWidth = scroll.percentWidth + 22 ;
					var evt:EventoEmbalarProductos = new EventoEmbalarProductos( EventoEmbalarProductos.CAMBIAR_DEPTH_ANIMACION);
					evt.ocultaMenu = true;
					dispatchEvent( evt );
					
				}else{		
					grupoUno.percentHeight = 100;
					grListaCliente.percentHeight = 100;
				}
				isAnimacionOcultaPartidas = false;
				
			}
			
			[Bindable] public var unscaledWidthAnt:Number = 0;
			[Bindable] public var pading:Number = 0;
			[Bindable] public var tamanioLetraSubtitulo:Number = 0;
			[Bindable] public var paddingLeftBarraTitulo:Number = 0;
			[Bindable] public var heightEspacioCalculadoBtnColectar:Number = 40;
			[Bindable] public var paddingTopCalculadoBtnColectar:Number = 0;
			[Bindable] public var fontSizeTotalizadorLstClientes:Number = 0;
			[Bindable] public var fontSizeTotalizadorLstPartidas:Number = 0;
			[Bindable] public var heightCalculadoBtnColectar:Number = 30;
			[Bindable] public var fontSizeCalculadoBtnColectar:Number = 21;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				var yaEntro:Boolean;
				if(unscaledWidth != unscaledWidthAnt){
					if(PlantillaReporteAS.ocultarMenu){
						pading = -12;
					}else{
						pading = -1;
					}
					
					tamanioLetraSubtitulo = (unscaledWidth / 2005) * 18;
					tamanioLetraSubtitulo = tamanioLetraSubtitulo < 12 ? 12 : tamanioLetraSubtitulo;
					
					if(tamanioLetraSubtitulo>18)
						tamanioLetraSubtitulo = 18;
					
					heightEspacioCalculadoBtnColectar = (unscaledHeight / 1241) * 53;
					heightEspacioCalculadoBtnColectar = heightEspacioCalculadoBtnColectar < 26 ? 26 : heightEspacioCalculadoBtnColectar;
					
					if(heightEspacioCalculadoBtnColectar>53)
						heightEspacioCalculadoBtnColectar = 53;
					
					heightEspacioCalculadoBtnColectar -= 20;
					
					heightCalculadoBtnColectar = (unscaledHeight / 1241) * 30;
					heightCalculadoBtnColectar = heightCalculadoBtnColectar < 15 ? 15 : heightCalculadoBtnColectar;
					
					if(heightCalculadoBtnColectar>30)
						heightCalculadoBtnColectar = 30;
					
					fontSizeCalculadoBtnColectar = (unscaledHeight / 1241) * 21;
					fontSizeCalculadoBtnColectar = fontSizeCalculadoBtnColectar < 8 ? 8 : fontSizeCalculadoBtnColectar;
					
					if(fontSizeCalculadoBtnColectar>21)
						fontSizeCalculadoBtnColectar = 21;
					
					
					paddingTopCalculadoBtnColectar = (unscaledHeight / 1241) * 21;
					paddingTopCalculadoBtnColectar = paddingTopCalculadoBtnColectar < 15 ? 15 : paddingTopCalculadoBtnColectar;
					
					if(paddingTopCalculadoBtnColectar>21)
						paddingTopCalculadoBtnColectar = 21;
					
					paddingTopCalculadoBtnColectar -= 21;
					
					fontSizeTotalizadorLstClientes = (unscaledWidth / 2005) * 15;
					fontSizeTotalizadorLstClientes = fontSizeTotalizadorLstClientes < 7 ? 7 : fontSizeTotalizadorLstClientes;
					
					if(fontSizeTotalizadorLstClientes>15)
						fontSizeTotalizadorLstClientes = 15;
					
					fontSizeTotalizadorLstPartidas = (unscaledWidth / 2005) * 12;
					fontSizeTotalizadorLstPartidas = fontSizeTotalizadorLstPartidas < 7 ? 7 : fontSizeTotalizadorLstPartidas;
					
					if(fontSizeTotalizadorLstPartidas>12)
						fontSizeTotalizadorLstPartidas = 12
					
					
					if(unscaledWidth <= 1079)
					{
						timeLine.tamLetra = 9;
					}
					else {
						timeLine.tamLetra = 12;
					}
					
					if(unscaledWidth < 1000 && lstClientes.enabled == false){
						botonCambiorVista('clientes','click1');
						yaEntro = false;
					}
					
					if(unscaledWidth > 1500 && lstClientes.enabled == false && yaEntro == false){
						botonCambiorVista('clientes','click1');
						yaEntro = true;
					}
					
					if(PlantillaReporteAS.ocultarMenu){
						paddingLeftBarraTitulo = -12;
					}else{
						paddingLeftBarraTitulo = 3;
					}
					
				}
				
				unscaledWidthAnt = unscaledWidth;
				
			}
			
			private var vieneDePrincipal:String = "resize";
			private var vieneDeAux:String = "";
			
			
			[Bindable] public var sizeFont:Number;
			[Bindable] public var sizeFontmedia:Number;
			[Bindable] public var sizeFontMediaGrande:Number;
			
			protected function calc(event:ResizeEvent):void
			{
				if(unscaledWidth <= 1079 && fxResize != null && fxFadePartidas != null && !fxResize.isPlaying && ocultarMenu)
				{
					trace("============resize============")
					if (vieneDePrincipal == "resize" )
					{
						menuMuestraOculta('clientes' );
						menuMuestraOculta('partidas' );
					}
					
					vieneDePrincipal = "resize";
					
					
				}
				
				sizeFont = (30 / 2007) * (unscaledWidth);
				sizeFont = sizeFont > 30 ? 30:sizeFont;
				sizeFont = sizeFont < 20 ? 20:sizeFont;
				
				sizeFontmedia = (24 / 2007) * (unscaledWidth);
				sizeFontmedia = sizeFontmedia > 24 ? 24:sizeFontmedia;
				sizeFontmedia = sizeFontmedia < 14 ? 14:sizeFontmedia;
				
				sizeFontMediaGrande = (18 / 2007) * (unscaledWidth);
				sizeFontMediaGrande = sizeFontMediaGrande > 18 ? 18:sizeFontMediaGrande;
				sizeFontMediaGrande = sizeFontMediaGrande < 8 ? 8:sizeFontMediaGrande;
				
				
				
				
			}
			
			
			protected function group2_updateCompleteHandler(event:FlexEvent,id:String):void
			{
				
				if(prioridadActual == 'p1' && id == 'grRecRojo')
				{
					grRecRojoT.graphics.clear();
					grRecAmarilloT.graphics.clear();
					grRecVerdeT.graphics.clear();
					this[id + "T"].graphics.beginFill(0xbf2932);   
					this[id + "T"].graphics.moveTo((this[id].width/2)-20,this[id].height);
					this[id + "T"].graphics.lineTo((this[id].width/2),this[id].height+12);
					this[id + "T"].graphics.lineTo((this[id].width/2)+20,this[id].height);
					this[id + "T"].graphics.lineTo((this[id].width/2)-20,this[id].height);
					this[id + "T"].graphics.endFill();
				}
				else if(prioridadActual == 'p2' && id =='grRecAmarillo')
				{
					grRecRojoT.graphics.clear();
					grRecAmarilloT.graphics.clear();
					grRecVerdeT.graphics.clear();
					this[id + "T"].graphics.beginFill(0xf9af4c);   
					this[id + "T"].graphics.moveTo((this[id].width/2)-20,this[id].height);
					this[id + "T"].graphics.lineTo((this[id].width/2),this[id].height+12);
					this[id + "T"].graphics.lineTo((this[id].width/2)+20,this[id].height);
					this[id + "T"].graphics.lineTo((this[id].width/2)-20,this[id].height);
					this[id + "T"].graphics.endFill();
				}
				else if(prioridadActual == 'p3' && id =='grRecVerde')
				{
					grRecRojoT.graphics.clear();
					grRecAmarilloT.graphics.clear();
					grRecVerdeT.graphics.clear();
					this[id + "T"].graphics.beginFill(0x40b34f);   
					this[id + "T"].graphics.moveTo((this[id].width/2)-20,this[id].height);
					this[id + "T"].graphics.lineTo((this[id].width/2),this[id].height+12);
					this[id + "T"].graphics.lineTo((this[id].width/2)+20,this[id].height);
					this[id + "T"].graphics.lineTo((this[id].width/2)-20,this[id].height);
					this[id + "T"].graphics.endFill();
				}
				
				
				
			}
			
			/*[Bindable] public var manejoActual:String = 'Ambiente';
			protected function cambiaManejo_clickHandler(event:MouseEvent, manejo:String):void
			{
			manejoActual = manejo;
			if(manejoActual == 'Ambiente'){
			colorSeccionAmbiente.color = 0x348a9c;
			colorSeccionRefrigeracion.color = 0xf2f2f2;
			colorSeccionCongelacion.color = 0xf2f2f2;
			lbl_Ambiente.setStyle('color', 0xffffff);
			lbl_Refrigeracion.setStyle('color', 0x348a9c);
			lbl_Congelacion.setStyle('color', 0x348a9c);
			}else if(manejoActual == 'Refrigeracion'){
			colorSeccionAmbiente.color = 0xf2f2f2;
			colorSeccionRefrigeracion.color = 0x348a9c;
			colorSeccionCongelacion.color = 0xf2f2f2;
			lbl_Ambiente.setStyle('color', 0x348a9c);
			lbl_Refrigeracion.setStyle('color', 0xffffff);
			lbl_Congelacion.setStyle('color', 0x348a9c);
			}else if(manejoActual == 'Congelacion'){
			colorSeccionAmbiente.color = 0xf2f2f2;
			colorSeccionRefrigeracion.color = 0xf2f2f2;
			colorSeccionCongelacion.color = 0x348a9c;
			lbl_Ambiente.setStyle('color', 0x348a9c);
			lbl_Refrigeracion.setStyle('color', 0x348a9c);
			lbl_Congelacion.setStyle('color', 0xffffff);
			}
			colectar.llenarInfo(universoPartidasAct, prioridadActual, manejoActual);
			}*/
			
			private var alfa:Number = 0.4;
			protected function imgRowPart_mouseOverHandler(event:MouseEvent):void
			{
				fadeIn( event.currentTarget ); 
			}
			
			protected function fadeIn( $target:Object ):void
			{
				var fade:Fade = new Fade();
				fade.target = $target;
				fade.alphaFrom = ($target).alpha;
				fade.duration = 200;
				fade.alphaTo = 1;
				fade.play();
			}
			
			protected function imgRowPart_mouseOutHandler(event:MouseEvent):void
			{
				fadeOut( event.currentTarget ); 
				
			}
			
			protected function fadeOut( $target:Object ):void
			{
				var fade:Fade = new Fade();
				fade.target = $target;
				fade.duration = 200;
				fade.alphaFrom = 1;
				fade.alphaTo = alfa;
				fade.play();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:HGroup id="hgPrueba" width="100%">
			<s:Label text="P1" fontWeight="bold" color="#bf2932" paddingRight="6"/>
			<s:Label text="Prioridad 1" paddingRight="50"/>
			<s:Label text="P2" fontWeight="bold" color="#f9af48" paddingRight="6"/>
			<s:Label text="Prioridad 2" paddingRight="50"/>
			<s:Label text="P3" fontWeight="bold" color="#40b44f" paddingRight="6"/>
			<s:Label text="Prioridad 3" paddingRight="50"/>
			<s:Label text="IMG" fontWeight="bold" color="#40b44f" paddingRight="6"/>
			<s:Label text="Ubicación" paddingRight="50"/>
		</s:HGroup>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%" gap="0">
		
		<s:HGroup width="100%" id="botoneraPr" height="12%" minHeight="60" gap="0" paddingLeft="{pading}"  >
			
			<s:Group width="100%"  height="100%" id="grRecRojo"  click="cambio_de_boton(event,'rojo')" updateComplete="group2_updateCompleteHandler(event,'grRecRojo')" >
				<s:Rect width="100%" height="100%" bottom="0" id="recR">
					<s:fill>
						<s:SolidColor color="{_colorR}" />
					</s:fill>
				</s:Rect>
				
				<s:Group id="grRecRojoT" />
				
				<s:VGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="20" >
					<s:Label styleName="tab_texto_12_Helvetica"  color="#FFFFFF" text="PRIORIDAD 1" fontWeight="bold" fontSize="{sizeFont}" id="tex1P1" />
					<s:Label styleName="tab_texto_12_Helvetica"  color="#FFFFFF" text="{totales.numPartP1} {totales.numPartP1 == 1? 'Partida':'Partidas'} · {totales.numPiezasP1} {totales.numPiezasP1 == 1 ? 'Pieza':'Piezas'}"  fontSize="{sizeFontmedia}" id="tex2P1" />
					<s:Label styleName="tab_texto_12_Helvetica"  color="#FFFFFF" text="{totales.numCliP1} {totales.numCliP1 == 1? 'Cliente':'Clientes'}"  fontSize="{sizeFontMediaGrande}" id="tex3P1" />
				</s:VGroup>  
				
				
				<otros:division colorLinea="rojo" width="100%" grueso="5" bottom="0" />
				
			</s:Group>
			
			
			
			<s:Group width="100%" height="100%" id="grRecAmarillo"  click="cambio_de_boton(event,'amarillo')" updateComplete="group2_updateCompleteHandler(event,'grRecAmarillo')" >
				<s:Rect width="100%" height="100%" bottom="0" id="recA">
					<s:fill>
						<s:SolidColor color="{_colorA}" />
					</s:fill>
				</s:Rect>
				
				<s:Group id="grRecAmarilloT" />
				
				<s:VGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="20" >
					<s:Label styleName="tab_texto_12_Helvetica" color="#f9af4c" text="PRIORIDAD 2" fontWeight="bold" fontSize="{sizeFont}" id="tex1P2" />
					<s:Label styleName="tab_texto_12_Helvetica" color="#000000" text="{totales.numPartP2} {totales.numPartP2 == 1? 'Partida':'Partidas'} · {totales.numPiezasP2} {totales.numPiezasP2 == 1 ? 'Pieza':'Piezas'}"  fontSize="{sizeFontmedia}" id="tex2P2"  />
					<s:Label styleName="tab_texto_12_Helvetica" color="#000000" text="{totales.numCliP2} {totales.numCliP2 == 1? 'Cliente':'Clientes'}"  fontSize="{sizeFontMediaGrande}" id="tex3P2"  />
				</s:VGroup>  
				
				<otros:division colorLinea="amarillo" width="100%" grueso="5" bottom="0" />
				
			</s:Group>
			<s:Group width="100%" height="100%" id="grRecVerde"  click="cambio_de_boton(event,'verde')" updateComplete="group2_updateCompleteHandler(event,'grRecVerde')" >
				<s:Rect width="100%" height="100%" bottom="0" id="recV">
					<s:fill>
						<s:SolidColor color="{_colorv}"/>
					</s:fill>
				</s:Rect>
				
				<s:Group id="grRecVerdeT" />
				
				<s:VGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="20" >
					<s:Label styleName="tab_texto_12_Helvetica"  color="#40b34f" text="PRIORIDAD 3" fontWeight="bold" fontSize="{sizeFont}" id="tex1P3" />
					<s:Label styleName="tab_texto_12_Helvetica"  color="#000000" text="{totales.numPartP3} {totales.numPartP3 == 1? 'Partida':'Partidas'} · {totales.numPiezasP3} {totales.numPiezasP3 == 1 ? 'Pieza':'Piezas'}"  fontSize="{sizeFontmedia}" id="tex2P3"  />
					<s:Label styleName="tab_texto_12_Helvetica"  color="#000000" text="{totales.numCliP3} {totales.numCliP3 == 1? 'Cliente':'Clientes'}"  fontSize="{sizeFontMediaGrande}" id="tex3P3"  />
				</s:VGroup> 
				<otros:division colorLinea="verde" width="100%" grueso="5" bottom="0" />
			</s:Group>
		</s:HGroup>  
		
		
		<s:HGroup width="100%" height="88%" gap="0" id="GzonaTrabajo" > <!--lista actual trabajada-->
			
			<s:HGroup depth="101" width="17%" height="100%" id="grupoUno"  >
				
				<s:VGroup width="100%" height="100%" paddingLeft="22" paddingRight="19" horizontalAlign="center" paddingBottom="20" id="grListaCliente" >
					<s:VGroup width="100%" height="7%" verticalAlign="middle" id="etiquetaClientes" >
						<s:Label styleName="tab_texto_14_Helvetica"  text="CLIENTES" fontFamily="Helvetica" color="#008894" maxDisplayedLines="1" fontSize="{sizeFontmedia}" fontWeight="bold" width="100%"/>
					</s:VGroup>  
					<s:TextInput id="txtBuscadorClientes" width="100%" skinClass="skins.textinput.busqueda.skinTextInputBusqueda2D" change="txtBuscadorClientes_changeHandler(event)"  prompt="Cliente"  />
					<s:List width="100%" height="91%" borderVisible="false" horizontalScrollPolicy="off"  
							selectedIndex="0" id="lstClientes" contentBackgroundAlpha="0"
							itemRenderer="vista.vistas.EmbalarProductos.itemRender.IR_listaClientesEmbalar"  changing="lstClientes_changeHandler(event)" />
					
					<s:VGroup width="100%" height="{heightEspacioCalculadoBtnColectar}" horizontalAlign="center">
						<otros:division colorLinea="grisObscuro" width="100%" grueso="2" />
						<s:Spacer height="{paddingTopCalculadoBtnColectar}"/>
						<s:Label text="{lstClientes.dataProvider.length} CLIENTES · {totalPartidas} {totalPartidas==1?'Partida':'Partidas'}" fontFamily="Helvetica" color="#4d4d4d" maxDisplayedLines="1" fontSize="{fontSizeTotalizadorLstClientes}" fontWeight="bold" width="100%" textAlign="center" />
					</s:VGroup>  
					
				</s:VGroup> 
				
				<s:Group width="1" height="100%" id="grpTab" depth="5000">
					<s:Image id="imgRow" source="{catalogoIconosBotones.getInstance().flecha_cuadro}" horizontalCenter="-10" verticalCenter="-150" click="botonCambiorVista('clientes','click1')"  mouseOver="imgRowPart_mouseOverHandler(event)" mouseOut="imgRowPart_mouseOutHandler(event)" alpha="{alfa}"/>
				</s:Group>	
			</s:HGroup>  
			
			
			<!--	<otros:divisionDegradadoVertical height="100%" width="2" />-->
			
			<s:VGroup  height="100%" width="1" verticalAlign="middle" >
				<Componentes:divicionDegradadaDelgadaInspeccion height="87%" width="3" />
				<!--<otros:VDivisionSuperDelgada depth="99" height="91%" />-->
			</s:VGroup>  
			
			<s:VGroup  height="100%" width="1" verticalAlign="middle" >
				<Componentes:divicionDegradadaDelgadaInspeccion height="87%" width="3" />
				<!--<otros:VDivisionSuperDelgada depth="99" height="91%" />-->
			</s:VGroup>  
			
			
			<s:Scroller id="scroll" width="83%" height="100%" horizontalScrollPolicy="off" >
				<s:VGroup width="100%" height="100%" paddingLeft="2" paddingRight="30" paddingBottom="20" id="grOperacion"  >
					
					<s:VGroup width="100%" height="100%">
						<s:Spacer height="9"/>
						<!--<s:HGroup width="100%" height="7%" verticalAlign="bottom" gap="2">
						<s:HGroup width="100%" height="50" buttonMode="true" click="cambiaManejo_clickHandler(event, 'Ambiente')">
						<s:Group width="100%" height="100%" >
						<s:Rect width="100%" height="100%">
						<s:fill>
						<s:SolidColor id="colorSeccionAmbiente" color="#348a9c"/>
						</s:fill>
						</s:Rect>
						<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
						<s:Label id="lbl_Ambiente" text="Ambiente" fontSize="20" color="#ffffff" fontWeight="bold"/>
						</s:HGroup>
						</s:Group>  
						</s:HGroup>  
						<s:HGroup width="100%" height="50" buttonMode="true" click="cambiaManejo_clickHandler(event, 'Refrigeracion')">
						<s:Group width="100%" height="100%" >
						<s:Rect width="100%" height="100%">
						<s:fill>
						<s:SolidColor id="colorSeccionRefrigeracion" color="#f2f2f2"/>
						</s:fill>
						</s:Rect>
						<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
						<s:Label id="lbl_Refrigeracion" text="Refrigeración" fontSize="20" color="#348a9c" fontWeight="bold"/>
						</s:HGroup>
						</s:Group>  
						</s:HGroup> 
						<s:HGroup width="100%" height="50" buttonMode="true" click="cambiaManejo_clickHandler(event, 'Congelacion')">
						<s:Group width="100%" height="100%" >
						<s:Rect width="100%" height="100%">
						<s:fill>
						<s:SolidColor id="colorSeccionCongelacion" color="#f2f2f2"/>
						</s:fill>
						</s:Rect>
						<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
						<s:Label id="lbl_Congelacion" text="Congelación" fontSize="20" color="#348a9c" fontWeight="bold"/>
						</s:HGroup>
						</s:Group>  
						</s:HGroup>
						</s:HGroup>-->
						
						
						<s:VGroup width="100%" height="50" paddingTop="18" paddingLeft="25">
							<!--avanzarVista="timeLine_cambiarVista(event)" regresarVista="timeLine_cambiarVista(event)"-->
							<botoneraFlotante:botonSecciones id="timeLine" width="100%" avanzarVista="timeLine_cambiarVista(event)" regresarVista="timeLine_cambiarVista(event)"/>
							<!--<botoneraFlotante:botonSecciones id="timeLine" width="100%" clickeable="false"/>-->
						</s:VGroup> 
						<!--<otros:LineaDivision id="linea" width="100%" height="2" color="#f4f4f4" top="0"/>-->
						
						<!--	<s:Scroller id="scroller" width="100%" height="100%" >-->
						<s:VGroup width="100%" height="100%" paddingLeft="20">
							
							<s:Group id="zonaTrabajoTimeLine" width="100%" height="100%"/>
							
							<s:VGroup width="100%" height="{heightEspacioCalculadoBtnColectar}" horizontalAlign="center" >
								<otros:division colorLinea="grisObscuro" width="100%" grueso="2" />
								<s:Spacer height="{paddingTopCalculadoBtnColectar}" />
								<s:HGroup width="100%" height="100%" gap="0" verticalAlign="top" >
									
									<s:Label id="totalizadorPartidas" paddingLeft="10" styleName="tab_texto_14_Helvetica" color="0x000000" text="#{colectar.totalCongelacion + colectar.totalRefrigeracion + colectar.totalAmbiente}" textAlign="right" fontSize="12" />
									<s:Label id="lbl_totalizadorPartidas" paddingLeft="6" styleName="tab_texto_14_Helvetica" color="0x000000" text="{colectar.totalCongelacion + colectar.totalRefrigeracion + colectar.totalAmbiente == 1 ? 'Partida' : 'Partidas'}" textAlign="right" fontSize="12"/>
									
									<s:Spacer width="100%" />
									
									<s:Group id="btnSiguiente" width="13%" height="{heightCalculadoBtnColectar}" buttonMode="true" click="avanzar_vista(event)">
										<s:Rect width="100%" height="100%">
											<s:fill>
												<s:SolidColor color="#008894" id="colorBtnSiguiente"/>
											</s:fill>
										</s:Rect>
										<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="0">
											<s:Label id="lblBtnSiguiente" text="COLECTAR" width="100%" fontSize="{fontSizeCalculadoBtnColectar}" textAlign="center" fontWeight="bold" color="#ffffff" verticalAlign="middle" paddingTop="1.5" fontFamily="Novecentowide-Bold" fontStyle="normal"/>
										</s:HGroup>  
									</s:Group>
									
									<s:Group id="btnFinalizar" width="13%" height="{heightCalculadoBtnColectar}" buttonMode="true" click="avanzar_vista(event)" visible="false" includeInLayout="false">
										<s:Rect width="100%" height="100%">
											<s:fill>
												<s:SolidColor color="#008894" id="colorBtnFinalizar"/>
											</s:fill>
										</s:Rect>
										<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="0">
											<s:Label id="lblBtnFinalizar" text="FINALIZAR" width="100%" fontSize="{fontSizeCalculadoBtnColectar}" textAlign="center" fontWeight="bold" color="#ffffff" verticalAlign="middle" paddingTop="1.5" fontFamily="Novecentowide-Bold" fontStyle="normal"/>
										</s:HGroup>  
									</s:Group>
									
								</s:HGroup>
							</s:VGroup> 
							
							<!--<s:VGroup width="100%"  >
							<otros:division colorLinea="grisObscuro" width="100%" grueso="2" />
							</s:VGroup> 
							
							<s:HGroup width="100%" height="4.5%" gap="0" verticalAlign="middle" >
							
							<s:Label id="totalizadorPartidas" paddingLeft="10" styleName="tab_texto_14_Helvetica" color="0x000000" text="#{colectar.totalCongelacion + colectar.totalRefrigeracion + colectar.totalAmbiente}" textAlign="right" fontSize="{tamanioLetraSubtitulo}" />
							<s:Label id="lbl_totalizadorPartidas" paddingLeft="6" styleName="tab_texto_14_Helvetica" color="0x000000" text="{colectar.totalCongelacion + colectar.totalRefrigeracion + colectar.totalAmbiente == 1 ? 'Partida' : 'Partidas'}" textAlign="right" fontSize="{tamanioLetraSubtitulo}"/>
							
							<s:Spacer width="100%" />
							
							<boton:BotonDefault width="190" height="30" conTexto="true" color="#0C8893" label="COLECTAR" id="btnSiguiente" click="avanzar_vista(event)"
							verticalCenter="0" styleNameLabel="titulo_blanco_Novecento" />	
							
							
							<boton:BotonDefault width="190" height="30" conTexto="true" color="#50a635" label="FINALIZAR" id="btnFinalizar" visible="false" includeInLayout="false"
							horizontalCenter="0" verticalCenter="0" styleNameLabel="titulo_blanco_Novecento"  />
							
							</s:HGroup>-->  
							
						</s:VGroup>  
						<!--</s:Scroller>-->
					</s:VGroup>  
					
					
				</s:VGroup>  
			</s:Scroller>
			
		</s:HGroup>  
		
		<s:HGroup width="100%" height="88%" id="textoG" visible="false" includeInLayout="false">
			<label:TituloNovecento_18 id="lblSeleccionNoPartidas" text="NO HAY PENDIENTES CON ESTA PRIORIDAD"  width="100%" height="100%" textAlign="center" verticalAlign="middle" horizontalCenter="0" color="#c2c3c9" fontSize="30" />
		</s:HGroup> 
		
		<s:VGroup width="100%" height="3" paddingLeft="{paddingLeftBarraTitulo}">
			<otros:divisionGruesa width="100%" height="100%" /> 
		</s:VGroup> 
		
		<s:HGroup width="100%" height="43" gap="0">
			<s:Spacer width="37.5%" height="100%"/>
			<s:HGroup id="grpEtiquetas" width="25%" height="100%" horizontalAlign="center" gap="0" verticalAlign="middle">
				
			</s:HGroup>  
			<s:Spacer width="37.5%" height="100%"/>
		</s:HGroup>
		
		
	</s:VGroup>  
</s:Group>
