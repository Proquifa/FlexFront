<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:label="skins.skin.label.*" 
		 xmlns:contenedores="skins.skin.contenedores.*" 
		 xmlns:textinput="skins.skin.textinput.*"
		 xmlns:otros="skins.otros.*"
		 xmlns:pqNet="skins.botones.pqNet.*"
		 width="100%" height="100%"  >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.tecnicos.EventoCatProLicencias;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.Licencia;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable]
			private var _proveedor:Proveedor;
			private var seEstaEditando:Boolean = false;
			private var activaCambios:Boolean;
			
			[Bindable]
			private var licencias:Licencia;
			private var licenciaTemp:Licencia;
			
			public function set recibeProveedorSeleccionado($pro:Proveedor):void
			{
				if( $pro == null || isNaN( $pro.idProveedor ) )
				{
					return;
				}
				
				_proveedor = $pro;
				obtenerLicenciasProveedor();
				
				if ( DatosGlobales.getInstance()._usuario.nombreFuncion == "Comprador" ||
					DatosGlobales.getInstance()._usuario.nombreFuncion == "Gerente de Compras"){
					
					grpBotones.enabled = false;
				}
				
			}
			
			private function obtenerLicenciasProveedor():void{
				var event:EventoCatProLicencias = new EventoCatProLicencias(EventoCatProLicencias.CARGAR_LICENCIAS);
				event.idProveedor = _proveedor.idProveedor;
				dispatchEvent(event);
			}
			
			protected function editarInfo($vieneDe:String = '' ):void{
				if (seEstaEditando ) {
					if ($vieneDe == 'cancelar' ){
						setTimeout( acomadaTiempo, 400 );
					}else{
						grpGuardarCancelar.visible = false;
						this.grpBotonEditar.visible = true;
						habilitaTextos(false);
					}
				}else{
					setTimeout(muestraBotonCancelar, 250 );
				}
			}
			
			private function muestraBotonCancelar():void{
				grpGuardarCancelar.visible = true;
				this.grpBotonEditar.visible = false;
				habilitaTextos(true);
			}
			
			private function acomadaTiempo():void{
				grpGuardarCancelar.visible = false;
				this.grpBotonEditar.visible = true;
				habilitaTextos(false);
			}
			
			private function habilitaTextos($seHabilita:Boolean):void{
				txtAtcc.habilitaClickBotonFuncion($seHabilita);
				txtAtcc.editable = $seHabilita;
				
				txtAtcc.texto.editable = $seHabilita;
				txtNctc.habilitaClickBotonFuncion($seHabilita);
				txtNctc.editable = $seHabilita;
				txtNctc.texto.editable = $seHabilita;
				txtNcyc.habilitaClickBotonFuncion($seHabilita);
				txtNcyc.editable = $seHabilita;
				txtNcyc.texto.editable = $seHabilita;
				txtNcimb.habilitaClickBotonFuncion($seHabilita);
				txtNcimb.editable = $seHabilita;
				txtNcimb.texto.editable = $seHabilita;
				txtCip.habilitaClickBotonFuncion($seHabilita);
				txtCip.editable = $seHabilita;
				txtCip.texto.editable = $seHabilita;
				txtImi.habilitaClickBotonFuncion($seHabilita);
				txtImi.editable = $seHabilita;
				txtImi.texto.editable = $seHabilita;
				txtNbrc.habilitaClickBotonFuncion($seHabilita);
				txtNbrc.editable = $seHabilita;
				txtNbrc.texto.editable = $seHabilita;
				txtNcpf.habilitaClickBotonFuncion($seHabilita);
				txtNcpf.editable = $seHabilita;
				txtNcpf.texto.editable = $seHabilita;
			}
			
			private function seteaTextos():void{
				if (licencias.ATCC == -1 ){
					txtAtcc.habilitaBoton = false ;
					txtAtcc.texto.text = '0';
				}else{
					txtAtcc.habilitaBoton = true ;
					txtAtcc.texto.text = licencias.ATCC.toString();
				}
				
				if (licencias.NCTC == -1 ){
					txtNctc.habilitaBoton = false ;
					txtNctc.texto.text = '0';
				}else{
					txtNctc.habilitaBoton = true ;
					txtNctc.texto.text = licencias.NCTC.toString();
				}
				
				if (licencias.NCYC == -1 ){
					txtNcyc.habilitaBoton = false ;
					txtNcyc.texto.text = '0';
				}else{
					txtNcyc.habilitaBoton = true ;
					txtNcyc.texto.text = licencias.NCYC.toString();
				}
				
				if (licencias.NCIMB == -1 ){
					txtNcimb.habilitaBoton = false ;
					txtNcimb.texto.text = '0';
				}else{
					txtNcimb.habilitaBoton = true ;
					txtNcimb.texto.text = licencias.NCIMB.toString();
				}
				
				if (licencias.CIP == -1 ){
					txtCip.habilitaBoton = false ;
					txtCip.texto.text = '0';
				}else{
					txtCip.habilitaBoton = true ;
					txtCip.texto.text = licencias.CIP.toString();
				}
				
				if (licencias.IMI == -1 ){
					txtImi.habilitaBoton = false ;
					txtImi.texto.text = '0';
				}else{
					txtImi.habilitaBoton = true ;
					txtImi.texto.text = licencias.IMI.toString();
				}
				
				if (licencias.NBRC == -1 ){
					txtNbrc.habilitaBoton = false ;
					txtNbrc.texto.text = '0';
				}else{
					txtNbrc.habilitaBoton = true ;
					txtNbrc.texto.text = licencias.NBRC.toString();
				}
				
				if (licencias.NCPF == -1 ){
					txtNcpf.habilitaBoton = false ;
					txtNcpf.texto.text = '0';
				}else{
					txtNcpf.habilitaBoton = true ;
					txtNcpf.texto.text = licencias.NCPF.toString();
				}
			}
			
			private function guardaCambios( vieneDe:String = '' ):void{
				
				activaCambios = false;
				var seGuarda:Boolean = true;
				var evento:EventoCatProLicencias = new EventoCatProLicencias(EventoCatProLicencias.MODIFICAR_LICENCIAS);
				if (seGuarda){
					if (txtAtcc.habilitaBoton ){
						txtAtcc.texto.text == '' ? licencias.ATCC = 0 : licencias.ATCC = parseFloat(txtAtcc.texto.text);
					}else{
						licencias.ATCC = -1;
					}
					if (txtNctc.habilitaBoton ){
						txtNctc.texto.text == '' ? licencias.NCTC = 0 : licencias.NCTC = parseFloat(txtNctc.texto.text);
					}else{
						licencias.NCTC = -1;
					}
					if (txtNcyc.habilitaBoton ){
						txtNcyc.texto.text == '' ? licencias.NCYC = 0 : licencias.NCYC = parseFloat(txtNcyc.texto.text);
					}else{
						licencias.NCYC = -1;
					}
					if (txtNcimb.habilitaBoton ){
						txtNcimb.texto.text == '' ? licencias.NCIMB = 0 : licencias.NCIMB = parseFloat(txtNcimb.texto.text);
					}else{
						licencias.NCIMB = -1;
					}
					
					if (txtImi.habilitaBoton ){
						txtImi.texto.text == '' ? licencias.IMI = 0 : licencias.IMI = parseFloat(txtImi.texto.text);
					}else{
						licencias.IMI = -1;
					}
					if (txtCip.habilitaBoton ){
						txtCip.texto.text == '' ? licencias.CIP = 0 : licencias.CIP = parseFloat(txtCip.texto.text);
					}else{
						licencias.CIP = -1;
					}
					if (txtNbrc.habilitaBoton ){
						txtNbrc.texto.text == '' ? licencias.NBRC = 0 : licencias.NBRC = parseFloat(txtNbrc.texto.text);
					}else{
						licencias.NBRC = -1;
					}
					if (txtNcpf.habilitaBoton ){
						txtNcpf.texto.text == '' ? licencias.NCPF = 0 : licencias.NCPF = parseFloat(txtNcpf.texto.text);
					}else{
						licencias.NCPF = -1;
					}
					
					evento.licencia = licencias;
					evento.ventana = "CatProveedor_Licencias ( idProveedor:"+_proveedor.idProveedor+" )";
					dispatchEvent(evento);
				}
				
			}
			
			public function cancelaGuardado():void{
				inicializaLicencia(licenciaTemp);
			}
			
			public function set recibeLicencias($licencia:Licencia):void{
				if ($licencia == null )
				{
					$licencia = new Licencia;
					$licencia.idProveedor = _proveedor.idProveedor;
				}
				
				inicializaLicencia($licencia);
			}
			
			public function inicializaLicencia($licencia:Licencia):void{
				licencias = ObjectUtil.copy($licencia) as Licencia;
				licenciaTemp = ObjectUtil.copy($licencia) as Licencia;
				seteaTextos();
				habilitaTextos(false);
			}
			
			public function set recibeResultadoUpdate($resultado:Boolean):void
			{
				if ($resultado == null)
					return;
				
				if ($resultado)
					inicializaLicencia(licencias);
			}
			
			public function inicia():void{
				seEstaEditando=true;
				acomadaTiempo();
				editarInfo('cancelar');
				cancelaGuardado();
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" height="100%" gap="0" id="grpContenedorPrincipal">
		<contenedores:VGroupConPaddingStandardPqNet width="100%" height="100%" id="grpInfo">
			<s:BorderContainer borderVisible="false" width="100%" height="100%" backgroundColor="white" backgroundAlpha="0">
				
				<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
					<s:HGroup width="100%" verticalAlign="bottom" >
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_licenciaGris}" />
						<label:TituloBankGothic_30 text="Licencias"/>
						<s:Spacer width="100%" />
						<s:HGroup height="100%" verticalAlign="bottom" horizontalAlign="right" visible="{ (isNaN(_proveedor.idProveedor) ? false : true )}" >
							<label:Texto_13_VerdeAzul text="Última actualización: "/>
							<label:Fecha_13_VerdeAzul fecha="{_proveedor.fechaActualizacion}"/>
						</s:HGroup>
					</s:HGroup>
					<otros:divisionGruesa width="100%" />
					
					<s:Scroller id="sclGeneral" maxWidth="1050" width="100%" height="100%" minWidth="340">
						<s:VGroup width="100%" height="100%" id="grpGeneral" paddingLeft="3" paddingRight="3" gap="10" verticalAlign="middle">
							<s:VGroup width="100%" horizontalAlign="center" >
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="ATCC: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtAtcc" text="{licencias.ATCC}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="CIP: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtCip" text="{licencias.CIP}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="IMI: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtImi" text="{licencias.IMI}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="NCIMB: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtNcimb" text="{licencias.NCIMB}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="NCTC: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtNctc" text="{licencias.NCTC}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="NBRC: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtNbrc" text="{licencias.NBRC}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="NCPF: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtNcpf" text="{licencias.NCPF}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
								<s:VGroup height="100%"  width="20%" gap="10">
									<label:Titulo text="NCYC: " />
									<s:HGroup height="100%"  verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtNcyc" text="{licencias.NCYC}"
																	 restrict="0-9." habilitaBoton="true" botonvisible="false" maxChars="5"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								
							</s:VGroup>
						</s:VGroup>
					</s:Scroller>
					
					<s:VGroup width="100%" gap="10">
						<otros:divisionGruesa width="100%" />
						<s:Group width="100%" id="grpBotones" >
							
							<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" id="grpBotonEditar" >
								<pqNet:botonPqNetLargo label="Editar" id="btnEditar" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" click="seEstaEditando = false; editarInfo();" />
							</s:HGroup>
							
							<s:HGroup width="100%" id="grpGuardarCancelar" visible="false">
								<pqNet:botonPqNetLargo label="Guardar" id="btnGuardar" click="seEstaEditando = true; editarInfo('guardar'); guardaCambios()" />
								<s:Spacer width="100%" />
								<pqNet:botonPqNetLargo label="Cancelar" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO}" click="seEstaEditando = true; editarInfo('cancelar'); cancelaGuardado()" id="btnCancelar" />
							</s:HGroup>
							
						</s:Group>
					</s:VGroup> 
					
				</s:VGroup>
			</s:BorderContainer>
		</contenedores:VGroupConPaddingStandardPqNet>
	</s:HGroup>
	
	
</s:Group>
