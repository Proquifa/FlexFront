<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:mate="http://mate.asfusion.com/"
			   xmlns:servicio = "mx.com.proquifa.proquifanet.rsl.vista.eventos.servicios.*" >
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTabProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.compras.cobros.ModeloConsultaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ModeloTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ModeloTabProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.TableroClientesCheckPeriodicoLineal;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisVentas.todos.AnalisisVenta_graficaTodos_Cartera;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.PropiedadesProveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.TableroProveedoresCheckPeriodicoLineal;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.avisoCambios.MaxAvisoDeCambio;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.avisoCambios.MiniAvisoDeCambio;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.avisoCambios.ProveedorAvisoDeCambiosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.ComprasMax_GraficaTendencias;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.MaxCompras;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.MaxCompras_Graficas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.MiniCompras;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.ProveedorComprasComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.AnalisisCompra_VistaTrabajo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.AnalisisCompras_Default;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.estrategicos.AC_Graficas_Estrategico_Prov;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.estrategicos.AnalisisCompra_areaEstrategicos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.normales.AC_Graficas_Normales_Prov;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.normales.AnalisisCompra_areaNormales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.todos.AnalisisCompra_areaTodos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.todos.AnalisisCompra_grafica_Todos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.condicionesDePago.CondicionesDePagoComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.condicionesDePago.MaxCondicionesDePago;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.condicionesDePago.MiniCondicionesDePago;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.lineaDeCredito.LineaDeCreditoComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.lineaDeCredito.MaxLineaDeCredito;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.lineaDeCredito.MiniLineaDeCredito;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.lineaDeProductos.LineaDeProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.lineaDeProductos.LineaDeProductosMax;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocRecibida.MaxOCRecibidas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocRecibida.MiniOCRecibidas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocRecibida.ProveedorOCRecibidasComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocTransito.MaxOCTransito;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocTransito.MiniOCTransito;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocTransito.ProveedorOCTransitoComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.pagos.MaxPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.pagos.MiniPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.pagos.ProveedorPagosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.rechazos.MaxRechazos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.rechazos.MiniRechazos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.rechazos.ProveedorRechazosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Cliente.MaxTop10Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Cliente.MiniTop10Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Cliente.ProveedorTop10ClientesComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Productos.MaxTop10Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Productos.MiniTop10Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Productos.ProveedorTop10ProductosComparacion;
			
			/*  			private function argumentosEnviados(e:EventoTabProveedores):void
			{
			trace(e);
			}  */
		]]>
	</mx:Script>
	<!--<mate:Debugger level="{Debugger.ALL}"/>-->
	
	<!-- ================================================ESTO APARTADO ES PARA CONTROLAR LA VENTANA DE BLOQUEO/ESPERA ================================================-->
	<mate:EventHandlers type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
		<mate:MethodInvoker generator="{ModeloTabProveedores}"
							method="setNumeroServiciosConsultados"
							arguments="{event.metodoConsultado}"/>  
	</mate:EventHandlers>
	
	<!--Evento para la Espera y bloqueo de Pantalla-->
	<mate:EventHandlers type="{EventoEsperar.CONFIGURAR_ESPERA}">
		<mate:MethodInvoker generator="{ModeloTabProveedores}"
							method="setControlDeBloqueoPantalla"
							arguments="{[currentEvent.mensaje, currentEvent.tipoEventos,currentEvent.idButtons,currentEvent.error]}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{PropiedadesProveedor}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="actualizarEstadoDeEsperaYBloqueo"
							   targetKey="actualizarEsperaYBloqueo"/> 
	</mate:Injectors>	
	<!-- ================================================^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ================================================-->
	
	<!--Datos proveedore-->
	<mate:EventHandlers type="{EventoTabProveedores.BUSCAR_INFO_GENERAL_PROVEEDOR}">
		<mate:RemoteObjectInvoker destination="{Destinos.PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerProveedorPorId"
								  arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDatosProveedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerProveedorPorId']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{PropiedadesProveedor}">
		<mate:PropertyInjector  source="{ModeloTabProveedores}"
								sourceKey="datosProveedor"
								targetKey="propiedadesProveedor"/>
	</mate:Injectors>
	
	<!-- CHECK PERIODICO LINEAL Y FILTROS PARA LOS LABEL PERIODO -->
	<mate:EventHandlers type="{EventoTabProveedores.PASAR_EVENTO_GENERAL_Y_PARA_LABELS}">
		<mate:MethodInvoker generator="{ModeloTabProveedores}"
							method="setEventoParaSacarLabelsPeriodos"
							arguments="{event.copiaEvento}" />
	</mate:EventHandlers>
	<mate:Injectors targets="{[ TableroProveedoresCheckPeriodicoLineal,MaxTop10Productos,ProveedorTop10ProductosComparacion,ProveedorTop10ClientesComparacion,ProveedorRechazosComparacion,AnalisisCompras_Default,
					ProveedorAvisoDeCambiosComparacion,ProveedorOCTransitoComparacion,ProveedorOCRecibidasComparacion,MiniCompras,MaxCompras,ProveedorComprasComparacion,ProveedorPagosComparacion,
					LineaDeCreditoComparacion,ComprasMax_GraficaTendencias,MaxOCTransito,MaxOCRecibidas,LineaDeProductosMax]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="eventoFiltros"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Productos-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealTopProductos"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealTopProductos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaProductos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealTopProductos']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniTop10Productos,MaxTop10Productos,ProveedorTop10ProductosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaProductos"
							   targetKey="resumenComparativaProductos"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores Transito-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcTransito"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcTransito"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaTransito"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcTransito']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCTransito,MaxOCTransito,ProveedorOCTransitoComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaTransito"
							   targetKey="resumenComparativaTransito"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores rechazo-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcRechazadas"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRechazadas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaRechazo"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcRechazadas']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniRechazos,MaxRechazos,ProveedorRechazosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaRechazo"
							   targetKey="resumenComparativaRechazo"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores Compras-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcCompras"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcCompras"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaCompra"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcCompras']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCompras,MaxCompras,ProveedorComprasComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaCompra"
							   targetKey="resumenComparativaCompra"/>
	</mate:Injectors>	
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerObjetivoCrecimientoProveedor"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerObjetivoCrecimientoProveedor"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setRecibeMontosObjetivoParaCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerObjetivoCrecimientoProveedor']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCompras,MaxCompras]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaMontosObjetivosParaCompras"
							   targetKey="recibeMontosObjetivoCompras"/>
	</mate:Injectors>
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& GRAFICAS DE COMPRAS &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&-->
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerDistribucionxTipoProveedor"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerDistribucionxTipoProveedor"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDataChartTipoProveedores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerDistribucionxTipoProveedor']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras_Graficas}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaChartTipoProveedores"
							   targetKey="recibeInfoTipoProveedores"/>
	</mate:Injectors>	
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerDistribucionxComprador"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerDistribucionxComprador"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDataChartCompradores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerDistribucionxComprador']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras_Graficas}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaChartCompradores"
							   targetKey="recibeInfoCompradores"/>
	</mate:Injectors>	
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerDistribucionxRegion"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerDistribucionxRegion"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDataChartRegion"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerDistribucionxRegion']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras_Graficas}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaChartRegion"
							   targetKey="recibeInfoRegiones"/>
	</mate:Injectors>	
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerDistribucionxProveedor"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerDistribucionxProveedor"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDataChartProveedores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerDistribucionxProveedor']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras_Graficas}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaChartProveedores"
							   targetKey="recibeInfoProveedores"/>
	</mate:Injectors>	
	
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerDistribucionxMixLineas"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerDistribucionxMixLineas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDataChartMixLineas"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerDistribucionxMixLineas']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras_Graficas}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaChartMixLineal"
							   targetKey="recibeInfoMixLineas"/>
	</mate:Injectors>	
	
	
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	<mate:EventHandlers type="{EventoTabProveedores.OBTENER_MONTOS_OBJETIVOS_COMPRAS}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerDistribucionxPagador"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerDistribucionxPagador"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDataChartPagadores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerDistribucionxPagador']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras_Graficas}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="regresaChartPagadores"
							   targetKey="recibeInfoPagadores"/>
	</mate:Injectors>	
	
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& TERMINAN GRAFICAS DE COMPRAS &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	
	<mate:EventHandlers type="{EventoTabProveedores.SETTEAR_FILTRO_DEL_MENU_EN_OTRAS_VISTAS}">
		<mate:MethodInvoker arguments="{event.currentFiltro}"
							generator="{ModeloTabProveedores}"
							method="resultSetFiltroBusqueda"/>
	</mate:EventHandlers>
	<mate:Injectors target="{MaxCompras}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="resultGetFiltroBusqueda"
							   targetKey="recibeFiltroDeMenu"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Condiciones de pago-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerResumenGridCondicionesPago"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenGridCondicionesPago"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaCondicionesDePago"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerResumenGridCondicionesPago']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCondicionesDePago,MaxCondicionesDePago,CondicionesDePagoComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaCondicionDePago"
							   targetKey="resumenComparativaCondicionesDePago"
							   />
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores linea de productos-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerComprasRealizadasPorLineaProducto"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerComprasRealizadasPorLineaProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setLineaDeProductos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerResumenLineaDeProductos']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[LineaDeProductos,LineaDeProductosMax]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="LineaDeProductos"
							   targetKey="recibeLinealDeProductos"
							   />
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Condiciones de pago-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_LINEA_PRODUCTOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerComprasRealizadasPorLineaProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setLineaDeProductos"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultLineaDeProductos"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[LineaDeProductosMax]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="LineaDeProductos"
							   targetKey="recibeLinealDeProductos"/>
	</mate:Injectors>
	
	<mate:Injectors target="{LineaDeProductosMax}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsLineaDeProductos"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	<!--Compartiva Info Proveedores Clientes-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealTopClientes"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealTopClientes"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaClientes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealTopClientes']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniTop10Cliente,MaxTop10Cliente,ProveedorTop10ClientesComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaClientes"
							   targetKey="resumenComparativaClientes"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores oc Recibida-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcRecibidas"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRecibidas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaOCRecibida"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcRecibidas']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCRecibidas,MaxOCRecibidas,ProveedorOCRecibidasComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaOCRecibida"
							   targetKey="resumenComparativaOCRecibida"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores aviso de cambios-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcAvCambios"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcAvCambios"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaAC"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcAvCambios']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniAvisoDeCambio,MaxAvisoDeCambio,ProveedorAvisoDeCambiosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaAC"
							   targetKey="resumenComparativaAC"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores Pagos-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcPagos"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcPagos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcPagos']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniPagos,MaxPagos,ProveedorPagosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaPagos"
							   targetKey="resumenComparativaPagos"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Linea de Credito-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_GENERAL_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerLineaCredito"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerLineaCredito"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaLineaDeCredito"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerLineaCredito']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniLineaDeCredito,MaxLineaDeCredito,LineaDeCreditoComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaLineaDeCredito"
							   targetKey="resumenComparativaLineaDeCredito"/>
	</mate:Injectors>
	
	<!--Obtener el MONTO ACUMULADO para la Linea de Credito-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCAR_MONTO_ACUMULADO}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerMontoAcumulado"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setMontoAcumulado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerMontoAcumulado']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<!--Obtener el DATOS FILTROS para la Linea de Credito-->	
	<mate:EventHandlers type="{EventoTabProveedores.ENVIAR_DATOS_FILTROS}">
		<mate:MethodInvoker generator="{ModeloTabProveedores}"
							method="setObtenerFiltros"
							arguments="{[event.idProveedor,event.anioInt,event.valorAdicional]}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxLineaDeCredito,MiniLineaDeCredito]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerFiltro"
							   targetKey="recibeFiltros"/> 
	</mate:Injectors>
	
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&========GRIDS========&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	
	<!--Topten Productos Tabla y Grid-->	
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_TOP_TEN_PRODUCTOS}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerResumenGridProductosPorProveedor"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenGridProductosPorProveedor"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setDescripcionTopTenProductosTabla"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors targets="{[MaxTop10Productos]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="descripcionTopTenProductosTabla"
							   targetKey="topTenProductosGrafica"
							   />
	</mate:Injectors>
	
	<!--TopTen Clientes grafica y Grid-->
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_TOP_TEN_CLIENTES}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerResumenGridClientesPorProveedor"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerResumenGridClientesPorProveedor"  
									arguments="{[event.parametros]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setClientesProveedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxTop10Cliente]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="clientesProveedor"
							   targetKey="obtenerClientesTopProv"/>
	</mate:Injectors>
	
	<!--  OCTransito  Grafica y Grid-->		
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_OCTRANSITO}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesDeCompraEnTransito"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerOrdenesDeCompraEnTransito"  
									arguments="{[event.parametros]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setOCenTransito"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxOCTransito]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="ocEnTransito"
							   targetKey="obtenerOCEnTransito"/>
	</mate:Injectors>
	
	<!-- OCRecibidas Grid y Grafica-->	
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_OCRECIBIDAS}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesDeCompraRecibidas"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerOrdenesDeCompraRecibidas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setOCRecibidas"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxOCRecibidas]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="ocRecibidas"
							   targetKey="obtenerPartidasEnTiempo"/>
	</mate:Injectors>
	
	<!--   Rechazo  tabla - grafica-->	
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_RECHAZO}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesRechazadas"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerOrdenesRechazadas"  
									arguments="{[event.parametros]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setOCRechazadas"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxRechazos]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="ocRechazadas"
							   targetKey="obtenerOCRechazados"/>
	</mate:Injectors>
	
	<!--  Compras  Grafica-->		
	<mate:EventHandlers type="{EventoTabProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesDeCompraConfirmadasYCanceladas"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerOrdenesDeCompraConfirmadasYCanceladas"  
									arguments="{[event.parametros]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setOCCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerOrdenesDeCompraConfirmadasYCanceladas']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxCompras]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="ocCompras"
							   targetKey="obtenerOCCompras"/>
	</mate:Injectors>
	
	<!--  Pagos  Grafica y Grid-->		
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_PAGOS}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerComportamientoPagosXProveedor"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerComportamientoPagosXProveedor"  
									arguments="{[event.parametros]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxPagos]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerPagos"
							   targetKey="obtenerPagosGrafica"/>
	</mate:Injectors>	
	
	<!--  Aviso de Cambios  Grafica y tabla-->		
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTA_GRID_AVISO_CAMBIOS}">
		<!--<mate:EventAnnouncer  generator="{EventoTabProveedores}" type="{EventoTabProveedores.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerAvisosDeCambiosPorProveedor"/>
		</mate:EventAnnouncer>-->
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerAvisosDeCambiosPorProveedor"  
									arguments="{[event.parametros]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setAvisoDeCambios"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxAvisoDeCambio]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerAvisoDeCambios"
							   targetKey="obtenerAvisoDCambios"/>
	</mate:Injectors>	
	
	<!--Evento para recibir etiqueta de periodo -->
	<mate:EventHandlers type="{EventoTabProveedores.ETIQUETA_PERIODO}">
		<mate:MethodInvoker generator="{ModeloTabProveedores}"
							method="setObtenerEtiquetaPeriodo"
							arguments="{event.periodo}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxOCTransito,MaxOCRecibidas,MaxPagos]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerEtiquetaPeriodo"
							   targetKey="recibeEtiquetaPeriodo"/> 
	</mate:Injectors>
	
	<!--=====================================SE HANDLERS PARA EL CASO QUE SE REQUIERA LLAMAR DE FORMA INDIVIDUAL==(PERIODICO - LINEAL)===============================================-->
	
	<!--Compartiva Info Proveedores Productos-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_TOP_10_PRODUCTOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealTopProductos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaProductos"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaProducto"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniTop10Productos,ProveedorTop10ProductosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaProductos"
							   targetKey="resumenComparativaProductos"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProveedorTop10ProductosComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorTop10ProductosComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Transito-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_OC_TRANSITO}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcTransito"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaTransito"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaTransito"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCTransito,MaxOCTransito,ProveedorOCTransitoComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaTransito"
							   targetKey="resumenComparativaTransito"/>
	</mate:Injectors>
	
	<mate:Injectors target="{ProveedorOCTransitoComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorOCTransitoComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores rechazo-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_OC_RECHAZADA}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRechazadas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaRechazo"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaRechazo"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniRechazos,MaxRechazos,ProveedorRechazosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaRechazo"
							   targetKey="resumenComparativaRechazo"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProveedorRechazosComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorRechazosComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Compras-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_OC_COMPRAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcCompras"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaCompra"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaCompra"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCompras,MaxCompras,ProveedorComprasComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaCompra"
							   targetKey="resumenComparativaCompra"/>
	</mate:Injectors>
	
	<mate:Injectors target="{ProveedorComprasComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorComprasComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Condiciones de pago-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_CONDICIONES_DE_PAGO}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenGridCondicionesPago"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaCondicionesDePago"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaCondicionDePago"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCondicionesDePago,MaxCondicionesDePago,CondicionesDePagoComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaCondicionDePago"
							   targetKey="resumenComparativaCondicionesDePago"/>
	</mate:Injectors>
	
	<mate:Injectors target="{CondicionesDePagoComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsCondicionesDePagoComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Clientes-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_TOP_10_CLIENTES}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealTopClientes"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaClientes"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaCliente"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniTop10Cliente,MaxTop10Cliente,ProveedorTop10ClientesComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaClientes"
							   targetKey="resumenComparativaClientes"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProveedorTop10ClientesComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorTop10ClientesComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores oc Recibida-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_OC_RECIBIDAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRecibidas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaOCRecibida"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativAOCRecibida"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCRecibidas,MaxOCRecibidas,ProveedorOCRecibidasComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaOCRecibida"
							   targetKey="resumenComparativaOCRecibida"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProveedorOCRecibidasComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorOCRecibidasComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores aviso de cambios-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_OC_AVISO_CAMBIOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcAvCambios"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaAC"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaAC"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniAvisoDeCambio,MaxAvisoDeCambio,ProveedorAvisoDeCambiosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaAC"
							   targetKey="resumenComparativaAC"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProveedorAvisoDeCambiosComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorAvisoDeCambiosComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Pagos-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_OC_PAGOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcPagos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaPagos"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaPagos"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniPagos,MaxPagos,ProveedorPagosComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaPagos"
							   targetKey="resumenComparativaPagos"/>
	</mate:Injectors>
	
	<mate:Injectors target="{ProveedorPagosComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularProveedorPagosComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	
	<!--Compartiva Info Proveedores Linea de Credito-->	
	<mate:EventHandlers type="{EventoTabProveedores.BUSCA_COMPARATIVA_LINEA_CREDITO}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerLineaCredito"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setComparativaLineaDeCredito"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultComparativaLineaDeCredito"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniLineaDeCredito,MaxLineaDeCredito,LineaDeCreditoComparacion]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="comparativaLineaDeCredito"
							   targetKey="resumenComparativaLineaDeCredito"/>
	</mate:Injectors>
	
	<mate:Injectors target="{LineaDeCreditoComparacion}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="obtenerLabelsParticularLineaDeCreditoComparacion"
							   targetKey="recibirFiltrosTableroProveedores"/>
	</mate:Injectors>
	
	
	
	
	<!--        ////////////  CONSULTA DE RESUMEN DE COMPRAS (TODOS)    ////////////       -->
	
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTAR_RESUMEN_COMPRAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenComprasProveedores"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setResibeListaDeResumenVentasTodos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultAnalisisCompras"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[AnalisisCompra_areaTodos,AnalisisCompra_areaEstrategicos,AnalisisCompra_areaNormales,AC_Graficas_Estrategico_Prov,AC_Graficas_Normales_Prov]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="mandarListaResumenComprasTodos"
							   targetKey="recibeResumenCompras"/>
	</mate:Injectors>
	
	<mate:Injectors target="{AnalisisCompra_grafica_Todos}">
		<mate:PropertyInjector source="{ModeloTabProveedores}"
							   sourceKey="mandarInfoCharTodosProveedores"
							   targetKey="recibeInfoCharTodosResumenVentas"/>
	</mate:Injectors>
	
	
	
	
	<!--        ////////////  CONSULTA DE COMPRAS AGRUPADAS POR COMPRADOR/PAGADOR (COMPRADOR)    ////////////       -->
	
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTAR_RESUMEN_AGRUPADAS_COMPRADOR}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenComprasAgrupadas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setAgrupadosComprador"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultAnalisisCompradorAgrupado"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[AnalisisCompras_Default]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="agrupadosComprador"
							   targetKey="recibeAgrupadosComprador"/>
	</mate:Injectors>
	
	
	
	
	
	<!--        ////////////  CONSULTA DE COMPRAS AGRUPADAS POR COMPRADOR/PAGADOR (PAGADOR)    ////////////       -->
	
	<mate:EventHandlers type="{EventoTabProveedores.CONSULTAR_RESUMEN_AGRUPADAS_PAGADOR}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenComprasAgrupadas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="setAgrupadosPagador"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}"
									method="faultAnalisisPagadorAgrupado"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[AnalisisCompras_Default]}">
		<mate:PropertyInjector source="{ModeloTabProveedores}" 
							   sourceKey="agrupadosPagador"
							   targetKey="recibeAgrupadosPagador"/>
	</mate:Injectors>
	
	
	<!--        ////////////  BUSQUEDA DE AÑO FISCAL PERSONALIZADO POR PROVEEDOR    ////////////       -->
	<mate:EventHandlers type="{EventoTabProveedores.BUSCAR_ANIOFISCAL}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerMesInicioAnioFiscarPersonalisadoProveedor"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTabProveedores}" 
									method="setAnioFiscal"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[PropiedadesProveedor]}">
		<mate:PropertyInjector  source="{ModeloTabProveedores}" 
								sourceKey="devolverAniofiscal"
								targetKey="recibirAnioFiscal"/>
	</mate:Injectors>
	
	
	
</mate:EventMap>
