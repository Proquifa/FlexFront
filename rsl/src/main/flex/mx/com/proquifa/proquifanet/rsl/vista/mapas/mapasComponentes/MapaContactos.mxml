<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:mate="http://mate.asfusion.com/"
				xmlns:events="com.asfusion.mate.events.*"
				xmlns:debug="com.asfusion.mate.utils.debug.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaCatalogoService;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaContactoService;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.ModeloParaCatalogoServices;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.ModeloParaContactoService;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.contacto.BAContactos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.contacto.BusquedaContactos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.contactos.ObtenerContacto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.contactos.BuscaContacto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.contactos.DescripcionContacto;
	
		]]>
	</mx:Script>
	
	<mate:Debugger level="{Debugger.ALL}"/>	
	
	<!--Evento para obtener los Clientes en el combo para la BusquedaAvanzada obtenerNotificados -->
	<mate:EventHandlers type="{EventoParaCatalogoService.OBTENER_CLIENTES}">
		<!--<mate:RemoteObjectInvoker instance="{servicios.servicioObtenerDatos}"
									method="obtenerClientes"
									showBusyCursor="true">	-->
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
								  	endpoint="{Destinos.END_POINT}"
								  	method="obtenerClientes" 
								  	arguments="{event.valorAdicional}" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="setClientes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{BAContactos}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
								sourceKey="Clientes"
								targetKey="clientesParaCombo"/>
	</mate:Injectors>
	
	<!--Evento para obtener los Clientes en el combo para el contacto no encontrado-->
	<mate:EventHandlers type="{EventoParaCatalogoService.OBTENER_CLIENTES_NO_ENCONTRADOS}">
		<!--<mate:RemoteObjectInvoker instance="{servicios.servicioObtenerDatos}"
		method="obtenerClientes"
		showBusyCursor="true">	-->
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerClientes" 
									arguments="{event.valorAdicional}" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="setClientesNoEncontrados"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	
	<mate:Injectors target="{BusquedaContactos}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
								sourceKey="ClientesNoEncontrados"
								targetKey="clientesNoEncontradosParaCombo"/>
	</mate:Injectors>
	
	<!--Evento para obtener los Proveedores en el combo para la BusquedaAvanzada obtenerCompras -->
	<mate:EventHandlers type="{EventoParaCatalogoService.OBTENER_PROVEEDORES}">
		<!--<mate:RemoteObjectInvoker instance="{servicios.servicioObtenerDatos}"
									method="obtenerClientes"
									showBusyCursor="true">	-->
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
								  	endpoint="{Destinos.END_POINT}"
								  	method="obtenerProveedores"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaCatalogoServices}"
									method="setProveedores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{BAContactos}">
		<mate:PropertyInjector source="{ModeloParaCatalogoServices}"
								sourceKey="Proveedores"
								targetKey="clientesoProveedoresParaCombo"/>
	</mate:Injectors>
		
	<!--Evento para obtener los Contactos por la Busqueda Rapida -->
	<mate:EventHandlers type="{EventoParaContactoService.OBTENER_CONTACTOS}">
		<!--<mate:RemoteObjectInvoker instance="{servicios.servicioObtenerContactos}"
									method="obtenerContactos"
									arguments="{[event.descripcion]}"
									showBusyCursor="true">-->	
		<mate:RemoteObjectInvoker   destination="{Destinos.CONTACTO_SERVICE}" 
								  	endpoint="{Destinos.END_POINT}"
								  	method="busquedaRapida" 
								  	arguments="{[event.descripcion]}" 
									showBusyCursor="true">
			<mate:resultHandlers>
				
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="setContactos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}" 
									method="faultBusquedaContactos" 
									arguments="{[fault]}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{BusquedaContactos}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
								sourceKey="Contactos"
								targetKey="recibeContactos"/>
	</mate:Injectors>
	
	<!--Evento para obtener los Contactos por la Busqueda Avanzada -->
	<mate:EventHandlers type="{EventoParaContactoService.OBTENER_CONTACTOS_AVANZADA}">
		<!--<mate:RemoteObjectInvoker instance="{servicios.servicioObtenerContactos}"
									method="obtnerContactosAvanzada"
									showBusyCursor="true">	-->
		<mate:RemoteObjectInvoker   destination="{Destinos.CONTACTO_SERVICE}" 
								  	endpoint="{Destinos.END_POINT}"
								  	method="busquedaAvanzada"
								  	arguments="{[event.origen,event.empresa,event.nombre,event.mail]}"								  	
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="setContactos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}" 
									method="faultBusquedaContactos" 
									arguments="{[fault]}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{BusquedaContactos}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
								sourceKey="Contactos"
								targetKey="recibeContactos"/>
	</mate:Injectors>
	
<!--Evento para obtener los Contactos se movio a mapaPopUP -->
	<!--<mate:EventHandlers type="{EventoParaContactoService.OBTENER_CONTACTO_PROVEEDOR}">
		<mate:RemoteObjectInvoker   destination="{Destinos.CONTACTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="consultarContactosPorString" 
									arguments="{[event.busca,event.tipoBusqueda,event.obtenContacto]}" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="setBusquedaContactos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors targets="{ObtenerContacto}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
							   sourceKey="busquedaContactos"
							   targetKey="recibeBusquedaContactos"/>
	</mate:Injectors>-->
	
<!-- Envia datos de descripciÃ³n de contacto seleccionado en lista se movio a mapaPopUP-->	
	<!--<mate:EventHandlers type="{EventoParaContactoService.OBTEN_DESCRIPCION_CONTACTO}">
		<mate:MethodInvoker generator="{ModeloParaContactoService}"
							method="setClickDescripcionContacto"
							arguments="{event.descripcionContacto}"/>
	</mate:EventHandlers>
	<mate:Injectors target="{DescripcionContacto}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
							   sourceKey="clickDescripcionContacto"
							   targetKey="obtenDescripcionContacto"/>	
	</mate:Injectors>	
	-->
<!-- Envia dato que dermina el tipo de busqueda (0-cliente o 2-proveedor) se movio a mapaPopUP-->	
	<!--<mate:EventHandlers type="{EventoParaContactoService.OBTENER_TIPO_CONSULTA}">
		<mate:MethodInvoker generator="{ModeloParaContactoService}"
							method="setObtenerTipoConsulta"
							arguments="{event.consulta}"/>
	</mate:EventHandlers>
	<mate:Injectors target="{BuscaContacto}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
							   sourceKey="obtenerTipoConsulta"
							   targetKey="tipoConsulta"/>	
	</mate:Injectors>	-->	
	
</mate:EventMap>
