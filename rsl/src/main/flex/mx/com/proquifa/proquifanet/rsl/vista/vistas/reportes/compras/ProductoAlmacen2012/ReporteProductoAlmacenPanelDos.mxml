<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark" gap="0" paddingRight="10" paddingLeft="10" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:otros="skins.otros.*"
		  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*" xmlns:panelDosRteConcepto="skins.skin.comun.reportes.panelDosRteConcepto.*" xmlns:botonesToggle="skins.botonesToggle.*">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.compras.prodAlmacen2012.EventoRepProAlmacen2012;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.reportes.compras.repProdAlmacen2012.ReporteProductoAItemClientesProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			public var tituloPanel:String;
			
			[Bindable]
			public var listaPartidas:ArrayCollection;
			
			public var _listaTemp:ArrayCollection = new ArrayCollection;
			
			[Bindable]
			public var stock:Boolean;
			
			[Bindable]
			public var isAvanzada:Boolean;
			
			[Bindable]	private var _arrButton:ArrayCollection = new ArrayCollection([{label:"Disponible"},
				{label:"Caduco"}]);
			
			public var disponible:Boolean = true;
			
			private var listDisponible:ArrayCollection;
			private var listCaduco:ArrayCollection;
			
			public function set recibeListaClienteProveedor($listaClieOPro:ArrayCollection):void{
				if ($listaClieOPro == null){
					lstPartidas.dataProvider = new ArrayCollection();
					return;
				}
				listaPartidas = $listaClieOPro;
				_listaTemp = ObjectUtil.copy($listaClieOPro) as ArrayCollection;
				if (stock){
					generarDisponibleCaduco();
					botoneraCaduco();
				}else{
					lstPartidas.dataProvider = $listaClieOPro;
				}
				
				lstPartidas.selectedIndex = 0;
				
				lstPartidas.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
			}
			
			public function set recibeTipoBusqueda($isBusquedaAvanzada:Boolean):void
			{
			}
			
			private var $botonera:Query;
			public function generarDisponibleCaduco():void{
				if (_listaTemp.length > 0){
					_listaTemp.removeItemAt(_listaTemp.length-1);
					$botonera = new Query(_listaTemp,["disponible"]);
					listDisponible = armarLista($botonera.getPunteros([disponible]));
					listCaduco = armarLista($botonera.getPunteros([!disponible]));
				}
			}
			
			public function armarLista( $punteros:Array ):ArrayCollection{
				var arrReturn:ArrayCollection = new ArrayCollection();
				for( var h:int = 0; h < $punteros.length; h++ ){
					var item:Object = new Object; 
					item = _listaTemp.getItemAt( $punteros[h] );
					item.numFila = h + 1; item.numFilaString = "#" + item.numFila;
					arrReturn.addItem( item );
				}
				var ultimo:ReporteProductoAItemClientesProveedores = new ReporteProductoAItemClientesProveedores;
				ultimo.totalMonto = $botonera.getSumarCampo("monto", $punteros);
				ultimo.totalPiezas = $botonera.getSumarCampo("numPiezas", $punteros);
				ultimo.totalPedidos = $punteros.length;
				ultimo.isUltimo = true;	
				arrReturn.addItem(ultimo);
				return arrReturn;
			}
			
			public function botoneraCaduco():void{
				lstPartidas.dataProvider = new ArrayCollection;
				if (botoneraBarra.selectedItem.label == "Disponible"){
					lstPartidas.dataProvider =  listDisponible;
				}else if (botoneraBarra.selectedItem.label == "Caduco"){
					lstPartidas.dataProvider =  listCaduco;
				}
				lstPartidas.selectedIndex = 0;
				
				lstPartidas.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
			}
			
			protected function lstPartidas_changingHandler(event:IndexChangeEvent):void{
				if (lstPartidas.selectedItem != null ){
					if (stock ){
					 	 if (lstPartidas.selectedItem.cpedido == null ){
							var evt1:EventoRepProAlmacen2012 = new EventoRepProAlmacen2012(EventoRepProAlmacen2012.LIMPIAR_PANEL_TRES);
							dispatchEvent(evt1);
						}else{  
							var evnt:EventoRepProAlmacen2012 = new EventoRepProAlmacen2012(EventoRepProAlmacen2012.OBTENER_PARTIDAS_SIG_VISTA);
							evnt.cpedido = lstPartidas.selectedItem.cpedido;
							evnt.tipo = null;//lstPartidas.selectedItem.ttproducto;
							evnt.descripcion = lstPartidas.selectedItem.descripcion
							dispatchEvent(evnt);
						}  
					}else{
						if (lstPartidas.selectedItem.cpedido == null ){
							var evt:EventoRepProAlmacen2012 = new EventoRepProAlmacen2012(EventoRepProAlmacen2012.LIMPIAR_PANEL_TRES);
							dispatchEvent(evt);
						}else{
							var evento:EventoRepProAlmacen2012 = new EventoRepProAlmacen2012(EventoRepProAlmacen2012.OBTENER_PARTIDAS_SIGUIENTE_VISTA);
							evento.cpedido = lstPartidas.selectedItem.cpedido;
							evento.folioD = null;
							evento.tipoFlete = false;
							dispatchEvent(evento);
						}
						
					}
				}
			}
			
			
		]]>
	</fx:Script>
	
	<panelDosRteConcepto:HeaderPanelDos label="{tituloPanel}"/>
	<s:Group width="100%" visible="{RepProdAlmacen2012Menu.isAvanzada}" includeInLayout="{RepProdAlmacen2012Menu.isAvanzada}" >
	<s:VGroup width="100%" id="vbStock" horizontalAlign="center" visible="{stock}" includeInLayout="{stock}" paddingBottom="10">
		<botonesToggle:ButtonBarColores width="100%" height="30" horizontalCenter="0" id="botoneraBarra" changing="botoneraCaduco()" selectedIndex="0" dataProvider="{_arrButton}" color="0x{catalogoColores.LABEL_GRIS }" requireSelection="true" />
	</s:VGroup>
	</s:Group>
	<otros:division width="100%"/>
	<s:VGroup width="100%" height="100%" >
		<s:List height="100%" width="100%" borderVisible="false" contentBackgroundAlpha="0" itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.compras.ProductoAlmacen2012.itemRenderer.RepProAlmacen2012IRFechaSeleccionada"
				id="lstPartidas" changing="lstPartidas_changingHandler(event)" />
	</s:VGroup>
</s:VGroup>
