<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="811" height="603"
			   xmlns:popUp="skins.popUp.*"
			   xmlns:sprite="skins.otros.sprite.*"
			   xmlns:pqNet="skins.botones.pqNet.*"
			   xmlns:dateField="skins.skin.dateField.*"
			   skinClass="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.itemRenderer.skinTitleWindowDirecciones"
			   xmlns:vistas="mx.com.proquifa.vista.vistas.monitorearOcNoArribada.vistas.*" 
			   creationComplete="completo(event)"
			   initialize="init(event)" xmlns:label="skins.skin.label.*" xmlns:combos="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" xmlns:otros="skins.otros.*" xmlns:chekbox="skins.skin.chekbox.*"
			   >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.generales.EventoCatClientes_Direcciones;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Direccion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Horario;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.itemRenderer.skinTitleWindowDirecciones;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.itemRenderer.vistaPrincipal.CatClientes_IR_Item_imagen;
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			
			private var _ordenDespacho:String;
			[Bindable]private var sizeMediana:Number = 18;
			[Bindable]private var sizeGrande:Number = 25;
			[Bindable]private var sizeSGrande:Number = 30;
			[Bindable]private var clienteSelect:Cliente;
			[Bindable]private var nombreCliente:String;
			[Bindable]public var direccionActual:Direccion;
			public var ModificarHorario:Boolean;
			[Bindable]public var horarioActual:Horario;
			[Bindable]public var tiposHorarioNoD:ArrayCollection;
		    private var valor:String;
			/*[Bindable] private var current:MonitorearOcNoArribada;*/
			private var _recibirInfo:String;
			
			[Bindable]
			public function get recibirInfo():String
			{
				return _recibirInfo;
			}
			
			public function set recibirInfo(value:String):void
			{
				_recibirInfo = value;
			}
			
			protected function cancelar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent( new Event("cancelarPopUP",true));
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				(this.skin as skinTitleWindowDirecciones).backgroundColor = 0x008894;
				(this.skin as skinTitleWindowDirecciones).label.text = "PROQUIFA NET";
				
			}
			
			protected function init(event:FlexEvent):void
			{
				
				(this.skin as skinTitleWindowDirecciones).backgroundColor = 0x008894;
				(this.skin as skinTitleWindowDirecciones).label.text = "PROQUIFA NET";
				
				
				
			}
			
			public function reciveCliente(clienteAct:Cliente):void{
				
				if(clienteAct != null)
				{
					var item:CatClientes_IR_Item_imagen = new CatClientes_IR_Item_imagen();
					item._cliente = clienteAct as Cliente;
					
					try
					{
						imagenAct.source = 	imgCliente.getInstance()["cliente_"+ clienteAct.idCliente ];
					}
					catch (error:Error)
					{
						imagenAct.source = imgCliente.getInstance().default_Select;
						
					}
					clienteSelect = clienteAct;
					/*nombreCliente = clienteAct.nombre;*/
					
				}
				
			}
			
			protected function cerrarPopUp(event:MouseEvent):void
			{
				 dispatchEvent(new Event("cerrarPopUp"));
			}
			
			private function seleccionarTiposHabilitados():void
			{
				
				for (var i:int = 0; i < tiposHorarioNoD.length; i++) 
				{
					if(tiposHorarioNoD[i].tipo == "Entrega" && tiposHorarioNoD[i].idHorario != null && tiposHorarioNoD[i].idHorario > 0 )
						arrayHorario[0].habilitado = false;
					
					else if(tiposHorarioNoD[i].tipo == "Revisión" && tiposHorarioNoD[i].idHorario != null && tiposHorarioNoD[i].idHorario > 0)
						arrayHorario[1].habilitado = false;
					
					else if(tiposHorarioNoD[i].tipo == "Cobro" && tiposHorarioNoD[i].idHorario != null && tiposHorarioNoD[i].idHorario > 0)
						arrayHorario[2].habilitado = false;
					
					
					else if(tiposHorarioNoD[i].tipo == "Visita" && tiposHorarioNoD[i].idHorario != null && tiposHorarioNoD[i].idHorario > 0)
						arrayHorario[3].habilitado = false;
					
				}
				
				
			}
			
			[Bindable] private var arrayHorario:ArrayCollection = new ArrayCollection([{valor:"Entrega", selected:false, habilitado:true}, 
				{valor:"Revisión", selected:false, habilitado:true},
				{valor:"Cobro", selected:false, habilitado:true},
				{valor:"Visita", selected:false, habilitado:true}]);
		[Bindable]	
			private var Horas:ArrayCollection = new ArrayCollection([{valor:"08:00",llave:1}, 
				{valor:"08:30",llave:2},
				{valor:"09:00",llave:3},
				{valor:"09:30",llave:4},
				{valor:"10:00",llave:5},
				{valor:"10:30",llave:6},
				{valor:"11:00",llave:7},
				{valor:"11:30",llave:8},
				{valor:"12:00",llave:9},
				{valor:"12:30",llave:10},
				{valor:"13:00",llave:11},
				{valor:"13:30",llave:12},
				{valor:"14:00",llave:13},
				{valor:"14:30",llave:14},
				{valor:"15:00",llave:15},
				{valor:"15:30",llave:16},
				{valor:"16:00",llave:17},
				{valor:"16:30",llave:18},
				{valor:"17:00",llave:19},
				{valor:"17:30",llave:20},
				{valor:"18:00",llave:21}]);
			
			private var mapa:Object = new Object;
			protected function completo(event:FlexEvent):void
			{
				if(!ModificarHorario){
					seleccionarTiposHabilitados();
					cmbHorario.includeInLayout = cmbHorario.visible = true;
					cmbHorario.dataProvider = arrayHorario;
					cmbHorario.tiposhorariosNoDispo = tiposHorarioNoD;
					lblancho.visible =lblancho.includeInLayout = true;
					lunes.selected = true;
					martes.selected = true;
					miercoles.selected = true;
					jueves.selected = true;
					viernes.selected = true;
					LuDe1.selectedIndex = 0;
					LuA1.selectedIndex = 12;
					LuDe2.selectedIndex = 14;
					LuA2.selectedIndex = 20;
					MaDe1.selectedIndex = 0;
					MaA1.selectedIndex = 12;
					MaDe2.selectedIndex = 14;
					MaA2.selectedIndex = 20;
					MiDe1.selectedIndex = 0;
					MiA1.selectedIndex = 12;
					MiDe2.selectedIndex = 14;
					MiA2.selectedIndex = 20;
					
					JuDe1.selectedIndex = 0;
					JuA1.selectedIndex = 12;
					JuDe2.selectedIndex = 14;
					JuA2.selectedIndex = 20;
					
					ViDe1.selectedIndex = 0;
					ViA1.selectedIndex = 12;
					ViDe2.selectedIndex = 14;
					ViA2.selectedIndex = 20;
				}
				else{
					GrupoEdicion.includeInLayout = GrupoEdicion.visible = true;
					
					if(horarioActual.tipo == "Entrega")
						icono.source = catalogoIconosBotones.getInstance().entregarDi;
					else if(horarioActual.tipo == "Revisión")
						icono.source = catalogoIconosBotones.getInstance().revisionDi;
					else if(horarioActual.tipo == "Cobro")
						icono.source = catalogoIconosBotones.getInstance().cobroDi;
					else if(horarioActual.tipo == "Visita")
						icono.source = catalogoIconosBotones.getInstance().visitaDi;
					
					lunes.selected = horarioActual.lunes;
					martes.selected = horarioActual.martes;
					miercoles.selected = horarioActual.miercoles;
					jueves.selected = horarioActual.jueves;
					viernes.selected = horarioActual.viernes;
					
					//Creamos el mapa [8:00],[8:30],...,[18:00]
					mapa = new Object();
					for (var i:int = 0; i < Horas.length; i++) 
					{
						var valor:String = LuDe1.dataProvider[i].valor;
						if(!mapa.hasOwnProperty(valor))
							{
								mapa[valor] = i;
							}
							}
					
					//seccion del lunes
					if(mapa.hasOwnProperty(horarioActual.luDe1)){
						LuDe1.selectedIndex = mapa[horarioActual.luDe1];
					}
						
						if(mapa.hasOwnProperty(horarioActual.luA1)){
							LuA1.selectedIndex = mapa[horarioActual.luA1];
						}
							
							if(mapa.hasOwnProperty(horarioActual.luDe2)){
								LuDe2.selectedIndex = mapa[horarioActual.luDe2];
							}
								
								if(mapa.hasOwnProperty(horarioActual.luA2)){
									LuA2.selectedIndex = mapa[horarioActual.luA2];
								}
									
									//seccion del martes
									if(mapa.hasOwnProperty(horarioActual.maDe1)){
										MaDe1.selectedIndex = mapa[horarioActual.maDe1];
									}
										
										if(mapa.hasOwnProperty(horarioActual.maA1)){
											MaA1.selectedIndex = mapa[horarioActual.maA1];
										}
											
											if(mapa.hasOwnProperty(horarioActual.maDe2)){
												MaDe2.selectedIndex = mapa[horarioActual.maDe2];
											}
												
												if(mapa.hasOwnProperty(horarioActual.maA2)){
													MaA2.selectedIndex = mapa[horarioActual.maA2];
												}
													
													//seccion del miercoles
													if(mapa.hasOwnProperty(horarioActual.miDe1)){
														MiDe1.selectedIndex = mapa[horarioActual.miDe1];
													}
														
														if(mapa.hasOwnProperty(horarioActual.miA1)){
															MiA1.selectedIndex = mapa[horarioActual.miA1];
														}
															
															if(mapa.hasOwnProperty(horarioActual.miDe2)){
																MiDe2.selectedIndex = mapa[horarioActual.miDe2];
															}
																
																if(mapa.hasOwnProperty(horarioActual.miA2)){
																	MiA2.selectedIndex = mapa[horarioActual.miA2];
																}
																	
																	
																	//seccion del jueves
																	
																	if(mapa.hasOwnProperty(horarioActual.juDe1)){
																		JuDe1.selectedIndex = mapa[horarioActual.juDe1];
																	}
																		
																		if(mapa.hasOwnProperty(horarioActual.juA1)){
																			JuA1.selectedIndex = mapa[horarioActual.juA1];
																		}
																			
																			if(mapa.hasOwnProperty(horarioActual.juDe2)){
																				JuDe2.selectedIndex = mapa[horarioActual.juDe2];
																			}
																				
																				if(mapa.hasOwnProperty(horarioActual.juA2)){
																					JuA2.selectedIndex = mapa[horarioActual.juA2];
																				}
																					
																					
																					//seccion del viernes
																					
																					if(mapa.hasOwnProperty(horarioActual.viDe1)){
																						ViDe1.selectedIndex = mapa[horarioActual.viDe1];
																					}
																						
																						if(mapa.hasOwnProperty(horarioActual.viA1)){
																							ViA1.selectedIndex = mapa[horarioActual.viA1];
																						}
																							
																							if(mapa.hasOwnProperty(horarioActual.viDe2)){
																								ViDe2.selectedIndex = mapa[horarioActual.viDe2];
																							}
																								
																								if(mapa.hasOwnProperty(horarioActual.viA2)){
																									ViA2.selectedIndex = mapa[horarioActual.viA2];
																								}
																									
																									
																									}
				
				
				
				
			}
			
			protected function enviarHorario(event:MouseEvent):void
			{
				var arreglo:Array = new Array();
				var horarios:ArrayCollection = new ArrayCollection ();
				
				var horCompleto:Boolean;
				
				arreglo = (cmbHorario.labelDisplay.text).split(', ');
				
				if((arreglo.length > 0 && arreglo[0] != "Selecciona el Tipo de Horario" &&  !ModificarHorario) ||
					(arreglo.length == 1 && arreglo[0] == "" &&  ModificarHorario)){
					
					if (validarHorarios()){  /*validar horarios*/
						for(var i:int=0; i < arreglo.length; i++){
							
							var HorarioA:Horario = new Horario;
							
							HorarioA.idDireccion = direccionActual.idDireccion;
							HorarioA.idCliente = clienteSelect.idCliente;
							if(!ModificarHorario)
							{
								if(arreglo[i] == "Entrega" ){
									HorarioA.tipo = "Entrega";
									
								}
									
								else if(arreglo[i] == "Revisión"){
									HorarioA.tipo = "Revisión";
								}
								else if(arreglo[i] == "Cobro"){
									HorarioA.tipo = "Cobro";
								}
								else if(arreglo[i] == "Visita"){
									HorarioA.tipo = "Visita";
								}
							}
							else{
								HorarioA.tipo = horarioActual.tipo;
								HorarioA.idHorario = horarioActual.idHorario;
							}
							
							
							if(lunes.selected)
							{
								
								HorarioA.luDe1 = LuDe1.dataProvider[LuDe1.selectedIndex].valor;
								HorarioA.luA1 = LuA1.dataProvider[LuA1.selectedIndex].valor;
								HorarioA.luDe2 = LuDe2.dataProvider[LuDe2.selectedIndex].valor;
								HorarioA.luA2 = LuA2.dataProvider[LuA2.selectedIndex].valor;
							}
							if(martes.selected){
								HorarioA.maDe1 = MaDe1.dataProvider[MaDe1.selectedIndex].valor;
								HorarioA.maA1 = MaA1.dataProvider[MaA1.selectedIndex].valor;
								HorarioA.maDe2 = MaDe1.dataProvider[MaDe2.selectedIndex].valor;
								HorarioA.maA2 = MaDe2.dataProvider[MaA2.selectedIndex].valor;
							}
							if(miercoles.selected)
							{
								HorarioA.miDe1 = MiDe1.dataProvider[MiDe1.selectedIndex].valor;
								HorarioA.miA1 = MiA1.dataProvider[MiA1.selectedIndex].valor;
								HorarioA.miDe2 = MiDe2.dataProvider[MiDe2.selectedIndex].valor;
								HorarioA.miA2 = MiA2.dataProvider[MiA2.selectedIndex].valor;
							}
							if(jueves.selected)
							{
								HorarioA.juDe1 = JuDe1.dataProvider[JuDe1.selectedIndex].valor;
								HorarioA.juA1 = JuA1.dataProvider[JuA1.selectedIndex].valor;
								HorarioA.juDe2 = JuDe2.dataProvider[JuDe2.selectedIndex].valor;
								HorarioA.juA2 = JuA2.dataProvider[JuA2.selectedIndex].valor;
							}
							if(viernes.selected)
							{
								HorarioA.viDe1 = ViDe1.dataProvider[ViDe1.selectedIndex].valor;
								HorarioA.viA1 = ViA1.dataProvider[ViA1.selectedIndex].valor;
								HorarioA.viDe2 = ViDe2.dataProvider[ViDe2.selectedIndex].valor;
								HorarioA.viA2 = ViA2.dataProvider[ViA2.selectedIndex].valor;
							}
							
							HorarioA.lunes = lunes.selected;
							HorarioA.martes = martes.selected;
							HorarioA.miercoles = miercoles.selected;
							HorarioA.jueves = jueves.selected;
							HorarioA.viernes = viernes.selected;
							
							
							horarios.addItem(HorarioA);
							
						} // for
						
						var evtID:EventoCatClientes_Direcciones = new EventoCatClientes_Direcciones(EventoCatClientes_Direcciones.ENVIAR_HORARIO_CLIENTE);
						evtID.horarios = horarios;
						dispatchEvent(evtID);
						dispatchEvent(new Event("cerrarPopUp"));
						
					}
					
					else{ /*si el horario no es correcto*/
						
						alertaSingleton.show( "error en el horario", catalogoAlertas.TIT_ERR);
						
					}
					
					
						
					
					
				} // if Principal
				else{
					alertaSingleton.show( "No se a seleccionado el Tipo de Horario", catalogoAlertas.TIT_ERR);
				}
				
				
				
			} /// principal
			
			
			private function validarHorarios():Boolean{
				
				var horarioCorrecto:Boolean = true;
				if(lunes.selected)
				{
					
					if(LuDe1.dataProvider[LuDe1.selectedIndex].llave == LuA1.dataProvider[LuA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(LuDe1.dataProvider[LuDe1.selectedIndex].llave > LuA1.dataProvider[LuA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(LuDe2.dataProvider[LuDe2.selectedIndex].llave == LuA2.dataProvider[LuA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
						
						
					if(LuDe2.dataProvider[LuDe2.selectedIndex].llave > LuA2.dataProvider[LuA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(LuDe2.dataProvider[LuDe2.selectedIndex].llave < LuA1.dataProvider[LuA1.selectedIndex].llave ){
						if(LuDe2.dataProvider[LuDe2.selectedIndex].llave != LuDe1.dataProvider[LuDe1.selectedIndex].llave )
						{
								horarioCorrecto = false;
								return horarioCorrecto;
							
						}
					}
					
					
				}
				if(martes.selected){
					
					if(MaDe1.dataProvider[MaDe1.selectedIndex].llave == MaA1.dataProvider[MaA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(MaDe1.dataProvider[MaDe1.selectedIndex].llave > MaA1.dataProvider[MaA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(MaDe2.dataProvider[MaDe2.selectedIndex].llave == MaA2.dataProvider[MaA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					
					if(MaDe2.dataProvider[MaDe2.selectedIndex].llave > MaA2.dataProvider[MaA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(MaDe2.dataProvider[MaDe2.selectedIndex].llave < MaA1.dataProvider[MaA1.selectedIndex].llave ){
						if(MaDe2.dataProvider[MaDe2.selectedIndex].llave != MaDe1.dataProvider[MaDe1.selectedIndex].llave )
						{
							horarioCorrecto = false;
							return horarioCorrecto;
							
						}
					}
				
				}
				if(miercoles.selected)
				{
					
					if(MiDe1.dataProvider[MiDe1.selectedIndex].llave == MiA1.dataProvider[MiA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(MiDe1.dataProvider[MiDe1.selectedIndex].llave > MiA1.dataProvider[MiA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(MiDe2.dataProvider[MiDe2.selectedIndex].llave == MiA2.dataProvider[MiA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					
					if(MiDe2.dataProvider[MiDe2.selectedIndex].llave > MiA2.dataProvider[MiA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(MiDe2.dataProvider[MiDe2.selectedIndex].llave < MiA1.dataProvider[MiA1.selectedIndex].llave ){
						if(MiDe2.dataProvider[MiDe2.selectedIndex].llave != MiDe1.dataProvider[MiDe1.selectedIndex].llave )
						{
							horarioCorrecto = false;
							return horarioCorrecto;
							
						}
					}
				
				}
				if(jueves.selected)
				{
					if(JuDe1.dataProvider[JuDe1.selectedIndex].llave == JuA1.dataProvider[JuA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(JuDe1.dataProvider[JuDe1.selectedIndex].llave > JuA1.dataProvider[JuA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(JuDe2.dataProvider[JuDe2.selectedIndex].llave == JuA2.dataProvider[JuA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					
					if(JuDe2.dataProvider[JuDe2.selectedIndex].llave > JuA2.dataProvider[JuA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(JuDe2.dataProvider[JuDe2.selectedIndex].llave < JuA1.dataProvider[JuA1.selectedIndex].llave ){
						if(JuDe2.dataProvider[JuDe2.selectedIndex].llave != JuDe1.dataProvider[JuDe1.selectedIndex].llave )
						{
							horarioCorrecto = false;
							return horarioCorrecto;
							
						}
					}
					
				}
				if(viernes.selected)
				{
					if(ViDe1.dataProvider[ViDe1.selectedIndex].llave == ViA1.dataProvider[ViA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(ViDe1.dataProvider[ViDe1.selectedIndex].llave > ViA1.dataProvider[ViA1.selectedIndex].llave){
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(ViDe2.dataProvider[ViDe2.selectedIndex].llave == ViA2.dataProvider[ViA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					
					if(ViDe2.dataProvider[ViDe2.selectedIndex].llave > ViA2.dataProvider[ViA2.selectedIndex].llave )
					{
						horarioCorrecto = false;
						return horarioCorrecto;
					}
					
					if(ViDe2.dataProvider[ViDe2.selectedIndex].llave < ViA1.dataProvider[ViA1.selectedIndex].llave ){
						if(ViDe2.dataProvider[ViDe2.selectedIndex].llave != ViDe1.dataProvider[ViDe1.selectedIndex].llave )
						{
							horarioCorrecto = false;
							return horarioCorrecto;
							
						}
					}
					
				}
				
				
				return horarioCorrecto;
				
				
			}
			
			
				
			]]>
	</fx:Script>
	<!--470-->
	<s:Group width="100%" height="100%" >
		
		<s:VGroup width="100%" paddingLeft="15" paddingRight="15" paddingTop="38">
			
			<s:HGroup width="100%"  >
				
				<s:HGroup width="20%" horizontalAlign="center" >
					<s:Image id="imagenAct" visible="true" includeInLayout="true" smoothingQuality="default" smooth="true" verticalAlign="middle"/>
				</s:HGroup> 		  
				<s:Spacer width="20" />
				<s:VGroup width="30%"  gap="2" paddingTop="44">
					<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="18" color="#008894" text="{clienteSelect.nombre}" width="100%" maxDisplayedLines="2" />
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#424242" text="Cliente" width="100%" />
				</s:VGroup>
				
				<s:VGroup width="20%" >
					
				</s:VGroup>
				
				<s:VGroup width="30%" horizontalAlign="right" paddingTop="27">
					<combos:ComboCheckHorario width="340" height="35" id="cmbHorario" includeInLayout="false" visible="false" />
					<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="right" includeInLayout="false" visible="false" id="GrupoEdicion" >
						<s:Image id="icono" />
						<s:Spacer width="5" />
						<s:Label styleName="TituloNovecento_18" fontSize="14" color="#424242" text="{horarioActual.tipo}" fontWeight="bold" />
					</s:HGroup>
					<s:HGroup horizontalAlign="right" >
						<s:Label styleName="TituloNovecento_18" fontSize="14" color="#424242" text="Tipo de Horario" id="lbltipoHorario" />
						<s:Label styleName="TituloNovecento_18" fontSize="14" color="#424242" text="" id="lblancho" width="100%" includeInLayout="false" visible="false" />
					</s:HGroup> 
					
				</s:VGroup>

				
			</s:HGroup> 
			
			
			
			<s:VGroup width="100%" height="20%">
				
				<s:Label styleName="TituloNovecento_18" fontSize="14" color="#008894" text="Dirección#1" fontWeight="bold"/>
				<s:HGroup id="datosDir" width="100%">
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#000000" text="{direccionActual.calle}" />
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#000000" text="{direccionActual.numExt}" />
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#000000" text="{direccionActual.numInt}" />
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#000000" text="{direccionActual.colonia}" />
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#424242" text="{direccionActual.municipio},{direccionActual.estado}" fontWeight="bold" />
					<s:Label styleName="TituloNovecento_18" fontSize="14" color="#008894" text="{direccionActual.codigoPostal}" fontWeight="bold"/>
				</s:HGroup>

			</s:VGroup>
			
			<s:Spacer height="7" />
			
			<s:VGroup width="100%" horizontalAlign="center" gap="0" verticalAlign="middle"> <!--principal-->
				
				<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
					
					<s:Group width="100%">
						<s:Rect width="100%" height="54">
							<s:stroke>
								<s:SolidColorStroke color="#eaeaea" weight="1"/>
							</s:stroke>
						</s:Rect>
						
						<s:HGroup width="100%"  horizontalAlign="center" paddingTop="21">
							<s:Label styleName="TituloNovecento_18" fontSize="14" color="#008894" text="HORARIO DE ATENCIÓN" fontWeight="bold"/>
						</s:HGroup>
							
						
					</s:Group>	
					
				</s:HGroup>
				
				
				
				<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" gap="0"> <!--contiene los recuadros-->
					
					<s:VGroup width="20%" verticalAlign="middle" horizontalAlign="center" > <!--Lunes-->
						<s:Group width="100%" height="231" >
							<s:Rect width="100%" height="231" top="-1">
								<s:stroke>
									<s:SolidColorStroke color="#eaeaea" weight="1"/>
								</s:stroke>
							</s:Rect>
							<s:VGroup width="100%" height="100%" horizontalAlign="center">
								
								<s:HGroup id="checkL" width="100%"  verticalAlign="middle" horizontalAlign="center" paddingTop="7" >
									
									<chekbox:checkBoxVerde styleCheck="checkBoxBlancoAzul" selected="{lunes.selected}"  id="lunes" />
									
									<label:Texto_14_Helvetica  text="Lunes" fontSize="15"  color="#008894" />
									
									<s:Spacer height="30" />
									
								</s:HGroup>
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="LuDe1" dataProvider="{Horas}" numletra="10" />
									<!--<combos:ComboCatalogosBlanco  color="#008894" width="50" height="20" />-->
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="LuA1" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
								<s:Spacer height="30" />
								<otros:division width="70%"/>
								
								<s:Spacer height="8" />
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="LuDe2" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="LuA2" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
							</s:VGroup>
							
						</s:Group>
					</s:VGroup>
					
					
					<s:VGroup width="20%" verticalAlign="middle" horizontalAlign="center" > <!--Martes-->
						<s:Group width="100%" height="231" >
							<s:Rect width="100%" height="231" top="-1">
								<s:stroke>
									<s:SolidColorStroke color="#eaeaea" weight="1"/>
								</s:stroke>
							</s:Rect>
							<s:VGroup width="100%" height="100%" horizontalAlign="center">
								<s:HGroup id="checkM" width="100%"  verticalAlign="middle" horizontalAlign="center" paddingTop="7" >
									
									<chekbox:checkBoxVerde styleCheck="checkBoxBlancoAzul" selected="{martes.selected}" id="martes" />
									
									<label:Texto_14_Helvetica  text="Martes" fontSize="15"  color="#008894" />
									
									<s:Spacer height="30" />
									
								</s:HGroup>
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="MaDe1" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="MaA1" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
								<s:Spacer height="30" />
								<otros:division width="70%"/>
								
								<s:Spacer height="8" />
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="MaDe2" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="MaA2" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
							</s:VGroup>
							
						</s:Group>
					</s:VGroup>
					
					
					<s:VGroup width="20%" verticalAlign="middle" horizontalAlign="center" > <!--Miércoles-->
						<s:Group width="100%" height="231" >
							<s:Rect width="100%" height="231" top="-1">
								<s:stroke>
									<s:SolidColorStroke color="#eaeaea" weight="1"/>
								</s:stroke>
							</s:Rect>
							<s:VGroup width="100%" height="100%" horizontalAlign="center">
								<s:HGroup id="checkMi" width="100%"  verticalAlign="middle" horizontalAlign="center" paddingTop="7" >
									<chekbox:checkBoxVerde styleCheck="checkBoxBlancoAzul" selected="{miercoles.selected}" id="miercoles" />
									
									<label:Texto_14_Helvetica  text="Miércoles" fontSize="15"  color="#008894" />
									
									<s:Spacer height="30" />
									
								</s:HGroup>
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="MiDe1" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="MiA1" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
								<s:Spacer height="30" />
								<otros:division width="70%"/>
								
								<s:Spacer height="8" />
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="MiDe2" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="MiA2" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
							</s:VGroup>
							
						</s:Group>
					</s:VGroup>
					
					<s:VGroup width="20%" verticalAlign="middle" horizontalAlign="center" > <!--Jueves-->
						<s:Group width="100%" height="231" >
							<s:Rect width="100%" height="231" top="-1">
								<s:stroke>
									<s:SolidColorStroke color="#eaeaea" weight="1"/>
								</s:stroke>
							</s:Rect>
							<s:VGroup width="100%" height="100%" horizontalAlign="center">
								<s:HGroup id="checkJ" width="100%"  verticalAlign="middle" horizontalAlign="center" paddingTop="7" >
									
									<chekbox:checkBoxVerde styleCheck="checkBoxBlancoAzul" selected="{jueves.selected}" id="jueves" />
									
									<label:Texto_14_Helvetica  text="Jueves" fontSize="15"  color="#008894" />
									
									<s:Spacer height="30" />
									
								</s:HGroup>
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="JuDe1" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="JuA1" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
								<s:Spacer height="30" />
								<otros:division width="70%"/>
								
								<s:Spacer height="8" />
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="JuDe2" dataProvider="{Horas}" numletra="10" />
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="JuA2" dataProvider="{Horas}" numletra="10" />
									
								</s:HGroup>
								
							</s:VGroup>
							
						</s:Group>
					</s:VGroup>
					
					<s:VGroup width="20%" verticalAlign="middle" horizontalAlign="center" > <!--Viernes-->
						<s:Group width="100%" height="231" >
							<s:Rect width="100%" height="231" top="-1">
								<s:stroke>
									<s:SolidColorStroke color="#eaeaea" weight="1"/>
								</s:stroke>
							</s:Rect>
							<s:VGroup width="100%" height="100%" horizontalAlign="center">
								<s:HGroup id="checkV" width="100%"  verticalAlign="middle" horizontalAlign="center" paddingTop="7" >
									<chekbox:checkBoxVerde styleCheck="checkBoxBlancoAzul" selected="{viernes.selected}" id="viernes" />
									
									<label:Texto_14_Helvetica  text="Viernes" fontSize="15"  color="#008894" />
									
									<s:Spacer height="30" />
									
								</s:HGroup>
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="ViDe1" dataProvider="{Horas}" numletra="10"/>
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="ViA1" dataProvider="{Horas}" numletra="10"/>
									
								</s:HGroup>
								
								<s:Spacer height="30" />
								<otros:division width="70%"/>
								
								<s:Spacer height="8" />
								
								<label:Texto_14_Helvetica  text="A partir de:" fontSize="14"/>
								
								<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
									<combos:ComboFlechaVerdeD width="63" height="20" id="ViDe2" dataProvider="{Horas} " numletra="10"/>
									<label:Texto_14_Helvetica   text="A" fontSize="14" />
									<combos:ComboFlechaVerdeD width="63" height="20" id="ViA2" dataProvider="{Horas}" numletra="10"/>
									
								</s:HGroup>
								
							</s:VGroup>
							
						</s:Group>
					</s:VGroup>
				
				</s:HGroup>	<!--contiene los recuadros-->
					
				
			</s:VGroup> <!-- termina el VG principal-->
			
			<s:Spacer height="3" />
			
			
			<s:HGroup width="100%" horizontalAlign="right"  id="grpBotonEditar"  >
				
				<pqNet:botonPqNetLargo label="Cancelar" id="btoCancelar" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" click="cerrarPopUp(event)" />
				<s:Spacer width="100%" />
				<pqNet:botonPqNetLargo label="Aceptar" id="btoAceptar" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" click="enviarHorario(event)"/>
			</s:HGroup>
			
			
			
		</s:VGroup>
		
	</s:Group>
</s:TitleWindow>
