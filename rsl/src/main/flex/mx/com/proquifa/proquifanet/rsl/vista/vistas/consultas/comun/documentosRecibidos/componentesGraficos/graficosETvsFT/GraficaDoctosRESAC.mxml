<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		 xmlns:graficas="skins.skin.graficas.*"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DocumentoRecibido;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			public var _currentType:String;
			private var keys:Object;
			private var _infoEsacET:ArrayCollection;
			private var _infoEsacFT:ArrayCollection;
			
			public function set obtenerFiltroGrafico(tipo:String):void{
				if(_currentType != tipo){
					_currentType = tipo;
					if(_currentType =="ET")
						myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoEsacET,null,'totalDocumentos');
					else if(_currentType =="FT")
						myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoEsacFT,null,'totalDocumentos');
				}
			}
			
			public function set recibirDocumentos($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null || $infoGrafica.length == 0 ) return ;
				
				_infoEsacET = new ArrayCollection();
				_infoEsacFT = new ArrayCollection();
				myChart.dataProvider = new ArrayCollection();
				
				/**
				 * Se obtiene un array del ArrayCollection con el fin de aplicar funciones espécificas de los Arrays como el ordenar
				 * */
				
				var arrayTemp:Array = new Array();
				arrayTemp = (ObjectUtil.copy($infoGrafica) as ArrayCollection).source;
				/**
				 * Se elimina el último elemento del arreglo que trae el conteo de las filas.
				 * */
				if(arrayTemp.length>1)
					arrayTemp.pop();
				
				/**
				 * Se dividen todos los tipos de Documentos Recibidos que estan en tiempo vs las fuera de tiempo y se ordenan
				 * */ 
				var arrayEsacsET:Array = new Array();
				var arrayEsacsFT:Array = new Array();
				
				arrayEsacsET = arrayTemp.filter(ObtenerTodosLosEsacsET);
				arrayEsacsFT = arrayTemp.filter(ObtenerTodosLosEsacsFT);
				arrayEsacsET.sortOn("RPor");
				arrayEsacsFT.sortOn("RPor");
				
				//Para liberar memoria
				arrayTemp = new Array();
				
				/**
				 * arreglo temporal para controlar el ciclo del for que se encargará de sumar las cantidades de cada  tipo de Documentos Recibidos
				 * quitando las duplicados
				 * */
				
				keys= new Object();
				var arrayTotalEsacsET:Array = new Array();
				arrayTotalEsacsET = arrayEsacsET.filter(quitaDuplicados);
				
				keys= new Object();
				var arrayTotalEsacsFT:Array = new Array();
				arrayTotalEsacsFT = arrayEsacsFT.filter(quitaDuplicados);
				
				/**
				 * Se forman los objetos que serán enviados a la grafica, los totales de cada Estatus y/o situación
				 * */
				
				FormarLosEsacs(arrayTotalEsacsET,arrayEsacsET,_infoEsacET);
				FormarLosEsacs(arrayTotalEsacsFT,arrayEsacsFT,_infoEsacFT);
				
				if(_currentType =="ET")
					myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoEsacET,null,'totalDocumentos');
				else if(_currentType =="FT")
					myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoEsacFT,null,'totalDocumentos');
				
				//Para liberar memoria
				arrayTotalEsacsET = new Array();
				arrayEsacsET= new Array();
				arrayTotalEsacsFT= new Array();
				arrayEsacsFT= new Array();
			}
			
			private function FormarLosEsacs(TotalEsacs:Array,esacsInfo:Array,infoEsacs:ArrayCollection):void
			{
				
				var totalDoctoRecibido:int;
				var currentDoctoRecibido:DocumentoRecibido; 
				var j:int;
				var totalClientes:int;
				var itemResumenConsulta:ResumenConsulta;
				for(var i:int =0; i<TotalEsacs.length; i++){
					j=0;
					totalDoctoRecibido =0;
					totalClientes =0;
					keys = new Object();
					currentDoctoRecibido = esacsInfo[j] as DocumentoRecibido;
					while( (TotalEsacs[i] as DocumentoRecibido).RPor == currentDoctoRecibido.RPor ){
						
						totalDoctoRecibido++;
						
						if(!keys.hasOwnProperty(currentDoctoRecibido.nombreEmpresa)){
							keys[currentDoctoRecibido.nombreEmpresa] = currentDoctoRecibido.nombreEmpresa;
							totalClientes++;
						}
						
						esacsInfo.shift();
						if(esacsInfo.length >0)
							currentDoctoRecibido = esacsInfo[j] as DocumentoRecibido;
						else
							currentDoctoRecibido =new DocumentoRecibido();
					}
					
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta.etiqueta = (TotalEsacs[i] as DocumentoRecibido).RPor.toLocaleUpperCase();
					itemResumenConsulta.totalClientes = totalClientes;
					itemResumenConsulta.totalDocumentos = totalDoctoRecibido;
					
					infoEsacs.addItem(ObjectUtil.copy(itemResumenConsulta));
				}
			}
			public function quitaDuplicados(item:DocumentoRecibido, idx:uint, doctoRecibido:Array):Boolean{
				if (keys.hasOwnProperty(item.RPor)) {
					return false;
				} else {
					keys[item.RPor] = item.RPor;
					return true;
				}
			}
			private function ObtenerTodosLosEsacsET(item:DocumentoRecibido, id:uint, doctoRecibido:Array):Boolean
			{
				return item.enTiempo == "ET" ? true : false;
			}
			private function ObtenerTodosLosEsacsFT(item:DocumentoRecibido, id:uint, array:Array):Boolean
			{
				return item.enTiempo == "FT" ? true : false;
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="0">
		<s:Spacer width="100%" height="10%"/>
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%" 
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5">   
			<graficas:series>
				<graficas:pieSeriesPqNet field="totalDocumentos"/> 
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="10%"/>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" height="8%" verticalAlign="middle">
			<componentes:tituloChartTablero width="100%" text="DESTINATARIO" textAlign="center"/>
		</s:VGroup>
		<s:Spacer width="100%" height="2%"/>
	</s:VGroup>
</s:Group>