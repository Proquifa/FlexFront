<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:mate="http://mate.asfusion.com/" >
	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.ActionListEvent;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.tecnicos.EventoCatProProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ModeloCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.tecnicos.ModeloCatProProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Modificacion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.generales.CatProveedoresEmpresa;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.tecnicos.CatProveedoresProductosAnimado;
			
			[Bindable] private var modifi:Modificacion;
			
			protected function guardarValores(event:ActionListEvent):void
			{
				modifi = new Modificacion();
				modifi.idEmpleado = DatosGlobales.getInstance()._usuario.idEmpleado;
				modifi.metodo =  (event.originalEvent as EventoCatProProductos).metodo;
				modifi.servicio =  (event.originalEvent as EventoCatProProductos).servicio;
				modifi.ventana = (event.originalEvent as EventoCatProProductos).ventana;
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!--<mate:Debugger level="{Debugger.ALL}"/>-->
		
		
		
		<!--++++++++++++++++++++++++++++++++++++++++++ INSERTAR LA MODIFICACION DATOS ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		
		<mate:EventHandlers start="guardarValores(event)" type="{EventoCatProProductos.INSERTAR_MODIFICACION_PRODUCTOS_PROVEEDOR}">
			
			<mate:RemoteObjectInvoker destination="{Destinos.EMPLEADO_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="guardarModificacion"
									  arguments="{modifi}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProGeneral}"
										method="setUpdateModificaiones"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProGeneral}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors				targets="{[CatProveedoresEmpresa]}">
			<mate:PropertyInjector 	source="{ModeloCatProGeneral}" 
									sourceKey="updateModificaciones"
									targetKey="confirmaModificacion"/>
		</mate:Injectors>
		
		
		<!-- /////////////////////////////////////////////////////////////////// lee los tipos de producto /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProProductos.CARGA_PRODUCTOS_POR_PROVEEDOR }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="listarConfiguracionProductosVende"
									  arguments="{[event.idProveedor]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="setTipoProductos"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors	target="{CatProveedoresProductosAnimado}">
			<mate:PropertyInjector source="{ModeloCatProProductos}" 
								   sourceKey="TipoProductos"
								   targetKey="recibeTipoProducto"/>
		</mate:Injectors>
		<!-- /////////////////////////////////////////////////////////////////// agrega tipo de producto /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProProductos.AGREGA_TIPO_PRODUCTO }">

			<mate:EventAnnouncer  generator="{EventoCatProProductos}" type="{EventoCatProProductos.INSERTAR_MODIFICACION_PRODUCTOS_PROVEEDOR}">
				<mate:Properties metodo = "guardarProductosVende"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="guardarProductosVende"
									  arguments="{[event.producto]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="setAgregaTipoProducto"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatProveedoresProductosAnimado}">
			<mate:PropertyInjector source="{ModeloCatProProductos}" 
								   sourceKey="AgregaTipoProducto"
								   targetKey="confirmaAgregaTipoProducto"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// elimina tipo de producto /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProProductos.ELIMINA_TIPO_PRODUCTO }">
			
			<mate:EventAnnouncer  generator="{EventoCatProProductos}" type="{EventoCatProProductos.INSERTAR_MODIFICACION_PRODUCTOS_PROVEEDOR}">
				<mate:Properties metodo = "eliminarConfiguracionProducto"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="eliminarConfiguracionProducto"
									  arguments="{[event.idConfiguracionProducto]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="setEliminaTipoProducto"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatProveedoresProductosAnimado}">
			<mate:PropertyInjector source="{ModeloCatProProductos}" 
								   sourceKey="EliminaTipoProducto"
								   targetKey="confirmaTipoProductoEliminado"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// consulta FUA/////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProProductos.CONSULTA_FUA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerInformacionGeneralProveedor"
									  arguments="{[event.idProveedor]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="setObtenFua"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProProductos}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatProveedoresProductosAnimado}">
			<mate:PropertyInjector source="{ModeloCatProProductos}" 
								   sourceKey="ObtenFua"
								   targetKey="recibeFUA"/>
		</mate:Injectors>
		
	</fx:Declarations>
</mate:EventMap>
