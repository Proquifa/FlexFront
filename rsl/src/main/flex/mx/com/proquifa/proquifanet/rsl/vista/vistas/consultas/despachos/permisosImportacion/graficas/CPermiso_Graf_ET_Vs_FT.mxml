<?xml version="1.0" encoding="utf-8"?>
<graficas:PieChartPqGris  xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" 
						  xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
						  xmlns:graficas="skins.skin.graficas.*" width="100%" height="100%" 
						  dataProvider="{null}"
						  lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
						  fondoCircular="true" fondoCircularRadius="7"
						  showDataTips="false"  innerRadius=".5" 
						  >
<!--						  itemClick="selectedVs(event)"-->
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PermisoImportacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.utils.ObjectUtil;
			
			private var keys:Object;
			private var _graficoTipo:Boolean = false;
			[Bindable] private var _infoVsETFT:ArrayCollection = new ArrayCollection();
			
			public function set obtenerPermisos( arregloCopia:ArrayCollection ):void{
				if(arregloCopia == null) return ;
				var fehcaHoy:Date = new Date();
				var i:int = 0;
				var arregloAgrupado:ArrayCollection = new ArrayCollection();
				var $infoGrafica:ArrayCollection = new ArrayCollection();
				$infoGrafica = ObjectUtil.copy( arregloCopia ) as ArrayCollection;
				for( i = 0; i < $infoGrafica.length; i++ ){
					
					if( ($infoGrafica[i] as PermisoImportacion).fechaLiberacion == null ){
						if( UtilsFecha.regresaDiferenciaEntreFechasEnDias( fehcaHoy,  ($infoGrafica[i] as PermisoImportacion).fechaEL ) >= 0 ){
							//en tiempo
							($infoGrafica[i] as PermisoImportacion).enTiempo = 'ET';
						}else{
							($infoGrafica[i] as PermisoImportacion).enTiempo = 'FT';
						}
					}else{
						if( UtilsFecha.regresaDiferenciaEntreFechasEnDias( ($infoGrafica[i] as PermisoImportacion).fechaLiberacion , ($infoGrafica[i] as PermisoImportacion).fechaEL ) >= 0  ){
							($infoGrafica[i] as PermisoImportacion).enTiempo = 'ET';
						}else{
							($infoGrafica[i] as PermisoImportacion).enTiempo = 'FT';
						}
					}
				}
				for( i = 0; i < $infoGrafica.length; i++ ){
					 if( i == 0 ){
						 ( $infoGrafica[i] as PermisoImportacion).totalesGrafica= 1;
						 arregloAgrupado.addItem( $infoGrafica[i] );
					 }else{
						 var seAgrego:Boolean = false;
						 for(var n:int = 0; n < arregloAgrupado.length; n++ ){
							 if( !seAgrego ){
								 if( ( arregloAgrupado[n] as PermisoImportacion).enTiempo ==  ($infoGrafica[i] as PermisoImportacion).enTiempo ){
									 ( arregloAgrupado[n] as PermisoImportacion).costo =  ( arregloAgrupado[n] as PermisoImportacion).costo + ($infoGrafica[i] as PermisoImportacion).costo;
									 ( arregloAgrupado[n] as PermisoImportacion).noProductos =  ( arregloAgrupado[n] as PermisoImportacion).noProductos + ($infoGrafica[i] as PermisoImportacion).noProductos;
									 ( arregloAgrupado[n] as PermisoImportacion).cantidad =  ( arregloAgrupado[n] as PermisoImportacion).cantidad + ($infoGrafica[i] as PermisoImportacion).cantidad;
									 ( arregloAgrupado[n] as PermisoImportacion).totalesGrafica++;
									 seAgrego = true;
									 n= arregloAgrupado.length;
								 }
							 }
						 }
						 if( !seAgrego ){
							 ( $infoGrafica[i] as PermisoImportacion).totalesGrafica= 1;
							 arregloAgrupado.addItem( $infoGrafica[i] );
						 }
						 
					 }
					 
				}
				var arregloREsumneConsulta:ArrayCollection = new ArrayCollection();
				for( i = 0; i < arregloAgrupado.length; i++ ){
					var itemResumenConsulta:ResumenConsulta = new ResumenConsulta();
					
					itemResumenConsulta.conceptoResultado = ( arregloAgrupado[i] as PermisoImportacion).enTiempo;
					itemResumenConsulta.etiqueta =  ( arregloAgrupado[i] as PermisoImportacion).enTiempo;
					itemResumenConsulta.totalPermisos = ( arregloAgrupado[i] as PermisoImportacion).totalesGrafica;
					
					itemResumenConsulta.total =  ( arregloAgrupado[i] as PermisoImportacion).costo;
					itemResumenConsulta.piezasTotal =  ( arregloAgrupado[i] as PermisoImportacion).cantidad;
					itemResumenConsulta.noProductos =  ( arregloAgrupado[i] as PermisoImportacion).noProductos;
					
					arregloREsumneConsulta.addItem( itemResumenConsulta );
				}
				dataProvider = aplicarFormatoEntregas(arregloREsumneConsulta, "ETvsFT");
			
			}
			
			
			
		]]>
	</fx:Script>
	<graficas:series>
		<graficas:pieSeriesVS field="totalPermisos"/>  <!--piezasTotal-->
	</graficas:series>
</graficas:PieChartPqGris>