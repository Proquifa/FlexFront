<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent creationPolicy="all" xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="init()" xmlns:combo="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combobox.*" xmlns:grid="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*"
		 xmlns:reporte="flex.mx.com.proquifa.proquifanet.catalogos.vistas.vistas.reporte.*" >
	<fx:Declarations>
		<s:Resize id="aparecer"   target="{detalle}" duration="700" heightFrom="0" heightTo="410" />
		<s:Resize id="desaparecer" target="{detalle}" duration="700" heightFrom="410" heightTo="0"/>
		<s:CurrencyFormatter id="formatomoneda" currencySymbol="$" useGrouping="true" useCurrencySymbol="true"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoReporteIncidentes;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridEvent;
			
			
			[Bindable]
			public var Incidentes:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var IncidentesPorUsuario:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var CostodenoCalidad:Number = 0;
			
			[Bindable]
			public var CostodenoCalidadGeneral:Number = 0;
			
			
			[Bindable]
			public var opciones:ArrayCollection = new ArrayCollection([{valor:"Gerente", label:"Gerente"},{valor:"Directivo", label:"Directivo"},{valor:"Operativo", label:"Operativo"},{valor:null, label:"Todos"}]);
			
			[Bindable]
			public var usuarioSeleccionado:String = "";
			
			public function set recibir_Incidentes(Incidentes:ArrayCollection):void{
				if(Incidentes != null){
					this.Incidentes = Incidentes;
					this.IncidentesPorUsuario = new ArrayCollection();
					this.CostodenoCalidad = 0;
					this.CostodenoCalidadGeneral = 0;
					for(var m:int = 0; m<Incidentes.length;m++){
						this.CostodenoCalidadGeneral = this.CostodenoCalidadGeneral + Incidentes[m].costoTotalIncidentes;
					}
					if(Incidentes.length != 0 && this.detalle.height != 0){
						this.desaparecer.play();
					}
				}
			}
			
			public function consultar():void{
				if(this.cbanio.selectedIndex == -1){
					Alert.show("Seleccione un Año para Consultar");
					return; 
				}
				if(this.cmbTipoPeriodo.selectedIndex == -1){
					Alert.show("Seleccione un periodo para la consulta");
					return;
				}
				var evento:EventoReporteIncidentes = new EventoReporteIncidentes(EventoReporteIncidentes.TRAER_INCIDENTES);
				evento._anio= int(this.cbanio.selectedItem);
				evento._periodo = this.cmbTipoPeriodo.selectedItem.dato.toString();
				
				
				if(this.cmbTipoPeriodo.selectedItem.dato.toString() != "Anual"){
					if(this.cmbPeriodo.selectedIndex == -1 ){
						Alert.show("Seleccione el rango del periodo");
						return;
					}
					this.cmbTipoPeriodo.selectedItem.dato.toString() == "Mensual" ? evento._mes = int(this.cmbPeriodo.selectedItem.id) : trace();
					(this.cmbTipoPeriodo.selectedItem.dato.toString() == "Bimestral" || this.cmbTipoPeriodo.selectedItem.dato.toString() == "Semestral") ? evento._tipoPeriodo = int(this.cmbPeriodo.selectedItem.id) : trace();	
				}
				
				this.cbfiltrado.selectedIndex != -1 ? evento._filtro = this.cbfiltrado.selectedItem.valor : evento._filtro = null;
				this.dispatchEvent(evento);
			}
			
			/////////////////////////////////////////			/////////////////////////////////////			///////////////////////////////////////////////
			
			[Bindable]
			private var cmbDatosAnio:ArrayList = new ArrayList();
			
			private function init():void{
				var anioActual:Date = new Date();
				var anioFin:int = anioActual.getFullYear();
				for(var anio:int = 2009; anio <= anioFin; anio ++){
					this.cmbDatosAnio.addItem(anio);
				}
				
				//this.cmbPeriodo.dataProvider = this.Periodos;
			}
			
			private function elegirDataProvider():void{
				this.cmbPeriodo.dataProvider = new ArrayList();
				this.cmbPeriodo.selectedIndex = -1;
				if (this.cmbTipoPeriodo.selectedItem.dato.toString() == "Anual"){
					this.cmbPeriodo.enabled = false; 
					this.cmbPeriodo.dataProvider = ObjectUtil.copy(this.cmbPeriodoValores) as ArrayList;
					
				}	
				if(this.cmbTipoPeriodo.selectedItem.dato.toString() == "Semestral"){        		
					this.cmbPeriodo.selectedIndex = -1;
					this.cmbPeriodo.enabled = true;
					this.cmbPeriodo.dataProvider = ObjectUtil.copy(this.cmbDatosSemestral) as ArrayList;
					
				}	
				if (this.cmbTipoPeriodo.selectedItem.dato.toString() == "Bimestral"){
					this.cmbPeriodo.dataProvider = new ArrayList();
					this.cmbPeriodo.selectedIndex = -1;		
					this.cmbPeriodo.enabled = true;
					this.cmbPeriodo.dataProvider = ObjectUtil.copy(this.cmbDatosBimestral) as ArrayList;
					
				}	
				if (this.cmbTipoPeriodo.selectedItem.dato.toString() == "Mensual"){
				
					this.cmbPeriodo.selectedIndex = -1;
					this.cmbPeriodo.enabled = true;
					this.cmbPeriodo.dataProvider = ObjectUtil.copy(this.cmbDatosMensual) as ArrayList;
					
				}
			}
			
			
			
			[Bindable]
			private var cmbPeriodoValores:ArrayList = new ArrayList([{dato:"Anual",mesInicio:1,mesFin:12},
				{dato:"Semestral"},
				{dato:"Bimestral"},
				{dato:"Mensual"}]);
			
			
			private var Periodos:ArrayList = new ArrayList();
			
			private var cmbDatosSemestral:ArrayList =new ArrayList([ 
				{id:1, dato:"Ene-Jun",mesInicio:1,mesFin:6},
				{id:2, dato:"Jul-Dic",mesInicio:7,mesFin:12}]);
			
			
			/*private var cmbDatosTrimestral:ArrayList = new ArrayList([
				{id:1, dato:"Ene-Mar",mesInicio:1,mesFin:3},
				{id:2, dato:"Abr-Jun",mesInicio:4,mesFin:6},
				{id:3, dato:"Jul-Sep",mesInicio:7,mesFin:9},
				{id:4, dato:"Oct-Dic",mesInicio:10,mesFin:12}]);*/
			
			private var cmbDatosBimestral:ArrayList = new ArrayList([
				{id:1, dato:"Ene-Feb",mesInicio:1,mesFin:2},
				{id:2, dato:"Mar-Abr",mesInicio:3,mesFin:4},
				{id:3, dato:"May-Jun",mesInicio:5,mesFin:6},
				{id:4, dato:"Jul-Ago",mesInicio:7,mesFin:8},
				{id:4, dato:"Sep-Oct",mesInicio:9,mesFin:10},
				{id:4, dato:"Nov-Dic",mesInicio:11,mesFin:12}]);
			
			
			private var cmbDatosMensual:ArrayList = new ArrayList([
				{id:1, dato:"Enero",mesInicio:0,mesFin:0, mes:"01"},
				{id:2, dato:"Febrero",mesInicio:0,mesFin:0, mes:"02"},
				{id:3, dato:"Marzo",mesInicio:0,mesFin:0, mes:"03"},
				{id:4, dato:"Abril",mesInicio:0,mesFin:0, mes:"04"},
				{id:5, dato:"Mayo",mesInicio:0,mesFin:0, mes:"05"},
				{id:6, dato:"Junio",mesInicio:0,mesFin:0, mes:"06"},
				{id:7, dato:"Julio",mesInicio:0,mesFin:0, mes:"07"},
				{id:8, dato:"Agosto",mesInicio:0,mesFin:0, mes:"08"},
				{id:9, dato:"Septiembre",mesInicio:0,mesFin:0, mes:"09"},
				{id:10, dato:"Octubre",mesInicio:0,mesFin:0, mes:"10"},
				{id:11, dato:"Noviembre",mesInicio:0,mesFin:0, mes:"11"},
				{id:12, dato:"Diciembre",mesInicio:0,mesFin:0, mes:"12"}]);
			
			////////////////////////////////				///////////////////////////////////////////				///////////////////////////////
			
			
			public function seleccionarUsuario(event:ListEvent):void{
				if(this.detalle.height == 0){
					this.aparecer.play();
				}
				//trace("hi");
				if(this.dgreporte.selectedItem.usuario != ""){
					if(this.cbanio.selectedIndex == -1){
						Alert.show("Seleccione un Año para Consultar");
						return; 
					}
					if(this.cmbTipoPeriodo.selectedIndex == -1){
						Alert.show("Seleccione un periodo para la consulta");
						return;
					}
					var evento:EventoReporteIncidentes = new EventoReporteIncidentes(EventoReporteIncidentes.TRAER_INCIDENTES_POR_USUARIO);
					evento._idEmpleado = this.dgreporte.selectedItem.idEmpleado;
					evento._anio= int(this.cbanio.selectedItem);
					evento._periodo = this.cmbTipoPeriodo.selectedItem.dato.toString();
					
					
					if(this.cmbTipoPeriodo.selectedItem.dato.toString() != "Anual"){
						if(this.cmbPeriodo.selectedIndex == -1 ){
							Alert.show("Seleccione el rango del periodo");
							return;
						}
						this.cmbTipoPeriodo.selectedItem.dato.toString() == "Mensual" ? evento._mes = int(this.cmbPeriodo.selectedItem.id) : trace();
						(this.cmbTipoPeriodo.selectedItem.dato.toString() == "Bimestral" || this.cmbTipoPeriodo.selectedItem.dato.toString() == "Semestral") ? evento._tipoPeriodo = int(this.cmbPeriodo.selectedItem.id) : trace();	
					}
					this.dispatchEvent(evento);
					this.CostodenoCalidad = int(this.dgreporte.selectedItem.costoTotalIncidentes);
					this.usuarioSeleccionado = this.dgreporte.selectedItem.nombre;
				}
			}
			
			public function set recibir_IncidentesPorUsuario(_incidentes:ArrayCollection):void{
				if(_incidentes != null){
					this.IncidentesPorUsuario = _incidentes;
					//trace("hecho");
				}
			}
			
			public function largo(item:Object,column:GridColumn):String{
				if(item.incidentes.length == 1 && item.incidentes[0] == "NINGUNO"){
					return "0"
				}
				else{
					return item.incidentes.length.toString();
				}
			}
			//////////////////////////////////////			////////////////////////////////			///////////////////////////

		]]>
	</fx:Script>
	<s:Group width="100%" height="100%">
		
	
	<s:VGroup height="100%" width="100%">
			
		<s:Panel title="Bonos" width="100%" height="100">
			<s:HGroup width="100%">
				<s:Form width="100%">
					<s:FormItem width="100%" label="Nivel:">
						<s:ComboBox width="250" creationComplete="{this.cbfiltrado.textInput.text = 'Seleccione una Opción'}" dataProvider="{this.opciones}" id="cbfiltrado"/>
					</s:FormItem>
				</s:Form>
				<s:Form width="100%">
					<s:FormItem width="100%" label="Año:">
						<s:ComboBox width="250" id="cbanio" creationComplete="{this.cbanio.textInput.text = 'Seleccione un Año'}" dataProvider="{this.cmbDatosAnio}" />
					</s:FormItem>
				</s:Form>
				<s:Form width="100%">
					<s:FormItem width="100%" label="Periodo">
						<s:HGroup width="100%">
							<s:ComboBox width="250" id="cmbTipoPeriodo" creationComplete="{this.cmbTipoPeriodo.textInput.text = 'Seleccione el periodo'}" dataProvider="{this.cmbPeriodoValores}" labelField="dato" change="elegirDataProvider()"/>
							<s:ComboBox id="cmbPeriodo" width="250" labelField="dato"/>
						</s:HGroup>
					</s:FormItem>
				</s:Form>
				<s:VGroup height="100%" verticalAlign="middle" verticalCenter="0" paddingRight="20">
					<s:Button styleName="botonNegroOld" id="btnconsultar" label="Consultar" click="consultar()"/>
				</s:VGroup>
			</s:HGroup>
		</s:Panel>
			
		<mx:VBox width="100%" height="100%" borderStyle="none">
			<!--<s:DataGrid  gridClick="seleccionarUsuario(event)" dataProvider="{this.Incidentes}" width="100%" height="100%" id="dgreporte">
				<s:columns>
					<s:ArrayList>
						<grid:GridColumnFormato  
						<s:GridColumn 
						<s:GridColumn 
						<grid:GridColumnFormato formato="moneda"
						<grid:GridColumnFormato formato="porcentaje"
						<grid:GridColumnFormato formato="porcentaje" 
						<grid:GridColumnFormato formato="moneda" 
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>-->
			<mx:DataGrid itemClick="seleccionarUsuario(event)" dataProvider="{this.Incidentes}" width="100%" height="100%" id="dgreporte">
				<mx:columns>
					<mx:DataGridColumn headerText="#" dataTipField="numFila"/>
					<mx:DataGridColumn headerText="Colaborador" dataField="nombre"/>
					<mx:DataGridColumn headerText="Incidentes relacionados" dataField="incidentes" labelFunction="largo"/>
					<mx:DataGridColumn headerText="Costo de no calidad generado" dataField="costoTotalIncidentes"/>
					<mx:DataGridColumn headerText="Bono operativo" dataField="porcentajeBono"/>
					<mx:DataGridColumn headerText="Bono final" dataField="porcentajeBono"/>
					<mx:DataGridColumn headerText="Monto" dataField="montoAPagar"/>
				</mx:columns>
			</mx:DataGrid>
			<s:HGroup width="100%"  paddingRight="20">
				<mx:Spacer width="100%"/>
				<s:Label fontWeight="bold" text="Total de costos de no calidad:  "/>
				<s:Label color="#D61F1F" text="{formatomoneda.format(this.CostodenoCalidadGeneral)}"/>
			</s:HGroup>
		</mx:VBox>
		<mx:VBox  width="100%" height="0" id="detalle" borderStyle="none">
			<s:Panel width="100%" height="30" fontSize="16" title="{'Costos de no calidad de ' + this.usuarioSeleccionado}">
				
			</s:Panel>
			<!--<s:HGroup width="100%">
				<s:Label fontSize="16" fontWeight="bold" text="{'Costos de no calidad de ' + this.usuarioSeleccionado}"/>
			</s:HGroup>-->
			<s:DataGrid   requestedRowCount="10"  width="100%" dataProvider="{this.IncidentesPorUsuario}" height="100%" id="dgDetalle">
				<s:columns>
					<s:ArrayList>
						<grid:GridColumnFormato formato="numfila" headerText="#"/>
						<s:GridColumn  headerText="INC" dataField="folio"/>
						<s:GridColumn headerText="Analizo, Decidio y Verifico" dataField="verifico"/>
						<s:GridColumn headerText="Pondero" dataField="pondero"/>
						<grid:GridColumnFormato guardarFormato="costoCalidad" formato="moneda" headerText="Costo de no calidad" dataField="costoCalidad"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<s:HGroup width="100%" paddingRight="20">
				<mx:Spacer width="100%"/>
				<s:Label fontWeight="bold" text="Total de costos de no calidad:  "/>
				<s:Label color="#D61F1F" text="{this.formatomoneda.format(this.CostodenoCalidad)}"/>
			</s:HGroup>
		</mx:VBox>
	</s:VGroup>
</s:Group>
</s:NavigatorContent>
