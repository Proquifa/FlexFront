<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true" xmlns:label="skins.skin.label.*" 
				xmlns:consultas="skins.skin.comun.consultas.*" 
				xmlns:otros="skins.otros.*" 
				xmlns:pqNet="skins.botones.pqNet.*" 
				xmlns:textinput="skins.skin.textinput.*" 
				><!--click="itemrenderer1_clickHandler(event)"-->
	
	
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.agenteAduanal.EventoCatAgenteAduanalGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.AgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatoMoneda;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.EffectEvent;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable] 	public var _current:ConfiguracionPrecio;
			public var _idAgente:Number;
			
			
			override public function set data(value:Object):void{
				super.data = value;
				
				if (data.hasOwnProperty('etiqueta')){
					var cat:String = data.total == 1 ? ' Familia':' Familias'
					lbltotal.text = data.total + cat;
					itemPrincipal.visible = itemPrincipal.includeInLayout = false;
					total.visible = total.includeInLayout = true;
					this.autoDrawBackground=false;
					this.clipAndEnableScrolling=false;
					
				}else{
					this.autoDrawBackground=true;
					total.visible = total.includeInLayout = false;
					itemPrincipal.visible = itemPrincipal.includeInLayout = true 
					_current = ObjectUtil.copy(data) as ConfiguracionPrecio;
					if (_current.aacp.maximoOC == 0)
						tituloMin.visible = false;
					else
						tituloMin.visible = true;
				}
			}
			
			
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				hideTipoCambio.play();
			}
			
			protected function showGrupo(event:MouseEvent):void
			{
				this.grpEditar.includeInLayout = true;
				this.grpEditar.visible = true;
				this.imgEngrane.visible = false; 
				showTipoCambio.play();
				
			}
			
			protected function showTipoCambio_effectEndHandler(event:EffectEvent):void
			{
				grpEditar.height = 120;
				grpEditar.percentWidth = 100;
			}
			
			protected function hideTipoCambio_effectEndHandler(event:EffectEvent):void
			{
				this.grpEditar.visible = false;
				this.grpEditar.includeInLayout = false;
				this.imgEngrane.visible = true; 
			}
			
			protected function itemrenderer1_clickHandler(event:MouseEvent):void
			{
				this.imgEngrane.visible = true;
			}
			
			private function validarCampos():void
			{
				if (Number(this.minimoOc.text)>Number(this.maximoOc.text)){
					alertaSingleton.show("El Mínimo OC tiene que ser menor al Máximo OC", "Errores de Validación");
				}else{
					guardarInfo();
				}
			}
			
			
			protected function guardarInfo():void
			{
				// TODO Auto-generated method stub
				var eve:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.HACER_INSERCION);
				eve.aacp = _current.aacp;
				eve.aacp.minimoOC = Number(this.minimoOc.text);
				eve.aacp.maximoOC = Number(this.maximoOc.text);
				eve.idAgente = _idAgente;
				dispatchEvent( eve );
			}
			
			public function set recibeAgenteSeleccionado($pro:AgenteAduanal):void{
				if( $pro == null )
					return;
				
				_idAgente = $pro.idAgenteAduanal;
				
			}
			
			protected function interacionConLosTextImputs_focusOutHandler(event:FocusEvent):void
			{
				if(event.currentTarget != null){
					event.stopImmediatePropagation();
					event.preventDefault();
					
					switch(event.currentTarget.id)
					{
						case "minimoOc":{maximoOc.setFocus();break;}
						case "maximoOc":{minimoOc.setFocus();break;}
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:Parallel id="showTipoCambio" effectEnd="showTipoCambio_effectEndHandler(event)" target="{grpEditar}" > 
			<s:Resize heightFrom="0" heightTo="120" duration="200"/>
			<s:Fade alphaFrom="0" alphaTo="1" duration="150"/>
		</s:Parallel>
		
		<s:Parallel id="hideTipoCambio" effectEnd="hideTipoCambio_effectEndHandler(event)" target="{grpEditar}" >
			<s:Resize heightFrom="120" heightTo="0" duration="220"/>
			<s:Fade alphaFrom="1" alphaTo="0" duration="100"/>
		</s:Parallel>
		
	</fx:Declarations>
	
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<otros:division width="100%" />
	<s:VGroup  width="100%" height="100%" >
		<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
			<s:HGroup width="100%" height="100%">
				<s:VGroup id="itemPrincipal"  width="100%" height="100%" horizontalAlign="center">
					<s:HGroup width="100%" height="100%">
						<s:VGroup width="100%" height="100%" gap="10" >
							<label:Titulo text="#{_current.numeroFam} · {_current.noProductos} Productos" paddingTop="10" />
							<label:Texto text="{_current.industria}" width="100%" paddingTop="0" />
							<label:Texto text="{_current.tipo}" width="100%" paddingTop="0" />
							<label:Texto text="{_current.subtipo}" width="100%" paddingTop="0"/>
							<label:Texto text="{_current.control}" width="100%" paddingTop="0"/>
						</s:VGroup>
						<s:VGroup width="100%" height="100%" >
							<s:HGroup width="100%" paddingTop="10">
								<s:Spacer width="100%" />
								<s:Image height="100%" scaleX="0.6" scaleY="0.6" source="{catalogoIconosGrid.getInstance().render_engraneGrande}" 
										 mouseOver="{imgEngrane.source = catalogoIconosGrid.getInstance().render_engraneGrisGrande }" 
										 mouseOut="{imgEngrane.source = catalogoIconosGrid.getInstance().render_engraneGrande }"
										 id="imgEngrane" click="showGrupo(event)" visible.selected="true" visible.normal="true" />
								<!--visible="false" visible.selected="true" visible.normal="false"/>-->
							</s:HGroup>
							<s:HGroup width="100%" height="100%" horizontalAlign="right" verticalAlign="bottom">
								<s:VGroup id="tituloMin"  horizontalAlign="right">
									<label:Texto text="Min OC: {_current.aacp.minimoOC} {UtilsFormatoMoneda.monedaGenerica(_current.aacp.moneda,'')}" paddingTop="10"/>
									<label:Texto text="Max OC: {_current.aacp.maximoOC} {UtilsFormatoMoneda.monedaGenerica(_current.aacp.moneda,'')}" paddingTop="0"/>
								</s:VGroup>
							</s:HGroup>
						</s:VGroup>	
					</s:HGroup>
					<s:VGroup id="grpEditar" height="0" width="100%" horizontalAlign="center" visible="false" includeInLayout="false" alpha="0"
							  visible.normal="false" includeInLayout.normal="false" visible.hovered="false" includeInLayout.hovered="false"
							  visible.selected="false" includeInLayout.selected="false">
						
						<s:HGroup width="100%" horizontalAlign="center">
							<s:VGroup >
								<label:Titulo text="Mínimo OC" />
								<s:HGroup width="100%">
									<textinput:txtInputBlancoDefaultPQNet id="minimoOc" restrict="0-9" text="{_current.aacp.minimoOC}" keyFocusChange="interacionConLosTextImputs_focusOutHandler(event)"/>
									<label:Titulo text="{UtilsFormatoMoneda.monedaGenerica(_current.aacp.moneda,'')}" paddingTop="7" />
								</s:HGroup>
							</s:VGroup>
							<s:Spacer width="20" />
							<s:VGroup  >
								<label:Titulo text="Máximo OC" />
								<s:HGroup width="100">
									<textinput:txtInputBlancoDefaultPQNet id="maximoOc" restrict="0-9" text="{_current.aacp.maximoOC}" keyFocusChange="interacionConLosTextImputs_focusOutHandler(event)"/>
									<label:Titulo text="{UtilsFormatoMoneda.monedaGenerica(_current.aacp.moneda,'')}" paddingTop="7" />
								</s:HGroup>
							</s:VGroup>
						</s:HGroup>
						<s:HGroup width="100%" height="100%">
							<s:VGroup height="100%" width="100%" verticalAlign="bottom" horizontalAlign="left">
								<pqNet:botonPqNetLargo label="Guardar" click="validarCampos()" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
							</s:VGroup>
							<s:VGroup height="100%" width="100%" verticalAlign="bottom" horizontalAlign="right">
								<pqNet:botonPqNetLargo label="Cancelar" click="button1_clickHandler(event)" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO }" />
							</s:VGroup>
						</s:HGroup>
					</s:VGroup>
				</s:VGroup>
			</s:HGroup>
			<s:VGroup id="total" width="100%" horizontalAlign="center" gap="10" paddingTop="10" visible="false" includeInLayout="false" >
				<label:TextoGrisCasiNegro id="lbltotal" />
				<label:TextoGris text="TOTAL"/>
			</s:VGroup>
		</s:VGroup>
	</s:VGroup>
	
	
</s:ItemRenderer>
