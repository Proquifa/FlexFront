<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoGestionIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.ModeloGestionIncidentes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaGestion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.PopUpCambioDOrigen;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.PopUpMarcadores;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.GestionDeIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.RegistroIncidenteInterior;
		]]>
	</mx:Script>
	
	
	<!--Evento para obtener la lista de los Incidentes del Usuario-->
	<mate:Debugger level="{Debugger.ALL}"/>
	<mate:EventHandlers type="{EventoGestionIncidente.CARGA_LISTA_DE_INCIDENTES}">	  <!--method="obtenerIncidentesXUsuario" servicio anterio que estaba funcionando antes-->
																						<!--consultarIncidentesXUsuario  servicio que usa ya para lo del serch =D  este comentario lo escribio el Osv para poder sacar release y corregir 
																						los cambios de incidentes del serch que aun no   aplican  -->  
		<mate:RemoteObjectInvoker   destination="{Destinos.INCIDENTE_SERVICE}" 		
									endpoint="{Destinos.END_POINT}"
									method="obtenerIncidentesXUsuario"  
									arguments="{[event.usuario]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setListaIncidente"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors targets="{[GestionDeIncidente,ConsultaGestion]}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="ListaIncidente"
							   targetKey="recibirListaIncidentes"/>
	</mate:Injectors>	
	
	<!--Evento para obtener al Empleado por su Id-->
	<mate:EventHandlers type="{EventoGestionIncidente.OBTEN_EMPLEADO_POR_ID}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.EMPLEADO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerEmpleadoXId"  
									arguments="{[event.idUsuario]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setEmpleadoPorId"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{GestionDeIncidente}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="EmpleadoPorId"
							   targetKey="recibirListaIncidentes"/>
	</mate:Injectors>
	
	<!--Evento para obtener los marcadores por id de usuario -->
	<mate:EventHandlers type="{EventoGestionIncidente.CARGA_MARCADORES_POR_ID_USUARIO}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.EMPLEADO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerMarcadoresPorIdEmpleado"  
									arguments="{[event.idUsuario]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setMarcadoresPorId"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{PopUpMarcadores}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="marcadoresPorId"
							   targetKey="recibirListaMarcadores"/>
	</mate:Injectors>		
	
	<!--Evento para obtener la lista de Empleados hablitados-->
	<mate:EventHandlers type="{EventoGestionIncidente.CARGA_LISTA_CONTACTOS_GESTION_INCIDENTE}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerEmpleadosPorNivel"  
									arguments="{[event.nivel,event.valorAdicional]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setListaEmpleados"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors targets="{[RegistroIncidenteInterior,PopUpCambioDOrigen,ConsultaGestion]}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="ListaEmpleados"
							   targetKey="recibeEmpleadosHablitados"/>
	</mate:Injectors>	
	
	
	<!--Evento para redireccionar el Pendiente a otro Usuario-->
	<mate:EventHandlers type="{EventoGestionIncidente.REDIRECCIONAR_INCIDENTE}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.PENDIENTE_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="cambiarResponsableIncidente"
									arguments="{[event.idPendiente, event.subProceso]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setConfirmaRedireccion"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<!-- method="redireccionarPendiente"
			arguments="{[event.idPendiente, event.responsable]}"-->
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{RegistroIncidenteInterior}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="ConfirmaRedireccion"
							   targetKey="avisoPendienteEnviado"/>
	</mate:Injectors>	
	
	<!-- Carga Incidente -->
	<mate:EventHandlers type="{EventoGestionIncidente.CARGA_INCIDENTE_POR_ID_INCIDENTE}">
		<mate:RemoteObjectInvoker destination="{Destinos.INCIDENTE_SERVICE}" 
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerIncidenteXId"  
								  arguments="{[event.idIncidente]}"
								  showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setRegeresaIncidente"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{RegistroIncidenteInterior}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="RegeresaIncidente"
							   targetKey="obtenDatosIncidnete"/>
	</mate:Injectors>	
	<!--Evento para Cargar Gestion-->
	<mate:EventHandlers type="{ EventoGestionIncidente.CARGA_GESTION }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idIncidente]}"
									method="obtenerGestionXIdIncidente" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setREGRESAGESTION"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{RegistroIncidenteInterior}">		<!--<mate:Injectors target="{RegistroIncidenteInterior}"> Anteriormente se econtraba este componente-->
													<!--	ConsultaGestioncomponente que usa ya para lo del serch =D  este comentario lo escribio el Osv para poder sacar release y corregir 
															los cambios de incidentes del serch que aun no  aplican  -->  
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="REGRESAGESTION"
							   targetKey="recibirGestion"/>
	</mate:Injectors>
	<!--Evento para Cargar Gestion desde la ubicacion -->
	<mate:EventHandlers type="{ EventoGestionIncidente.CARGA_GESTION_UBICACION }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idIncidente]}"
									method="obtenerGestionXIdIncidente" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setREGRESAGESTIONUBICACION"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{GestionDeIncidente}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="REGRESAGESTIONUBICACION"
							   targetKey="recibirGestionXUbicacion"/>
	</mate:Injectors>
	
	<!--Evento para guardar Cambio de Origen-->
	<mate:EventHandlers type="{ EventoGestionIncidente.GUARDA_CAMBIO_DE_ORIGEN }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CAMBIO_DE_ORIGEN_SERVICE	}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.cambioOrigen]}"
									method="realizarCambioDeOrigen" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setRegistraCambioOrigen"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaGestion}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="regresaCambioOrigen"
							   targetKey="recibirCambioOrigen"/>
	</mate:Injectors>
	
	<!--Evento para guardar lista de Incidentes a un MArcador -->
	<mate:EventHandlers type="{ EventoGestionIncidente.GUARDA_LISTA_MARCADORES }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.INCIDENTE_SERVICE	}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.listaMarcadores]}"
									method="actualizarMarcadorDeIncidentes" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
									method="setAgrupaMarcadores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaGestion}">
		<mate:PropertyInjector source="{ModeloGestionIncidentes}"
							   sourceKey="agrupaMarcadores"
							   targetKey="recibirMarcadoresAgrupados"/>
	</mate:Injectors>
	
	
	<!-- Reset -->
	<mate:EventHandlers type="{ EventoGestionIncidente.RESET_A_REGISTRO_INCIDENTE }">	
		<mate:MethodInvoker generator="{ModeloGestionIncidentes}"
							method="reset"/>
	</mate:EventHandlers>
</mate:EventMap>