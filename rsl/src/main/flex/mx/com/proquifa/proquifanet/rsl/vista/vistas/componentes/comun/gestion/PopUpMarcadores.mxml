<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:otros="skins.otros.*"
			   xmlns:label="skins.skin.label.*"
			   skinClass="skins.titleWindow.skinTitleWindowBlanca" creationComplete="init()"
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="397" height="438" xmlns:pqNet="skins.botones.pqNet.*" backgroundColor="0xeaeaea">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Resize id="fxResize"  target="{this}" duration="300" effectEnd="{this.grpTodo.visible = true }"/>
		<s:Resize id="fxCierraPop" target="{this}" widthTo="0" heightTo="0" duration="150" effectEnd="cerrarPopUp()"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoGestionIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var _comboMarcadores:ArrayCollection;
			[Bindable]
			public var _listaDMarcadores:ArrayCollection;
			[Bindable]
			public var _buttonBarMarcador:ArrayCollection = new ArrayCollection([{label:"Nuevo"},{label:"Existente"}]);
			
			
			private function centraEstePop(event:ResizeEvent):void{
				PopUpManager.centerPopUp( this );
			}
			
			private function ajustaCentraPop($:Event):void{
				height = 438;//($.currentTarget as Stage).stageHeight/2; //-
				width = 397;//($.currentTarget as Stage).stageWidth - ($.currentTarget as Stage).stageWidth/1.3; //+
				this.addEventListener(ResizeEvent.RESIZE,centraEstePop);
			}
			
			private function init():void{
				this.fxResize.heightTo = 438;//stage.height/2;
				this.fxResize.widthTo = 397;//stage.width - stage.width/1.3;
				this.fxResize.stop();
				this.fxResize.play();
				
				this.addEventListener(ResizeEvent.RESIZE,centraEstePop);
				stage.addEventListener( ResizeEvent.RESIZE, ajustaCentraPop );
				PopUpManager.centerPopUp( this );
			}
			
			public function cargaMarcador(vieneD:String):void{
				if(vieneD == "nuevo"){
					for(var i:int = 0; i<_listaDMarcadores.length ; i++){
						if(this.nombre.text.toUpperCase() != "REFORMULACIÓN" && this.nombre.text.toUpperCase() != "PROGRAMACIÓN" && this.nombre.text.toUpperCase() != "CAMBIO DE ORIGEN" 
							&& this.nombre.text.toUpperCase() != "CORTO PLAZO" && this.nombre.text.toUpperCase() != "MEDIANO PLAZO" && this.nombre.text.toUpperCase() != "LARGO PLAZO"){
							
							_listaDMarcadores[i].marcador = this.nombre.text;	
							
						}else{
							alertaSingleton.show(catalogoAlertas.GESTION_ERR_marcadorErroneo,catalogoAlertas.TIT_ADV_atencion);
							this.nombre.text = "";
							return;
						}
						_listaDMarcadores[d].checkBox = false;
					}	
				}
				
				if(vieneD == "existente"){
					for(var d:int = 0; d<_listaDMarcadores.length ; d++){
						_listaDMarcadores[d].marcador = this.combomarcadores.selectedItem;	
						_listaDMarcadores[d].checkBox = false;
					}
				}
				
				var evt:EventoGestionIncidente = new EventoGestionIncidente(EventoGestionIncidente.GUARDA_LISTA_MARCADORES);
				evt.listaMarcadores = this._listaDMarcadores;
				dispatchEvent(evt);
				
				PopUpManager.removePopUp(this);
			}
			
			private function cerrarPopUp():void{
				PopUpManager.removePopUp(this);
			}
			
			public function set recibirListaMarcadores(marcadores:ArrayCollection):void{
				this._comboMarcadores = marcadores;
				for(var d:int = 0 ; d<_comboMarcadores.length ; d++){
					if(_comboMarcadores[d] == "" || _comboMarcadores[d] == "REFORMULACIÓN" || _comboMarcadores[d] == "PROGRAMACIÓN" || _comboMarcadores[d] == "LARGO PLAZO" || _comboMarcadores[d] == "MEDIANO PLAZO" || _comboMarcadores[d] == "CORTO PLAZO"){
						this._comboMarcadores.removeItemAt(d);
						d = d - 1;
					}
				}
				this.combomarcadores.dataProvider = this._comboMarcadores;
			}
			
			private function cambiaButton(event:IndexChangeEvent):void{
				if(this.agrupaMarcador.selectedItem.label == "Nuevo"){
					this.viewsMarcadores.selectedIndex = 0;
				}
				if(this.agrupaMarcador.selectedItem.label == "Existente"){
					this.viewsMarcadores.selectedIndex = 1;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10" visible="false" id="grpTodo">
		<s:HGroup width="100%" >
			
			<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_marcadores}" horizontalAlign="center"/>
			<s:Label width="100%" text="MARCADORES" fontWeight="bold" fontFamily="Helvetica" fontSize="25" textAlign="center"/>
			
		</s:HGroup>
		<otros:divisionHueca width="100%"/>
		<s:VGroup width="100%" height="76" paddingRight="15" paddingLeft="15">
			<s:Spacer height="100%"/>
			<!--<s:TabBar width="345" height="35" dataProvider="{this.viewsMarcadores}" fontFamily="Bank Gothic" fontSize="15"/>-->
			<s:ButtonBar id="agrupaMarcador" width="100%" height="35" fontFamily="Bank Gothic" fontSize="15" dataProvider="{_buttonBarMarcador}" skinClass="skins.botoneras.botoneraBandera.skinBotoneraBandera" change="cambiaButton(event)" selectedIndex="0" />
			<s:Spacer height="100%"/>
		</s:VGroup>
		<otros:divisionHueca width="100%"/>
		<mx:ViewStack width="100%" height="100%" creationPolicy="all" id="viewsMarcadores">
			<s:NavigatorContent width="100%" height="100%" >
				<s:VGroup width="100%" height="76">
					
					<s:VGroup height="100%" width="100%" paddingRight="20" paddingLeft="20">
						<s:Spacer height="100%"/>
						<s:Label text="Nombre" width="100%" fontFamily="Helvetica" fontSize="15" fontWeight="bold" />
						<s:TextInput width="100%" id="nombre"  paddingRight="15" paddingLeft="15"/>
						<s:Spacer height="100%"/>
					</s:VGroup>
					
					<otros:divisionHueca width="100%"/>
					<s:Spacer width="100%" height="30"/>
					<s:HGroup height="100%" width="100%">
						<s:Spacer width="100%" height="100%"/>
						
						<s:VGroup width="100%"  paddingRight="15" paddingLeft="15">
							<pqNet:botonPqNetLargo label="ACEPTAR" id="aceptarnuevo" fontFamily="Helvetica" fontSize="15" textAlignLast="center" fontWeight="bold" click="cargaMarcador('nuevo')" height="50" width="230"/>
							<s:Spacer height="7"/>
							<pqNet:botonPqNetLargo label="CANCELAR" id="cancelarnuevo" fontFamily="Helvetica" fontSize="15" textAlignLast="center" fontWeight="bold" click="fxCierraPop.play();this.grpTodo.visible = false" height="50" width="230"/>
							
						</s:VGroup>
						<s:Spacer width="100%" height="100%"/>
					</s:HGroup>	
				</s:VGroup>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%" >
				<s:VGroup width="100%" height="180">
					
					<s:VGroup height="100%" width="100%" paddingRight="20" paddingLeft="20">
						<s:Spacer height="100%"/>
						<s:Label text="Marcadores" width="100%" fontFamily="Helvetica" fontSize="15" fontWeight="bold"/>
						<s:ComboBox width="100%" id="combomarcadores"/>
						<s:Spacer height="100%"/>
					</s:VGroup>				
					
					<otros:divisionHueca width="100%"/>
					<s:Spacer width="100%" height="30"/>
					<s:HGroup height="100%" width="100%">
						<s:Spacer width="100%" height="100%"/>
						
						<s:VGroup width="100%"  paddingRight="15" paddingLeft="15">
							<pqNet:botonPqNetLargo label="ACEPTAR" id="aceptarexistente" fontFamily="Helvetica" fontSize="12" textAlignLast="center" fontWeight="bold" click="cargaMarcador('existente')" height="50" width="230"/>
							<s:Spacer height="7"/>
							<pqNet:botonPqNetLargo label="CANCELAR" id="cancelarexistente" fontFamily="Helvetica" fontSize="12" textAlignLast="center" fontWeight="bold" click="fxCierraPop.play();this.grpTodo.visible = false" height="50" width="230"/>
							
						</s:VGroup>
						<s:Spacer width="100%" height="100%"/>
					</s:HGroup>	
				</s:VGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:VGroup>
</s:TitleWindow>
