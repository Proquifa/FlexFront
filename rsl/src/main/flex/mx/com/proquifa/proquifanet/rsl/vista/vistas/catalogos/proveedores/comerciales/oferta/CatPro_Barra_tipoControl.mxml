<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:botonesToggle="skins.botonesToggle.*" 
		  xmlns:otros="skins.otros.*"
		  xmlns:comboCatalogo="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" 
		  xmlns:vista="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.*" 
		  xmlns:pqNet="skins.botones.pqNet.*" 
		  xmlns:label="skins.skin.label.*" 
		  xmlns:textinput="skins.skin.textinput.*"
		  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		  xmlns:chekbox="skins.skin.chekbox.*"
		  xmlns:buttonImagen="skins.skin.botones.buttonImagen.*"
		  xmlns:numericStepper="skins.skin.numericStepper.*"
		  minHeight="1020" gap="10" horizontalAlign="center" 
		  creationComplete="vgroup1_creationCompleteHandler(event)" 
		  xmlns:btnToggleEstados="skins.botonesToggle.btnToggleEstados.*">
	
	<fx:Declarations>
		<s:NumberValidator id="validatorPorcentajeNegativo"
						   allowNegative="true" 
						   domain="real" 
						   decimalSeparator="." 
						   decimalPointCountError="Hay más de un punto decimal."
						   fractionalDigits="6"
						   fractionalDigitsError="El número de decimales superó el máximo de dos permitido."
						   required="true"
						   requiredFieldError="Este campo no puede quedar vacio."
						   parseError="No es un número valido."
						   negativeSymbolError="El simbolo usado para el número negativo, no está colocado en el lugar correcto."
						   />
		
		<s:NumberValidator id="validatorPorcentajePositivo"
						   allowNegative="false" 
						   domain="real" 
						   decimalSeparator="." 
						   decimalPointCountError="Hay más de un punto decimal."
						   fractionalDigits="6"
						   fractionalDigitsError="El número de decimales superó el máximo de dos permitido."
						   required="true"
						   requiredFieldError="Este campo no puede quedar vacio."
						   parseError="No es un número valido."
						   negativeError="No se permite que el número sea negativo."
						   />
		
		
		<s:NumberValidator id="validatorDlsPositivo"
						   allowNegative="false" 
						   domain="real" 
						   decimalSeparator="." 
						   decimalPointCountError="Hay más de un punto decimal."
						   fractionalDigits="2"
						   fractionalDigitsError="El número de decimales superó el máximo de dos permitido."
						   required="true"
						   requiredFieldError="Este campo no puede quedar vacio."
						   parseError="No es un número valido."
						   negativeError="No se permite que el número sea negativo."
						   />
		
		
		<s:NumberValidator id="validatorEnteroPositivoNoVacioMayorACero"
						   allowNegative="false" 
						   domain="int" 
						   lessThanMinError="El número de piezas debe ser mayor a cero."
						   minValue="1"
						   required="true" 
						   requiredFieldError="Este campo no puede quedar vacio."
						   parseError="No es un número valido."
						   negativeError="No puede ser negativo."
						   notAnIntegerError="Debe de ser un número entero."
						   />
		
		<s:NumberValidator id="validarTextInputTiempoEntrega"
						   allowNegative="false" 
						   domain="int" 
						   lessThanMinError="El número debe ser mayor a cero."
						   minValue="0"
						   required="false" 
						   parseError="No es un número valido."
						   negativeError="No puede ser negativo."
						   notAnIntegerError="Debe de ser un número entero."
						   />
		
		<s:NumberValidator id="validarTexMaximoMeses"
						   allowNegative="false" 
						   domain="int" 
						   lessThanMinError="El número debe ser mayor a cero."
						   minValue="0"
						   maxValue="12"
						   greaterThanMaxError ="El número debe estar entre 1 y 12."
						   required="false" 
						   parseError="No es un número valido."
						   negativeError="No puede ser negativo."
						   notAnIntegerError="Debe de ser un número entero."
						   />	
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoAuxiliarEnLaActualizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProOferta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecioProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ElementosVistaOferta_Visual;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.Logistica;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.TiempoEntrega;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DatosTiempoEntrega;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.CatProZonaTrabajo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.catProOfertaPopUp.CatProOferta_PopUp_ModificacionPrecio;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			
			import spark.components.CheckBox;
			import spark.components.TextInput;
			import spark.events.IndexChangeEvent;
			
			
			private var _currentConfiguracionPrecio:ConfiguracionPrecio;
			private var _respaldoConfiguracion:ConfiguracionPrecioProducto; 
			private var _idProveedor:Number;
			private var _nivel:String;
			private var _arrayLocalTE:TiempoEntrega;
			private var _arrayGuadalajaraTE:TiempoEntrega;
			private var _arrayForaneolTE:TiempoEntrega;
			private var _arrayCentroATE:TiempoEntrega;
			private var _arraySudaTE:TiempoEntrega;
			private var _arrayRestoMundoTE:TiempoEntrega;
			private var clickeado:String = "";
			private var _oldIndex:Number = NaN;
			private var _currentIndex:Number = NaN;
			private var _nombreProveedor:Number;
			
			
			
			private var _arrButton:ArrayCollection = new ArrayCollection( [  { valor:' PRECIO', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16, icono:'precioChico' }, 
				{ valor:' TIEMPO ENTREGA', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16, icono:'tiempoEntrega' }, ] );
			
			[Bindable]
			private var _arrRutas:ArrayCollection = new ArrayCollection( [  
				{ valor:'Local',llave:0,guardar:'Local', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14  }, 
				{ valor:'Guadalajara',llave:1, guardar:'Guadalajara', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14  },
				{ valor:'Foraneo',llave:2, guardar:'Foraneo', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14  },
				{ valor:'Centroamérica',llave:3, guardar:'Centroamerica', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14  },
				{ valor:'Sudamérica',llave:4, guardar:'Sudamerica', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14  },
				{ valor:'Resto del mundo',llave:5, guardar:'Resto del mundo', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14  }, ] );
			
			[Bindable]	private var _dias:ArrayCollection = new ArrayCollection([{valor:"DIAS HABILES",llave:0,valor2:"días hábiles"},
				{valor:"MESES",llave:1,valor2:"meses"}]);
			
			[Bindable] private var _clickeado:String = "";
			[Bindable] private var isGobieno:Boolean = false;
			[Bindable] private var currentProveedor:Proveedor;
			[Bindable] private var datosTE_NR:DatosTiempoEntrega;
			[Bindable] private var datosTE_ReqNoTiene:DatosTiempoEntrega;
			[Bindable] private var datosTE_ReqSiTiene:DatosTiempoEntrega;
			[Bindable] private var _configuracionPrecioProducto:ConfiguracionPrecioProducto; 
			
			
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				botoneraBarra.dataProvider = _arrButton;
				botoneraBarra.selectedIndex = 0;
				cmbNRPTiempoEntrega.dataProvider = _dias;
				cmbTENoTiene.dataProvider = _dias;
				cmbTESiTiene.dataProvider = _dias;
				BindingUtils.bindSetter(asignarTamanioACombos,grpescucharCambioTamanio,"width",true);
				addEventListener("clicTiempoEntrega",escuchar);
			}
			
			protected function asignarTamanioACombos(obj:Object):void
			{
				cmbAgenteAduanal.width = Number(obj);
				cmbConceptos.width = Number(obj);
			}
			
			
			public function cargaInformacion( $dato:ConfiguracionPrecioProducto, $nivel:String,$proveedor:Proveedor):void
			{
				_nivel = $nivel;
				isGobieno = true;
				chkFactorFijo.selected = $dato.compuestaCostoF;
				chkUtilidad.selected = $dato.compuestaFactorU;
				
				if (_currentConfiguracionPrecio.industria == 'Gobierno' )
				{
					isGobieno = false;
				}
				
				grpBotonEditar.visible = grpBotonEditar.includeInLayout = true;
				
				currentProveedor = $proveedor;
				
				spacerImportacion.visible = spacerImportacion.includeInLayout = true;
				
				_configuracionPrecioProducto = ObjectUtil.copy( $dato ) as ConfiguracionPrecioProducto;
				//grp_VisEdicion.dataProvider = _configuracionPrecioProducto;
				
				_respaldoConfiguracion = ObjectUtil.copy( $dato ) as ConfiguracionPrecioProducto;
				
				if (currentProveedor.isPrimeraVezenLlegar)
				{
					stack.selectedIndex = botoneraBarra.selectedIndex = 0;
					currentProveedor.isPrimeraVezenLlegar = false;
				}
				else
				{
					botoneraBarra.selectedIndex = indiceSeleccionadoAnterior;
				}
				
				if(currentProveedor.isProveedorNacional)
				{
					grpImportacion.visible = grpImportacion.includeInLayout = false;
					grpTiempoEReqPermiso.visible = grpTiempoEReqPermiso.includeInLayout = false;
				}
				else
				{
					grpTiempoEReqPermiso.visible = grpTiempoEReqPermiso.includeInLayout = true;
					grpImportacion.visible = grpImportacion.includeInLayout = true;
					cmbAgenteAduanal.solicitarListaAgentesAduanales("--NINGUNO--",$dato.idConfiguracionFamilia);
					
				}
				
				if( grupoBotonesCancelarGuardar.visible )
				{
					btnEditar.visible = true;
					grupoBotonesCancelarGuardar.visible = grupoBotonesCancelarGuardar.includeInLayout = false;
				}
				
				if( !isNaN( $dato.idProveedor ))
				{
					_idProveedor = $dato.idProveedor;
					seteaTextos();
					seleccionaItemsCombos();
					getVistaPresentacion();
				}
				else
				{
					cmbAgenteAduanal.selectedIndex = 0;
				}
				
				habilitaTextos(false);
				
				if( $nivel == 'Generales' || $nivel == "Clasificacion")
				{
					grpLincenciamiento.visible = grpLincenciamiento.includeInLayout = false;
					spcLicenciamiento.visible = spcLicenciamiento.includeInLayout = false;
					lblPrecioLista.includeInLayout = lblPrecioLista.visible =false;
					
					if(_configuracionPrecioProducto.producto.idProducto > 0 )
					{
						btnCambioDePrecio.enabled = true;
					}
					else
					{
						btnCambioDePrecio.enabled = false;
					}
					
					if($nivel == 'Generales')
					{
						lblTituloSeccion.text = "GENERALES";
						btnRevertir.visible = btnRevertir.includeInLayout = false;
					}
					else
					{
						lblTituloSeccion.text = "CLASIFICACIÓN";
						lblPrecioLista.includeInLayout = true;
						
						if(_configuracionPrecioProducto.idConfiguracion == _configuracionPrecioProducto.idConfiguracionFamilia)
							btnRevertir.visible = btnRevertir.includeInLayout = false;
						else
							btnRevertir.visible = btnRevertir.includeInLayout = true;
					}
				}
				else
				{
					if($nivel.toUpperCase() == "PRODUCTO")
						lblPrecioLista.includeInLayout = true;
						
					btnCambioDePrecio.enabled = true;
					lblPrecioLista.includeInLayout = lblPrecioLista.visible =true; 
					lblTituloSeccion.text = UtilsFormatosNumericos.redondearNEAREST(_configuracionPrecioProducto.producto.costo) + ' ' + currentProveedor.monedaVentaAbreviatura;
					lblPrecioLista.text = _configuracionPrecioProducto.producto.costo == 0 ? '' : UtilsFormatosNumericos.precisionADosDecimalesConComas(_configuracionPrecioProducto.costoCompra) + ' ' + CatProZonaTrabajo.currentProveedor.monedaCompraAbreviatura; 
					
					
					if (_configuracionPrecioProducto.producto.licencia)
					{ 
						grpLincenciamiento.visible = grpLincenciamiento.includeInLayout = true;
						spcLicenciamiento.visible = spcLicenciamiento.includeInLayout = true;
					}
					else
					{
						grpLincenciamiento.visible = grpLincenciamiento.includeInLayout = false;
						spcLicenciamiento.visible = spcLicenciamiento.includeInLayout = false;
					} 
					
					
					if( _configuracionPrecioProducto.nivel == "Costo" && $nivel.toUpperCase() == "PRECIO LISTA")
					{
						btnRevertir.visible = btnRevertir.includeInLayout = true;
					}
					else 
					{
						if(_configuracionPrecioProducto.nivel == "Producto" && $nivel.toUpperCase() == "PRODUCTO")
						{
							btnRevertir.visible = btnRevertir.includeInLayout = true;
						}else
						{
							btnRevertir.visible = btnRevertir.includeInLayout = false;
						}
					}
				}
			}
			
			private function seteaTextos():void
			{
				if( _configuracionPrecioProducto != null && _configuracionPrecioProducto.costoFactorProducto != null )
				{
					
					//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
					txtInputDescuento.text = _configuracionPrecioProducto.costoFactorProducto.factorDescuento.toString();
					txtInputFletePC.text = _configuracionPrecioProducto.costoFactorProducto.factorFletePC.toString();
					//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
					
					
					//IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN=================
					if(grpImportacion.visible)
					{
						if( _configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana == -1 )
						{
							chkMontoUnidad.selected = true;
							txtInputValorAduana.text='0';
							
							/* MODIFICACION SLIDER
							slideValorAduana.setValue(0); */
							
							if(_configuracionPrecioProducto.costoFactorProducto.piezas <= 0)
							{
								numStepperPiezas.value = 1;
							}
							else
							{
								numStepperPiezas.value = _configuracionPrecioProducto.costoFactorProducto.piezas;
							}
						}
						else
						{
							numStepperPiezas.value = 1;
							chkMontoUnidad.selected = false;
							
							/* MODIFICACION SLIDER
							slideValorAduana.setValue(_configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana); */
							txtInputValorAduana.text =_configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana.toString(); 
						}
						
						if( _configuracionPrecioProducto.costoFactorProducto.factorIGI == -1 )
						{
							txtIGI.text = '0';
						}
						else
						{
							txtIGI.text = _configuracionPrecioProducto.costoFactorProducto.factorIGI.toString();
						}
						
						if( _configuracionPrecioProducto.costoFactorProducto.factorDTA == -1 )
						{
							txtDTA.text = '0';
						}
						else
						{
							txtDTA..text = _configuracionPrecioProducto.costoFactorProducto.factorDTA.toString();
						}
						
						
						if(_nivel == "Producto" || _nivel == "Precio lista")
						{
							if (_configuracionPrecioProducto.producto.licencia)
							{
								lblLicenciamiento.text = _configuracionPrecioProducto.producto.licencia + ':';
								
								if(_configuracionPrecioProducto.costoFactorProducto.montoLicencia > 0)
								{
									chkMontoLicenciamiento.selected = true;
									chkPorcentajeLicenciamiento.selected = false;
									
									txtPrecioLicenciamiento.text = _configuracionPrecioProducto.costoFactorProducto.montoLicencia.toString();
									numStepperLicenciamiento.value = 0;
								}
								else if(_configuracionPrecioProducto.costoFactorProducto.porcentajeLicencia > 0)
								{
									chkPorcentajeLicenciamiento.selected = true;
									chkMontoLicenciamiento.selected = false;
									
									numStepperLicenciamiento.value = _configuracionPrecioProducto.costoFactorProducto.porcentajeLicencia;
									txtPrecioLicenciamiento.text = '0';
								}
								else
								{
									txtPrecioLicenciamiento.text = '0';
									numStepperLicenciamiento.value = 0;
								}
							}
						}
						
					}
					//IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= IMPORTACIÓN================= 
					
					
					//GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ 
					if( _configuracionPrecioProducto.costoFactorProducto.costoConsularizacion == -1 )
					{
						txtConsularizacion.text = '0';
					}
					else
					{
						txtConsularizacion.text = _configuracionPrecioProducto.costoFactorProducto.costoConsularizacion.toString();
					}
					if( _configuracionPrecioProducto.costoFactorProducto.fleteDocumentacion == -1 )
					{
						txtFleteDocumentacion.text = '0';
					}
					else
					{
						txtFleteDocumentacion.text = _configuracionPrecioProducto.costoFactorProducto.fleteDocumentacion.toString();
					}
					if( _configuracionPrecioProducto.costoFactorProducto.permiso == -1 )
					{
						txtPermiso.text = '0';
					}
					else
					{
						txtPermiso.text = _configuracionPrecioProducto.costoFactorProducto.permiso.toString();
					}
					if(  _configuracionPrecioProducto.costoFactorProducto.almacenDestino == -1 )
					{
						txtAlmacenDestino.text = '0';
					}
					else
					{
						txtAlmacenDestino.text = _configuracionPrecioProducto.costoFactorProducto.almacenDestino.toString();
					}
					//GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================ GASTOS================
					
					
					
					//FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ 
					if( _configuracionPrecioProducto.costoFactorProducto.factorCostoFijo == -1 )
					{
						txtCostoFijo.text = '0';
					}
					else
					{
						txtCostoFijo.text = _configuracionPrecioProducto.costoFactorProducto.factorCostoFijo.toString();
					}
					//FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ FIJOS ================ 
					
					
					txtAAplus.text = _configuracionPrecioProducto.costoFactorProducto.factor_AAplus.toString();
					txtAA.text = _configuracionPrecioProducto.costoFactorProducto.factor_AA.toString();
					txtAM.text = _configuracionPrecioProducto.costoFactorProducto.factor_AM.toString();
					txtAB.text = _configuracionPrecioProducto.costoFactorProducto.factor_AB.toString();
					txtMA.text = _configuracionPrecioProducto.costoFactorProducto.factor_MA.toString();
					txtMM.text = _configuracionPrecioProducto.costoFactorProducto.factor_MM.toString();
					txtMB.text = _configuracionPrecioProducto.costoFactorProducto.factor_MB.toString();
					txtBajo.text = _configuracionPrecioProducto.costoFactorProducto.factor_Bajo.toString();
					
					
					if(_currentConfiguracionPrecio != null && _currentConfiguracionPrecio.restringirStock)
					{
						txtStock.textoOculto.text = "ND";
						txtStock.habilitaBoton = false;
					}
					else
					{
						if( _configuracionPrecioProducto.costoFactorProducto.stockDisable )
						{
							txtStock.habilitaBoton = false ;
							txtStock.textoOculto.text = 'NA';
						}
						else
						{
							txtStock.habilitaBoton = true ;
							txtStock.texto.text = _configuracionPrecioProducto.costoFactorProducto.factor_Stock.toString();
						}
					}
					
					if(_currentConfiguracionPrecio && _currentConfiguracionPrecio.restringirDistribuidor)
					{
						txtDistribuidor.text = "ND";
					}
					else
					{
						txtDistribuidor.text = _configuracionPrecioProducto.costoFactorProducto.factorDistribuidor.toString();
					}
					//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
					
					
					//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== 
					txtPublico.text = _configuracionPrecioProducto.costoFactorProducto.factorPublico.toString();
					//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== 
					
					
					//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ 
					/* 					if( _configuracionPrecioProducto.costoFactorProducto.factor_Comision == -1 )
					{
					txtComision.habilitaBoton = false ;
					txtComision.texto.text = '0';
					}
					else
					{
					txtComision.habilitaBoton = true ;
					txtComision.texto.text = _configuracionPrecioProducto.costoFactorProducto.factor_Comision.toString();
					} */
					//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ 
					
					
					//TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ 
					
					if (_respaldoConfiguracion.idProveedor != _nombreProveedor ) //|| _respaldoConfiguracion.nivel != _tipoNivel
					{
						btn0.currentState = "seleccionado";
						btn1.currentState = "normal";
						btn2.currentState = "normal";
						btn3.currentState = "normal";
						btn4.currentState = "normal";
						btn5.currentState = "normal";  
						_oldIndex = 0;
						_currentIndex = 0;
						_clickeado = "Local";
						_nombreProveedor = ObjectUtil.copy( _respaldoConfiguracion.idProveedor ) as Number;
					}
					setTiemposEntregas();
					//botoneraRutas.selectedIndex = 0;
					
					chkHabilitado.selected= txtConceptoFE.text != '0' || txtFE.text != '0' ? true:false;
					chkHabilitado2.selected= txtConceptoTENoTiene.text != '0' || txtTENoTiene.text != '0' || txtConceptoTESiTiene.text != '0' || txtTESiTiene.text != '0' ? true:false;
					
					_arrayCentroATE.ruta = "Centroamerica";
					_arrayForaneolTE.ruta = "Foraneo";
					_arrayGuadalajaraTE.ruta = "Guadalajara";
					_arrayLocalTE.ruta = "Local";
					_arrayRestoMundoTE.ruta = "Resto del mundo";
					_arraySudaTE.ruta = "Sudamerica";
					
					
					
					//TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ 
				}
				else
				{
					habilitarEdicionDeCampos(false);
				} 
			}
			
			
			private function seleccionaItemsCombos():void
			{
				if(cmbAgenteAduanal.visible)
					seleccionaCmbAgenteAduanal();
			}
			
			private var valorComboAgente:String;
			private function seleccionaCmbAgenteAduanal():void
			{
				
				if(cmbAgenteAduanal.dataProvider != null && cmbAgenteAduanal.dataProvider.length >0 )
				{
					if(_configuracionPrecioProducto.costoFactorProducto != null)
					{
						var key:String = StringUtil.trim(_configuracionPrecioProducto.costoFactorProducto.idAgenteAduanal +"_"+ _configuracionPrecioProducto.costoFactorProducto.idLugarAgenteAduanal);
						cmbAgenteAduanal.selectedIndex = cmbAgenteAduanal.seleccionarValor(key,"key");
						valorComboAgente = cmbAgenteAduanal.textInput.text;
						cmbAgenteAduanal.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
					}
				}
				else
				{
					setTimeout(seleccionaCmbAgenteAduanal,200);
				}
			}
			
			
			private var valorComboConceptos:String;
			private function seleccionaCmbConceptos():void
			{
				if(cmbConceptos.dataProvider != null && cmbConceptos.dataProvider.length > 0)
				{
					if(_configuracionPrecioProducto.costoFactorProducto != null)
					{
						cmbConceptos.selectedIndex = cmbConceptos.seleccionarValor(_configuracionPrecioProducto.costoFactorProducto.idLugarConceptoString,"idConcepto");
						valorComboConceptos = cmbConceptos.textInput.text;
						getVistaPresentacion();
					}
				}
				else
				{
					setTimeout(seleccionaCmbConceptos, 200);
				}
			}
			
			
			public function limpiaCampos():void
			{
				
				//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
				txtInputDescuento.text = '0';
				txtInputDescuento.errorString = '';
				txtInputFletePC.text = '0';
				txtInputFletePC.errorString= '';
				//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
				
				
				//IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ 
				
				/* MODIFICACION SLIDER
				slideValorAduana.setValue(0); */
				
				txtInputValorAduana.text = '0';
				txtInputValorAduana.errorString = '';
				numStepperPiezas.value = 1;
				numStepperPiezas.errorString= '';
				txtIGI.text = '0';
				txtIGI.errorString = '';
				txtDTA.text = '0';
				txtDTA.errorString = '';
				cmbAgenteAduanal.selectedIndex = 0;
				cmbAgenteAduanal.errorString = "";
				cmbConceptos.selectedIndex = 0;
				cmbConceptos.errorString = "";
				txtPrecioLicenciamiento.text ="0";
				txtPrecioLicenciamiento.errorString = "";
				numStepperLicenciamiento.value = 0;
				numStepperLicenciamiento.errorString = "";
				
				//IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ IMPORTACIÓN ============ 
				
				
				//GASTOS =============== GASTOS =============== GASTOS =============== GASTOS =============== GASTOS  =============== GASTOS =============== GASTOS
				txtConsularizacion.text = '0';
				txtConsularizacion.errorString = '';
				txtFleteDocumentacion.text = '0';
				txtFleteDocumentacion.errorString = '';
				txtPermiso.text = '0';
				txtPermiso.errorString = '';
				txtAlmacenDestino.text = '0';
				txtAlmacenDestino.errorString = '';
				//GASTOS =============== GASTOS =============== GASTOS =============== GASTOS =============== GASTOS  =============== GASTOS =============== GASTOS
				
				//FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== 
				txtCostoFijo.text = '0';
				txtCostoFijo.errorString = '';
				//FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== FIJOS =============== 
				
				//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
				txtAAplus.text = '0';
				txtAAplus.errorString = '';
				txtAA.text = '0';
				txtAA.errorString = '';
				txtAM.text = '0';
				txtAM.errorString = '';
				txtAB.text = '0';
				txtAB.errorString = '';
				txtMA.text = '0';
				txtMA.errorString = '';
				txtMM.text = '0';
				txtMM.errorString = '';
				txtMB.text = '0';
				txtMB.errorString = '';
				txtBajo.text = '0';
				txtBajo.errorString = '';
				
				
				if(_currentConfiguracionPrecio != null && _currentConfiguracionPrecio.restringirStock)
				{
					txtStock.texto.text = 'ND';
				}
				else
				{
					if(_configuracionPrecioProducto != null && _configuracionPrecioProducto.costoFactorProducto.stockDisable)
					{
						txtStock.texto.text = 'NA';
					}
					else
					{
						txtStock.texto.text = '0';
					}
				}
				
				if(_currentConfiguracionPrecio != null && _currentConfiguracionPrecio.restringirDistribuidor)
				{
					txtDistribuidor.text = 'ND';
				}
				else
				{
					txtDistribuidor.text = '0';
				}
				
				/* MODIFICACION FLETE EXPRES
				txtFleteExpress.texto.errorString = ''; */
				txtStock.texto.errorString = '';
				txtDistribuidor.errorString = '';
				//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
				
				
				//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO ===========
				txtPublico.text = '0';
				txtPublico.errorString = '';
				//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO ===========
				
				
				//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
				/* 				txtComision.texto.text = '0';
				txtComision.texto.errorString = ''; */
				//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
				
				
				//TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== 
				datosTE_NR = new DatosTiempoEntrega();
				datosTE_ReqNoTiene = new DatosTiempoEntrega();
				datosTE_ReqSiTiene = new DatosTiempoEntrega();
				
				txtConceptoTESiTiene.errorString =  txtTESiTiene.errorString = txtTESiTiene_1.errorString = '';
				txtConceptoTENoTiene.errorString = txtTENoTiene.errorString = txtTENoTiene_1.errorString = '';
				txtConceptoFE.errorString = txtFE.errorString = txtFE1.errorString = '';
				//TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== 
				
				//lblPrecioLista.text = ''; 
				//lblTituloSeccion.text = "";
				//habilitaTextos(false);
				//habilitarEdicionDeCampos(false);
				
				//botoneraBarra.selectedIndex = 0;
				botoneraBarra_clickHandler();
				isGobieno = true;
			}
			
			
			private var indiceSeleccionadoAnterior:int = 0;
			protected function botoneraBarra_clickHandler():void
			{
				if( botoneraBarra.selectedItem != undefined )
				{
					stack.selectedIndex =botoneraBarra.selectedIndex;
					indiceSeleccionadoAnterior =botoneraBarra.selectedIndex ;
				}else
				{
					botoneraBarra.selectedIndex = indiceSeleccionadoAnterior;
				}
			}
			
			
			private function validarTodosLosCampos():Boolean
			{
				var arrayAllIsValid:Array = new Array;
				
				
				//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtInputDescuento)); 
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtInputFletePC)); 
				//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
				
				//IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================
				if(grpImportacion.visible)
				{
					if(chkMontoUnidad.selected)
					{
						arrayAllIsValid.push(validarNumPositivoMayorACeroNoVacio(numStepperPiezas)); //<-- Esto no servia de porsi
					}
					else//esta seleccionado Monto en el chkMontoUnidad
					{
						arrayAllIsValid.push(validarTextoValorEnAduana());
					}
					
					arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtIGI));  
					arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtDTA)); 
					arrayAllIsValid.push(validarComboConceptosAA());
					
					if(grpLincenciamiento.visible)
					{
						if(chkMontoLicenciamiento.selected)
						{
							arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtPrecioLicenciamiento));
						}
						else
						{
							arrayAllIsValid.push(validarNumPositivoMayorACeroNoVacio(numStepperLicenciamiento));
						}
					}
				}
				//IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================
				
				
				//GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS==============
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtConsularizacion)); 
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtFleteDocumentacion));
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtPermiso)); 
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtAlmacenDestino));
				//GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS==============
				
				
				//FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS =================
				arrayAllIsValid.push(validarPorcetajePositivoNoVacio(txtCostoFijo));
				//FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS =================
				
				
				//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtAAplus));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtAA));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtAM));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtAB));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtMA));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtMM));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtMB));
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtBajo));
				
				if(!_currentConfiguracionPrecio.restringirStock)
					arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtStock));
				if(!_currentConfiguracionPrecio.restringirDistribuidor)
					arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtDistribuidor));
				//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
				
				
				//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO ===========
				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtPublico));
				//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO ===========
				
				
				//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
				/* 				arrayAllIsValid.push(validarPorcetajeNegativoNoVacio(txtComision.texto)); */
				//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
				
				
				//TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA
				arrayAllIsValid.push( validarTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega));
				arrayAllIsValid.push( validarTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene));
				arrayAllIsValid.push( validarTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene));
				//TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA ================ TIEMPO ENTREGA
				
				
				for (var i:int = 0; i < arrayAllIsValid.length; i++) 	
				{
					if(!arrayAllIsValid[i])
					{
						return false;
					}
				}
				
				return true;
			}
			
			protected function guardaConfiguracion():void 
			{
				var evt:EventoCatProOferta = new EventoCatProOferta( EventoCatProOferta.GUARDA_CONFIGURACION_VISTA );
				var  config:ConfiguracionPrecioProducto = new ConfiguracionPrecioProducto();
				config =_configuracionPrecioProducto;	
				
				if(!validarTodosLosCampos())
				{
					alertaSingleton.show("Algunos de los datos que se han introducido no son válidos, favor de verificarlos.",catalogoAlertas.ADV_informacionIncompleta);
					return;
				}
				else
				{
					
					//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
					config.costoFactorProducto.factorDescuento = parseFloat(txtInputDescuento.text);
					config.costoFactorProducto.factorFletePC = parseFloat(txtInputFletePC.text);
					//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
					
					
					//IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ 
					if(grpImportacion.visible)
					{
						if(!chkMontoUnidad.selected)//esta seleccionado Monto en el chkMontoUnidad
						{
							config.costoFactorProducto.factorValorEnAduana = parseFloat(txtInputValorAduana.text);
							config.costoFactorProducto.piezas = 0;
						}
						else // Esta seleccionado el valor Unidad en el chkMontoUnidad
						{
							config.costoFactorProducto.factorValorEnAduana = -1;
							config.costoFactorProducto.piezas = numStepperPiezas.value;
						} 
						
						config.costoFactorProducto.factorIGI = parseFloat( txtIGI.text );
						
						config.costoFactorProducto.factorDTA = parseFloat( txtDTA.text );
						
						if(cmbAgenteAduanal.dataProvider == null)
						{
							config.costoFactorProducto.idAgenteAduanal = 0;
							config.costoFactorProducto.idLugarAgenteAduanal = 0;
						}
						else
						{
							config.costoFactorProducto.idAgenteAduanal = cmbAgenteAduanal.selectedItem.idAgenteAduanal;
							config.costoFactorProducto.idLugarAgenteAduanal = cmbAgenteAduanal.selectedItem.idLugar;
						}
						
						if(cmbConceptos.dataProvider == null){
							config.costoFactorProducto.idLugarConcepto = 0;
						}else{
							config.costoFactorProducto.idLugarConcepto  = cmbConceptos.selectedItem.idConcepto;
						}
						
						if(grpLincenciamiento.visible)
						{
							if (chkMontoLicenciamiento.selected){
								config.costoFactorProducto.montoLicencia = parseFloat( txtPrecioLicenciamiento.text);
								config.costoFactorProducto.porcentajeLicencia = 0;
							}else{
								config.costoFactorProducto.montoLicencia = 0;
								config.costoFactorProducto.porcentajeLicencia = numStepperLicenciamiento.value;
							}
						}
					}
					//IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================ IMPORTACIÓN ================
					
					
					
					//GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== 
					config.costoFactorProducto.costoConsularizacion = parseFloat( txtConsularizacion.text );
					
					config.costoFactorProducto.fleteDocumentacion = parseFloat( txtFleteDocumentacion.text );
					
					config.costoFactorProducto.permiso = parseFloat( txtPermiso.text );
					
					config.costoFactorProducto.almacenDestino = parseFloat( txtAlmacenDestino.text );
					//GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== GASTOS============== 
					
					
					
					//FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= 
					config.costoFactorProducto.factorCostoFijo = parseFloat( txtCostoFijo.text );
					//FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= 
					
					
					
					//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
					config.costoFactorProducto.factor_AAplus = Number( txtAAplus.text );
					config.costoFactorProducto.factor_AA = Number( txtAA.text );
					config.costoFactorProducto.factor_AM = parseFloat( txtAM.text );
					config.costoFactorProducto.factor_AB = parseFloat( txtAB.text );
					config.costoFactorProducto.factor_MA = parseFloat( txtMA.text );
					config.costoFactorProducto.factor_MM = parseFloat( txtMM.text );
					config.costoFactorProducto.factor_MB = parseFloat( txtMB.text );
					config.costoFactorProducto.factor_Bajo = parseFloat( txtBajo.text );
					
					if(_currentConfiguracionPrecio.restringirStock)
					{
						config.costoFactorProducto.factor_Stock = 0;
					}
					else
					{
						if( txtStock.habilitaBoton ){
							config.costoFactorProducto.stockDisable = false;
							config.costoFactorProducto.factor_Stock = parseFloat( txtStock.texto.text );
						}else{
							config.costoFactorProducto.stockDisable = true;
							config.costoFactorProducto.factor_Stock = 0;
						}
					}
					
					if(_currentConfiguracionPrecio.restringirDistribuidor)
					{
						config.costoFactorProducto.factorDistribuidor = 0;
					}
					else
					{
						config.costoFactorProducto.factorDistribuidor = parseFloat( txtDistribuidor.text );
					}
					//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
					
					
					//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== 
					config.costoFactorProducto.factorPublico = parseFloat( txtPublico.text );
					//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== 
					
					
					//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
					/* 					if( txtComision.habilitaBoton ){
					config.costoFactorProducto.factor_Comision= parseFloat( txtComision.texto.text );
					}else{
					config.costoFactorProducto.factor_Comision = -1;
					}  */
					//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
					
					//TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ==============
					
					config.tiempoEntregaRuta = new ArrayCollection();
					guardarValoresTiempoEntrega(_currentIndex);
					config.tiempoEntregaRuta.addItem(_arrayLocalTE );
					config.tiempoEntregaRuta.addItem(_arrayGuadalajaraTE );
					config.tiempoEntregaRuta.addItem(_arrayForaneolTE );
					config.tiempoEntregaRuta.addItem(_arrayCentroATE );
					config.tiempoEntregaRuta.addItem(_arraySudaTE );
					config.tiempoEntregaRuta.addItem(_arrayRestoMundoTE );
					
					/* config.tentregaProducto.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
					config.tentregaProducto.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
					config.tentregaProducto.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega); */
					
					//TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ==============
					
					
					// SE AGREGAN LOS BOLEANOS DE LOS CHECKS
					config.compuestaCostoF = chkFactorFijo.selected;
					config.compuestaFactorU = chkUtilidad.selected;
					
					habilitarEdicionDeCampos(false);
					evt.configuracionPrecioProducto = new ConfiguracionPrecioProducto();
					evt.configuracionPrecioProducto = config;
					indiceSeleccionadoAnterior = botoneraBarra.selectedIndex;
					dispatchEvent( evt );
				}
			}
			
			
			private function generarConceptoTiempoEntrega($chekbox:IVisualElement ,$campo0:IVisualElement,$campo1:IVisualElement,$campo2:IVisualElement,$combo:IVisualElement):String
			{
				var _concepto:String = "";
				var _check:CheckBox = $chekbox as CheckBox;
				var _campo0:TextInput = $campo0 as TextInput;
				var _campo1:TextInput = $campo1 as TextInput;
				var _campo2:TextInput = $campo2 as TextInput;
				var _combo:ComboCatalogos = $combo as ComboCatalogos;
				
				if (_check.selected)
				{
					_concepto =  _campo1.text +' a '+ _campo2.text +' '+ _combo.selectedItem.valor2;
				}
				else
				{
					_concepto = _campo0.text +' '+ _combo.selectedItem.valor2;
				}
				
				return _concepto;
			}
			
			
			private var _popUpModificaPrecio:CatProOferta_PopUp_ModificacionPrecio;
			protected function abrirPopCambioDePrecio():void
			{
				var app:DisplayObject = FlexGlobals.topLevelApplication as DisplayObject;
				if( _popUpModificaPrecio == null )
				{
					_popUpModificaPrecio = CatProOferta_PopUp_ModificacionPrecio( PopUpManager.createPopUp( app, CatProOferta_PopUp_ModificacionPrecio, true ) );
					_popUpModificaPrecio.addEventListener("CerrarElPopupCatProOferta_ModificacionPrecio_PopUp",escucharPeticionCerrarPopUpCambioDePrecio,false,0,true);
				}
				else
				{
					PopUpManager.addPopUp( _popUpModificaPrecio, app, true);
				}
				_popUpModificaPrecio.recibeConfiguracion(_configuracionPrecioProducto, _nivel,currentProveedor );
				PopUpManager.centerPopUp(_popUpModificaPrecio);
				
				
				if(_nivel != "Generales")
				{
					var solicitarCostoProducto:EventoCatProOferta = new EventoCatProOferta (EventoCatProOferta.OBTENER_EL_COSTO_DEL_PRODUCTO_COMPRA);
					solicitarCostoProducto.idProducto = _configuracionPrecioProducto.producto.idProducto;
					
					dispatchEvent(solicitarCostoProducto);
				}
			}
			
			protected function escucharPeticionCerrarPopUpCambioDePrecio(eve:Event = null):void
			{
				PopUpManager.removePopUp(_popUpModificaPrecio);
				_popUpModificaPrecio = null;
			}
			
			///cuando se modifica un precio desde el pop up de precio
			public function set confirmaCambioPrecio( $dato:Boolean ):void
			{
				if( $dato )
				{
					/* var evt:EventoCatProOferta = new EventoCatProOferta( EventoCatProOferta.OBTENER_CONFIGURACIONES_PRECIO_PRODUCTO );
					evt.idConfiguracion = _configuracionPrecioProducto.idConfiguracionFamilia;
					dispatchEvent( evt ); */
					
					
					dispatchEvent(new EventoAuxiliarEnLaActualizacion(EventoAuxiliarEnLaActualizacion.SOLICITAR_ACTUALIZACION_DE_LAS_CONFIGURACIONES));
					
					_popUpModificaPrecio.cerrar();
				}
			}
			
			protected function retornaConfiguracion(event:MouseEvent):void
			{
				var evt:EventoCatProOferta = new EventoCatProOferta( EventoCatProOferta.RESTABLECER );
				
				if(_nivel == "Producto")
				{
					evt.idConfiguracion =_configuracionPrecioProducto.idConfiguracion;
				}
				else if(_nivel == "Clasificacion")
				{
					evt.idConfiguracion =_configuracionPrecioProducto.idConfiguracion;
				}
				else
				{
					evt.idConfiguracion =_configuracionPrecioProducto.idConfiguracionCosto;
				}
				evt.nivel =_configuracionPrecioProducto.nivel;
				
				evt.ventana = "CatProveedor_Oferta_Restablecer "+_nivel+"( idProveedor:"+_idProveedor+", idConf:"+evt.idConfiguracion+" )";
				dispatchEvent( evt );
			}
			
			public function set confirmaRestableceConfiguracion( $dato:Boolean ):void
			{
				if( $dato )
				{
					/* var evt:EventoCatProOferta = new EventoCatProOferta( EventoCatProOferta.OBTENER_CONFIGURACIONES_PRECIO_PRODUCTO );
					evt.idConfiguracion = _configuracionPrecioProducto.idConfiguracionFamilia;
					dispatchEvent( evt ); */
					
					dispatchEvent(new EventoAuxiliarEnLaActualizacion(EventoAuxiliarEnLaActualizacion.SOLICITAR_ACTUALIZACION_DE_LAS_CONFIGURACIONES));
					
					if( _popUpModificaPrecio != null ){
						_popUpModificaPrecio.cerrar();
					}
				}
			}
			
			protected function habilitarEdicionDeCampos($seEstaEditando:Boolean,$cancelarGuardado:Boolean=false):void
			{
				var ert:EventoCatProOferta = new EventoCatProOferta(EventoCatProOferta.CAMBIA_VISTA_EDICION);
				ert.vistaEdicion = $seEstaEditando;
				dispatchEvent( ert);
				
				if( $seEstaEditando )
				{
					grupoBotonesCancelarGuardar.visible = grupoBotonesCancelarGuardar.includeInLayout = true;
					vista_edicion.visible = vista_edicion.includeInLayout = true;
					vista_presentacion.visible = vista_presentacion.includeInLayout = false;
					btnEditar.visible = false;
					habilitaTextos(true);
				}
				else
				{
					limpiaCampos();
					if($cancelarGuardado)
					{
						cancelaGuardado();
					}
					habilitaTextos(false);
					grupoBotonesCancelarGuardar.visible = grupoBotonesCancelarGuardar.includeInLayout = false;
					btnEditar.visible = true;
					vista_edicion.visible = vista_edicion.includeInLayout = false;
					vista_presentacion.visible = vista_presentacion.includeInLayout = true;
				} 
			}
			
			private function habilitaTextos(seHabilita:Boolean):void
			{
				
				//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ==============
				txtInputDescuento.editable = seHabilita;
				txtInputFletePC.editable = seHabilita;
				//DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== DESCUENTO Y FLETES ============== 
				
				//IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ==============
				if(grpImportacion.visible)
				{
					if(seHabilita && !chkMontoUnidad.selected)
					{
						chkMontoUnidad.enabled = true;
						txtInputValorAduana.editable = true;
						txtInputValorAduana.enabled = true;
						numStepperPiezas.enabled = false;
						numStepperPiezas.mouseChildren = false;
						numStepperPiezas.textDisplay.editable = false;
						
						/* MODIFICACION SLIDER
						slideValorAduana.enabled = true; */
						
					}
					else if(seHabilita && chkMontoUnidad.selected)
					{
						chkMontoUnidad.enabled = true;
						txtInputValorAduana.editable = false;
						txtInputValorAduana.enabled = false;
						numStepperPiezas.enabled = true;
						numStepperPiezas.mouseChildren = true;
						numStepperPiezas.textDisplay.editable = true;
						
						/* MODIFICACION SLIDER
						slideValorAduana.enabled = false; */
					}
					else
					{
						
						chkMontoUnidad.enabled = false;
						if(chkMontoUnidad.selected && !seHabilita)
						{
							numStepperPiezas.textDisplay.editable = false;
							numStepperPiezas.mouseChildren = false;
							numStepperPiezas.enabled = true;
							txtInputValorAduana.enabled = false;
							txtInputValorAduana.editable = false;
							
							/* MODIFICACION SLIDER
							slideValorAduana.enabled = false; */
						}
						else if(!chkMontoUnidad.selected && !seHabilita)
						{
							numStepperPiezas.textDisplay.editable = false;
							numStepperPiezas.mouseChildren = false; 
							numStepperPiezas.enabled = false;
							txtInputValorAduana.enabled = true;
							txtInputValorAduana.editable = false;
							
							/* MODIFICACION SLIDER
							slideValorAduana.enabled = false; */
						}
					}
					
					
					txtIGI.editable =  seHabilita;
					txtDTA.editable =  seHabilita;
					cmbAgenteAduanal.openButton.enabled = cmbAgenteAduanal.textInput.enabled = cmbAgenteAduanal.focusEnabled =  seHabilita;
					cmbConceptos.openButton.enabled = cmbConceptos.textInput.enabled = cmbConceptos.focusEnabled =  seHabilita;
					
					chkMontoLicenciamiento.enabled = seHabilita;
					chkPorcentajeLicenciamiento.enabled = seHabilita;
					
					if(seHabilita)
					{
						if(chkMontoLicenciamiento.selected)
						{
							txtPrecioLicenciamiento.editable = true;
							txtPrecioLicenciamiento.mouseEnabled = true;
							txtPrecioLicenciamiento.focusEnabled = true;
							
							numStepperLicenciamiento.textDisplay.editable = false;
							numStepperLicenciamiento.mouseChildren = false;  
							numStepperLicenciamiento.mouseEnabled = false;
							numStepperLicenciamiento.focusEnabled = false;
						}
						else if(chkPorcentajeLicenciamiento.selected)
						{
							txtPrecioLicenciamiento.editable = false;
							txtPrecioLicenciamiento.mouseEnabled = false;
							txtPrecioLicenciamiento.focusEnabled = false;
							
							numStepperLicenciamiento.textDisplay.editable = true;
							numStepperLicenciamiento.mouseChildren = true;  
							numStepperLicenciamiento.mouseEnabled = true;
							numStepperLicenciamiento.focusEnabled = true;
						}
					}
					else
					{
						txtPrecioLicenciamiento.editable = seHabilita;
						numStepperLicenciamiento.textDisplay.editable = seHabilita;
						numStepperLicenciamiento.mouseChildren = seHabilita;  
						numStepperLicenciamiento.mouseEnabled = seHabilita;
						numStepperLicenciamiento.focusEnabled = seHabilita;
					}
					
				}
				//IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== IMPORTACIÓN ============== 
				
				
				//GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= GASTOS =================
				/* txtConsularizacion.habilitaClickBotonFuncion(seHabilita); */
				txtConsularizacion.editable =  seHabilita;
				/* txtFleteDocumentacion.habilitaClickBotonFuncion(seHabilita); */
				txtFleteDocumentacion.editable =  seHabilita;
				/* txtPermiso.habilitaClickBotonFuncion(seHabilita); */
				txtPermiso.editable =  seHabilita;
				/* txtAlmacenDestino.habilitaClickBotonFuncion(seHabilita); */
				txtAlmacenDestino.editable =  seHabilita;
				//GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= GASTOS ================= 
				
				
				//FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= 
				/* txtCostoFijo.habilitaClickBotonFuncion(seHabilita); */
				txtCostoFijo.editable =  seHabilita;
				chkFactorFijo.enabled = seHabilita;
				//FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= FIJOS ================= 
				
				
				//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
				chkUtilidad.enabled = seHabilita;
				txtAAplus.editable =  seHabilita;
				txtAA.editable =  seHabilita;
				txtAM.editable =  seHabilita;
				txtAB.editable =  seHabilita;
				txtMA.editable=  seHabilita;
				txtMM.editable =  seHabilita;
				txtMB.editable = seHabilita;
				
				txtBajo.editable = seHabilita;
				
				if(_currentConfiguracionPrecio != null)
				{
					
					/* MODIFICACION FLETE EXPRES
					if(_currentConfiguracionPrecio.restringirFExpress)
					{
					txtFleteExpress.enabled = false;
					txtFleteExpress.habilitaClickBotonFuncion(false);
					}
					else
					{
					txtFleteExpress.enabled = true;
					txtFleteExpress.habilitaClickBotonFuncion(seHabilita);
					txtFleteExpress.editable =  seHabilita;
					} */
					
					if(_currentConfiguracionPrecio.restringirStock)
					{
						
						txtStock.enabled = false;
						txtStock.habilitaClickBotonFuncion(false);
					}
					else
					{
						txtStock.enabled = true;
						txtStock.habilitaClickBotonFuncion(seHabilita);
						txtStock.editable =  seHabilita;
					}
					
					if(_currentConfiguracionPrecio.restringirDistribuidor)
					{
						txtDistribuidor.enabled =  false;
					}
					else
					{
						txtDistribuidor.enabled =  true;
						txtDistribuidor.editable =  seHabilita;
					}
				}
				//UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================ UTILIDAD PRIVADO ================
				
				
				//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO ===========
				txtPublico.editable =  seHabilita;
				//UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO =========== UTILIDAD PÚBLICO ===========
				
				
				//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
				/* 				txtComision.habilitaClickBotonFuncion(seHabilita);
				txtComision.editable =  seHabilita; */
				//COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================ COMISIÓN ================
				
				
				//TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ==============
				lblHabilitado.visible = seHabilita ? false: true;
				chkHabilitado.visible = seHabilita;
				lblHabilitado2.visible = seHabilita ? false: true;
				chkHabilitado2.visible = seHabilita;
				verficaChkHabilitado(seHabilita);
				
				//TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ============== TIEMPO ENTREGA ==============
				
			}
			
			private function verficaChkHabilitado(seHabilita:Boolean):void
			{
				if (seHabilita && chkHabilitado2.selected)
				{
					chkTESiTiene.enabled = true;
					txtConceptoTESiTiene.enabled = true;
					txtTESiTiene.enabled = true;
					txtTESiTiene_1.enabled = true;
					cmbTESiTiene.enabled = true;
					
					chkTENoTiene.enabled = true;
					txtConceptoTENoTiene.enabled = true;
					txtTENoTiene.enabled = true;
					txtTENoTiene_1.enabled = true;
					cmbTENoTiene.enabled = true;
				}
				else
				{
					chkTESiTiene.enabled = false;
					txtConceptoTESiTiene.enabled = false;
					txtTESiTiene.enabled = false;
					txtTESiTiene_1.enabled = false;
					cmbTESiTiene.enabled = false;
					
					chkTENoTiene.enabled = false;
					txtConceptoTENoTiene.enabled = false;
					txtTENoTiene.enabled = false;
					txtTENoTiene_1.enabled = false;
					cmbTENoTiene.enabled = false;
				}
				
				if (seHabilita && chkHabilitado.selected)
				{
					chkTENorequiere.enabled = true;
					txtConceptoFE.enabled = true;
					txtFE.enabled = true;
					txtFE1.enabled = true;
					cmbNRPTiempoEntrega.enabled = true;
				}
				else
				{
					chkTENorequiere.enabled = false;
					txtConceptoFE.enabled = false;
					txtFE.enabled = false;
					txtFE1.enabled = false;
					cmbNRPTiempoEntrega.enabled = false;
					
				}
			}
			public function cancelaGuardado():void{
				_configuracionPrecioProducto = ObjectUtil.copy( _respaldoConfiguracion ) as ConfiguracionPrecioProducto;
				seteaTextos();
				seleccionaItemsCombos();
				getVistaPresentacion();
			}
			
			protected function txtInputBlancoDefaultPQNet_enterHandler(event:FlexEvent):void
			{
				if(StringUtil.trim(txtInputValorAduana.text).length > 0)
				{
					/* MODIFICACION SLIDER
					slideValorAduana.setValue(Number(txtInputValorAduana.text)); */
				}
			}
			
			protected function txtInputValorAduana_focusOutHandler(event:FocusEvent):void
			{
				if(!chkMontoUnidad.selected)
				{
					validarTextoValorEnAduana();
				}
			} 
			
			protected function chkMontoUnidad_clickHandler(event:MouseEvent):void
			{
				if(chkMontoUnidad.selected) // Está seleccionado unidad
				{
					/* MODIFICACION SLIDER
					slideValorAduana.enabled = false;
					slideValorAduana.setValue(0); */
					
					txtInputValorAduana.text='0';
					txtInputValorAduana.enabled = false;
					txtInputValorAduana.editable = false;
					txtInputValorAduana.errorString ='';
					
					numStepperPiezas.enabled = true;
					numStepperPiezas.mouseChildren = true;
					numStepperPiezas.textDisplay.editable = true;
					numStepperPiezas.errorString = '';
					
					
					if(_configuracionPrecioProducto.costoFactorProducto.piezas <= 0 )
					{
						numStepperPiezas.value = 1;
					}
					else
					{
						numStepperPiezas.value = _configuracionPrecioProducto.costoFactorProducto.piezas;
					}
				}
				else
				{
					/* MODIFICACION SLIDER
					slideValorAduana.enabled = true; */
					
					txtInputValorAduana.enabled = true;
					txtInputValorAduana.editable = true;
					txtInputValorAduana.errorString = '';
					
					numStepperPiezas.enabled = false;
					numStepperPiezas.mouseChildren = false;
					numStepperPiezas.value = 1;
					numStepperPiezas.errorString = '';
					
					if(_configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana >= 0)
					{
						/* MODIFICACION SLIDER
						slideValorAduana.setValue(_configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana); */
						txtInputValorAduana.text = _configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana.toString();
					}
					else
					{
						/* MODIFICACION SLIDER
						slideValorAduana.setValue(0); */
						txtInputValorAduana.text = '0';
					}
				}
			}
			
			protected function cmbAgenteAduanal_changingHandler(event:IndexChangeEvent):void
			{
				if(cmbAgenteAduanal.selectedItem)
				{
					cmbConceptos.solicitarListaConceptosAA("--NINGUNO--",cmbAgenteAduanal.selectedItem.idLugar);
					if(cmbAgenteAduanal.selectedItem.idLugar > 0)
						seleccionaCmbConceptos();
					cmbConceptos.errorString ="";
				}
			}
			
			protected function validarPorcetajeNegativoNoVacio($txtInput:IVisualElement):Boolean
			{
				var error:ValidationResultEvent;
				
				if($txtInput != null && $txtInput is TextInput)
				{
					var currentTxtInput:TextInput = $txtInput as TextInput;
					validatorPorcentajeNegativo.listener = currentTxtInput;
					error = validatorPorcentajeNegativo.validate(currentTxtInput.text);
				}
				else if($txtInput != null && $txtInput is textInputOpcional)
				{
					var currentTxtInputOpcional:textInputOpcional = $txtInput as textInputOpcional;
					if(currentTxtInputOpcional.habilitaBoton)
					{
						validatorPorcentajeNegativo.listener = currentTxtInputOpcional.texto;
						error = validatorPorcentajeNegativo.validate(currentTxtInputOpcional.texto.text);
					}
				}
				
				if(error == null || error.results == null)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			
			protected function validarTiempoEntrega($chekbox:IVisualElement ,$campo0:IVisualElement,$campo1:IVisualElement,$campo2:IVisualElement,$combo:IVisualElement):Boolean
			{
				var error:ValidationResultEvent;
				var conteoErrores:Array = new Array();
				var currentElement:TextInput;
				var currentElement1:TextInput;
				
				if ($chekbox is CheckBox && $campo0 is TextInput && $campo1 is TextInput && $campo2 is TextInput && $combo is ComboCatalogos )
				{
					($campo0 as TextInput).errorString = '';
					($campo1 as TextInput).errorString = '';
					($campo2 as TextInput).errorString = '';
					if (($chekbox as CheckBox).selected)
					{
						if ( parseInt( ($campo1 as TextInput).text) == 0 || parseInt( ($campo2 as TextInput).text) ==0)
						{
							if (($campo1 as TextInput).text == '0')
							{
								($campo1 as TextInput).errorString = "El valor tiene que ser mayor a 0."
							}
							else
							{
								($campo2 as TextInput).errorString = "El valor tiene que ser mayor a 0."
							}
							conteoErrores.push(false);
						}
						else
						{
							if ( parseInt( ($campo1 as TextInput).text) > parseInt( ($campo2 as TextInput).text))
							{
								($campo1 as TextInput).errorString = "El valor tiene que ser menor a " + ($campo2 as TextInput).text;
								($campo2 as TextInput).errorString = "El valor tiene que ser mayor a " + ($campo1 as TextInput).text;
								conteoErrores.push(false);
							}
							else
							{
								currentElement = $campo1 as TextInput; 
								currentElement1 = $campo2 as TextInput; 
								if (($combo as ComboCatalogos).selectedItem.valor == 'MESES')
								{
									if(currentElement is TextInput)
									{
										validarTexMaximoMeses.listener = currentElement;
										error = validarTexMaximoMeses.validate(currentElement.text);
										conteoErrores.push(error == null || error.results == null ? true:false);
									}
									if(currentElement1 is TextInput)
									{
										validarTexMaximoMeses.listener = currentElement1;
										error = validarTexMaximoMeses.validate(currentElement1.text);
										conteoErrores.push(error == null || error.results == null ? true:false);
									}
								}
								else
								{
									if(currentElement is TextInput)
									{
										validarTextInputTiempoEntrega.listener = currentElement;
										error = validarTextInputTiempoEntrega.validate(currentElement.text);
										conteoErrores.push(error == null || error.results == null ? true:false);
									}
									if(currentElement1 is TextInput)
									{
										validarTextInputTiempoEntrega.listener = currentElement1;
										error = validarTextInputTiempoEntrega.validate(currentElement1.text);
										conteoErrores.push(error == null || error.results == null ? true:false);
									}
								}
							}
						}
					}
					else
					{
						currentElement = $campo0 as TextInput; 
						if (($combo as ComboCatalogos).selectedItem.valor == 'MESES')
						{
							if($campo0 is TextInput)
							{
								validarTexMaximoMeses.listener = currentElement;
								error = validarTexMaximoMeses.validate(currentElement.text);
								conteoErrores.push(error == null || error.results == null ? true:false);
							}
						}
						else
						{
							if($campo0 is TextInput)
							{
								validarTextInputTiempoEntrega.listener = currentElement;
								error = validarTextInputTiempoEntrega.validate(currentElement.text);
								conteoErrores.push(error == null || error.results == null ? true:false);
							}
						}
					}
				}
				else
				{
					conteoErrores.push(false);
				}
				
				
				for (var i:int = 0; i < conteoErrores.length; i++) 	
				{
					if(!conteoErrores[i])
					{
						return false;
					}
				}
				return true;
			}
			
			protected function validarPorcetajePositivoNoVacio($txtInput:IVisualElement):Boolean
			{
				var error:ValidationResultEvent;
				
				if($txtInput != null && $txtInput is TextInput)
				{
					var currentTxtInput:TextInput = $txtInput as TextInput;
					validatorPorcentajePositivo.listener = currentTxtInput;
					error = validatorPorcentajePositivo.validate(currentTxtInput.text);
				}
				else if($txtInput != null && $txtInput is textInputOpcional)
				{
					var currentTxtInputOpcional:textInputOpcional = $txtInput as textInputOpcional;
					if(currentTxtInputOpcional.habilitaBoton)
					{
						validatorPorcentajePositivo.listener = currentTxtInputOpcional.texto;
						error = validatorPorcentajePositivo.validate(currentTxtInputOpcional.texto.text);
					}
				}
				
				if(error == null || error.results == null)
					return true;
				else
					return false;
			}
			
			protected function validarDlsPositivoNoVacio($txtInput:IVisualElement):Boolean
			{
				var error:ValidationResultEvent;
				
				if($txtInput != null && $txtInput is TextInput)
				{
					var currentTxtInput:TextInput = $txtInput as TextInput;
					validatorDlsPositivo.listener = currentTxtInput;
					error = validatorDlsPositivo.validate(currentTxtInput.text);
				}
				else if($txtInput != null && $txtInput is textInputOpcional)
				{
					var currentTxtInputOpcional:textInputOpcional = $txtInput as textInputOpcional;
					if(currentTxtInputOpcional.habilitaBoton)
					{
						validatorDlsPositivo.listener = currentTxtInputOpcional.texto;
						error = validatorDlsPositivo.validate(currentTxtInputOpcional.texto.text);
					}
				}
				
				if(error == null || error.results == null)
					return true;
				else
					return false;
			}
			
			protected function validarNumPositivoMayorACeroNoVacio($objetoVisual:IVisualElement):Boolean
			{
				var error:ValidationResultEvent;
				
				/* if($objetoVisual != null)
				{
				if($objetoVisual is NumericStepper)
				{
				var currentElement:NumericStepperDefaultPQNet = $objetoVisual as NumericStepperDefaultPQNet; 
				
				if(currentElement.id == "numStepperPiezas")
				{
				validatorEnteroPositivoNoVacioMayorACero.listener = currentElement;
				error = validatorEnteroPositivoNoVacioMayorACero.validate(currentElement.value.toString());
				}
				else if(currentElement.id == "numStepperLicenciamiento")
				{
				
				}
				
				}
				} */
				
				if(error == null || error.results == null)
					return true;
				else
					return false;
			}
			
			
			protected function validarComboConceptosAA():Boolean
			{
				if(cmbAgenteAduanal.dataProvider != null )
				{
					
					if(cmbConceptos.dataProvider == null || (cmbConceptos.dataProvider != null && cmbConceptos.dataProvider.length == 1))
					{
						if(cmbAgenteAduanal.selectedIndex > 0 )
						{
							cmbConceptos.errorString = "No existen conceptos para el agente aduanal seleccionado.";
							return false;
						}
						else
						{
							cmbConceptos.errorString = "";
						}
					}
					else
					{
						if(cmbAgenteAduanal.selectedIndex > 0 && cmbConceptos.selectedIndex == 0 )
						{
							cmbConceptos.errorString = "Es necesario indicar un concepto para el agente aduanal seleccionado.";
							return false;
						}
						else
						{
							cmbConceptos.errorString = "";
						}
					}	
				}
				return true;
			}
			
			protected function validarTextoValorEnAduana():Boolean
			{
				var esValido:Boolean = true;
				//ESTO SÓLO ES PARA ASEGURAR QUE EL NUMÉRO INTRODUCIDO NO DE PASE DEL MAXÍMO QUE PERMITE LA BARRA/SLIDER DEL VALOR EN ADUANA 
				if(StringUtil.trim(txtInputValorAduana.text).length > 0)
				{
					/*MODIFICACION SLIDER
					var valor:Number = Number(txtInputValorAduana.text);
					if(valor > slideValorAduana.maximum)
					{
					slideValorAduana.setValue(slideValorAduana.maximum);
					}
					else
					{
					slideValorAduana.setValue(valor);
					} */
				}
				
				var currentValorEnAduanaString:String = StringUtil.trim(txtInputValorAduana.text); 
				validatorPorcentajePositivo.listener = txtInputValorAduana;
				var errores:ValidationResultEvent = validatorPorcentajePositivo.validate(txtInputValorAduana.text);
				
				if(errores.results == null)
				{
					var valorEnAduana:Number = Number(currentValorEnAduanaString);
					
					if(cmbAgenteAduanal.dataProvider != null && cmbAgenteAduanal.dataProvider.length > 1 && cmbAgenteAduanal.selectedItem.key == "0_0")
					{
						for (var i:int = 1; i < cmbAgenteAduanal.dataProvider.length; i++) 
						{
							if(valorEnAduana > cmbAgenteAduanal.dataProvider[i].montoMaximo )
							{
								txtInputValorAduana.errorString = "El monto indicado es mayor al monto máximo de OC permitido.";
								esValido = false;
							}
							else
							{
								txtInputValorAduana.errorString = "";
							}
						}
					}
					else if(cmbAgenteAduanal.dataProvider != null && cmbAgenteAduanal.dataProvider.length > 1 && cmbAgenteAduanal.selectedItem.key != "0_0")
					{
						if(valorEnAduana > cmbAgenteAduanal.selectedItem.montoMaximo )
						{
							txtInputValorAduana.errorString = "El monto indicado es mayor a " + UtilsFormatosNumericos.precisionADosDecimalesConComas(cmbAgenteAduanal.selectedItem.montoMaximo) +" "+ currentProveedor.monedaVentaAbreviatura +", el cual es el monto máximo de OC establecido para el agente seleccionado.";
							esValido = false;
						}
						else
						{
							txtInputValorAduana.errorString = "";
						}
					}
				}
				else
				{
					esValido = false;
				}
				
				return esValido;
			}
			
			protected function numStepperPiezas_focusOutHandler(event:FocusEvent):void
			{
				if(!numStepperPiezas.value)
				{
					numStepperPiezas.value = 1;
				}
			}
			
			
			public function set recibeConfiguracionSeleccionada($configuracion:ConfiguracionPrecio):void
			{
				if($configuracion == null)
				{
					return;
				}
				_currentConfiguracionPrecio = $configuracion;
				
			}
			
			public function set recibeLogistica($log:Logistica):void
			{
				if ($log == null)
				{
					return;
				}
				var logistica:Logistica = ObjectUtil.copy($log) as Logistica;
				/* var tiempo:ProveedorTiempoEntrega = new ProveedorTiempoEntrega;
				tiempo.concepto = '--NINGUNO--';
				tiempo.idProveedorTiempoEntrega = 0;
				logistica.tiempoEntrega.addItemAt(tiempo,0);
				cmbNTP.dataProvider = ObjectUtil.copy(logistica.tiempoEntrega) as ArrayCollection;
				cmbSCCP.dataProvider = ObjectUtil.copy(logistica.tiempoEntrega) as ArrayCollection;
				cmbNRP.dataProvider = ObjectUtil.copy(logistica.tiempoEntrega) as ArrayCollection;
				cmbFE.dataProvider = ObjectUtil.copy(logistica.tiempoEntrega) as ArrayCollection; */
			}
			
			/* protected function changeRadios(event:MouseEvent):void
			{
			if (!btnEditar.visible ){
			if (event.currentTarget.id == 'chkMontoLicenciamiento' || event.currentTarget.id == 'txtPrecioLicenciamiento' 
			|| event.currentTarget.id == 'txtDls'  )
			{
			chkPorcentajeLicenciamiento.selected = false;
			chkMontoLicenciamiento.selected = true;
			numStepperLicenciamiento.value=0;
			txtPrecioLicenciamiento.setFocus()
			}
			else
			{
			chkPorcentajeLicenciamiento.selected = true;
			chkMontoLicenciamiento.selected = false;
			txtPrecioLicenciamiento.text = "0";
			numStepperLicenciamiento.setFocus()
			}
			}
			} */
			
			/* protected function chkMonto_buttonDownHandler(event:FlexEvent):void
			{
			if (!btnEditar.visible ){
			if (event.currentTarget.id == 'chkMonto' || event.currentTarget.id == 'txtPrecio' 
			|| event.currentTarget.id == 'txtDls'  )
			{
			chkPorcentajeLicenciamiento.selected = false;
			chkMontoLicenciamiento.selected = true;
			numStepperLicenciamiento.value=0;
			txtPrecioLicenciamiento.setFocus()
			}
			else
			{
			chkPorcentajeLicenciamiento.selected = true;
			chkMontoLicenciamiento.selected = false;
			txtPrecioLicenciamiento.text = "0";
			numStepperLicenciamiento.setFocus()
			}
			}
			
			} */
			
			protected function chkOpcionesLicenciamiento_clickHandler(event:MouseEvent):void
			{
				chkPorcentajeLicenciamiento.selected = false;
				chkMontoLicenciamiento.selected = false;
				
				if(event.currentTarget.id == "chkMontoLicenciamiento")
				{
					
					chkMontoLicenciamiento.selected = true;
					
					numStepperLicenciamiento.textDisplay.editable = false;
					numStepperLicenciamiento.mouseChildren = false;
					numStepperLicenciamiento.mouseEnabled = false;
					numStepperLicenciamiento.focusEnabled = false;
					numStepperLicenciamiento.value = 0;
					numStepperLicenciamiento.errorString = "";
					
					txtPrecioLicenciamiento.mouseEnabled = true;
					txtPrecioLicenciamiento.focusEnabled = true;
					txtPrecioLicenciamiento.editable = true;
					
					txtPrecioLicenciamiento.setFocus();
				}
				else if(event.currentTarget.id == "chkPorcentajeLicenciamiento")
				{
					
					chkPorcentajeLicenciamiento.selected = true;
					
					txtPrecioLicenciamiento.text = "0";
					txtPrecioLicenciamiento.errorString = "";
					txtPrecioLicenciamiento.mouseEnabled = false;
					txtPrecioLicenciamiento.focusEnabled = false;
					txtPrecioLicenciamiento.editable = false;
					
					numStepperLicenciamiento.textDisplay.editable = true;
					numStepperLicenciamiento.mouseChildren = true;
					numStepperLicenciamiento.mouseEnabled = true;
					numStepperLicenciamiento.focusEnabled = true;
					
					numStepperLicenciamiento.setFocus();
				}
			}
			
			protected function chkMontoLicenciamiento_keyDownHandler(event:KeyboardEvent):void
			{
				if(!event.shiftKey && event.charCode == 9)
				{
					event.stopImmediatePropagation();
					event.preventDefault();
					if(chkMontoLicenciamiento.selected)
					{
						txtPrecioLicenciamiento.setFocus();
					}
					else
					{
						chkPorcentajeLicenciamiento.setFocus();
					}
				}
				else if(event.shiftKey && event.charCode == 9)
				{
					event.stopImmediatePropagation();
					event.preventDefault();
					
					if(chkMontoUnidad.selected)
					{
						numStepperPiezas.setFocus();
					}
					else
					{
						txtInputValorAduana.setFocus();
					}
				}
			}
			
			protected function chkPorcentajeLicenciamiento_keyDownHandler(event:KeyboardEvent):void
			{
				if(!event.shiftKey && event.charCode == 9)
				{
					event.stopImmediatePropagation();
					event.preventDefault();
					if(chkPorcentajeLicenciamiento.selected)
					{
						numStepperLicenciamiento.setFocus();
					}
					else
					{
						txtIGI.setFocus();
					}
				}
				else if(event.shiftKey && event.charCode == 9)
				{
					event.stopImmediatePropagation();
					event.preventDefault();
					if(chkMontoLicenciamiento.selected)
					{
						txtPrecioLicenciamiento.setFocus();
					}
					else
					{
						chkMontoLicenciamiento.setFocus();
					}
				}
			}
			
			protected function txtIGI_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.shiftKey && event.charCode == 9)
				{
					event.preventDefault();
					
					if(chkPorcentajeLicenciamiento.selected)
					{
						numStepperLicenciamiento.setFocus();
					}
					else
					{
						chkPorcentajeLicenciamiento.setFocus();
					}
				}
			}
			
			protected function txtPrecioLicenciamiento_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.shiftKey && event.charCode == 9) 
				{ 	
					event.stopImmediatePropagation();
					event.preventDefault();
					chkMontoLicenciamiento.setFocus();
					
					validarPorcetajePositivoNoVacio(txtPrecioLicenciamiento);
				}
				else if(!event.shiftKey && event.charCode == 9)
				{
					event.stopImmediatePropagation();
					event.preventDefault();
					chkPorcentajeLicenciamiento.setFocus();
					validarPorcetajePositivoNoVacio(txtPrecioLicenciamiento);
				}
			}
			
			protected function numStepperLicenciamiento_focusOutHandler(event:FocusEvent):void
			{
				if(!numStepperLicenciamiento.value)
				{
					numStepperLicenciamiento.value = 0;
				}
			}
			
			private function setTiemposEntregas():void
			{
				_arrayCentroATE = new TiempoEntrega();
				_arrayForaneolTE = new TiempoEntrega();
				_arrayGuadalajaraTE = new TiempoEntrega();
				_arrayLocalTE = new TiempoEntrega();
				_arrayRestoMundoTE = new TiempoEntrega();
				_arraySudaTE = new TiempoEntrega();
				
				if (_configuracionPrecioProducto.tiempoEntregaRuta && _configuracionPrecioProducto.tiempoEntregaRuta.length > 0)
				{
					for (var r:Number=0; r< _configuracionPrecioProducto.tiempoEntregaRuta.length; r++)
					{
						var current:TiempoEntrega = _configuracionPrecioProducto.tiempoEntregaRuta[r] as TiempoEntrega;
						
						switch(current.ruta)
						{
							case 'Local':
							{
								_arrayLocalTE = current;
								break;
							}
							case 'Guadalajara':
							{
								_arrayGuadalajaraTE = current;
								break;
							}
							case 'Foraneo':
							{
								_arrayForaneolTE = current;
								break;
							}
							case 'Centroamerica':
							{
								_arrayCentroATE = current;
								break;
							}
							case 'Sudamerica':
							{
								_arraySudaTE = current;
								break;
							}
							case 'Resto del mundo':
							{
								_arrayRestoMundoTE = current;
								break;
							}
								
							default:
							{
								break;
							}
						}
						
					}
				}	
				aplicarTiempoEntrega();
			}
			
			private function aplicarTiempoEntrega():void
			{
				var tiempoEntregaSelected:TiempoEntrega = new TiempoEntrega(); 
				switch(_clickeado)
				{
					case "Local":
					{
						tiempoEntregaSelected = _arrayLocalTE; 
						break;
					}
					case "Guadalajara":
					{
						tiempoEntregaSelected = _arrayGuadalajaraTE; 
						break;
					}
					case "Foraneo":
					{
						tiempoEntregaSelected = _arrayForaneolTE; 
						break;
					}
					case "Centroamerica":
					{
						tiempoEntregaSelected = _arrayCentroATE; 
						break;
					}
					case "Sudamerica":
					{
						tiempoEntregaSelected = _arraySudaTE; 
						break;
					}
					case "Resto del mundo":
					{
						tiempoEntregaSelected = _arrayRestoMundoTE; 
						break;
					}
						
					default:
					{
						break;
					}
				}
				
				if (tiempoEntregaSelected)
				{
					datosTE_NR = new DatosTiempoEntrega();
					datosTE_ReqNoTiene = new DatosTiempoEntrega()
					datosTE_ReqSiTiene = new DatosTiempoEntrega();
					
					if (tiempoEntregaSelected.requierePNo)
						datosTE_NR = UtilsFecha.obtenerDias(tiempoEntregaSelected.requierePNo);
					
					
					if (tiempoEntregaSelected.requierePNoExiste)
						datosTE_ReqNoTiene = UtilsFecha.obtenerDias(tiempoEntregaSelected.requierePNoExiste);
					
					
					if (tiempoEntregaSelected.requierePExiste)
						datosTE_ReqSiTiene = UtilsFecha.obtenerDias(tiempoEntregaSelected.requierePExiste);
					
				}
			}
			
			
			
			
			
			protected function botoneraRutas_changingHandler(event:IndexChangeEvent):void
			{
				guardarValoresTiempoEntrega(event.oldIndex);
				aplicarTiempoEntrega();
			}
			
			
			private function guardarValoresTiempoEntrega($indice:Number):void
			{
				switch($indice)
				{
					case 0:
					{
						_arrayLocalTE.ruta = 'Local';
						_arrayLocalTE.idConfiguracionPrecio = _configuracionPrecioProducto.idConfiguracion;
						_arrayLocalTE.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
						_arrayLocalTE.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
						_arrayLocalTE.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega);
						break;
					}
					case 1:
					{
						_arrayGuadalajaraTE.ruta = 'Guadalajara';
						_arrayGuadalajaraTE.idConfiguracionPrecio = _configuracionPrecioProducto.idConfiguracion;
						_arrayGuadalajaraTE.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
						_arrayGuadalajaraTE.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
						_arrayGuadalajaraTE.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega);
						break;
					}
					case 2:
					{
						_arrayForaneolTE.ruta = 'Foraneo';
						_arrayForaneolTE.idConfiguracionPrecio = _configuracionPrecioProducto.idConfiguracion;
						_arrayForaneolTE.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
						_arrayForaneolTE.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
						_arrayForaneolTE.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega);
						break;
					}
					case 3:
					{
						_arrayCentroATE.ruta = 'Centroamerica';
						_arrayCentroATE.idConfiguracionPrecio = _configuracionPrecioProducto.idConfiguracion;
						_arrayCentroATE.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
						_arrayCentroATE.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
						_arrayCentroATE.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega);
						break;
					}
					case 4:
					{
						_arraySudaTE.ruta = 'Sudamerica';
						_arraySudaTE.idConfiguracionPrecio = _configuracionPrecioProducto.idConfiguracion;
						_arraySudaTE.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
						_arraySudaTE.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
						_arraySudaTE.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega);
						break;
					}
					case 5:
					{
						_arrayRestoMundoTE.ruta = 'Resto del mundo';
						_arrayRestoMundoTE.idConfiguracionPrecio = _configuracionPrecioProducto.idConfiguracion;
						_arrayRestoMundoTE.requierePExiste = generarConceptoTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)
						_arrayRestoMundoTE.requierePNoExiste = generarConceptoTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)
						_arrayRestoMundoTE.requierePNo = generarConceptoTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega);
						break;
					}
						
					default:
					{
						break;
					}
				}
				
			}
			
			protected function escuchar(event:Event):void
			{
				if(clickeado != event.target.id.toString().toLocaleLowerCase())
				{
					clickeado = event.target.id.toString().toLocaleLowerCase();
					btn0.currentState = "normal";
					btn0.gradient.rotation = 0;
					btn1.currentState = "normal";
					btn1.gradient.rotation = 0;
					btn2.currentState = "normal";
					btn2.gradient.rotation = 0;
					btn3.currentState = "normal";
					btn3.gradient.rotation = 0;
					btn4.currentState = "normal";
					btn4.gradient.rotation = 0;
					btn5.currentState = "normal";
					btn5.gradient.rotation = 0;
					
					if( event.target.id != null )
						var id:String = event.target.id.toString();
					
					if( id == "btn0" )
					{
						_clickeado = "Local";
						btn0.currentState = "seleccionado";
						btn0.gradient.rotation = 90;
						_currentIndex = 0;
					}
					if( id == "btn1" )
					{
						_clickeado = "Guadalajara";
						btn1.currentState = "seleccionado";	
						btn1.gradient.rotation = 90;
						_currentIndex = 1;
					}
					if( id == "btn2" )
					{
						_clickeado = "Foraneo";
						btn2.currentState = "seleccionado";
						btn2.gradient.rotation = 90;
						_currentIndex = 2;
					}
					if( id == "btn3" )
					{
						_clickeado = "Centroamerica";
						btn3.currentState = "seleccionado";	
						btn3.gradient.rotation = 90;
						_currentIndex = 3;
					}
					if( id == "btn4" )
					{
						_clickeado = "Sudamerica";
						btn4.currentState = "seleccionado";	
						btn4.gradient.rotation = 90;
						_currentIndex = 4;
					}
					if( id == "btn5" )
					{
						_clickeado = "Resto del mundo";
						btn5.currentState = "seleccionado";	
						btn5.gradient.rotation = 90;
						_currentIndex = 5;
					}
					
					if ( !isNaN(_oldIndex))
						guardarValoresTiempoEntrega(_oldIndex);
					
					aplicarTiempoEntrega();
					_oldIndex = ObjectUtil.copy( _currentIndex ) as Number;
					chkHabilitado.selected= txtConceptoFE.text != '0' || txtFE.text != '0' ? true:false;
					chkHabilitado2.selected= txtConceptoTENoTiene.text != '0' || txtTENoTiene.text != '0' || txtConceptoTESiTiene.text != '0' || txtTESiTiene.text != '0' ? true:false;
					verficaChkHabilitado(grupoBotonesCancelarGuardar.visible);
					
				} 	
			}
			
			protected function chkHabilitado_clickHandler(event:MouseEvent):void
			{
				chkTENorequiere.selected = false;
				txtConceptoFE.text = "0";
				txtFE.text = "0";
				txtFE1.text = "0";
				cmbNRPTiempoEntrega.selectedIndex = 0;
				
				
				var valor:Boolean =  ObjectUtil.copy(chkHabilitado.selected) as Boolean;
				
				chkTENorequiere.enabled = valor;
				txtConceptoFE.enabled = valor;
				txtFE.enabled = valor;
				txtFE1.enabled = valor;
				cmbNRPTiempoEntrega.enabled = valor; 
			}
			
			protected function chkHabilitado2_clickHandler(event:MouseEvent):void
			{
				chkTESiTiene.selected = false;
				txtConceptoTESiTiene.text = "0";
				txtTESiTiene.text = "0";
				txtTESiTiene_1.text = "0";
				cmbTESiTiene.selectedIndex = 0;
				
				chkTENoTiene.selected = false;
				txtConceptoTENoTiene.text = "0";
				txtTENoTiene.text = "0";
				txtTENoTiene_1.text = "0";
				cmbTENoTiene.selectedIndex = 0;
				
				var valor:Boolean =  chkHabilitado2.selected;
				
				chkTESiTiene.enabled = valor;
				txtConceptoTESiTiene.enabled = valor;
				txtTESiTiene.enabled = valor;
				txtTESiTiene_1.enabled = valor;
				cmbTESiTiene.enabled = valor;
				
				chkTENoTiene.enabled = valor;
				txtConceptoTENoTiene.enabled = valor;
				txtTENoTiene.enabled = valor;
				txtTENoTiene_1.enabled = valor;
				cmbTENoTiene.enabled = valor;
			}
			
			
			
			private var _temp:ElementosVistaOferta_Visual;
			private var _objeto:ElementosVistaOferta_Visual;
			private var _arreglo:ArrayCollection;
			public var grp_VisEdicion:CatPro_Barra_tipoControl_Vista;
			
			private	var temporizador:Timer;
			public function getVistaPresentacion():void
			{
				if(temporizador == null)
				{
					temporizador = new Timer(500,0);
					temporizador.addEventListener(TimerEvent.TIMER,buscarVistaPresentacion,false,0,true);
				}
				if(temporizador)
				{
					if(temporizador.running)
					{
						temporizador.reset();
						temporizador.start();
					}
					else
					{
						temporizador.start();
					}
				}
			}
			
			private function buscarVistaPresentacion(event:TimerEvent):void
			{
				temporizador.stop();
				valorComboConceptos = cmbConceptos.textInput.text;
				valorComboAgente = cmbAgenteAduanal.textInput.text;
				vista_presentacion.removeAllElements();
				grp_VisEdicion = new CatPro_Barra_tipoControl_Vista();
				grp_VisEdicion.percentHeight = 100;
				grp_VisEdicion.percentWidth = 100;
				
				vista_presentacion.addElement(grp_VisEdicion);
				
				if(_configuracionPrecioProducto)
				{
					_arreglo = new ArrayCollection();
					obtiene_descuentosFletes();
					obtiene_importacion();
					obtiene_gastos();
					obtiene_fijos();
					obtiene_utilidad();
					
					if(_nivel == 'Clasificacion' || _nivel == 'Producto' || _nivel == 'Precio lista')
						grp_VisEdicion.cambiarGris();
					else 
						grp_VisEdicion.cambiarBlanco();
					
					grp_VisEdicion.dataProvider(_arreglo,valoresUtilidad);
				}
			}
			
			private function obtiene_descuentosFletes():void
			{
				_temp = new ElementosVistaOferta_Visual();
				_temp.titulo = "DESCUENTO Y FLETES";
				_temp.imagen = "etiquetas_compras";
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Descuento:"
				_objeto.objValor = txtInputDescuento.text+ "%";
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Flete PC:"
				_objeto.objValor = txtInputFletePC.text+ " " + lbl_monedaFletePc.text;
				_temp.valores.addItem(_objeto);
				
				_arreglo.addItem(_temp);
				
			}
			
			private function obtiene_importacion():void
			{
				_temp = new ElementosVistaOferta_Visual();
				_temp.titulo = "IMPORTACIÓN";
				_temp.imagen = "etiquetas_logistica";
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = _configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana == -1 ? "Unidades:" : "Monto:" ;
				_objeto.objValor = _configuracionPrecioProducto.costoFactorProducto.factorValorEnAduana == -1 ? numStepperPiezas.value.toString() + " pzs" : txtInputValorAduana.text + " dls" ;
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "IGI:";
				_objeto.objValor = txtIGI.text + " %";
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "DTA:";
				_objeto.objValor = txtDTA.text + " %";
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Honorarios AA:";
				_objeto.objValor = valorComboAgente;
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Conceptos lugar AA:";
				_objeto.objValor = valorComboConceptos;
				_temp.valores.addItem(_objeto);
				
				_arreglo.addItem(_temp);
				
			}
			
			private function obtiene_gastos():void
			{
				_temp = new ElementosVistaOferta_Visual();
				_temp.titulo = "GASTOS";
				_temp.imagen = "etiquetas_empresa";
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Consularización:"
				_objeto.objValor = txtConsularizacion.text + " " + currentProveedor.monedaVentaAbreviatura;
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Envío de documentos:"
				_objeto.objValor = txtFleteDocumentacion.text + " " + currentProveedor.monedaVentaAbreviatura;
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Permiso:"
				_objeto.objValor = txtPermiso.text + " " + currentProveedor.monedaVentaAbreviatura;
				_temp.valores.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Flete AD:"
				_objeto.objValor = txtAlmacenDestino.text + " " + currentProveedor.monedaVentaAbreviatura;
				_temp.valores.addItem(_objeto);
				
				_arreglo.addItem(_temp);
			}
			
			private function obtiene_fijos():void
			{
				_temp = new ElementosVistaOferta_Visual();
				_temp.titulo = "FIJOS";
				_temp.imagen = "etiquetas_contratos";
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Factor de costo fijo:"
				_objeto.objValor = txtCostoFijo.text + " %";
				_temp.valores.addItem(_objeto);
				
				_arreglo.addItem(_temp);
			}
			
			private var valoresUtilidad:ArrayCollection;
			private function obtiene_utilidad():void
			{
				valoresUtilidad = new ArrayCollection();
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "AA+:"
				_objeto.objValor =txtAAplus.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "AA:"
				_objeto.objValor =txtAA.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "AM:"
				_objeto.objValor =txtAM.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "AB:"
				_objeto.objValor =txtAB.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "MA:"
				_objeto.objValor =txtMA.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "MM:"
				_objeto.objValor =txtMM.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "MB:"
				_objeto.objValor =txtMB.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Bajo:"
				_objeto.objValor =txtBajo.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Web:"
				_objeto.objValor = txtStock.texto.text == "0" ? "NA":txtStock.texto.text + " %";
				valoresUtilidad.addItem(_objeto);
				
				_objeto = new ElementosVistaOferta_Visual();
				_objeto.objAtributo = "Dist:"
				_objeto.objValor =txtDistribuidor.text + " %";
				valoresUtilidad.addItem(_objeto);
				
			}
			
			public function vistaVisible():void
			{
				vista_edicion.visible = vista_edicion.includeInLayout = false;
				vista_presentacion.visible = vista_presentacion.includeInLayout = true;
			}
			
			
			
			
		]]>
	</fx:Script>
	
	<botonesToggle:ButtonBarColores width="100%" height="40" id="botoneraBarra" click="botoneraBarra_clickHandler()" maxWidth="900"/>
	
	<pq:MobViewStack id="stack" width="100%" height="100%" maxWidth="900">
		
		<s:VGroup width="100%" id="nvg1" paddingLeft="3" paddingRight="3" horizontalAlign="center" visible="true">
			<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
				<s:VGroup width="100%" horizontalAlign="center" gap="10">
					<label:Titulo_16_pTop10 text="PRECIO LISTA" paddingTop="0"/>
					<otros:division width="100%"/>
					
					<s:Group width="100%" >
						<s:VGroup width="100%" horizontalAlign="center" verticalCenter="0" gap="10">
							<label:Titulo_25_VerdeAzul_pTop10 id="lblTituloSeccion" paddingTop="0"/>
							<label:Titulo_16_pTop10 id="lblPrecioLista" includeInLayout="false" visible="false" paddingTop="0"/>
						</s:VGroup>
						<s:Group verticalCenter="0" right="0">
							<!--<s:Image source="{catalogoIconosGrid.getInstance().render_engraneGrande}" mouseOver="{imgEngrane.source = catalogoIconosGrid.getInstance().render_engraneGrisGrande }"  
							id="imgEngrane" click="abrirPopPrecio()" mouseOut="{imgEngrane.source = catalogoIconosGrid.getInstance().render_engraneGrande }" top="-7"/>-->
							<buttonImagen:buttonImagenDefaultPQNet id="btnCambioDePrecio" tipoDeImagen="imgEngrane29X29" click="{abrirPopCambioDePrecio()}" top="-7"/>
						</s:Group>  
					</s:Group>
					
				</s:VGroup>
				
				
				<!--&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&  VISTA PRESENTACION  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
				
				<s:VGroup id="vista_presentacion" width="100%" height="100%" horizontalAlign="center" gap="10" visible="true" includeInLayout="true" paddingBottom="12"/>
				
				<!--&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&  VISTA PRESENTACION  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
				
				
				
				<!--&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&  VISTA EDICION  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
				
				<s:VGroup id="vista_edicion" width="100%" height="100%" horizontalAlign="center" gap="10" visible="false" includeInLayout="false">
					
					<!--DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== -->
					<!--<s:Spacer height="100%" id="spacerDescuentoYFletes"/>-->
					<s:VGroup width="100%" id="grpDescuentoYFletes" horizontalAlign="center" gap="10" >
						<label:Titulo_16_pTop10 text="DESCUENTO Y FLETES" paddingTop="0"/>
						<otros:division width="100%"/>
						
						<s:Group width="100%">
							<s:VGroup left="0" gap="10">
								<label:Titulo_14_pTop10 text="Descuento:" paddingTop="0"/>
								<s:HGroup verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet id="txtInputDescuento" width="100%" restrict="0-9." keyUp="validarPorcetajePositivoNoVacio(txtInputDescuento)"/>
									<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
								</s:HGroup>  
							</s:VGroup>  
							
							<s:VGroup right="0" toolTip="Flete punto de consolidación" gap="10">
								<label:Titulo_14_pTop10 text="Flete PC:" paddingTop="0"/>
								<s:HGroup id="grpescucharCambioTamanio" verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet id="txtInputFletePC" width="100%" restrict="0-9." keyUp="validarDlsPositivoNoVacio(txtInputFletePC)"/>
									<label:Titulo_14_pTop10 id="lbl_monedaFletePc" text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
								</s:HGroup>
							</s:VGroup>  
						</s:Group>  
					</s:VGroup> 
					<!--DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== DESCUENTO Y FLETES ================== -->
					
					
					<!--IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ==================-->
					<s:Spacer height="100%" id="spacerImportacion" minHeight="0"/>
					<s:VGroup width="100%" id="grpImportacion" horizontalAlign="center" gap="10" >
						<label:Titulo_16_pTop10 text="IMPORTACIÓN" paddingTop="0"/>
						<otros:division width="100%"/>
						
						<s:VGroup width="100%" gap="10">
							<s:VGroup width="100%" horizontalAlign="center">
								<chekbox:CheckBoxPq labelLeft="Monto" labelRight="Unidad" id="chkMontoUnidad" click="chkMontoUnidad_clickHandler(event)" width="150"/>
							</s:VGroup>  
							
							<s:Group width="100%">
								<s:HGroup width="100%" verticalAlign="middle" height="100%" horizontalAlign="center">
									<!--MODIFICACION SLIDER
									<s:VGroup width="350">
									<label:Titulo_14_pTop10 text="Valor en aduana:" width="100%" paddingTop="0"/>
									<hslider:hSliderPQNetDefault id="slideValorAduana" width="100%" minimum="0" maximum="100000" liveDragging="true" labelDerecho="100,000.00 {currentMoneda}"
									showLabels="true" stepSize="10000" labelIzquierdo="0" snapInterval="1" showDataTip="false"/>
									</s:VGroup> -->
									<s:HGroup horizontalAlign="center" verticalAlign="middle" width="220" visible="{chkMontoUnidad.selected ? false:true}" includeInLayout="{chkMontoUnidad.selected ? false:true}">
										<textinput:txtInputBlancoSinSetAlturaDefaultPQNet id="txtInputValorAduana"  enter="txtInputBlancoDefaultPQNet_enterHandler(event)" restrict="0-9." width="100%" tamanioFuente="40"
																						  focusOut="txtInputValorAduana_focusOutHandler(event)"/> <!--txtInputBlancoDefaultPQNet_SinSetAltura-->
										<label:Titulo_14_pTop10 text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
									</s:HGroup>
								</s:HGroup>  
								
								<s:HGroup height="100%" width="100%" verticalAlign="middle" horizontalAlign="center" visible="{chkMontoUnidad.selected ? true:false}" includeInLayout="{chkMontoUnidad.selected ? true:false}">
									<numericStepper:NumericStepperDefaultPQNet id="numStepperPiezas" width="100" minimum="1" maximum="100000" color="enorme" focusOut="numStepperPiezas_focusOutHandler(event)" tamanioDeLaFuente="40"/>
									<label:Titulo_14_pTop10 text="pzs"/>
								</s:HGroup>
							</s:Group>  
							
						</s:VGroup>
						
						<s:HGroup width="100%">
							
							<s:VGroup gap="10" height="100%" id="grpLincenciamiento">
								<label:TextoUperCaseRojo id="lblLicenciamiento" paddingTop="0" fontWeight="bold" />
								<s:HGroup  height="100%" gap="10" >
									
									<s:VGroup  height="100%"  verticalAlign="middle" gap="40"  id="grpMonto" >
										<chekbox:radioDefaultPQNet id="chkMontoLicenciamiento"  label="Monto" click="chkOpcionesLicenciamiento_clickHandler(event)" keyDown="chkMontoLicenciamiento_keyDownHandler(event)"/><!--buttonDown="chkMonto_buttonDownHandler(event)"-->
										<chekbox:radioDefaultPQNet id="chkPorcentajeLicenciamiento" label="Porcentaje" click="chkOpcionesLicenciamiento_clickHandler(event)" keyDown="chkPorcentajeLicenciamiento_keyDownHandler(event)"/> <!--click="changeRadios(event)"-->
									</s:VGroup>
									
									<s:VGroup width="70%" height="100%" horizontalAlign="center" gap="35" id="grpPorcentaje">
										<s:HGroup  verticalAlign="middle">
											<textinput:txtInputBlancoDefaultPQNet width="100" textAlign="right" id="txtPrecioLicenciamiento" restrict="0-9." keyDown="txtPrecioLicenciamiento_keyDownHandler(event)"/><!--click="changeRadios(event)"-->
											<label:Titulo id="txtDls" text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
										</s:HGroup>
										<s:HGroup  verticalAlign="middle" width="100%">
											<numericStepper:NumericStepperDefaultPQNet id="numStepperLicenciamiento" width="100" stepSize=".1"  maximum="100000" textAlign="right" color="gris" tamanioDeLaFuente="14" focusOut="numStepperLicenciamiento_focusOutHandler(event)"/><!--click="changeRadios(event)" focusOut="numericsteper_focusOutHandler(event)"-->
											<!--<numericStepper:NumericStepperDefaultPQNet id="numericsteper" width="100" minimum="1" maximum="100000" color="enorme" focusOut="numericsteper_focusOutHandler(event)" tamanioDeLaFuente="40" click="changeRadios(event)"/>-->
											<label:Titulo text=" %" paddingTop="0"/>
										</s:HGroup>
									</s:VGroup>
								</s:HGroup>
							</s:VGroup>
							
							<s:Spacer id="spcLicenciamiento" width="100%" />
							
							<s:VGroup gap="10" >
								<label:Titulo_14_pTop10 text="IGI:" width="100%" paddingTop="0"/>
								<s:HGroup verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtIGI"  restrict="0-9."  keyUp="validarPorcetajePositivoNoVacio(txtIGI)" keyDown="txtIGI_keyDownHandler(event)"/>
									<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
								</s:HGroup>
								<label:Titulo_14_pTop10 width="100%" text="DTA:" paddingTop="0"/>
								<s:HGroup verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtDTA" restrict="0-9." keyUp="validarPorcetajePositivoNoVacio(txtDTA)"/>
									<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
								</s:HGroup>
							</s:VGroup>
							<s:Spacer width="100%" />
							<s:VGroup id="grpCbmAgenteAduanal" gap="10">	
								<label:Titulo_14_pTop10 width="100%" text="Honorarios AA:" paddingTop="0"/>
								<comboCatalogo:ComboCatalogos id="cmbAgenteAduanal" width="100%" changing="cmbAgenteAduanal_changingHandler(event)"/>
								<label:Titulo_14_pTop10 width="100%" text="Conceptos lugar AA:" paddingTop="0"/>
								<comboCatalogo:ComboCatalogos id="cmbConceptos" width="100%" focusOut="validarComboConceptosAA()"/>
							</s:VGroup>
						</s:HGroup>
						
						
					</s:VGroup> 
					<!--IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ================== IMPORTACIÓN ==================-->
					
					
					<!--GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ======================-->
					<!--<s:Spacer height="100%" minHeight="0"/>-->
					<label:Titulo_16_pTop10 text="GASTOS" paddingTop="0"/>
					<otros:division width="100%"/>
					<s:Group width="100%"><!--visible="false" includeInLayout="false"-->
						
						<s:VGroup gap="10" left="0">
							<label:Titulo_14_pTop10 text="Consularización:" paddingTop="0"/>
							<s:HGroup verticalAlign="middle">
								<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtConsularizacion" restrict="0-9."   keyUp="validarDlsPositivoNoVacio(txtConsularizacion)"/>
								<label:Titulo_14_pTop10 text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
							</s:HGroup>
							<label:Titulo_14_pTop10 text="Envío de documentos:" paddingTop="0"/>
							<s:HGroup verticalAlign="middle">
								<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtFleteDocumentacion" restrict="0-9."  keyUp="validarDlsPositivoNoVacio(txtFleteDocumentacion)"/>
								<label:Titulo_14_pTop10 text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
							</s:HGroup>
						</s:VGroup>
						
						<s:VGroup right="0" gap="10">
							<label:Titulo_14_pTop10 text="Permiso:" paddingTop="0"/>
							<s:HGroup verticalAlign="middle">
								<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtPermiso" restrict="0-9."  keyUp="validarDlsPositivoNoVacio(txtPermiso)"/>
								<label:Titulo_14_pTop10 text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
							</s:HGroup>
							<label:Titulo_14_pTop10 text="Flete AD:"  paddingTop="0"/>
							<s:HGroup verticalAlign="middle">
								<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtAlmacenDestino" restrict="0-9."  keyUp="validarDlsPositivoNoVacio(txtAlmacenDestino)"/>
								<label:Titulo_14_pTop10 text="{currentProveedor.monedaVentaAbreviatura}" paddingTop="0"/>
							</s:HGroup>
						</s:VGroup>
						
					</s:Group>  
					<!--GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ====================== GASTOS ======================-->
					
					
					
					<!--FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== -->
					<!--<s:Spacer height="100%" minHeight="0"/>-->
					<s:Group width="100%" bottom="0">
						<label:Titulo_16_pTop10 text="FIJOS" horizontalCenter="0"/>
						<chekbox:CheckBoxPq labelLeft="Directo" labelRight="Compuesto" id="chkFactorFijo"  width="170" right="0" bottom="0" />
					</s:Group>
					<otros:division width="100%"/>
					<s:VGroup gap="10">
						<label:Titulo_14_pTop10 text="Factor de costo fijo:" width="100%" paddingTop="0"/>
						<s:HGroup verticalAlign="middle">
							<textinput:txtInputBlancoDefaultPQNet width="100%" id="txtCostoFijo" restrict="0-9."  keyUp="validarPorcetajePositivoNoVacio(txtCostoFijo)"/>
							<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
						</s:HGroup>
					</s:VGroup>
					<!--FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== FIJOS ===================== -->
					
					
					<!--UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== -->
					<!--<s:Spacer height="100%" minHeight="0"/>-->
					<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
						<s:Group width="100%">
							<label:Titulo_16_pTop10 text="UTILIDAD" horizontalCenter="0"/>
							<chekbox:CheckBoxPq labelLeft="Directo" labelRight="Compuesto" id="chkUtilidad"  width="170" right="0" />
						</s:Group>
						<otros:division width="100%"/>
						<s:Group width="100%">
							<!--<label:Titulo_14_VerdeAzul_pTop10 width="100%" text="Privado:" textAlign="center" paddingTop="0"/>-->
							<s:HGroup width="100%" id="vgPrivado" visible="{isGobieno}" includeInLayout="{isGobieno}">
								
								<s:VGroup gap="10">
									<label:Titulo_14_pTop10 text="AA+:" paddingTop="0"/>
									<s:HGroup verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtAAplus" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtAAplus)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
									<label:Titulo_14_pTop10 text="AA:" paddingTop="0"/>
									<s:HGroup verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtAA" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtAA)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								<s:Spacer width="100%"/>
								
								<s:VGroup gap="10">
									<label:Titulo_14_pTop10 text="MA:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtMA" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtMA)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
									<label:Titulo_14_pTop10 text="AM:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtAM" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtAM)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								<s:Spacer width="100%"/>
								
								<s:VGroup gap="10">
									<label:Titulo_14_pTop10 text="MM:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtMM" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtMM)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
									<label:Titulo_14_pTop10 text="AB:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtAB" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtAB)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
								<s:Spacer width="100%"/>
								<s:VGroup gap="10">
									<label:Titulo_14_pTop10 text="MB:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtMB" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtMB)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
									<label:Titulo_14_pTop10 text="BAJO:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtBajo" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtBajo)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
									<!--MODIFICACION FLETE EXPRES-->
									<!--<label:Titulo_14_pTop10 text="FE:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtFleteExpress" restrict="\-0-9."  focusOut="validarPorcetajeNegativoNoVacio(txtFleteExpress)"/>
									<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>-->
								</s:VGroup>
								<s:Spacer width="100%"/>
								<s:VGroup gap="10">
									<label:Titulo_14_pTop10 text="Web:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:textInputOpcional contentBackgroundColor="black" width="73" id="txtStock" restrict="\-0-9." habilitaBoton="true" botonvisible="false" keyUp="validarPorcetajeNegativoNoVacio(txtStock)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
									<label:Titulo_14_pTop10 text="Dist:" paddingTop="0"/>
									<s:HGroup width="100%" verticalAlign="middle">
										<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtDistribuidor" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtDistribuidor)"/>
										<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
									</s:HGroup>
								</s:VGroup>
							</s:HGroup>
							
							<s:VGroup width="100%" id="vgPublico" visible="{!isGobieno}" includeInLayout="{!isGobieno}" horizontalAlign="center">
								<s:HGroup  verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet contentBackgroundColor="black" width="73" id="txtPublico" restrict="\-0-9." keyUp="validarPorcetajeNegativoNoVacio(txtPublico)"/>
									<label:Titulo_14_pTop10 text="%" paddingTop="0"/>
								</s:HGroup>
							</s:VGroup>
						</s:Group>
					</s:VGroup>  
					<!--UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== UTILIDAD ==================== -->
				</s:VGroup>
				<!--&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&  VISTA EDICION  &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& -->
				
			</s:VGroup>
		</s:VGroup>
		
		<!--TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== -->
		<s:VGroup width="100%" height="100%" id="nvg2" horizontalAlign="center" visible="false">
			
			<s:VGroup width="100%" height="100%" horizontalCenter="0">
				<s:VGroup width="100%" height="100%" gap="10" horizontalAlign="center">
					<label:Titulo_16_pTop10 text="RUTA" paddingTop="0"/>
					<otros:division width="100%"/>
					<!--ESTE SE UNA PARA LLENAR LA BOTONERA-->
					<!--<botonesToggle:ButtonBarColores width="100%" height="30" id="botoneraRutas" changing="botoneraRutas_changingHandler(event)" 
					dataProvider="{_arrRutas}" selectedIndex="0" requireSelection="true" visible="false" includeInLayout="false"/>-->
					
					<s:VGroup width="100%" horizontalAlign="center" paddingTop="7" paddingBottom="7">
						<s:Group width="85%">
							<s:layout>
								<btnToggleEstados:LayoutBotoneraTiempoEntrega minGap="5" />
							</s:layout>
							<btnToggleEstados:botonTiempoEntrega  id="btn0" tipoBoton="local" label2="LOCAL"  currentState="{_clickeado == 'Local' ? 'seleccionado': 'normal' }"/>
							<btnToggleEstados:botonTiempoEntrega  id="btn2" tipoBoton="foraneo" label2="FORÁNEO" currentState="{_clickeado == 'Foraneo' ? 'seleccionado': 'normal' }"/>
							<btnToggleEstados:botonTiempoEntrega  id="btn1" tipoBoton="guadalajara" label2="GUADALAJARA" currentState="{_clickeado == 'Guadalajara' ? 'seleccionado': 'normal' }"/>
							<btnToggleEstados:botonTiempoEntrega  id="btn4" tipoBoton="sudamerica" label2="SUDAMÉRICA" currentState="{_clickeado == 'Sudamerica' ? 'seleccionado': 'normal' }"/>
							<btnToggleEstados:botonTiempoEntrega  id="btn3" tipoBoton="centroAmerica" label2="CENTROAMÉRICA" currentState="{_clickeado == 'Centroamerica' ? 'seleccionado': 'normal' }"/>
							<btnToggleEstados:botonTiempoEntrega  id="btn5" tipoBoton="restoMundo" label2="RESTO DEL MUNDO" currentState="{_clickeado == 'Resto del mundo' ? 'seleccionado': 'normal' }"/>
						</s:Group>
					</s:VGroup>
					
					
					<!--ESTE ES EL BLOQUE CUANDO NO REQUIERE PERMISO-->
					<label:Titulo_16_pTop10 text="NO REQUIERE PERMISO:"/>
					<otros:division width="100%"/>
					<s:HGroup width="100%" horizontalAlign="right" >
						<s:Group>
							<label:Titulo_14_pTop10 id="lblHabilitado" width="100%" text="{txtConceptoFE.text != '0' || txtFE.text != '0' ? 'Habilitado':'Deshabilitado'}" textAlign="right" paddingTop="3"/>
							<chekbox:radioDefaultPQNet id="chkHabilitado" label="Habilitar" tipoCheck="cuadradoRadio" right="1" layoutDirection="rtl" click="chkHabilitado_clickHandler(event)"
													   visible="false"/>
						</s:Group>
					</s:HGroup>
					<s:VGroup width="33%" horizontalAlign="center">
						<chekbox:CheckBoxPq labelLeft="Fijo" labelRight="intervalo" id="chkTENorequiere" selected="{datosTE_NR.fijo}" width="150" focusOut="validarTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega)" horizontalCenter="1"/>
						<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
							<s:Group visible="{!chkTENorequiere.selected}" includeInLayout="{!chkTENorequiere.selected}">
								<textinput:txtInputBlancoDefaultPQNet id="txtConceptoFE" text="{datosTE_NR.dia1}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega)"/> 
							</s:Group>
							<s:Group  visible="{chkTENorequiere.selected}" includeInLayout="{chkTENorequiere.selected}">
								<s:HGroup width="100%" verticalAlign="middle">
									<label:Titulo text="De:" paddingTop="0" />
									<textinput:txtInputBlancoDefaultPQNet id="txtFE" text="{datosTE_NR.dia1}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega)"/>
									<label:Titulo text="A:" paddingTop="0" />
									<textinput:txtInputBlancoDefaultPQNet id="txtFE1" text="{datosTE_NR.dia2}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega)"/>
								</s:HGroup>
							</s:Group>
							<comboCatalogo:ComboCatalogos id="cmbNRPTiempoEntrega" selectedIndex="{datosTE_NR.meses}" width="250" focusOut="validarTiempoEntrega(chkTENorequiere,txtConceptoFE,txtFE,txtFE1,cmbNRPTiempoEntrega)"/>
						</s:HGroup>
					</s:VGroup>
					
					<!--ESTE ES EL BLOQUE CUANDO REQUIERE PERMISO-->
					
					<s:VGroup width="100%" id="grpTiempoEReqPermiso" paddingTop="10" gap="10" horizontalAlign="center">
						<label:Titulo_16_pTop10 text="REQUIERE PERMISO:"/>
						<otros:division width="100%"/>
						<s:HGroup width="100%" horizontalAlign="right" >
							<s:Group>
								<label:Titulo_14_pTop10 id="lblHabilitado2" width="100%" paddingTop="3" 
														text="{txtConceptoTENoTiene.text != '0' || txtTENoTiene.text != '0' || txtConceptoTESiTiene.text != '0' || txtTESiTiene.text != '0' ? 'Habilitado':'Deshabilitado'}" textAlign="right" />
								<chekbox:radioDefaultPQNet id="chkHabilitado2" label="Habilitar" tipoCheck="cuadradoRadio" right="1" layoutDirection="rtl" visible="false" click="chkHabilitado2_clickHandler(event)" />
							</s:Group>
						</s:HGroup>
						<s:VGroup width="33%" gap="10" horizontalAlign="center">
							<label:Titulo_14_pTop10 text="No se tiene permiso:" paddingTop="0" textAlign="left" width="100%"/>
							<chekbox:CheckBoxPq labelLeft="Fijo" labelRight="intervalo" id="chkTENoTiene" selected="{datosTE_ReqNoTiene.fijo}" width="150" focusOut="validarTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)" />
						</s:VGroup>
						<s:VGroup width="100%" >
							<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
								<s:Group visible="{!chkTENoTiene.selected}" includeInLayout="{!chkTENoTiene.selected}">
									<textinput:txtInputBlancoDefaultPQNet id="txtConceptoTENoTiene" text="{datosTE_ReqNoTiene.dia1}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)"/> 
								</s:Group>
								<s:Group  visible="{chkTENoTiene.selected}" includeInLayout="{chkTENoTiene.selected}">
									<s:HGroup width="100%" verticalAlign="middle">
										<label:Titulo text="De:" paddingTop="0" />
										<textinput:txtInputBlancoDefaultPQNet id="txtTENoTiene" text="{datosTE_ReqNoTiene.dia1}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)"/>
										<label:Titulo text="A:" paddingTop="0" />
										<textinput:txtInputBlancoDefaultPQNet id="txtTENoTiene_1" text="{datosTE_ReqNoTiene.dia2}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)"/>
									</s:HGroup>
								</s:Group>
								<comboCatalogo:ComboCatalogos id="cmbTENoTiene" selectedIndex="{datosTE_ReqNoTiene.meses}" width="250" focusOut="validarTiempoEntrega(chkTENoTiene,txtConceptoTENoTiene,txtTENoTiene,txtTENoTiene_1,cmbTENoTiene)"/>
							</s:HGroup>
						</s:VGroup>  
						<s:Spacer height="20" />
						<s:VGroup width="33%" gap="10" horizontalAlign="center">
							<label:Titulo_14_pTop10 text="Se cuenta con permiso:" paddingTop="0" textAlign="left" width="100%"/>
							<chekbox:CheckBoxPq labelLeft="Fijo" labelRight="intervalo" id="chkTESiTiene" selected="{datosTE_ReqSiTiene.fijo}" width="150" focusOut="validarTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)"/>
						</s:VGroup>
						<s:VGroup width="100%" >
							<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
								<s:Group visible="{!chkTESiTiene.selected}" includeInLayout="{!chkTESiTiene.selected}">
									<textinput:txtInputBlancoDefaultPQNet id="txtConceptoTESiTiene" text="{datosTE_ReqSiTiene.dia1}" width="50"  restrict="0-9" focusOut="validarTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)"/> 
								</s:Group>
								<s:Group  visible="{chkTESiTiene.selected}" includeInLayout="{chkTESiTiene.selected}">
									<s:HGroup width="100%" verticalAlign="middle">
										<label:Titulo text="De:" paddingTop="0" />
										<textinput:txtInputBlancoDefaultPQNet id="txtTESiTiene" text="{datosTE_ReqSiTiene.dia1}" width="50"  restrict="0-9" focusOut="validarTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)"/>
										<label:Titulo text="A:" paddingTop="0" />
										<textinput:txtInputBlancoDefaultPQNet id="txtTESiTiene_1" text="{datosTE_ReqSiTiene.dia2}" width="50" restrict="0-9" focusOut="validarTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)"/>
									</s:HGroup>
								</s:Group>
								<comboCatalogo:ComboCatalogos id="cmbTESiTiene" selectedIndex="{datosTE_ReqSiTiene.meses}" width="250" focusOut="validarTiempoEntrega(chkTESiTiene,txtConceptoTESiTiene,txtTESiTiene,txtTESiTiene_1,cmbTESiTiene)"/>
							</s:HGroup>
						</s:VGroup>  
					</s:VGroup>  
				</s:VGroup>  
			</s:VGroup>  
		</s:VGroup>
		<!--TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== TIEMPO ENTREGA ======================== -->
		
	</pq:MobViewStack>
	
	<otros:divisionGruesa width="100%"/>
	<s:Group width="100%" id="grpBotonEditar">
		<s:HGroup width="100%" horizontalAlign="right">
			<pqNet:botonPqNetLargo label="Editar" id="btnEditar" click="habilitarEdicionDeCampos(true)" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
		</s:HGroup>
		<s:HGroup width="100%" id="grupoBotonesCancelarGuardar" visible="false">
			<pqNet:botonPqNetLargo label="Guardar" id="btnGuardar" click="guardaConfiguracion();"/>
			<pqNet:botonPqNetLargo label="Restablecer" click="retornaConfiguracion(event)" id="btnRevertir" visible="false" includeInLayout="false" />
			<s:Spacer width="100%"/>
			<pqNet:botonPqNetLargo label="Cancelar" color="0x{catalogoColores.LABEL_ROJO_CLARO }" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO}"
								   click="habilitarEdicionDeCampos(false,true)" id="btnCancelar"/>
		</s:HGroup>
	</s:Group>
</s:VGroup>