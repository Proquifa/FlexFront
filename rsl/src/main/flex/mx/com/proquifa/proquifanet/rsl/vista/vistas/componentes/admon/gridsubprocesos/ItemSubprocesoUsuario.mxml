<?xml version="1.0" encoding="utf-8"?>
<mx:HBox  doubleClickEnabled="true" creationPolicy="all" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" xmlns:s="library://ns.adobe.com/flex/spark" >
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.admon.EventoFuncionEmpleado;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.admon.EventoVistaCatalogo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.admon.objetos.Funcion;
			
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			
			[Bindable]
			private var _usuario:Empleado = new Empleado();
			
			[Bindable]
			private var Usuarios:ArrayCollection = new ArrayCollection();
			
			
			
			override public function set data(value:Object):void{
				if(value != null){
					super.data = value;
					this._usuario = value as Empleado;
				}
				else{
					super.data = new Empleado();
					this._usuario = new Empleado();
				}
				this.dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
			}
			
			public function set recibirUsuarios(_usuarios:ArrayCollection):void{
				this._usuario.listadoUsuarios = _usuarios;
				//Alert.show("entro");
			}
			
			
			
			private function validar_agregarUsuario():void{
				if(this.cbusuario.selectedIndex == -1){
					Alert.show("Seleccione un usuario para la funci贸n");
					return;
				}
				else{
					if(this.cbusuario.selectedItem.idFuncion != 0 && this.cbusuario.selectedItem.idFuncion != null ){
						Alert.show("El usuario " + this.cbusuario.selectedItem.nombre + " se encuentra relacionado a otra funci贸n, no puede asignarlo a esta funci贸n ");
						return;
					}
					
					for(var m:int = 0; m<this["outerDocument"]._funcion.usuarios.length;m++){
						if(this["outerDocument"]._funcion.usuarios[m].clave == this.cbusuario.selectedItem.clave){
							Alert.show("El usuario ya existe en esta Funci贸n");
							return;
						}
					}
				agregarUsuario();
				}
			}
			
			
			
			private function eliminarUsuario():void{
				var event:EventoFuncionEmpleado = new EventoFuncionEmpleado(EventoFuncionEmpleado.ELIMINAR_FUNCIONEMPLEADO);
				event._idfuncion = this._usuario.idFuncion;
				event._usuario = this._usuario;
				this.dispatchEvent(event);
			}
			
			private function agregarUsuario():void{
				//if(this.cbusuario.selectedIndex != -1){
					var event:EventoFuncionEmpleado = new EventoFuncionEmpleado(EventoFuncionEmpleado.CREAR_FUNCIONEMPLEADO);
					event._idfuncion = this._usuario.idFuncion;
					this.data.idcombo = this.cbusuario.selectedIndex;
					this.data.nombre = this.cbusuario.selectedItem.nombre;
					event._empleado = this.cbusuario.selectedItem as Empleado;
					this.data.clave = Empleado(this.cbusuario.selectedItem).clave;
					this.dispatchEvent(event);
				//}
			}
			
			
			/*
			public function set regresoCatalogo(_usuarios:ArrayCollection):void{
				this._usuario.listadoUsuarios = _usuarios;
			}*/
		]]>
	</mx:Script>
	<mx:ComboBox labelField="nombre" dataProvider="{data.listadoUsuarios}" id="cbusuario" prompt="Selecciones un Usuario" selectedIndex="{data.idcombo}" width="100%"/>
	<s:Button styleName="botonNegroOld" enabled="{(data.clave != 0)}" width="35" label="-" click="eliminarUsuario()"/>
	<s:Button styleName="botonNegroOld" enabled="{(data.clave == 0)}" width="35" label="+" click="validar_agregarUsuario()" right="10"/>	
	
</mx:HBox>
