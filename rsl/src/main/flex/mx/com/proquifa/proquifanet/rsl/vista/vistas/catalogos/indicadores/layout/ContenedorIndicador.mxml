<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		 xmlns:combo="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*" 
		 xmlns:grafica="skins.botones.grafica.*" 
		 xmlns:pqNet="skins.botones.pqNet.*"
		 width="100%" height="100%" 
		 creationComplete="completeHandlerABC(event)" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:textinput="skins.skin.textinput.*" 
		 xmlns:otros="skins.otros.*"
		 >
	<fx:Declarations>		
		<s:Rotate3D id="fxShow3D" duration="500" autoCenterTransform="true" angleYFrom="180" angleYTo="0" effectEnd="{ fxShow3D.angleYFrom = ( fxShow3D.angleYFrom == 180 ? -180:180)}" />
		<s:Rotate3D id="fxHide3D" duration="500" autoCenterTransform="true" angleYFrom="0" angleYTo="-180" effectEnd="{ fxHide3D.angleYTo = ( fxHide3D.angleYTo == -180 ? 180:-180)  }"/>
		<s:Fade id="fxFade" duration="450" />	
		
		<s:NumberValidator id="validatorPorcentajePositivo"
						   allowNegative="false" 
						   domain="real" 
						   decimalSeparator="." 
						   decimalPointCountError="Hay más de un punto decimal."
						   fractionalDigits="2"
						   fractionalDigitsError="El número de decimales superó el máximo de dos permitido."
						   required="true"
						   requiredFieldError="Este campo no puede quedar vacio."
						   parseError="No es un número valido."
						   negativeError="No se permite que el número sea negativo."
						   minValue="0"
						   maxValue="100"
						   lessThanMinError="El valor debe ser mayor a cero."
						   greaterThanMaxError="El valor debe se menor a 100"
						   />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.indicadores.EventoCatIndicadores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.core.IVisualElement;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			
			import skins.catalogos.catalogoIconosEtiquetas;
			import skins.catalogos.catalogoIconosGrid;
			
			import spark.components.TextInput;
			
			public var comparacion:IVisualElement = null;
			public var vistaTablaGrafica:IVisualElement = null;
			public var maxGrafica:IVisualElement = null;
			
			[Bindable]	public var titulo:String = "";
			[Bindable]	public var informacion:String = ""; 
			[Bindable] private var editSize:int = 215;
			private var tipoVista:String = "tabla";
			
			private var editar:Boolean = false;
			private var _horaZ:Boolean = false;
			
			private var _contenido:IVisualElement;
			
			public function get contenido():IVisualElement
			{
				return _contenido;
			}
			
			public function set contenido(value:IVisualElement):void
			{
				_contenido = value;
				if( _contenido != null ) 
					navChart.addElement( _contenido );
			}
			
			protected function mostrarEdicion():void
			{
				editar = !editar;
				if (editar){
					stackTodo.selectedIndex = 1;					
				}
				else{				
					stackTodo.selectedIndex = 0;
				}
			}
			
			protected function completeHandlerABC(event:FlexEvent):void
			{
				fxShow3D.addEventListener( EffectEvent.EFFECT_START, effectShowHandler);
				fxHide3D.addEventListener( EffectEvent.EFFECT_START, effectHideHandler);
				
				grpValorZ.visible = grpValorZ.includeInLayout = horaZ;
				if(horaZ)
					lblTiempoA.text = "Tasa de respuesta En tiempo pA";
				
				navChart.percentHeight = 100;
				scroll();
			}
			
			private function effectShowHandler( event:EffectEvent ):void{
				fxFade.target = (event.currentTarget as Rotate3D).target;
				fxFade.alphaFrom = 0;
				fxFade.alphaTo = 1;
				fxFade.play();
			}
			private function effectHideHandler( event:EffectEvent ):void{
				fxFade.target = (event.currentTarget as Rotate3D).target;
				fxFade.alphaFrom = 1;
				fxFade.alphaTo = 0;
				fxFade.play();
			}
			
			public function get horaZ():Boolean
			{
				return _horaZ;
			}
			
			public function set horaZ(value:Boolean):void
			{
				_horaZ = value;
				if (grpValorZ)
					grpValorZ.visible = grpValorZ.includeInLayout = value;
				
				if (value)
				{
					if(lblTiempoA)
						lblTiempoA.text = "Tasa de respuesta En tiempo pA";
					editSize = 280;
				}
			}
			
			protected function scroll():void
			{
				systemManager.addEventListener("mouseWheel", bumpDelta, true);
			}
			
			public function bumpDelta(event:MouseEvent):void
			{
				event.delta = event.delta > 0 ? 5 : -1;
			}
			
			protected function txtValidator_focusOutHandler($txtInput:IVisualElement):Boolean
			{
				var error:ValidationResultEvent;
				
				if($txtInput != null && $txtInput is TextInput)
				{
					var currentTxtInput:TextInput = $txtInput as TextInput;
					validatorPorcentajePositivo.listener = currentTxtInput;
					error = validatorPorcentajePositivo.validate(currentTxtInput.text);
				}
				
				if(error == null || error.results == null)
					return true;
				else
					return false;
			}
		]]>
	</fx:Script>
	
	<pq:MobViewStack id="stackTodo" width="100%" height="100%" creationPolicy="all" >
		<s:NavigatorContent id="navChart" showEffect="{fxShow3D}" hideEffect="{fxHide3D}">
			<s:layout >
				<s:VerticalLayout gap="0">
					
				</s:VerticalLayout>
			</s:layout>
			<s:HGroup id="grpMain" width="100%" paddingLeft="20" paddingTop="15" paddingRight="15" depth="50" >
				<componentes:tituloChartTablero fontSize="15" id="title" width="100%" paddingTop="15" text="{ this.titulo }" fontFamily="Tahoma"/>
				<s:BorderContainer id="grpBotones" height="0" width="38" backgroundColor="0x595959" borderVisible="false" >
					<s:VGroup width="100%" height="100%" horizontalAlign="center" horizontalCenter="0" gap="3" >
						<pqNet:botonPqNetLargo id="btnInfo" rendererPq="render_engraneGris20x20" mouseDown="mostrarEdicion()" />
					</s:VGroup>
				</s:BorderContainer>
			</s:HGroup>
			
		</s:NavigatorContent>
		
		<s:NavigatorContent id="navEditar" showEffect="{fxShow3D}" hideEffect="{fxHide3D}">
		<s:Group width="100%" id="grpEdit" visible="true" height="100%">			
			<mx:Canvas width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off" >
				<s:VGroup width="100%" height="100%" horizontalAlign="center">  
					
					<s:HGroup width="100%" paddingTop="15" paddingLeft="20" paddingRight="15">						
						<componentes:tituloChartTablero fontSize="15" id="titleEdit" width="100%" paddingTop="15" text="{ this.titulo }" fontFamily="Tahoma"/>
						<s:BorderContainer id="grpBotonesEdit" height="0" width="38" backgroundColor="0x595959" borderVisible="false" >
						<s:VGroup width="100%" height="100%" horizontalAlign="center" horizontalCenter="0" gap="3" >
							<pqNet:botonPqNetLargo id="btnEquis" rendererPq="espantosaequis" mouseDown="mostrarEdicion()" />
						</s:VGroup>
						</s:BorderContainer>
					</s:HGroup>
					
					<s:Scroller width="100%" height="100%" >
						<s:VGroup width="100%" height="100%" paddingLeft="20" paddingRight="22" verticalAlign="middle" paddingTop="0">
							
							<s:VGroup width="100%" horizontalAlign="center">
								<label:Titulo_16_pTop10 text="Objetivo de realización" width="100%" fontFamily="Helvetica" />
								<s:HGroup width="100%" verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet id="txtPorcentaje" width="100%" restrict="0-9." focusOut="txtValidator_focusOutHandler(txtPorcentaje)" />
									<label:Texto text="%" />
								</s:HGroup>
							</s:VGroup>
							<s:VGroup width="100%" horizontalAlign="center">
								<label:Titulo_16_pTop10 id="lblTiempoA" text="Tasa de respuesta En tiempo" width="100%" fontFamily="Helvetica"/>
								<combo:ComboCatalogos width="90%" id="cmbA"  visible="false" includeInLayout="false"/>
								<s:HGroup width="100%" verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet id="txtA" width="100%" restrict="0-9." focusOut="txtValidator_focusOutHandler(txtA)" />
									<label:Texto text="%" />
								</s:HGroup>
							</s:VGroup>
							
							<s:VGroup width="100%" id="grpValorZ" visible="false" includeInLayout="false" horizontalAlign="center" >
								<label:Titulo_16_pTop10 text="Tasa de respuesta En tiempo pZ" width="100%" fontFamily="Helvetica"/>
								<combo:ComboCatalogos width="100%" id="cmbZ" visible="false" includeInLayout="false"/>
								<s:HGroup width="100%" verticalAlign="middle">
									<textinput:txtInputBlancoDefaultPQNet id="txtZ" width="100%" restrict="0-9." focusOut="txtValidator_focusOutHandler(txtZ)" />
									<label:Texto text="%" />
								</s:HGroup>
							</s:VGroup>
							
							<pqNet:botonPqNetLargo id="guardar" label="Guardar" width="100%" />
							
						</s:VGroup>
					</s:Scroller>
				</s:VGroup>
			</mx:Canvas>
		</s:Group>
		
		</s:NavigatorContent>
	</pq:MobViewStack>
	
</s:Group>
