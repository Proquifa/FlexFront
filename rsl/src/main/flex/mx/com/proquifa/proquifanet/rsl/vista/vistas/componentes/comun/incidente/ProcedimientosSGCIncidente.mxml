<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="660" height="800" horizontalAlign="center" close="cierraPopUp()"
	paddingTop="15" paddingLeft="20" paddingRight="20" paddingBottom="10"  showCloseButton="true" xmlns:label="skins.skin.label.*" xmlns:otros="skins.otros.*" xmlns:s="library://ns.adobe.com/flex/spark">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoAnalisisincidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Procedimiento;
			import mx.controls.CheckBox;
			import mx.events.ListEvent;
			
			
			private var _listaActualizada:ArrayCollection = null;
			[Bindable]
			public var _listaPreCargada:ArrayCollection = null;
			
			/**
			 * Siempre se ejecuta este metodo al abrir el PopUp. Este metodo invoca al mapa y nos envia al Metodo recibeListaProcedimientos
			 */
			public function inicia():void{
				var evento:EventoAnalisisincidente = new EventoAnalisisincidente( EventoAnalisisincidente.CARGAR_PROCEMIENTOS_SGC );
				dispatchEvent( evento );				
			}
			/**
			 * Metodo que recibe la Lista de Pprocedimientos del Mapa. Si la lista ya fue abierta una vez se reciben y son actualizados.
			 */ 
			public function set recibeListaProcedimientos(datos:ArrayCollection):void{				
				if(datos == null){
					return;
				}
				if( this._listaPreCargada == null ){
					this._listaPreCargada = new ArrayCollection();
				}
				this._listaActualizada = new ArrayCollection();
				//se carga la lista de procedimientos de nuevo con el servicio  por si se actualizan los servicios en la Base
				this._listaActualizada = datos;
				//se asigna 
				for(  var i:int = 0; i < this._listaActualizada.source.length ; i++ ){
					(this._listaActualizada.getItemAt(i) as Procedimiento).numFila = i+1;					
					for(var y:int = 0; y < this._listaPreCargada.source.length ; y++ ){
						if( (this._listaPreCargada.getItemAt(y) as Procedimiento).nombre == (this._listaActualizada.getItemAt(i) as Procedimiento).nombre &&  (this._listaPreCargada.getItemAt(y) as Procedimiento).idProcedimiento == (this._listaActualizada.getItemAt(i) as Procedimiento).idProcedimiento){
							(this._listaActualizada.getItemAt(i) as Procedimiento).activaProcedimiento = (this._listaPreCargada.getItemAt(y) as Procedimiento).activaProcedimiento;
						}
					}	
				}			
				this.dtgProcedimientos.dataProvider = this._listaActualizada;
			}
			/**
			 * Metodos actualiza la variable _listaPreCargada cada que se le de click a un check del Grid
			 */ 
			private function metodosDelGrid(event:ListEvent):void{
				if (event.columnIndex == 4) { 	          		
	          		if( (event.itemRenderer as CheckBox).selected == true ) {	  
	          			this.dtgProcedimientos.selectedItem.activaProcedimiento = true;
	          			this._listaPreCargada = this.dtgProcedimientos.dataProvider as ArrayCollection;	          			
					} else if( (event.itemRenderer as CheckBox).selected == false ){
						this.dtgProcedimientos.selectedItem.activaProcedimiento = false;
						this._listaPreCargada = this.dtgProcedimientos.dataProvider as ArrayCollection;						
					}                   						    
	            }	 
			}
			/**
			 * Cuando se aceptan los cambios es regresada la variable
			 */ 
			private function enviaLista():void{
				var evento:EventoAnalisisincidente = new EventoAnalisisincidente( EventoAnalisisincidente.REGRESA_LISTA_PROCEDIMIENTOS );
				evento.listaProcedimientos = this._listaPreCargada;
				dispatchEvent( evento );
				reset();
				cierraPopUp();
			}			
			/**
			 * Metodo que dispara el evento para cerrar el PopUp
			 */ 
			public function cierraPopUp():void{
				reset();
				var evento:EventoAnalisisincidente = new EventoAnalisisincidente( EventoAnalisisincidente.CIERRA_POP_UP_PROCEDIMIENTOS );
				dispatchEvent( evento );
			}
			/**
			 * Metodo para setear todos los valores a nulo.
			 */
			 private function reset():void{
			 	this.dtgProcedimientos.dataProvider = null
			 	this._listaActualizada = null;
			 	this._listaPreCargada = null;
			 } 
		]]>
	</mx:Script>
	<!--<mx:Label text="Procedimientos SGC" width="100%" fontSize="40" fontWeight="bold"/>-->
	<label:labelTitulo_Otros text="Procedimientos SGC" />
	<!--<mx:HRule width="100%"/>-->
	<otros:division width="100%"/>
	<mx:Spacer height="3"/>
	<mx:DataGrid id="dtgProcedimientos" width="100%" height="100%" textAlign="center" itemClick="metodosDelGrid(event)">
		<mx:columns>
			<mx:DataGridColumn width=".05" headerText="#" dataField="numFila" />
			<mx:DataGridColumn width="0.2" headerText="idProceso" dataField="idProcedimiento" visible="false"/>
			<mx:DataGridColumn width="0.25" headerText="idSub-Proceso" dataField="subProceso"  visible="false"/>
			<mx:DataGridColumn width="0.25" headerText="Proceso" dataField="nombreProceso" />
			<mx:DataGridColumn width="0.25" headerText="Sub-Proceso" dataField="nombreSubproceso"/>
			<mx:DataGridColumn width="0.45" headerText="Procedimiento" dataField="nombre" />
			<mx:DataGridColumn width="0.05" headerText=" " dataField="activaProcedimiento" >
				<mx:itemRenderer>
					<mx:Component>
						<mx:CheckBox />
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<mx:Spacer height="3"/>
	<!--<mx:HRule width="100%"/>-->
	<otros:division width="100%"/>
	<mx:Spacer height="3"/>
	<mx:HBox width="100%">
		<!--<mx:Button width="80" label="Cancelar" click="cierraPopUp()"/>-->
		<s:Button styleName="botonNegroOld" width="80" label="Cancelar" click="cierraPopUp()"/>
		<mx:Spacer width="100%"/>
		<!--<mx:Button width="80" label="Guardar" click="enviaLista()"/>-->
		<s:Button styleName="botonNegroOld" width="80" label="Cancelar" click="cierraPopUp()"/>
	</mx:HBox>
</mx:TitleWindow>
