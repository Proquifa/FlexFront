<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:otros="skins.otros.*"
			   xmlns:label="skins.skin.label.*"
			   skinClass="skins.titleWindow.skinTitleWindowBlanca"
			   creationComplete="init();{PopUpManager.centerPopUp(this)}" xmlns:acordeon="skins.skin.acordeon.*" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="660" height="720" xmlns:pqNet="skins.botones.pqNet.*">
	<!--width="660" height="800"-->
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Resize id="fxResize"  target="{this}" duration="600" effectEnd="{this.grpTodo.visible = true }"/>
		<s:Resize id="fxCierraPop" target="{this}" widthTo="0" heightTo="0" duration="150" effectEnd="cerrar()"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoAnalisisincidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.RendererProcedimientosSGC;
			import mx.controls.Alert;
			import mx.core.INavigatorContent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable]
			private var subprocesos:ArrayCollection = new ArrayCollection();
			
			private function centraEstePop(event:ResizeEvent):void{
				PopUpManager.centerPopUp( this );
			}
			
			private function ajustaCentraPop($:Event):void{
				height = ($.currentTarget as Stage).stageHeight/1.2; //-
				width = ($.currentTarget as Stage).stageWidth - ($.currentTarget as Stage).stageWidth/1.8; //+
				this.addEventListener(ResizeEvent.RESIZE,centraEstePop);
			}
			
			public function init():void{
				if(this.procedimientosSeleccionados == "falso"){
					this.checkOpcional.selected = true;
				}
				
				/* this.fxResize.heightTo = stage.height/1.2;
				this.fxResize.widthTo = stage.width - stage.width/1.8;
				this.fxResize.stop();
				this.fxResize.play();
				
				this.addEventListener(ResizeEvent.RESIZE,centraEstePop);
				stage.addEventListener( ResizeEvent.RESIZE, ajustaCentraPop );*/
				PopUpManager.centerPopUp(this);
			}
			
			private function cerrar():void{
				PopUpManager.removePopUp(this);
			}
			
			public var procedimientosSeleccionados:String = "";
			
			public function set recibirSubprocesosAgrupados(_objetoSubprocesos:Object):void{
				this.subprocesos = new ArrayCollection();
				var seleccionados:ArrayCollection = new ArrayCollection();
				this.acordeonSubprocesos.removeAllChildren();
				if(_objetoSubprocesos != null){
					this.subprocesos = _objetoSubprocesos["catalogo"];
					seleccionados = _objetoSubprocesos["seleccionados"]
					if(this.subprocesos.length > 0){
						for(var m:int = 0; m<this.subprocesos.length; m++){
							var hijo:RendererProcedimientosSGC = new RendererProcedimientosSGC();
							hijo.subprocesos = ObjectUtil.copy(this.subprocesos[m]) as ArrayCollection;
							hijo.label = this.subprocesos[m][0].nombreSubproceso;
							hijo.id = "grid" + m.toString();
							for(var n:int = 0; n<seleccionados.length; n++){
								//if(seleccionados[n].activaProcedimiento == true){
								if(seleccionados[n].subProceso == this.subprocesos[m][0].subProceso){
									hijo._seleccionados.addItem(seleccionados[n]);
								}
								//}
							}
							hijo.marcarSeleccionados();
							this.acordeonSubprocesos.addChild(hijo);
							
						}
					}
				}
				
			}
			
			
			public function obtenerValores():ArrayCollection{
				var resultados:ArrayCollection = new ArrayCollection();
				for(var m:int = 0; m<this.subprocesos.length; m++){
					var hijo:RendererProcedimientosSGC = this.acordeonSubprocesos.getChildAt(m) as RendererProcedimientosSGC;
					//this.acordeonSubprocesos.selectedIndex = m;
					var temp:ArrayCollection = new ArrayCollection();
					//temp = RendererProcedimientosSGC(this.acordeonSubprocesos.selectedChild).subprocesos;
					temp = hijo.subprocesos;
					for(var n:int = 0; n<temp.length; n++){
						if(temp[n].activaProcedimiento == true){
							resultados.addItem(temp[n]);
						}
						
					}
					
				}
				return resultados;
			}
			
			public function guardar():void{
				var evento:EventoAnalisisincidente = new EventoAnalisisincidente(EventoAnalisisincidente.REGRESA_LISTA_PROCEDIMIENTOS);
				evento.listaProcedimientos = obtenerValores();
				if(evento.listaProcedimientos.length > 0 && this.checkOpcional.selected == true){
					
					Alert.show("La opción de: \n\n 'El procedimiento en cuestión no esta relacionado a ningún procedimiento' \n\n solo debe elegirse cuando no hay ningun procedimiento preeviamente seleccionado","¡Atención!");
					return;
				}
				if(evento.listaProcedimientos.length > 0){
					evento.procesosAsociados = "verdadero";
				}
				if(this.checkOpcional.selected == true){
					evento.procesosAsociados = "falso";
				}
				if(this.checkOpcional.selected == false && evento.listaProcedimientos.length == 0){
					evento.procesosAsociados = "nulo";
				}
				this.dispatchEvent(evento);
				this.cerrar();
			}
		]]>
	</fx:Script>
	
	<s:VGroup paddingBottom="10" paddingLeft="20" paddingRight="20" paddingTop="15" width="100%" height="100%" id="grpTodo">
		<s:HGroup width="100%">
			<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_cotizaciones46}"/>
			<label:labelTitulo_Otros width="100%" text="Procedimientos"/>
		</s:HGroup>
		<mx:HRule width="100%"/>
		<mx:Spacer height="3"/>
		<acordeon:acordeonPqNet openDuration="250" id="acordeonSubprocesos" width="100%" height="100%" creationPolicy="all"/>
		<s:HGroup  width="100%">
			<s:Label width="100%" height="100%"
					 text="El incidente en cuestión no esta relacionado a ningún procedimiento"
					 verticalAlign="middle"/>
			<s:CheckBox id="checkOpcional"/>
		</s:HGroup>
		<s:HGroup width="100%">
			<!--<s:Button styleName="botonNegroOld" label="Salir" click="cerrar();"/>-->
			
			<pqNet:botonPqNetLargo icono="iconosalir" label="Salir" id="salir" click="cerrar()" fontFamily="Helvetica"/>
			
			<mx:Spacer width="100%"/>
			<!--<s:Button styleName="botonNegroOld" label="Asociar" click="guardar()"/>-->
			<pqNet:botonPqNetLargo id="asociarcontacto" label="Asociar" click="guardar()" icono="iconoasociar" fontFamily="Helvetica" />
		</s:HGroup>
	</s:VGroup>
	
</s:TitleWindow>
