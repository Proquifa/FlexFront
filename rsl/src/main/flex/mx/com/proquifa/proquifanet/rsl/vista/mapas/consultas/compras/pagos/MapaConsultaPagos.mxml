<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/"
			   xmlns:debug="com.asfusion.mate.utils.debug.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.compras.pagos.EventoConsultaPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.compras.pagos.ModeloConsultaPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.ConsultaPagosInfoGeneralPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.GridConsultaPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.HistorialConsultaPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.MenuConsultaPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.componentesGraficas.PagosGraficaETvsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.componentesGraficas.PagosGraficaPagadoVsPorPagar;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.componentesGraficas.PagosGraficaTotalPagado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.componentesGraficas.PagosGraficaTotalPorPagar;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.componentesGraficas.graficosETvsFT.PagosGraficaETvsFTSecuandaria;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.componentesGraficas.graficosETvsFT.PagosGraficaPagadorETvsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.pagos.itemRenderer.ConsultaPagosIR;
		]]>
	</mx:Script>
	
<!--	<mate:Debugger level="{Debugger.ALL}"/>-->
	
	<!--Obtener lista de pagos por busqueda rapida y avanzada-->
	<mate:EventHandlers type="{EventoConsultaPagos.BUSCA_PAGOS_POR_FOLIO}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_PAGOS_SERVICES}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPagos"
								  arguments="{[event.idProveedor, event.estado, event.empresa, event.factura, event.moneda, event.finicio, event.ffin, event.oc, event.idUsuario, event.idPagador, event.idComprador]}"
								  showBusyCursor="true">
							      
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="setListaPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[GridConsultaPagos,PagosGraficaTotalPagado,PagosGraficaTotalPorPagar,PagosGraficaPagadoVsPorPagar,PagosGraficaETvsFT,PagosGraficaPagadorETvsFT]}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="listaPagos"
							   targetKey="obtenerListaPagos"/>
	</mate:Injectors>
	
	<!--Evento para la Espera y bloqueo de Pantalla-->
	<mate:EventHandlers type="{EventoEsperar.CONFIGURAR_ESPERA}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="setControlDeBloqueoPantalla"
							arguments="{[currentEvent.mensaje, currentEvent.tipoEventos,currentEvent.idButtons,currentEvent.error]}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{MenuConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="actualizarEstadoDeEsperaYBloqueo"
							   targetKey="actualizarEsperaYBloqueo"/> 
	</mate:Injectors>	
	
	<!--Obtener resumen de consulta pagos -->
	<mate:EventHandlers type="{EventoConsultaPagos.OBTENER_RESUMEN_PAGOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_PAGOS_SERVICES}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenConsultaPagos"
								  arguments="{[event.idProveedor, event.estado, event.empresa, event.factura, event.moneda, event.finicio, event.ffin, event.oc, event.idUsuario, event.idPagador, event.idComprador]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="setResumenPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="resumenPagos"
							   targetKey="obtenerResumenConsultaPagos"/>
	</mate:Injectors>
	
	<!--Evento para mostrar ocultar tab grafica-->
	<mate:EventHandlers type="{EventoConsultaPagos.MOSTRAR_OCULTAR_TAB_GRAFICAS}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="setMostrarOcultaTabGrafica"
							arguments="{event.tabGrafica}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="mostrarOcultaTabGrafica"
							   targetKey="mostrarOcultarTab"/> 
	</mate:Injectors>
	
	<!--Obtiene los pagos del proveedor-->
	<mate:EventHandlers type="{EventoConsultaPagos.OBTENER_INFO_PAGOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_PAGOS_SERVICES}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPagos"
								  arguments="{[event.idProveedor, event.estado, event.empresa, event.factura, event.moneda, event.finicio, event.ffin, event.oc, event.idUsuario, event.idPagador, event.idComprador]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="setConsultaPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaPagosIR}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="consultaPagos"
							   targetKey="obtenerPPagos"/>
	</mate:Injectors>
	
	<!--Obtiene la Linea de Tiempo de los Pagos-->
	<mate:EventHandlers type="{EventoConsultaPagos.OBTENER_TIEMPO_PROCESO_PAGOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_PAGOS_SERVICES}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerTiempoProcesoPago"
								  arguments="{event.idFxPagar}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="setTiempoProceso"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{HistorialConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="tiempoProcesoPagos"
							   targetKey="recibeHistorialPagos"/>
	</mate:Injectors>
	<mate:Injectors target="{HistorialConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="parametrosConsultaPagos"
							   targetKey="recibeParametrosPagos"/>
	</mate:Injectors>
	<!--Obtiene la informacion general de Pagos-->
	<mate:EventHandlers type="{EventoConsultaPagos.OBTENER_INFO_GENERALES_PAGO}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_PAGOS_SERVICES}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenLineaTiempo"
								  arguments="{[event.idFxPagar,event.nivel]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="setResumenInfoGeneral"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaPagosInfoGeneralPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="resumenInfoGeneralPagos"
							   targetKey="recibeInformacionGeneral"/>
	</mate:Injectors>
	<mate:Injectors target="{ConsultaPagosInfoGeneralPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="parametrosHistorialConsultaPagos"
							   targetKey="recibeParametrosHistorial"/>
	</mate:Injectors>
	
	<!--Muestra el primer nivel-->
	<mate:EventHandlers type="{ EventoConsultaPagos.MOSTRAR_CARGAR_FACTURA_SIN_FACTURA_PAGOS }">
		<mate:MethodInvoker generator="{ ModeloConsultaPagos }"
							method="setCargarFactura"
							arguments="{event}">
		</mate:MethodInvoker>
		
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaPagosInfoGeneralPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="cargarFacturaConsultaPagos"
							   targetKey="cargarFacturaConsultaPagos"/>
	</mate:Injectors>	
	
	
	<!--Evento para pasar info a la grafica ETvsFTSecundaria-->
	<mate:EventHandlers type="{EventoConsultaPagos.PASAR_INFO_A_ETVSFT_SECUNDARIA}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="pasarInfoAGraficaETvsFTSecundaria"
							arguments="{event.arregloExtra}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{PagosGraficaETvsFTSecuandaria}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="enviarInfoAGraficaETvsFTSecundaria"
							   targetKey="obtenerInfoDeGraficaPrincipalETvsFT"/> 
	</mate:Injectors>
	
	
	<!--obtener tipo de filtro para graficos secundarios -->
	<mate:EventHandlers type="{EventoConsultaPagos.OBTENER_FILTRO_GRAFICO_SECUNDARIO}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="setFiltroGraficoSecundario"
							arguments="{[event.tipo]}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[PagosGraficaPagadorETvsFT]}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="filtroGraficoSecundario"
							   targetKey="recibirFiltroGrafico"/> 
	</mate:Injectors>
	
	
	<!--===========================================================MODIFICACIONES PARA CONSULTAS POR DEMANDA===================================-->
	
	<!--Evento Para settear los valores de los filtros de la consulta actual-->
	<mate:EventHandlers type="{EventoConsultaPagos.SETTEAR_VALORES_DE_LA_BUSQUEDA_ACTUAL}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="setSettearValoresDeLaConsultaActual"
							arguments="{[event.idProveedor, event.estado, event.empresa, event.factura, event.moneda, event.finicio, event.ffin, event.oc, event.idUsuario]}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="regresaValoresFiltrosDelaBusquedaActual"
							   targetKey="filtrosConsultaActual"/> 
	</mate:Injectors>
	
	<!--Evento que inyecta la vista seleccionada en el menu-->
	<mate:EventHandlers type="{EventoConsultaPagos.SETTEAR_CURRENT_VISTA_SELECTED}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="setSettearSelectedVista"
							arguments="{event.selectedVista}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{MenuConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="enviarVistaSeleccionadaActualmente"
							   targetKey="recibirLaVistaSeleccionada"/> 
	</mate:Injectors>
	
	<!--Evento que setea true o false para actualizar o no la información en la vista seleccionada actualmente-->
	<mate:EventHandlers type="{EventoConsultaPagos.ACTUALIZAR_VISTA_ACTUAL}">
		<mate:MethodInvoker generator="{ModeloConsultaPagos}"
							method="setActualizarDatosVistaActual"
							arguments="{event.actualizarVistaCurrent}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaPagos}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}"
							   sourceKey="actualizarLaVistaSeleccionada"
							   targetKey="actualizarVistaActualBotonera"/> 
	</mate:Injectors>
	
	
	<!--Busqueda Avanzada y Rapida para Interfacturacion-->
	
	<mate:EventHandlers type="{EventoConsultaPagos.BUSCA_PAGOS_INTERFACTURACION}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_PAGOS_SERVICES}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPagosInterfacturacion"
								   arguments="{[event.finicio, event.ffin, event.empresaVendio, event.estado, event.empresaCompro,event.factura,event.oc]}"
								  showBusyCursor="true"> <!--arguments="{[event.idProveedor, event.estado, event.empresaCompro, event.factura, event.moneda, , event.oc, event.idUsuario, event.idPagador, event.idComprador]}"-->
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaPagos}"
									method="setListaPagosInter"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[GridConsultaPagos]}">
		<mate:PropertyInjector source="{ModeloConsultaPagos}" 
							   sourceKey="listaPagosInter"
							   targetKey="obtenerListaPagosInter"/>
	</mate:Injectors>
	
</mate:EventMap>
