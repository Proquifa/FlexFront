<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true" xmlns:label="skins.skin.label.*" 
				xmlns:consultas="skins.skin.comun.consultas.*" 
				xmlns:otros="skins.otros.*" 
				xmlns:pqNet="skins.botones.pqNet.*" 
				xmlns:textinput="skins.skin.textinput.*"
				xmlns:chekbox="skins.skin.chekbox.*" 
				xmlns:numericStepper="skins.skin.numericStepper.*"
				currentStateChanging="itemrenderer1_currentStateChangingHandler(event)"
				>
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.formats.WhiteSpaceCollapse;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.agenteAduanal.EventoCatAgenteAduanalGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.alertPqNet.ResultAlert;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.AgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.LugarAgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.LugarConcepto;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.EffectEvent;
			import mx.events.StateChangeEvent;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable] 	public var _current:LugarConcepto;
			public var _idAgente:Number;
			private var activaCambios:Boolean;
			private var lugar:LugarConcepto;
			private var contDes:Boolean;
			
			
			override public function set data(value:Object):void{
				super.data = value;
				
				if(value!= null)
				{
					_current = ObjectUtil.copy(data) as LugarConcepto;
					
					if(_current.edicion)
					{
						imgEngrane.visible = imgEngrane.includeInLayout = true;
					}
					else
					{
						
						imgEngrane.visible = imgEngrane.includeInLayout = false;
					}
				}
			}
			
		
			
			protected function showGrupo(event:MouseEvent):void
			{
				this.imgEngrane.visible = false; 
				grpTitulos.visible = grpTitulos.includeInLayout = false;
			}
			
			protected function showTipoCambio_effectEndHandler(event:EffectEvent):void
			{
				var reub:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.REUBICAR_PANEL_MODIFICACION)
				dispatchEvent(reub);
			}
			
			protected function hideTipoCambio_effectEndHandler(event:EffectEvent):void
			{
				this.imgEngrane.visible = true; 
				grpTitulos.visible = grpTitulos.includeInLayout = true;
			}
			
			
			public function set recibeAgenteSeleccionado($pro:AgenteAduanal):void{
				if( $pro == null )
					return;
				
				_idAgente = $pro.idAgenteAduanal;
				
			}
			
			protected function interacionConLosTextImputs_focusOutHandler(event:FocusEvent):void
			{
				if(event.currentTarget != null){
					event.stopImmediatePropagation();
					event.preventDefault();
				}
			}
			
			
			protected function itemrenderer1_currentStateChangingHandler(event:StateChangeEvent):void
			{
				if(event.newState == "normal")
				{
					grpTitulos.visible = grpTitulos.includeInLayout = true;
					
					
					if(_current.edicion)
					{
						imgEngrane.visible = imgEngrane.includeInLayout = true;
						imgEliminar.visible = imgEliminar.includeInLayout = false;
					}
					else
					{
						imgEngrane.visible = imgEngrane.includeInLayout = false;
						imgEliminar.visible = imgEliminar.includeInLayout = false;
					}
				}
			}
			
			
			protected function imgEngrane_clickHandler(event:MouseEvent):void
			{
				imgEngrane.visible = imgEngrane.includeInLayout = false;
				imgEliminar.visible = imgEliminar.includeInLayout = true;
				dispatchEvent(new Event("pasarInfoListaEdicion",true));
			}
			
			protected function imgEliminar_clickHandler(event:MouseEvent):void
			{
				contDes = true;
				alertaSingleton.show(catalogoAlertas.ADV_eliminarRegistro,catalogoAlertas.ELIMINAR,"CatAgenteEliminar","","","Si","No");
				
			}
			public function set recibeDelAlert( $dato:ResultAlert ):void{
				if( $dato == null || $dato.vieneD == null ){
					return;
				}
				if( $dato.vieneD == "CatAgenteEliminar" && contDes){
					contDes = false;
					if( $dato.botonSeleccionado == "Si")
					{
						dispatchEvent(new Event("eliminacionConceptoLugarAA",true));
					}
					else
					{
						dispatchEvent(new Event("cancelarEliminacionRegistro",true));
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="selected"/>
	</s:states>
	
	<otros:division width="100%" />
	<s:VGroup  width="100%" height="100%" >
		<s:VGroup width="100%" height="100%" paddingLeft="3" paddingRight="10" paddingBottom="10">
			<s:HGroup width="100%" height="100%">
				<s:VGroup id="itemPrincipal"  width="100%" height="100%" horizontalAlign="center">
					<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="10">
						<s:Spacer width="2"/>
						<s:Image  source="{catalogoIconosBotones.getInstance().editar_lapizRojo}" id="imgEngrane" click="imgEngrane_clickHandler(event)" visible="false" includeInLayout="false" buttonMode="true"/>
						
						<!--<pqNet:botonPqNetLargo id="imgEngrane" icono="editar_lapizRojo" colorBase="0xFFFFFF" 
											   minWidth="34" click="imgEngrane_clickHandler(event)" />-->
						<s:Image  source="{catalogoIconosBotoneras.getInstance().eliminarParaCatalogo}" id="imgEliminar" click="imgEliminar_clickHandler(event)" visible="false" includeInLayout="false"/>
						<s:VGroup id="grpTitulos" width="100%" height="100%" gap="10" >
							<label:Titulo id="lbltitulo" text="{_current.concepto}" paddingTop="10"   />
							<label:Texto id="lblmonto" text="{_current.monto == 0 ? _current.porcentaje:_current.monto}{_current.monto == 0 ? ' %':' Dls'}" width="100%" paddingTop="0" 
										 />
						</s:VGroup>
						<s:VGroup width="100%" height="100%" >
							<s:HGroup width="100%" paddingTop="10">
								<s:Spacer width="100%" />
							</s:HGroup>
						</s:VGroup>	
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
			<s:VGroup id="total" width="100%" horizontalAlign="center" gap="10" paddingTop="10" visible="false" includeInLayout="false" >
				<label:TextoGrisCasiNegro id="lbltotal" />
				<label:TextoGris text="TOTAL"/>
			</s:VGroup>
		</s:VGroup>
	</s:VGroup>
	
	
</s:ItemRenderer>
