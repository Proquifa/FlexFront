<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*" 
		  xmlns:componentes="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		  xmlns:otros="skins.otros.*"
		  xmlns:pqNet1="skins.skin.datagrid.pqNet.*"
		  xmlns:pqNet="skins.botones.pqNet.*" 
		  width="100%" height="100%" 
		  paddingLeft="20" paddingTop="25" paddingBottom="15" xmlns:label="skins.skin.label.*" xmlns:grafica="skins.botones.grafica.*"
		  >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600" />
		<s:SolidColorStroke id = "sA" color="0x3b98af" weight="2"/>
		<mx:SolidColorStroke id = "s1" color="0x3b98af" weight="6"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
		
		<s:LinearGradient id="sc1" rotation="90">
			<s:GradientEntry alpha="1.0" color="#b4c871" ratio="0"/>
			<s:GradientEntry alpha="1.0" color="#8da741" ratio="1"/> 
		</s:LinearGradient>
		<s:LinearGradient id="sc2" rotation="90">
			<s:GradientEntry alpha="1.0" color="#990429" ratio="0"/>
			<s:GradientEntry alpha="1.0" color="#910824" ratio="1"/>
		</s:LinearGradient>
		
		
		<mx:SolidColorStroke id = "s2" color="0xdd9c12" weight="2"/>
		<mx:SolidColor id="sc3" color="0x{catalogoColores.LABEL_NARANJA}" alpha="1"/>
		<s:SolidColorStroke id="stroke2" color="0x{catalogoColores.LABEL_NARANJA}" weight="5"/>
		<mx:SolidColorStroke id = "sObj" color="0xC54B8C" weight="3"/>
		<mx:SolidColor id="sc4" color="0xC54B8C" alpha="1"/>
		<s:SolidColorStroke id="s4" color="0xC54B8C" weight="2"/>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.productos.EventoTableroProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.productos.OCTableroProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.productos.ProductoTableroProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.PeriodoToolTip;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			
			private var _ocComprasGrafica:ArrayCollection;
			private var _currentVistaSelected:String;
			private var _listaMensual:ArrayCollection = new ArrayCollection([
				"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
			]);
			
			[Bindable]
			private var _comprasParaTabla:ArrayCollection;
			private var _desempenoActual:Number = 0;
			private var totalLegend:Number = 0;
			private var _desepenoAnterior:Number = 0;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			private var _event:EventoTableroProductos;
			private var fecha:Date = new Date();
			private var yallegaronLasCompras:Boolean = false;
			private var yallegaronLasComprasGrid:Boolean = false;
			private var _anioMultiple:Boolean;
			private var _anioFiltro:Number;
			private var _anioInicio:int = 0;
			private var _anioFin:int = 0;
			private var cont:Number=0;
			private var _sql:Query;
			
			public function set recibeComprasRealizadas(comparativa:ArrayCollection):void
			{
				if(comparativa == null) return;
				
				this._ocComprasGrafica = new ArrayCollection();
				this._ocComprasGrafica = comparativa;
				yallegaronLasCompras = true;
				
				/*gridCompras.dataProvider = ObjectUtil.copy(comparativa) as ArrayCollection;
				setValoresFooter(comparativa);*/
			}
			public function set recibeComprasRealizadasGrid(value:ArrayCollection):void
			{
				if(value == null) return;
				_sql = new Query(value,["concepto"]);
				_comprasParaTabla = new ArrayCollection();
				_comprasParaTabla = value;
				gridCompras.dataProvider = ObjectUtil.copy(value) as ArrayCollection;
				setValoresFooter(value);
				yallegaronLasComprasGrid = true;
			}
			
			public function set recibeFiltros(parametros:EventoTableroProductos):void{
				
				if(parametros == null) return;
				_event = parametros;
				_minimoMeses = _event.parametros.mesInicio;
				_maximoMeses = _event.parametros.mesFin;
				_anioFiltro = _event.parametros.anioInicio;
				_anioMultiple = _event.parametros.aniosMultiple;
				
				if(_anioMultiple){
					_anioInicio = _event.parametros.anioInicio;
					_anioFin = _event.parametros.anioFin;
				}
				
				cont++;				
				llamarAIniciarGrafica();	
				/*llamarAIniciarGraficaGrid();*/
				esperarGrafica();
			}
			private function esperarGrafica():void
			{
				setTimeout(llamarAIniciarGraficaGrid,2000);	
			}
			private function llamarAIniciarGrafica():void
			{
				if(yallegaronLasCompras)
				{					
					yallegaronLasCompras = false;
					if(_anioMultiple){
						myChart.dataProvider = iniciarGraficaAniosMulti( _ocComprasGrafica );
					}else{
						myChart.dataProvider = iniciarGrafica( _ocComprasGrafica );
					}
				}
				else
				{
					setTimeout(llamarAIniciarGrafica,300);
				}
			}
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String
			{
				if(_anioMultiple){
					return int($etiqueta).toString();
				}else{
					return _listaMensual[ int($etiqueta) -1 ].toUpperCase();				
				}
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				if($lista == null)
					return new ArrayCollection();
				_desempenoActual = 0;
				totalLegend = 0;
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				arrReturn.addItem(new Object());
				var objeto:Object ;
				var cuenta:int = 1;
				var contador:int = 0;
				var contadorPromedio:int = 0;
				var _anio:Number = ($lista[0] as ResumenConsulta).periodo;
				var mes:Number = fecha.month + 1;
				_desepenoAnterior = 0;
				
				while( cuenta < 13)
				{
					if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
					{
						objeto = new Object();
						objeto.numeroMes = cuenta;
						objeto.mes = _listaMensual[cuenta -1];
						objeto.montoUSD_0 = 0;
						objeto.montoUSD_1 = 0;
						objeto.montoUSD_2 = 0;
						objeto.totalPeriodo = 0;
						objeto.montoObjetivo = 0; 
						objeto.montoFundamental = 0;
						
						for( m = 0; m < $lista.length;m++ ){
							var resumen:ResumenConsulta = $lista[m] as ResumenConsulta;
							if(cuenta == resumen.mes){
								if( resumen.etiqueta == "OC_COMPRAS_0" && resumen.conceptoResultado == 'Confirmada')
								{
									totalLegend += resumen.total;
									objeto.montoUSD_0 += resumen.total;
									_desempenoActual += resumen.total;	
									contadorPromedio++;
								}
								else if( resumen.etiqueta == "OC_COMPRAS_1" && resumen.conceptoResultado == 'Confirmada')
								{
									objeto.montoUSD_1 += resumen.total;
									_desepenoAnterior += resumen.total;
								}
								else if( resumen.etiqueta == "OC_COMPRAS_2" && resumen.conceptoResultado == 'Confirmada' )
								{
									objeto.montoUSD_2 += resumen.total;
								}
							}
						}						
						arrReturn.addItem(objeto);
					}
					cuenta++;
				}	
				
				arrReturn.addItem( new Object() );
				lblPer1.text = _event.labelPeriodo1;
				
				return arrReturn;	
			}
			
			private function iniciarGraficaAniosMulti( $lista:ArrayCollection ):ArrayCollection
			{
				_desempenoActual = 0;
				totalLegend = 0;
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				arrReturn.addItem(new Object());
				var objeto:Object ;
				var cuenta:int = 1;
				var contador:int = 0;
				var contadorPromedio:int = 0;				
				var pintarAnio:int = _anioInicio;
				_desepenoAnterior = 0;
				var copiaUniverso:ArrayCollection = ObjectUtil.copy($lista) as ArrayCollection;  
				
				while( pintarAnio <= _anioFin)
				{					
					objeto = new Object();
					objeto.numeroMes = pintarAnio;
					objeto.mes = pintarAnio;
					objeto.montoUSD_0 = 0;
					objeto.montoUSD_1 = 0;
					objeto.montoUSD_2 = 0;
					objeto.totalPeriodo = 0;
					objeto.montoObjetivo = 0; 
					objeto.montoFundamental = 0;
					
					var arrCopia:ArrayCollection = UtilsGrid.queryCampoX( copiaUniverso, "mes",pintarAnio.toString() );
					
					for( m = 0; m < arrCopia.length;m++ ){
						var resumen:ResumenConsulta = arrCopia[m] as ResumenConsulta;
						
						totalLegend += resumen.total;
						objeto.montoUSD_0 += resumen.total;
						_desempenoActual += resumen.total;	
						contadorPromedio++;						
					}						
					arrReturn.addItem(objeto);
					pintarAnio++;
					cuenta++;
				}	
				
				arrReturn.addItem( new Object() );
				lblPer1.text = _event.labelPeriodo1;
				
				return arrReturn;	
			}
			
			private function maxConfirmacionCanceladas():void
			{	
				var evt:EventoTableroProductos = new EventoTableroProductos(EventoTableroProductos.VOLVER_A_TABLERO_PRODUCTOS);
				dispatchEvent(evt);			
			}
			
			public function seleccionaTabla():void{
				this.stackGeneral.selectedChild = this.vistaTabla;
			}
			
			public function seleccionarGrafica():void
			{
				this.stackGeneral.selectedChild = this.vistaGrafico;
			}
			
			private function maxCompras():void
			{	
				var evt:EventoTableroProductos = new EventoTableroProductos(EventoTableroProductos.VOLVER_A_TABLERO_PRODUCTOS);
				dispatchEvent(evt);			
			}
			private function generaArchivo():void
			{
				
			}
			private function setValoresFooter($arreglo:ArrayCollection):void
			{
				var _sql:Query = new Query($arreglo,["cliente"]);
				
				var _piezas:Number = _sql.getSumarCampo("cantidad",[],"",true);
				var _costoUnitario:Number = _sql.getSumarCampo("costoUnitario",[],"",true);
				var _costoTotal:Number = _sql.getSumarCampo("montoDolares",[],"",true);
				
				lblTotal.text = ""+$arreglo.length;
				lblPiezas.text = _piezas == 1 ? "1 Pieza":_piezas.toString()+" Piezas";
				lblCostoUnitario.text = "$"+UtilsFormatosNumericos.precisionADosDecimalesConComas(_costoUnitario);
				lblCostoTotal.text = "$"+UtilsFormatosNumericos.precisionADosDecimalesConComas(_costoTotal);
				
			}
			
			private var listaMontos:ArrayCollection; 
			private function iniciarGraficaGrid(valores:ArrayCollection):ArrayCollection
			{
				if(valores == null)
					return new ArrayCollection();
				
				var primero:Boolean = true;
				var sqlVar:Query;
				var total:Object = new Object;
				sqlVar = new Query(valores,["ordenDeCompra"]);
				var listaMontos:ArrayCollection = new ArrayCollection();
				var sumador:Number = 0;
				var sumadorTotal:Number = 0;
				var cliente:String;
				
				var punteros:Array = sqlVar.getPunteros(["ordenDeCompra"]);	
				for(var y:int = 0; y < punteros.length ; y++){
					var punterosOC:Array = sqlVar.getPunteros([punteros[y]]);
					var temp:int;
					for(var i:int = 0; i < punterosOC.length; i++){
						var tempCosto:Number;
						tempCosto = (sqlVar.universo.getItemAt(punterosOC[i]) as OCTableroProducto).costoUnitario;
						cliente = (sqlVar.universo.getItemAt(punterosOC[i]) as OCTableroProducto).cliente;
						sumador += tempCosto
					}
					temp = sumador / punterosOC.length;
					sumadorTotal += temp;
					total.montoUSD_P = 0;
					total.montoUSD_P = temp;
					
					total.mes = ""+punteros[y];
					/*total.mes = _listaMensual[y];*/
					
					total.numeroMes = 0;
					total.numeroMes = y+1;
					
					total.cliente = "";
					total.cliente = cliente;
					
					total.media = 0;
					
					if(primero){
						listaMontos.addItem(new Object());
						primero = false;
					}
					
					listaMontos.addItem(total);
					
					temp = 0;
					sumador = 0;
					cliente = "";
					total = new Object;
				}
				listaMontos.addItem(new Object());
				
				//MEDIA
				var mediaTemp:Number;
				mediaTemp = sumadorTotal/(listaMontos.length-2);
				for(var x:int = 0;x < listaMontos.length;x++){
					listaMontos[x].media = mediaTemp;
				}
				return listaMontos;
			}
			private function llamarAIniciarGraficaGrid():void
			{
				if(yallegaronLasComprasGrid)
				{					
					var tempArray:ArrayCollection;
					yallegaronLasCompras = false;
					if(_anioMultiple){
						/*myChartMini.dataProvider = graficarVariacionAnio( _comprasParaTabla );*/
						myChartMini.dataProvider = iniciarGraficaGrid( _comprasParaTabla );
					}else{
						/*tempArray = calcularVariacion(ObjectUtil.copy(_comprasParaTabla) as ArrayCollection);
						myChartMini.dataProvider = ObjectUtil.copy(iniciarGraficaGrid( tempArray )) as ArrayCollection;*/
						myChartMini.dataProvider = ObjectUtil.copy(iniciarGraficaGrid( _comprasParaTabla )) as ArrayCollection;
					}
				}
				else
				{
					setTimeout(llamarAIniciarGraficaGrid,300);
				}
			}
			
			private function graficarVariacionAnio(valores:ArrayCollection):ArrayCollection
			{
				var sqlVar:Query;
				var total:Object = new Object;
				var primero:Boolean = true;;
				sqlVar = new Query(valores,["anioFechaOC"]);
				var listaMontos:ArrayCollection = new ArrayCollection();
				var sumador:int = 0;
				var contador:int = 1;
				
				for(var y:int = _anioInicio; y <= _anioFin ; y++){
					var temp:int;
					var punteros:Array = sqlVar.getPunteros([y]);
					for(var i:int = 0; i <= punteros.length; i++){
						var tempCosto:int;
						tempCosto = (_sql.universo.getItemAt(punteros[i]) as OCTableroProducto).costoUnitario;
						sumador += tempCosto
					}
					temp = sumador / punteros.length; 
					total.montoUSD_0 = 0;
					total.montoUSD_0 = temp;
					
					total.mes = "";
					total.mes = ""+y;
					
					total.numeroMes = 0;
					total.numeroMes = y;
					if(primero){
						listaMontos.addItem(new Object());
						primero = false;
					}
					
					listaMontos.addItem(total);
					
					temp = 0;
					sumador = 0;
					total = new Object;
				}
				listaMontos.addItem(new Object());
				return listaMontos;
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%">
		<componentes:TituloChartMaxTablero width="100%" text="COMPRAS"/>
		<componentes:TituloChartMaxTablero id="lblPer1" paddingRight="20" textAlign="center"/>
	</s:HGroup>
	
	<pq:MobViewStack id="stackGeneral" width="100%" height="100%">
		<s:NavigatorContent id="vistaTabla" width="100%" height="100%">
			<s:VGroup width="100%" height="100%" gap="0" paddingRight="20">
				<otros:divisionGruesa width="100%"/>
				<s:Spacer height="20" />
				<s:Group width="100%" height="55%" >
					<s:Rect width="100%" height="100%">
						<s:stroke>
							<s:SolidColorStroke color="#008894" weight="1"/>
						</s:stroke>
					</s:Rect>
					<s:VGroup width="100%" height="100%" gap="0" verticalAlign="middle" top="1" bottom="1" right="1" left="1">
						<s:HGroup width="100%" height="15%" maxHeight="60" verticalAlign="middle">
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<s:Label text="#" width="100%" textAlign="center" fontWeight="bold"/>
							</s:HGroup>  
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<label:Texto text="FECHA" width="100%" fontSize="12" fontWeight="bold" textAlign="center"/>
							</s:HGroup>  
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<label:Texto text="OC" width="100%" fontSize="12" fontWeight="bold" textAlign="center"/>
							</s:HGroup>  
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<label:Texto text="PIEZAS" width="100%" fontSize="12" fontWeight="bold" textAlign="center"/>
							</s:HGroup>  
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<label:Texto text="COSTO UNITARIO" fontSize="12" fontWeight="bold" width="100%" maxDisplayedLines="2" textAlign="center"/>
							</s:HGroup>  
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<label:Texto text="COSTO TOTAL" fontSize="12" fontWeight="bold" width="100%" maxDisplayedLines="2" textAlign="center"/>
							</s:HGroup>
							<s:HGroup width="14.3%" height="100%" horizontalAlign="center" verticalAlign="middle">
								<label:Texto text="CLIENTE" width="100%" fontSize="12" fontWeight="bold" textAlign="center"/>
							</s:HGroup>  
						</s:HGroup>
						<otros:division width="100%" grueso="1" colorLinea="negro"/>
						<s:VGroup width="100%" height="100%" top="1" bottom="1" right="1" left="1">
							<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
									id="gridCompras" contentBackgroundAlpha="0" 
									itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.itemRenderer.IR_TabProductosGridCompras"/> 
						</s:VGroup>
						
						<otros:division width="100%" grueso="1" colorLinea="negro"/>
						<s:HGroup width="100%" height="15%" maxHeight="50" verticalAlign="middle">
							<label:Texto id="lblTotal" text="Total" width="100%" textAlign="center"/>
							<label:Texto width="100%" fontSize="12" maxDisplayedLines="2" textAlign="center"/>
							<label:Texto width="100%" fontSize="12" maxDisplayedLines="2" textAlign="center"/>
							<label:Texto id="lblPiezas" width="100%" fontSize="12" maxDisplayedLines="2" textAlign="center"/>
							<label:Texto id="lblCostoUnitario" width="100%" fontSize="12" maxDisplayedLines="2" textAlign="center"/>
							<label:Texto id="lblCostoTotal" width="100%" fontSize="12" maxDisplayedLines="2" textAlign="center"/>
							<label:Texto width="100%" fontSize="12" maxDisplayedLines="2" textAlign="center"/>
						</s:HGroup>
						
					</s:VGroup>  
					
				</s:Group> 
				<s:VGroup width="100%" height="45%" >
					<s:Spacer height="8%" maxHeight="15"/>
					<label:Texto text="VARIACIÓN DE COSTOS" width="100%" textAlign="center" fontSize="15" maxDisplayedLines="2" fontWeight="bold"/>
					<mx:LineChart height="100%" width="100%" id="myChartMini"
								  mouseSensitivity="5" 
								  dataTipRenderer="{PeriodoToolTip}" 
								  showDataTips="true" 
								  showDataTipTargets="false"  
								  dataTipMode="single" 
								  paddingRight="30" paddingLeft="20" paddingTop="40"
								  paddingBottom="40"
								  seriesFilters="[]">
						<mx:series>					
							<mx:LineSeries  yField="media" xField="numeroMes" form="step"  lineStroke="{s2}" showDataEffect="{fxInterpolateIn}" mouseChildren="false" adjustedRadius="0"/>
							<!--<mx:PlotSeries id="_MaxCliente_Producto_PlotSeries2" yField="media" xField="numeroMes" displayName="Compras" showDataEffect="{fxInterpolateIn}" 
										   stroke="{stroke2}" fill="{sc3}" itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.productos.prueba" visible="false">
							</mx:PlotSeries>-->
							
							<mx:LineSeries yField="montoUSD_P" xField="numeroMes" form="segment"  lineStroke="{s1}" showDataEffect="{fxInterpolateIn}" />
							<mx:PlotSeries yField="montoUSD_P" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXItemRenderer>
											<fx:Script>
												<![CDATA[
													import skins.catalogos.catalogoColores;
												]]>
											</fx:Script>
											<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
												<s:fill>
													<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
												</s:fill>		
											</s:Ellipse>
										</s:MXItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:PlotSeries>
						</mx:series>
						<mx:horizontalAxis>
							<mx:CategoryAxis id="vMesMini" categoryField="numeroMes"  />
						</mx:horizontalAxis>
						<mx:verticalAxis>
							<mx:LinearAxis id="vCantidadMini" labelFunction="formateoEje" autoAdjust="false" padding="1"  minimum="0"/>
						</mx:verticalAxis>
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer axis="{vCantidadMini}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels"/>
						</mx:verticalAxisRenderers>
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer axis="{vMesMini}" axisStroke="{trazoGruezo}" tickPlacement="none" showLine="true" showLabels="false" 
											 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" />
						</mx:horizontalAxisRenderers>
					</mx:LineChart>
				</s:VGroup>  
				<s:VGroup width="100%" gap="0">
					<s:Label width="100%" paddingBottom="10" styleName="axisVerticalLabels">
						<s:text>Los montos se refieren  a costo de Compra</s:text>
					</s:Label>
					<otros:divisionHueca width="100%" />
					<s:HGroup width="100%" height="40" verticalAlign="middle" paddingBottom="5" paddingTop="10">
						<grafica:botonPopUp icono="chart" click="stackGeneral.selectedChild = vistaGrafico"/>
						<pqNet:botonPqNetLargo label="Inicio" click="maxCompras()" />
						<s:Spacer width="100%" />
						<!--<pqNet:botonPqNetLargo id="btnExportar" icono="exportar" label="Exportar" click="generaArchivo()" />-->
					</s:HGroup>
				</s:VGroup>  
				
			</s:VGroup>  
		</s:NavigatorContent>
		<s:NavigatorContent id="vistaGrafico" width="100%" height="100%">
			<s:HGroup width="100%" height="100%" gap="0">
				
				<s:VGroup width="100%" height="100%" gap="0" paddingRight="20" >
					<otros:divisionGruesa width="100%" />		
					
					<mx:LineChart height="100%" width="100%" id="myChart"
								  mouseSensitivity="5" 
								  dataTipRenderer="{TabProductoToolTip}" 
								  showDataTips="true" 
								  showDataTipTargets="false"  
								  dataTipMode="single" 
								  paddingRight="30" paddingLeft="20" paddingTop="40"
								  paddingBottom="40"
								  seriesFilters="[]">
						<mx:series>					
							
							<mx:LineSeries yField="montoUSD_0" xField="numeroMes" form="segment"  lineStroke="{s1}" showDataEffect="{fxInterpolateIn}" />
							<mx:PlotSeries yField="montoUSD_0" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXItemRenderer>
											<fx:Script>
												<![CDATA[
													import skins.catalogos.catalogoColores;
												]]>
											</fx:Script>
											<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
												<s:fill>
													<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
												</s:fill>		
											</s:Ellipse>
										</s:MXItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:PlotSeries>
						</mx:series>
						<mx:horizontalAxis>
							<mx:CategoryAxis id="vMes" categoryField="numeroMes"  />
						</mx:horizontalAxis>
						<mx:verticalAxis>
							<mx:LinearAxis id="vCantidad" labelFunction="formateoEje" autoAdjust="false" padding="1"  minimum="0"/>
						</mx:verticalAxis>
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer axis="{vCantidad}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels"/>
						</mx:verticalAxisRenderers>
						<mx:horizontalAxisRenderers>
							<mx:AxisRenderer axis="{vMes}" axisStroke="{trazoGruezo}" tickPlacement="none" showLine="true" showLabels="true" 
											 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction" />
						</mx:horizontalAxisRenderers>
					</mx:LineChart>
					
					<s:Label width="100%" paddingBottom="10" styleName="axisVerticalLabels">
						<s:text>Los montos se refieren  a costo de Compra</s:text>
					</s:Label>
					<otros:divisionHueca width="100%" />
					<s:HGroup width="100%" height="40" verticalAlign="middle" paddingBottom="5" paddingTop="10">
						<grafica:botonPopUp icono="tabla" click="seleccionaTabla()"/>
						<pqNet:botonPqNetLargo label="Inicio" click="maxConfirmacionCanceladas()" />
					</s:HGroup>	
					
				</s:VGroup>
			</s:HGroup>	
		</s:NavigatorContent>
		
	</pq:MobViewStack>
	
</s:VGroup>
