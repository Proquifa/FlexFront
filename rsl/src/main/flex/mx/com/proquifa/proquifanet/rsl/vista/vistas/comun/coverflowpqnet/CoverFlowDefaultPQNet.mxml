<?xml version="1.0" encoding="utf-8"?>
	<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
			  xmlns:s="library://ns.adobe.com/flex/spark" 
			  xmlns:mx="library://ns.adobe.com/flex/mx" 
			  maxHeight="200" minWidth="600" minHeight="180"
			  width="100%" height="100%" 
			  creationComplete="vgroup1_creationCompleteHandler(event)"
			  
			  >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.comun.coverflowpqnet.clases.CoverFlowPQNet;
			import mx.events.FlexEvent;
			
			private var coverFlow:CoverFlowPQNet;
			private var _familias:ArrayCollection;
			private var _gris:Boolean = false;
			private var _showIconos:Boolean = true;
			private var _vista:String = "oferta";
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				this.height = this.maxHeight;
				this.percentHeight = 100;
				
				coverFlow = new CoverFlowPQNet();
				coverFlow.percentHeight =100;
				coverFlow.centerMargin = 190;
				coverFlow.horizontalSpacing = 100;
				coverFlow.backRowDepth = 250;
				coverFlow.backRowAngle = 40;
				coverFlow.verticalOffsetPercent = 7;
				grpCoverFlow.addElementAt(coverFlow,0);  
				
				if(gris)
				{
					grpColor.color = uint("0xd5d6da");
					grpColor1.color = uint("0xd5d6da");
					doColor.color = uint("0xffffff");
					doColor1.color = uint("0xffffff");
				}
				
			}
			
			private var currentWidth:Number;
			private var currentHeight:Number;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if(coverFlow && ((currentWidth != unscaledWidth) || (currentHeight != unscaledHeight)))
				{
					currentWidth = unscaledWidth;
					currentHeight = unscaledHeight;
					coverFlow.width = unscaledWidth;
					coverFlow.height = unscaledHeight;
				}  
			}
			
			protected function grpCoverFlow_mouseWheelHandler(event:MouseEvent):void
			{
				event.stopImmediatePropagation();
				event.stopPropagation();
				
				coverFlow.delta = event.delta;
			}

/* 			public function get familias():ArrayCollection
			{
				return _familias;
			}

			public function set familias(value:ArrayCollection):void
			{
				
			}
			 */
			
			public function recibeFamilias($familias:ArrayCollection,$mantenerFamiliaSeleccionada:Boolean = false):void
			{
				_familias = $familias;
				coverFlow.load(_familias,$mantenerFamiliaSeleccionada);
			}

			public function bloquearInteraccion():void
			{
				//trace("bloquearInteraccion");
				this.mouseFocusEnabled = false;
				this.mouseEnabled = false;
				this.mouseChildren = false;
			}

			public function desbloquearInteraccion():void
			{
				//trace("desbloquearInteraccion");
				this.mouseFocusEnabled = true;
				this.mouseEnabled = true;
				this.mouseChildren = true;
			}

			public function get showIconos():Boolean
			{
				return _showIconos;
			}

			public function set showIconos(value:Boolean ):void
			{
				_showIconos = value;
				if(coverFlow!=null)
					coverFlow.showIconos = _showIconos;
			}

			public function get vista():String
			{
				return _vista;
			}

			public function set vista(value:String):void
			{
				_vista = value;
				if(coverFlow!=null)
				coverFlow.vista = _vista;
			}

			public function get gris():Boolean
			{
				return _gris;
			}

			public function set gris(value:Boolean):void
			{
				_gris = value;
			}
			

			
		]]>
	</fx:Script>
	
	<s:Group width="100%" height="100%" id="grpCoverFlow" mouseWheel="grpCoverFlow_mouseWheelHandler(event)">
		
		<s:Rect left="0" width="250" height="100%">
			<s:fill>
				<s:LinearGradient >
					<s:GradientEntry id="grpColor" color="#000000" alpha="1" ratio="0.1" />
					<s:GradientEntry id="doColor" color="#333333" alpha="0" ratio="1"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<s:Rect right="0" width="250" height="100%">
			<s:fill>
				<s:LinearGradient rotation="180" >
					<s:GradientEntry id="grpColor1" color="#000000" alpha="1" ratio="0.1"/>
					<s:GradientEntry id="doColor1" color="#333333" alpha="0" ratio="1"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
	</s:Group>
	
</s:VGroup>
