<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SolidColor id="sc1" color="#0099FF" alpha=".5"/>
		<s:SolidColor id="scPorCobrar" color="red" alpha=".5"/>
		<s:SolidColor id="scVerdeEnTiempo" color="#32CD32" alpha=".5"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.CategoryAxis;
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.chartClasses.CartesianTransform;
			import mx.charts.chartClasses.DataTransform;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.GridEvent;
			
			[Bindable]
			private var _datosTabla: ArrayCollection;
			[Bindable]
			private var _gastaMasGraf:ArrayCollection;
			[Bindable]
			private var _datos:ObjetoTabla;
			
			private function maxTransito():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			
			private function gridItemClickEvent(event:GridEvent):void{	 	        	
				var tipoDocumento:String;
				var folioDocumento:String;
				var urlreq:URLRequest;
				var ruta:String;
				
				if (event.columnIndex == 1 ){
					var path:Object = Util.rutaNueva(this.gridPedidos.selectedItem.pedido);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + path.ruta + this.gridPedidos.selectedItem.pedido +".pdf";
					urlreq = new URLRequest ( ruta );	
				}	     
				
				navigateToURL( urlreq );
			}   
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaTabla;
				}else{
					this.navegador.selectedChild = vistaGrafico;
				}
			}
			
			
			public function seleccionaTabla():void{
				this.navegador.selectedChild = this.vistaTabla;
			}
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}
			
			public function set cargaDatosTransito(datosTransito:ObjetoTabla):void{
				if(datosTransito == null){
					return ;
				}
				this._datos = datosTransito;
				var evento:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.CARGA_DATOS_TRANSITO);
				evento.idProveedor = datosTransito.idProveedor;
				evento.anioInt = datosTransito.anioInt;
				evento.periodo = datosTransito.periodo;
				evento.tipoPeriodo = datosTransito.tipoPeriodo;
				evento.mes = datosTransito.mes;
				dispatchEvent(evento);	
			}
			
			public function set obtenerTabla(listaGasta:ArrayCollection):void{
				if(listaGasta == null){
					return;
				}
				this._datosTabla = listaGasta;
			}
			
			/**
			 * Metodo que recibe los datos para la grafica
			 */
			public function set obtenerGrafica(transitoGraf:ArrayCollection):void{
				if (transitoGraf==null){
					return ;
				}
				this._gastaMasGraf = transitoGraf;
			}
			
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" title="Gasta Más" dropShadowVisible="false">
		<!--	<mx:CurrencyFormatter id="formateoMoneda" precision="2"/>
		<mx:DateFormatter id="validadorfecha" formatString="DD-MMM-YYYY"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<mx:PieChart id="myChart" width="100%" height="100%"
							 dataProvider="{this._gastaMasGraf}" 
							 showDataTips="true">
					<mx:series>
						<mx:PieSeries 
							field="cantidad" 
							nameField="nombre" 
							labelPosition="callout"
							labelField="nombre"
							explodeRadius=".05"/>
					</mx:series>
				</mx:PieChart>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTransito()" width="60"/>
				</mx:HBox>
			</mx:VBox>		
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<mx:DataGrid id="gridPedidos" dataProvider="{this._datosTabla}" width="100%" height="100%" variableRowHeight="true" textAlign="center" >
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numeroFila"  width="80"/>
						<mx:DataGridColumn headerText="Nombre" dataField="nombre" />
						<mx:DataGridColumn headerText="Cantidad" dataField="cantidad" width="150" />
						<mx:DataGridColumn headerText="Monto" dataField="formatoMonto" width="200" />
					</mx:columns>
				</mx:DataGrid>
				<!--<s:DataGrid id="gridPedidos" dataProvider="{this._datosTabla}" 
							width="100%" height="100%"  gridClick="gridItemClickEvent(event)" variableRowHeight="true" >
					<s:columns>
						<s:ArrayList>						
							<formato:GridColumnFormato formato="numfila" headerText="#" guardarFormato="numeroDeFila"  width="60"/>
							<s:GridColumn headerText="P. Interno" dataField="pedido" width="150" >
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<mx:LinkButton label="{data.pedido}" color="blue" toolTip="{data.pedido}"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>	
							</s:GridColumn>
							<s:GridColumn headerText="Cliente" dataField="nombreCliente"  /> 
							<s:GridColumn headerText="Concepto" dataField="descripcionProducto" width="600"  /> 
							<formato:GridColumnFormato formato="fecha" headerText="FPharmaUE" dataField="fechaPharmaUE" guardarFormato="fechaformatoUE" width="100"/> 
							<formato:GridColumnFormato formato="fecha" headerText="FPharmaUSA" dataField="fechaPharma"  guardarFormato="fechaFormatoPharma" width="100"/> 
							<formato:GridColumnFormato formato="fecha" headerText="FProquifa" dataField="fechaProquifa" guardarFormato="fechaFormatoProquifa" width="100"/> 
							<s:GridColumn headerText="Tiempo de respuesta" dataField="tiempoRespuesta" width="150"/> 
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>-->
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTransito()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" />
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	</s:Panel> 
</s:Group>
