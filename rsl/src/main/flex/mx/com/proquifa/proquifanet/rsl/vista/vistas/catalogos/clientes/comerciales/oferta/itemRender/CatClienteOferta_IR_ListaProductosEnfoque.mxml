<?xml version="1.0" encoding="utf-8"?>
<renders:ContenedorIRendererListaConEnfoque xmlns:fx="http://ns.adobe.com/mxml/2009" 
											xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"  
											xmlns:renders="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.renders.*" 
											xmlns:label="skins.skin.label.*" 
											xmlns:linkButton="skins.skin.linkButton.*"
											>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecioProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosGrid;
			[Bindable] private var _icono:Class = catalogoIconosGrid.getInstance().render_enfoque;
			
			private var verde:uint = 0x70a047;
			private var rojo:uint = 0xd10c0c;
			private var naranja:uint = 0xff6600; //ff6600 //dd9c12  //b76013
			
			private function tipoColor($diferencial:Number ):uint
			{
				if ($diferencial < 0 ){
					return rojo;
				}else if ($diferencial == 0 ){
					return naranja;
				}else{
					return verde;
				}
			}
			
			private function isTemporal($valor:ConfiguracionPrecioProducto):Boolean
			{
				var curr:ConfiguracionPrecioProducto = $valor;
				
				if(curr.costoFactorProducto.precioUTemporalCliente && curr.costoFactorProducto.precioUTemporalCliente.toString().length > 0)
				{
					var valorPrecio:Number = $valor.producto.costo;
					var valorTemp:Number = $valor.costoFactorProducto.precioUTemporalCliente;
					var total:Number = ((valorTemp / valorPrecio)-1) * 100;
					lblDifenrencialTemp.text = redondeo(total);
					lblDifenrencialTemp2.text = redondeo(total);
					
					if (total < 0 )
					{
						lblDifenrencialTemp.setStyle("color",rojo);
						lblDifenrencialTemp2.setStyle("color",rojo);
					}
					else if (total == 0 )
					{
						lblDifenrencialTemp.setStyle("color",naranja);
						lblDifenrencialTemp2.setStyle("color",naranja);
					}
					else
					{
						lblDifenrencialTemp.setStyle("color",verde);
						lblDifenrencialTemp2.setStyle("color",verde);
					}
					return true;
				}
				else
					return false;
			}
			
			private function generaTool($valor:ConfiguracionPrecioProducto):String
			{
				if($valor.costoFactorProducto.precioUTemporalCliente && $valor.costoFactorProducto.precioUTemporalCliente.toString().length > 0)
					return "Vigencia: " + UtilsFecha.formatoFechaDDMMMYY($valor.costoFactorProducto.caduca);
				else
					return "";
			}
			
			
			private function redondeo($valor:Number):String
			{
				return UtilsFormatosNumericos.precisionADosDecimales($valor) + "%";
			}
		]]>
	</fx:Script>
	
	<renders:listaEnfocados>
		<s:Group width="100%" height="100%" >
			<s:VGroup width="100%" paddingTop="10" paddingBottom="10" paddingRight="5" >
				<label:Titulo text="#{(data as ConfiguracionPrecioProducto).numFila} · {(data as ConfiguracionPrecioProducto).producto.concepto}" width="100%" paddingTop="0" textAlign="justify"/>
				
				<s:HGroup gap="0" horizontalAlign="right" width="100%">
					<label:Monto_14_Texto_VerdeAzul_pTop10 montoRedondeo="{(data as ConfiguracionPrecioProducto).producto.costo}" especificarMoneda="{(data as ConfiguracionPrecioProducto).producto.monedaAbreviatura}" especificarSigno="sinSigno" paddingTop="0"/>
				</s:HGroup>
				
				<s:HGroup width="100%"  gap="20" paddingTop="15">
					<s:VGroup width="100%">
						<s:HGroup height="100%" gap="20" width="100%" horizontalAlign="center" >
							<s:HGroup>
								<s:VGroup height="100%" horizontalAlign="right">
									<label:Titulo text="{(data as ConfiguracionPrecioProducto).categoriaNivel == 'AAplus' ? 'AA+':(data as ConfiguracionPrecioProducto).categoriaNivel}" paddingTop="0"/>
								</s:VGroup>
								<s:VGroup height="100%" width="100%" horizontalAlign="left">
									<s:HGroup gap="0">
										<label:Monto_14_Texto montoCantidad="{(data as ConfiguracionPrecioProducto).costoFactorProducto.precioUCliente}" 
															  especificarSigno="· {(data as ConfiguracionPrecioProducto).producto.monedaSimbolo}"/>
										<label:Texto text=" · " />
										<s:Spacer width="3" />
										<label:Texto text=" {(data as ConfiguracionPrecioProducto).costoFactorProducto.diferencialCliente}%" color="{tipoColor((data as ConfiguracionPrecioProducto).costoFactorProducto.diferencialCliente)}" /> 
									</s:HGroup>
								</s:VGroup>
							</s:HGroup>
						</s:HGroup>  
						
						<s:HGroup id="grpHorizontal" gap="0" visible="{isTemporal(data as ConfiguracionPrecioProducto)}" width="100%" paddingLeft="35" horizontalAlign="center" >
							<mx:Image source="{catalogoIconosBotones.getInstance().reloj_amarillo }" visible="{isTemporal(data as ConfiguracionPrecioProducto)}" toolTip="{generaTool(data as ConfiguracionPrecioProducto)}" smoothBitmapContent="true"/>
							<label:Texto text=" · " />
							<s:Spacer width="3" />
							<label:Monto_14_Texto montoCantidad="{(data as ConfiguracionPrecioProducto).costoFactorProducto.precioUTemporalCliente}" 
												  especificarSigno=" {(data as ConfiguracionPrecioProducto).producto.monedaSimbolo}" color="#f2ba29"/>
							<label:Texto text=" · " />
							<s:Spacer width="3" />
							<label:Texto id="lblDifenrencialTemp" />
						</s:HGroup>  
						
					</s:VGroup>
				</s:HGroup>
				
				<s:Image source="{ this._icono }" horizontalAlign="left" visible="{data.isEnfocado}"/>
			</s:VGroup>
			
		</s:Group>  
	</renders:listaEnfocados>
	
	<renders:listaSinEnfoqueSeleccionable>
		<s:Group width="100%" height="100%" >
			
			
			<s:VGroup width="100%" paddingTop="10" paddingBottom="10" paddingRight="5" >
				<label:Titulo text="#{(data as ConfiguracionPrecioProducto).numFila} · {(data as ConfiguracionPrecioProducto).producto.concepto}" width="100%" paddingTop="0" textAlign="justify"/>
				
				<s:HGroup gap="0" horizontalAlign="right" width="100%">
					<label:Monto_14_Texto_VerdeAzul_pTop10 montoRedondeo="{(data as ConfiguracionPrecioProducto).producto.costo}" especificarMoneda="{(data as ConfiguracionPrecioProducto).producto.monedaAbreviatura}" especificarSigno="sinSigno" paddingTop="0"/>
				</s:HGroup>
				
				<s:HGroup width="100%" gap="20" paddingTop="15">
					<s:VGroup width="100%">
						<s:HGroup height="100%" gap="20" width="100%" horizontalAlign="center" >
							<s:HGroup>
								<s:VGroup height="100%" horizontalAlign="right">
									<label:Titulo text="{(data as ConfiguracionPrecioProducto).categoriaNivel == 'AAplus' ? 'AA+':(data as ConfiguracionPrecioProducto).categoriaNivel}" paddingTop="0"/>
								</s:VGroup>
								<s:VGroup height="100%" width="100%">
									<s:HGroup gap="0">
										<label:Monto_14_Texto montoCantidad="{(data as ConfiguracionPrecioProducto).costoFactorProducto.precioUCliente}" 
															  especificarSigno="· {(data as ConfiguracionPrecioProducto).producto.monedaSimbolo}"/>
										<label:Texto text=" · " />
										<s:Spacer width="3" />
										<label:Texto text=" {(data as ConfiguracionPrecioProducto).costoFactorProducto.diferencialCliente}%" color="{tipoColor((data as ConfiguracionPrecioProducto).costoFactorProducto.diferencialCliente)}" />
									</s:HGroup>  
								</s:VGroup>
							</s:HGroup>
						</s:HGroup>  
						
						<s:HGroup id="grpHorizontal2" gap="0" visible="{isTemporal(data as ConfiguracionPrecioProducto)}" width="100%" paddingLeft="35" horizontalAlign="center" >
							<mx:Image source="{catalogoIconosBotones.getInstance().reloj_amarillo }" visible="{isTemporal(data as ConfiguracionPrecioProducto)}" toolTip="{generaTool(data as ConfiguracionPrecioProducto)}" smoothBitmapContent="true"/>
							<label:Texto text=" · " />
							<s:Spacer width="3" />
							<label:Monto_14_Texto montoCantidad="{(data as ConfiguracionPrecioProducto).costoFactorProducto.precioUTemporalCliente}" 
												  especificarSigno=" {(data as ConfiguracionPrecioProducto).producto.monedaSimbolo}" color="#f2ba29"/>
							<label:Texto text=" · " />
							<s:Spacer width="3" />
							<label:Texto id="lblDifenrencialTemp2" />
						</s:HGroup>
						
					</s:VGroup>
				</s:HGroup>
				
				<s:HGroup width="100%" horizontalAlign="right" >
					<label:TextoUperCaseRojo text="{(data as ConfiguracionPrecioProducto).producto.licencia}" />
				</s:HGroup>
				
			</s:VGroup>
			
			
		</s:Group>  
	</renders:listaSinEnfoqueSeleccionable>
	
</renders:ContenedorIRendererListaConEnfoque>