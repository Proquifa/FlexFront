<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:label="skins.skin.label.*" 
				xmlns:consultas="skins.skin.comun.consultas.*" 
				xmlns:otros="skins.otros.*" 
				xmlns:pqNet="skins.botones.pqNet.*"
				xmlns:textinput="skins.skin.textinput.*"
				xmlns:chekbox="skins.skin.chekbox.*" 
				xmlns:numericStepper="skins.skin.numericStepper.*"
				autoDrawBackground="true"
				currentStateChanging="itemrenderer1_currentStateChangingHandler(event)"
				width="100%"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ClasificacionConfiguracionPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable]
			private var _currentCLasificacion:ClasificacionConfiguracionPrecio;
			
			private var respaldoConcepto:String;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				
				if(value!= null)
				{
					
					_currentCLasificacion = data as ClasificacionConfiguracionPrecio;
					respaldoConcepto = _currentCLasificacion.concepto;
					
					if(_currentCLasificacion.estaEnEdicion)
					{
						imgEditar.visible = imgEditar.includeInLayout = true;
						imgEliminar.includeInLayout = imgEliminar.visible = true;
					}
					else
					{
						imgEditar.visible = imgEditar.includeInLayout = false;
						imgEliminar.includeInLayout = imgEliminar.visible = false;
					}
					
				}
			}
			
			protected function interacionConLosTextImputs_focusOutHandler(event:FocusEvent):void
			{
				if(event.currentTarget != null){
					event.stopImmediatePropagation();
					event.preventDefault();
				}
			}
			
			
			protected function btnCancelar_clickHandler(event:MouseEvent):void
			{
				txtConcepto.text = respaldoConcepto;
				grpEditar.visible = false;
				grpTitulos.visible = true;
			}
			
			protected function itemrenderer1_currentStateChangingHandler(event:StateChangeEvent):void
			{
				if(event.newState == "normal")
				{
					if(grpEditar.visible)
					{
						grpEditar.visible = false;
						grpTitulos.visible = true;
					}
				}
			}
			
			protected function imgEngrane_clickHandler(event:MouseEvent):void
			{
				grpTitulos.visible = false;
				grpEditar.visible = true;
			}
			
			protected function btnModificar_clickHandler(event:MouseEvent):void
			{
				if(StringUtil.trim(txtConcepto.text).length > 0)
				{
					(data as ClasificacionConfiguracionPrecio).concepto = txtConcepto.text;
					respaldoConcepto = txtConcepto.text;
					grpTitulos.visible = true;
					grpEditar.visible = false;
				}
				else
				{
					alertaSingleton.show("Es necesario indicar un concepto.",catalogoAlertas.TIT_ADV_informacionIncompleta);
					return;
				}
			}
			
			protected function fade1_effectEndHandler(event:EffectEvent):void
			{
				grpTitulos.visible = true;
			}
			
			protected function showConceptoEditar_effectEndHandler(event:EffectEvent):void
			{
				txtConcepto.setFocus();
			}
			
			protected function imgEliminar_clickHandler(event:MouseEvent):void
			{
				/* (data as ClasificacionConfiguracionPrecio).eliminar = true; */
				dispatchEvent(new Event("EliminarItemSeleccionadoEventoCatProIR_ConceptosClasificacion",true));
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:Parallel id="showConceptoEditar" effectEnd="showConceptoEditar_effectEndHandler(event)"> 
			<s:Resize heightFrom="0" heightTo="111" duration="200"/>
			<s:Fade alphaFrom="0" alphaTo="1" startDelay="150"/>
		</s:Parallel>
		
		<s:Parallel id="hideConceptoEditar">
			<s:Resize heightFrom="111" heightTo="0" duration="200"/>
			<s:Fade alphaFrom="1" alphaTo="0" duration="50" effectEnd="fade1_effectEndHandler(event)"/>
		</s:Parallel>
		
		<s:Fade id="showConcetoLabel" alphaFrom="0" alphaTo="1" duration="50"/>
		<s:Fade id="hideConcetoLabel" alphaFrom="1" alphaTo="0" duration="50"/>
		
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="selected"/>
	</s:states>
	
	<otros:division width="100%" />
	<s:VGroup  width="100%" height="100%" >
		<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10">
			<s:HGroup width="100%" height="100%">
				
				<s:Group width="100%" height="100%">
					
					<!--<s:Group width="100%" id="grpTitulos" showEffect="{showConcetoLabel}" hideEffect="{hideConcetoLabel}" alpha="1" top="10">
						<label:Titulo id="lblConcepto" text="{_currentCLasificacion.concepto}" verticalCenter="0" paddingTop="0"/>
						<s:Image id="imgEngrane" source="{catalogoIconosGrid.getInstance().render_engraneVerdeAzul20x20}" mouseDown="imgEngrane_clickHandler(event)" right="0" verticalCenter="0"/>
					</s:Group>-->
					
					<s:HGroup width="100%" id="grpTitulos" showEffect="{showConcetoLabel}" hideEffect="{hideConcetoLabel}" alpha="1" top="10" verticalAlign="middle">
						<s:Image id="imgEliminar" source="{catalogoIconosBotoneras.getInstance().eliminarParaCatalogo}" click="imgEliminar_clickHandler(event)"/>
						<s:Image id="imgEditar" source="{catalogoIconosBotoneras.getInstance().editarParaCatalogo}" mouseDown="imgEngrane_clickHandler(event)"/>
						<label:Titulo id="lblConcepto" text="{_currentCLasificacion.concepto}" paddingTop="0" width="100%" maxDisplayedLines="1"/>
					</s:HGroup>
					
					<s:VGroup id="grpEditar" width="100%" horizontalAlign="center" visible="false" gap="10" height="0" alpha="0" showEffect="{showConceptoEditar}" hideEffect="{hideConceptoEditar}">
						
						<label:Titulo text="Concepto:" width="100%"/>
						<textinput:txtInputBlancoDefaultPQNet id="txtConcepto" text="{_currentCLasificacion.concepto}" width="100%" />
						
						<s:HGroup width="100%" height="100%">
							<s:VGroup height="100%" width="100%"  horizontalAlign="left">
								<pqNet:botonPqNetLargo id="btnAplicar" label="Aplicar" click="btnModificar_clickHandler(event)" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
							</s:VGroup>
							<s:VGroup height="100%" width="100%"  horizontalAlign="right">
								<pqNet:botonPqNetLargo id="btnCancelar" label="Cancelar" click="btnCancelar_clickHandler(event)" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO }" />
							</s:VGroup>
						</s:HGroup>
						
					</s:VGroup>
				</s:Group>
				
			</s:HGroup>
		</s:VGroup>
	</s:VGroup>
	
	
</s:ItemRenderer>
