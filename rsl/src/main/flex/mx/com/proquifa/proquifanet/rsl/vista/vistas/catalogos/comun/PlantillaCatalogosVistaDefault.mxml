<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:shaders="skins.skin.shaders.*"
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 width="100%" height="100%"
		 >
	<fx:Declarations>
		
		<s:Fade id="showInformacion" target="{vistaInformacion}" alphaFrom="0" alphaTo="1" duration="30"/>
		<s:Fade id="hideInformacion" target="{vistaInformacion}" alphaFrom="1" alphaTo="0" duration="15"/>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.comun.menuCatalogos.ContenedorMenuCatalogos;
			import mx.core.IVisualElement;
			
			import spark.components.supportClasses.GroupBase;
			
			import skins.catalogos.catalogoIconosBotones;
			
			[Bindable]
			private var anchoMenuResultante:Number;
			private var isMenuHide:Boolean = false;
			private var valorExp:IVisualElement;
			private var _titulo:String;
			private var _currentIndex:uint = 0;
			private var currentWidth:Number = 0;
			private var currentHeight:Number = 0;
			
			public function get titulo():String
			{
				return _titulo;
			}
			
			public function set titulo(value:String):void
			{
				_titulo = value;
			}
			
			
			override protected function updateDisplayList($unscaledWidth:Number, $unscaledHeight:Number):void
			{
				super.updateDisplayList($unscaledWidth,$unscaledHeight);
				
				if(currentWidth != $unscaledWidth || currentHeight != $unscaledHeight)
				{ 
					currentWidth = $unscaledWidth;
					currentHeight = $unscaledHeight;
					
					if($unscaledWidth < 1400)
					{
						anchoMenuResultante = $unscaledWidth * .20;
					}
					else
					{
						anchoMenuResultante = $unscaledWidth * .17;
					}
				}
				
				if($unscaledWidth > 0 || $unscaledHeight > 0)
				{
					if(!seEstaAnimando)
					{
						if(_setCurrentVista == "vistaInformacion")
						{
							if(isMenuHide)
							{
								tabMostrarOcultarMenu.setLayoutBoundsPosition((-1*((tabMostrarOcultarMenu.getLayoutBoundsWidth()/2)+5))+50,Math.round($unscaledHeight/2));
								contenedorMenu.setLayoutBoundsPosition(0,0);
								contenedorMenu.setLayoutBoundsSize(50,$unscaledHeight);
								vistaInformacion.setLayoutBoundsPosition(contenedorMenu.getLayoutBoundsWidth(),0);
								vistaInformacion.setLayoutBoundsSize($unscaledWidth-contenedorMenu.getLayoutBoundsWidth(),$unscaledHeight); 
								
								
							}
							else
							{
								contenedorMenu.setLayoutBoundsSize(anchoMenuResultante,$unscaledHeight);
								contenedorMenu.setLayoutBoundsPosition(0,0);
								tabMostrarOcultarMenu.setLayoutBoundsPosition((anchoMenuResultante - ((tabMostrarOcultarMenu.getLayoutBoundsWidth()/2)+5)),Math.round($unscaledHeight/2));
								vistaInformacion.setLayoutBoundsSize($unscaledWidth - anchoMenuResultante,$unscaledHeight);
								vistaInformacion.setLayoutBoundsPosition(anchoMenuResultante,0);
								this.scrollRect = new Rectangle(0,0,unscaledWidth,unscaledHeight);
							}
						}
					}
					else
					{
						contenedorMenu.setLayoutBoundsSize(anchoMenuResultante,$unscaledHeight);
						tabMostrarOcultarMenu.setLayoutBoundsPosition(((contenedorMenu.getLayoutBoundsX() + anchoMenuResultante) - ((tabMostrarOcultarMenu.getLayoutBoundsWidth()/2)+5)),Math.round($unscaledHeight/2));
						this.scrollRect = new Rectangle(0,0,unscaledWidth,unscaledHeight);
					}
				}
			}
			
			private var posicionMenuEndX:Number;
			private var _tweenDuration:int = 350;
			private var _startTime:int;
			private var _elapsed:int;
			private var seEstaAnimando:Boolean;
			protected function tabMostrarOcultarMenu_clickHandler(event:MouseEvent):void
			{
				
				_startTime = getTimer();
				/* hideInformacion.play(); */
				vistaInformacion.visible = vistaInformacion.includeInLayout = false;
				this.scrollRect = new Rectangle(0,0,unscaledWidth,unscaledHeight);
				(vistaInformacion as Group).autoLayout = false;
				if(isMenuHide)
				{
					contenedorMenu.visible = contenedorMenu.includeInLayout = true;
					contenedorMenu.endX = 0;    // ABRE EL MENU
					seEstaAnimando = true;
					
					if(contenedorMenu)
					{
						contenedorMenu.itemVisual = valorExp;
						addElementAt(contenedorMenu,2);
					}
					tabMostrarOcultarMenu.source = catalogoIconosBotones.getInstance().tabalreves;
					dispatchEvent( new Event("menuMaximizaCambiaBotones",true));
				}
				else
				{
					contenedorMenu.endX = (-1* anchoMenuResultante) + 50;   // CIERRA EL MENU
					seEstaAnimando = true;
					tabMostrarOcultarMenu.source = catalogoIconosBotones.getInstance().tab;
					dispatchEvent( new Event("menuMinimizaCambiaBotones",true));
				}
				
				this.removeEventListener(Event.ENTER_FRAME,enterFrame_PlantillaCatalogosVistaDefault);
				this.addEventListener(Event.ENTER_FRAME,enterFrame_PlantillaCatalogosVistaDefault);
			}
			
			private function enterFrame_PlantillaCatalogosVistaDefault(e:Event):void 
			{
				_elapsed = getTimer() - _startTime;
				
				if (_elapsed > _tweenDuration)
				{
					removeEventListener(Event.ENTER_FRAME, enterFrame_PlantillaCatalogosVistaDefault);
					(vistaInformacion as Group).autoLayout = true;
					showInformacion.play();
					seEstaAnimando = false;
					
					if(contenedorMenu.endX == 0)
					{
						isMenuHide = false;
						contenedorMenu.maximizarMenu();
					}
					else
					{
						contenedorMenu.visible = contenedorMenu.includeInLayout = true;
						isMenuHide = true;
						contenedorMenu.minimizarMenu();
					}
					
					invalidateDisplayList();
					return;
				}
				
				contenedorMenu.updateTween(_elapsed, _tweenDuration);
			}
			
			private var _setCurrentVista:String ="vistaTodos";
			public function setCurrentVista($value:String):void
			{
				if(_setCurrentVista != $value)
				{
					if($value == "vistaTodos")
					{
						_setCurrentVista = $value;
						vistaInformacion.visible = vistaInformacion.includeInLayout = false;
						contenedorMenu.visible = contenedorMenu.includeInLayout = false;
						tabMostrarOcultarMenu.visible = tabMostrarOcultarMenu.includeInLayout = false;
						vistaTodos.visible = vistaTodos.includeInLayout = true;
						vistaConfiguracion.visible = vistaConfiguracion.includeInLayout = false;
					}
					else if($value == "vistaInformacion")
					{
						_setCurrentVista = $value;
						vistaInformacion.visible = vistaInformacion.includeInLayout = true;
						contenedorMenu.visible = contenedorMenu.includeInLayout = true;
						tabMostrarOcultarMenu.visible = tabMostrarOcultarMenu.includeInLayout = true;
						vistaTodos.visible = vistaTodos.includeInLayout = false;
						vistaConfiguracion.visible = vistaConfiguracion.includeInLayout = false;
					}
					else if ($value == "vistaConfiguracion")
					{
						_setCurrentVista = $value;
						vistaInformacion.visible = vistaInformacion.includeInLayout = false;
						contenedorMenu.visible = contenedorMenu.includeInLayout = false;
						tabMostrarOcultarMenu.visible = tabMostrarOcultarMenu.includeInLayout = false;
						vistaTodos.visible = vistaTodos.includeInLayout = false;
						vistaConfiguracion.visible = vistaConfiguracion.includeInLayout = true;
					}
					invalidateDisplayList();
				}
			}
			
			private var vistaTodos:IVisualElement;
			public function agregarVistaTodos($value:IVisualElement):void
			{
				if($value)
				{
					vistaTodos = $value;
					this.addElementAt(vistaTodos,0);
				}
			}
			
			[Bindable]
			private var vistaInformacion:IVisualElement;
			public function agregarVistaDeInformacion($value:IVisualElement):void
			{
				if($value)
				{
					vistaInformacion = $value;
					vistaInformacion.visible = vistaInformacion.includeInLayout = false;
					this.addElementAt(vistaInformacion,1);
				}
			}
			
			private var grpMenu:GroupMenu;
			public var contenedorMenu:ContenedorMenuCatalogos;
			public function agregarMenuCatalogo($value:IVisualElement):void
			{
				if($value)
				{
					if(contenedorMenu)
						this.removeElementAt(2);
					
					valorExp = $value;
					contenedorMenu = new ContenedorMenuCatalogos();
					contenedorMenu.percentHeight = contenedorMenu.percentWidth = 100;
					contenedorMenu.visible = contenedorMenu.includeInLayout = false;
					contenedorMenu.itemVisual = $value;
					contenedorMenu.tituloMenu = titulo;
					addElementAt(contenedorMenu,2);
				}
			}
			
			public function agregarMenuCatalogoMin($value:IVisualElement):void
			{
				if($value)
				{
					if(contenedorMenu)
					{
						this.removeElementAt(2);
						contenedorMenu = new ContenedorMenuCatalogos();
						contenedorMenu.percentHeight = contenedorMenu.percentWidth = 100;
						contenedorMenu.visible = contenedorMenu.includeInLayout = false;
						contenedorMenu.itemVisualMinimizado = $value;
						contenedorMenu.tituloMenu = titulo;
						addElementAt(contenedorMenu,2);
					}
				}
			}
			
			public var vistaConfiguracion:IVisualElement;
			public function agregarComponentesConfiguracion($value:IVisualElement):void
			{
				if ($value)
				{
					vistaConfiguracion = $value;
					this.addElement(vistaConfiguracion);
					vistaConfiguracion.visible = vistaConfiguracion.includeInLayout = false;
				}
			}
			
			
			
		]]>
	</fx:Script>
	<s:Image id="tabMostrarOcultarMenu" source="{catalogoIconosBotones.getInstance().tabalreves}" click="tabMostrarOcultarMenu_clickHandler(event)" visible="false" depth="5"/>
</s:Group>
