<?xml version="1.0" encoding="utf-8"?>
<vistas:PanelPropiedadesPlantillas xmlns:fx="http://ns.adobe.com/mxml/2009" 
								   xmlns:s="library://ns.adobe.com/flex/spark"
								   xmlns:mx="library://ns.adobe.com/flex/mx"
								   xmlns:comboPqNet="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
								   xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
								   xmlns:panelCtaGenerales="skins.skin.comun.consultas.panelCtaGenerales.*" 
								   xmlns:vistas="mx.com.proquifa.proquifanet.rsl.vista.vistas.*"
								   titulo="CONSULTA DOCUMENTOS ENVIADOS"
								   width="100%" height="100%"
								   xmlns:textinput="skins.skin.textinput.*" 
								   xmlns:pqNet="skins.botones.pqNet.*" 
								   xmlns:dateField="skins.skin.dateField.*" 
								   xmlns:label="skins.skin.label.*" 
								   xmlns:otros="skins.otros.*"
								   creationComplete="inicio(event)"
								   >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.documentosenviados.EventoConsultaDocumentosEnviados;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			private var _usuario:Empleado = DatosGlobales.getInstance()._usuario;
			[Bindable] private var _listaBotones:ArrayCollection = new ArrayCollection( [{valor:'Avanzada',llave:1},{valor:'RÃ¡pida',llave:0} ] );
			protected function busquedaRapida(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function btnBusquedaRapida_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("btnBuquedaRapida");
				eventEspera.tipoEventos.push("BUSQUEDA_RAPIDA");
				dispatchEvent(eventEspera);
				
				var eventos:EventoConsultaDocumentosEnviados = new EventoConsultaDocumentosEnviados(EventoConsultaDocumentosEnviados.BUSQUEDA_RAPIDA);
				eventos.envioDocumentos.folioDocumento = txtfolioDocumento.text;
				dispatchEvent(eventos);
			}
			
			protected function seleccionarBoton(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				if(btnBarra.selectedIndex==0){
					vstBusqueda.selectedIndex = 1;
				}
				else{
					vstBusqueda.selectedIndex = 0;
				}
				
			}
			
			private var currentFInicio:Date;
			private var currentFFin:Date;
			private var currentCliente:int;
			private var currentOrigen:String;
			private var currentTipo:String;
			private var currentFolio:String;
			private var numFiltrosModificados:int;
			private var keyModificados:Object;
			
			private function CompararYControlarBoton($dato1:Object,$dato2:Object,$currentFiltroModif:String,$button:botonPqNetLargo):void
			{
				if($dato1 != $dato2){
					if(!keyModificados.hasOwnProperty($currentFiltroModif)){
						$button.CambiarToActualizarTipoBoton(false);
						keyModificados[$currentFiltroModif]=$currentFiltroModif;
						numFiltrosModificados ++;
					}
				}else{
					if(numFiltrosModificados==1){
						$button.CambiarToActualizarTipoBoton(true);
						numFiltrosModificados =0;
						keyModificados=  new Object();
					}else{
						delete keyModificados[$currentFiltroModif];
						numFiltrosModificados --;
					}
				}
			}
			
			private function resetControlDeCambiosEnFiltros():void
			{
				numFiltrosModificados =0;
				keyModificados=  new Object();
			}
			
			protected function filtros_doctosEnviados(event:*):void
			{
				// TODO Auto-generated method stub
				
				var tempOrigen:String = cmbOrigen.selectedItem.valor == '--TODOS--' ? "" : cmbOrigen.selectedItem.valor;
				var tempTipo:String = cmbTipo.selectedItem.valor == '--TODOS--' ? "" : cmbTipo.selectedItem.valor;
				var tempCliente:int = cmbCliente.selectedItem.valor == '--TODOS--' ? 0 : cmbCliente.selectedItem.llave; 
				switch(event.currentTarget.id)
				{
					case "dtpFInicio":{CompararYControlarBoton(event.newDate.time,currentFInicio.time,"dtpFInicio",btnBusqueda);break;}
					case "dtpFFin":{CompararYControlarBoton(event.newDate.time,currentFFin.time,"dtpFFin",btnBusqueda); break;}
					case "cmbCliente":{CompararYControlarBoton(tempCliente,currentCliente,"cmbCliente",btnBusqueda);break;}	
					case "cmbOrigen":{CompararYControlarBoton(tempOrigen,currentOrigen,"cmbOrigen",btnBusqueda);break;}	
					case "cmbTipo":	{CompararYControlarBoton(tempTipo,currentTipo,"cmbTipo",btnBusqueda);break;}	
					case "txtfolioDocumentoAvanzada": {CompararYControlarBoton(txtfolioDocumentoAvanzada.text,currentFolio,"txtfolioDocumentoAvanzada",btnBusqueda);break;}
				}
				
			}
			
			protected function realizarBusqueda(event:MouseEvent):void
			{
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("btnBusqueda");
				eventEspera.tipoEventos.push("BUSQUEDA_AVANZADA");
				dispatchEvent(eventEspera);
				
				var eventos:EventoConsultaDocumentosEnviados = new EventoConsultaDocumentosEnviados(EventoConsultaDocumentosEnviados.BUSQUEDA_AVANZADA);
				eventos.envioDocumentos.folioDocumento = txtfolioDocumento.text;
				eventos.envioDocumentos.finicio = dtpFInicio.selectedDate;
				eventos.envioDocumentos.ffin = dtpFFin.selectedDate;
				eventos.envioDocumentos.destino = cmbCliente.selectedItem.llave;
				eventos.envioDocumentos.origen = cmbOrigen.selectedItem.valor == "--TODOS--"?"":cmbOrigen.selectedItem.valor;
				eventos.envioDocumentos.tipo = cmbTipo.selectedItem.valor == "--TODOS--"?"":cmbTipo.selectedItem.valor;
				dispatchEvent(eventos);
				
				currentFInicio= eventos.envioDocumentos.finicio;
				currentFFin = eventos.envioDocumentos.ffin;
				currentCliente = eventos.envioDocumentos.destino;
				currentOrigen = eventos.envioDocumentos.origen;
				currentTipo = eventos.envioDocumentos.tipo;
				currentFolio = eventos.envioDocumentos.folioDocumento;
				
				resetControlDeCambiosEnFiltros();
				
			}
			
			
			protected function inicio(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("btnBusqueda");
				eventEspera.tipoEventos.push("BUSQUEDA_AVANZADA");
				dispatchEvent(eventEspera);
				
				vstBusqueda.selectedIndex = 1;
				dtpFInicio.selectedDate = new Date();
				dtpFFin.selectedDate = new Date();
				var eventos:EventoConsultaDocumentosEnviados = new EventoConsultaDocumentosEnviados(EventoConsultaDocumentosEnviados.BUSQUEDA_AVANZADA);
				eventos.envioDocumentos.folioDocumento = "";
				eventos.envioDocumentos.finicio = dtpFInicio.selectedDate;
				eventos.envioDocumentos.ffin = dtpFFin.selectedDate;
				eventos.envioDocumentos.destino = 0;
				eventos.envioDocumentos.origen = "";
				eventos.envioDocumentos.tipo = "";
				dispatchEvent(eventos);
				
				resetControlDeCambiosEnFiltros();
				
				currentFInicio= eventos.envioDocumentos.finicio;
				currentFFin = eventos.envioDocumentos.ffin;
				currentCliente = eventos.envioDocumentos.destino;
				currentOrigen = eventos.envioDocumentos.origen;
				currentTipo = eventos.envioDocumentos.tipo;
				currentFolio = eventos.envioDocumentos.folioDocumento;
				
				
			}
			
			public function set actualizarEsperaYBloqueo($actualizarEstadoEspera:Object):void
			{
				var currenIdButton:String;
				if($actualizarEstadoEspera.hasOwnProperty("idCurrentButtons")){
					
					for (var i:int = 0; i < $actualizarEstadoEspera.idCurrentButtons.length; i++) 
					{
						currenIdButton = $actualizarEstadoEspera.idCurrentButtons[i];
						switch(currenIdButton)
						{
							case "btnBusqueda":
							{
								if(btnBusqueda.isCurrentButtonActualizar){
									btnBusqueda.isBusyActualizar= $actualizarEstadoEspera.isBusy;
								}else if(!$actualizarEstadoEspera.isBusy){
									btnBusqueda.CambiarToActualizarTipoBoton(true);
								}
								break;
							}
							case "btnBusquedaRapida":
							{
								if(btnBusquedaRapida.isCurrentButtonActualizar){
									btnBusquedaRapida.isBusyActualizar= $actualizarEstadoEspera.isBusy;
								}else if(!$actualizarEstadoEspera.isBusy){
									btnBusquedaRapida.CambiarToActualizarTipoBoton(true);
								}
								break;
							}
						}
					}
				}
			}
			
		]]>
	</fx:Script>
	<vistas:contenido>
		<s:VGroup width="100%" height="100%" >
			<pq:MobViewStack width="100%" height="100%" id="espacioInfoGenerales" creationPolicy="all" >
				<s:NavigatorContent width="100%" height="100%">
					<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
						<s:VGroup width="100%" gap="0">
							<s:Spacer height="13"/>
							<s:ButtonBar changing="seleccionarBoton(event)" selectedIndex="0" id="btnBarra" labelField="valor" dataProvider="{this._listaBotones}" width="100%" requireSelection="true" />
							<s:Spacer height="30"/>
							<otros:divisionHueca width="100%"/>
						</s:VGroup>	
						<pq:MobViewStack width="100%" height="37%" id="vstBusqueda">
							
							<!--BusquedaRapida-->
							<s:NavigatorContent width="100%" height="100%">
								<s:VGroup width="100%" id="porFolio" >
									<s:Spacer height="15"/>
									<label:Titulo_w100  text="Folio Documento" paddingTop="0" />
									<textinput:txtInputBlancoDefaultPQNet id="txtfolioDocumento" width="100%" enter="busquedaRapida(event)"/>
									<s:Spacer height="15"/>
									<pqNet:botonPqNetLargo id="btnBusquedaRapida" width="100%" click="btnBusquedaRapida_clickHandler(event)" botonRedondo="true" icono="ojomordor"/>
									<s:Spacer height="15"/>
									<otros:divisionHueca width="100%"/>
								</s:VGroup>
							</s:NavigatorContent>
							
							<!--BusquedaAvanzada-->
							<s:NavigatorContent width="100%" height="100%"> 
								<s:VGroup width="100%" height="100%" horizontalAlign="center">
									<s:HGroup width="100%" >
										<s:VGroup width="50%">
											<label:Titulo_w100  text="Del" paddingTop="0" />
											<dateField:DatePickerSpanish id="dtpFInicio"  width="130"  change="filtros_doctosEnviados(event)"/>
										</s:VGroup>
										<s:Spacer width="100%"/>
										<s:VGroup width="50%">
											<label:Titulo_w100  text="Al" paddingTop="0" />
											<dateField:DatePickerSpanish id="dtpFFin" width="130" change="filtros_doctosEnviados(event)"/>
										</s:VGroup>
									</s:HGroup>
									<s:Spacer height="1"/>
									<label:Titulo_w100 text="Cliente" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbCliente" creationComplete="{cmbCliente.cargaClientesUsuarioLogueado('--TODOS--',_usuario.clave) }" width="100%" change="filtros_doctosEnviados(event)"/>
									<label:Titulo_w100 text="Origen" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbOrigen" creationComplete="{cmbOrigen.cargarEmpleadosPorSoloPorTipo('esac', '--TODOS--') }" width="100%" change="filtros_doctosEnviados(event)"/>
									<label:Titulo_w100 text="Tipo" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbTipo" creationComplete="{cmbTipo.cargarTipoDocumentosEnviados('--TODOS--') }" width="100%" change="filtros_doctosEnviados(event)"/>
									<label:Titulo_w100  text="Folio Documento" paddingTop="0" />
									<textinput:txtInputBlancoDefaultPQNet id="txtfolioDocumentoAvanzada" width="100%" keyUp="filtros_doctosEnviados(event)"/>
									<s:Spacer height="15"/>
									<pqNet:botonPqNetLargo id="btnBusqueda"	width="100%" click="realizarBusqueda(event)" botonRedondo="true" icono="iconoActualizarNormal"/>
									<s:Spacer height="15"/>
									<otros:divisionHueca width="100%"/>
								</s:VGroup>
							</s:NavigatorContent>
						</pq:MobViewStack>
					</s:VGroup>
				</s:NavigatorContent>
			</pq:MobViewStack>
		</s:VGroup>
	</vistas:contenido>
</vistas:PanelPropiedadesPlantillas>					










