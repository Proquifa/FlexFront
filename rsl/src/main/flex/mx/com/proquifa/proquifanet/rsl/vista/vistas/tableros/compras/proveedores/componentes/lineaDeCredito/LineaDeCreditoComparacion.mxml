<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorComparacionTablero xmlns:fx="http://ns.adobe.com/mxml/2009" 
									titulo="LÍNEA DE CRÉDITO" xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									circulosComprasBool="false"
									xmlns:s="library://ns.adobe.com/flex/spark"
									xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:chekbox="skins.skin.chekbox.*" xmlns:otros="skins.otros.*" xmlns:graficas="skins.skin.graficas.*"
									xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*" >
	
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
		<mx:SolidColorStroke id = "s2" color="0x{catalogoColores.LABEL_AMARILLO}" weight="2"/>
		<mx:SolidColorStroke id = "s3" color="0x{catalogoColores.LABEL_ROJO}" weight="2"/>
		<mx:SolidColorStroke id = "sA" color="0x3b98af" weight="6"/>
		<mx:SolidColorStroke id = "sB" color="0x666666" weight="4"/>
		<mx:SolidColorStroke id = "sC" color="0xBABABA" weight="2"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTabProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.proveedor.BalanceDeCredito;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable] private var arrReturn:ArrayCollection = new ArrayCollection();
			[Bindable] private var arrMinisChart:ArrayCollection = new ArrayCollection();
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			
			private var _listaMensual:ArrayCollection = new ArrayCollection([
				"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
			]);
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			public function set resumenComparativaLineaDeCredito(comparativa:ArrayCollection):void{
				if(comparativa == null) return;
				
				arrMinisChart = new ArrayCollection();
				_linealArrGrafica = comparativa;
				myChart.dataProvider = iniciarGrafica(_linealArrGrafica);
			}
			
			private function generateObjectItemBarChart( arrTemp:ArrayCollection):Object{
				
				var objeto:Object = new Object();
				objeto.proveedorCancelado = 0;
				objeto.montoCancelado = 0;
				objeto.ocCancelada = 0;
				objeto.partidasCanceladas = 0;
				objeto.piezasCanceladas = 0;
				
				objeto.proveedorConfirmado = 0;
				objeto.montoConfirmado = 0;
				objeto.ocConfirmada = 0;
				objeto.partidasConfirmadas = 0;
				objeto.piezasConfirmadas = 0;
				
				for( var i:int = 0 ; i < arrTemp.length ; i++){
					if(arrTemp[i].conceptoResultado == "Cancelada"){
						objeto.proveedorCancelado += arrTemp[i].clientes_proveedores;
						objeto.montoCancelado += arrTemp[i].total;
						objeto.ocCancelada += arrTemp[i].ocompras;
						objeto.partidasCanceladas += arrTemp[i].partidas;
						objeto.piezasCanceladas += arrTemp[i].piezasTotal;
					}else{
						objeto.proveedorConfirmado += arrTemp[i].clientes_proveedores;
						objeto.montoConfirmado += arrTemp[i].total;
						objeto.ocConfirmada += arrTemp[i].ocompras;
						objeto.partidasConfirmadas += arrTemp[i].partidas;
						objeto.piezasConfirmadas += arrTemp[i].piezasTotal;
					}
					
				}
				
				objeto.piezasCanceladas == 1 ? objeto.piezasCanceladasLabel = objeto.piezasCanceladas + ' pza' : objeto.piezasCanceladasLabel = objeto.piezasCanceladas + ' pzas';
				objeto.piezasConfirmadas == 1 ? objeto.piezasConfirmadasLabel = objeto.piezasConfirmadas + ' pza' : objeto.piezasConfirmadasLabel = objeto.piezasConfirmadas + ' pzas';
				return objeto;
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection{
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				var arrReturn1:ArrayCollection = new ArrayCollection();
				var arrReturn2:ArrayCollection = new ArrayCollection();
				var arrReturn3:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				var objetoPeriodo2:Object;
				var objetoPeriodo3:Object;
				var montoPeriodo1:Number = 0;
				var montoPeriodo2:Number = 0;
				var montoPeriodo3:Number = 0;
				var cuenta:int = 1;
				
				arrReturn.addItem(new Object());
				
				while( cuenta < 13){
					
					objeto = new Object();
					objeto.montoUSD_0 = 0;
					objeto.montoUSD_1 = 0;
					objeto.montoUSD_2 = 0;
					objeto.montoLimite_0 = 0;
					objeto.montoLinea_0 = 0;
					objeto.numeroMes = cuenta;
					objeto.mes = _listaMensual[cuenta -1];
					objeto.fecha = null;
					
					
					for( m = 0; m < $lista.length;m++ ){
						if(cuenta == parseInt(UtilsFecha.formatoFechaMM(($lista[m] as BalanceDeCredito).fecha)))
						{
							if((($lista[m] as BalanceDeCredito).etiqueta == "COMPRA_0") || (($lista[m] as BalanceDeCredito).etiqueta == "PAGO_0") ){
								objeto.montoUSD_0 += ($lista[m] as BalanceDeCredito).monto;
								objeto.montoLinea_0 = ($lista[m] as BalanceDeCredito).lineaCredito ;
								objeto.montoLimite_0 = ($lista[m] as BalanceDeCredito).limiteCredito ;
								objeto.fecha= _listaMensual[cuenta -1];
							} 
							if((($lista[m] as BalanceDeCredito).etiqueta == "COMPRA_1") || (($lista[m] as BalanceDeCredito).etiqueta == "PAGO_1") ){
								objeto.montoUSD_1 += ($lista[m] as BalanceDeCredito).monto;
								objeto.fecha= _listaMensual[cuenta -1];
							}
							if((($lista[m] as BalanceDeCredito).etiqueta == "COMPRA_2") || (($lista[m] as BalanceDeCredito).etiqueta == "PAGO_2") ){
								objeto.montoUSD_2 += ($lista[m] as BalanceDeCredito).monto;
								objeto.fecha= _listaMensual[cuenta -1];
							} 
						}
					}
					arrReturn.addItem(objeto);
					cuenta++;
				}
				arrReturn.addItem(new Object());
				return arrReturn;	
			}
			
			protected function comparaPeriodos( $current:Number, $previo:Number ):Number
			{
				var porcentaje:Number = ( ($current * 100 ) / $previo ) - 100;
				trace( porcentaje.toString() );
				if( porcentaje == Infinity || isNaN(Number(porcentaje)) )
					porcentaje = 0;
				return Math.round( porcentaje );
			}
			
			private var _event:EventoTabProveedores;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			private var _keyAnterior:String = "";
			
			public function set recibirFiltrosTableroProveedores(etiqueta:EventoTabProveedores):void{
				if(etiqueta == null) return;
				
				_event = etiqueta;
				_minimoMeses = _event.parametros.mesInicio;
				_maximoMeses = _event.parametros.mesFin;
				lblPer1.text = _event.labelPeriodo1;
				lblPer2.text = _event.labelPeriodo2;
				lblPer3.text = _event.labelPeriodo3;
				
				myChart.dataProvider = iniciarGrafica( _linealArrGrafica );
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String{
				return _listaMensual[ int($etiqueta) -1 ].toUpperCase();
			}
			
		]]>
	</fx:Script>
	
	<graficaPie:contenido>
		<s:VGroup width="100%" height="100%" paddingTop="-15">
			<s:HGroup paddingLeft="10" width="100%" paddingTop="3">
				<s:HGroup textAlign="left" width="100%">
					<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50" >
						<s:fill>
							<s:SolidColor color="0x3b98af"/>
						</s:fill>		
					</s:Ellipse>
					<pq:TituloChartMaxTablero id="lblPer1"   />
					<pq:TituloChartMaxTablero id="tendencia1" />
				</s:HGroup>
				<s:HGroup width="100%" horizontalAlign="right" >
					<s:HGroup height="100%" >
						<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
							<s:fill>
								<s:SolidColor color="0xd10c0c"/>
							</s:fill>		
						</s:Ellipse>
						<pq:TituloChartMaxTablero text="LÍNEA DE CRÉDITO" width="100%" textAlign="right"/>
					</s:HGroup>  
				</s:HGroup>
			</s:HGroup>
			<s:HGroup paddingLeft="10" width="100%" paddingTop="3">
				<s:HGroup textAlign="left" width="100%">
					<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50" >
						<s:fill>
							<s:SolidColor color="0x666666"/>
						</s:fill>		
					</s:Ellipse>
					<pq:TituloChartMaxTablero id="lblPer2"   />
					<pq:TituloChartMaxTablero id="tendencia2" />
				</s:HGroup>
				<s:HGroup width="100%" horizontalAlign="right" >
					<s:HGroup height="100%" >
						<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
							<s:fill>
								<s:SolidColor color="0xe49b08"/>
							</s:fill>		
						</s:Ellipse>
						<pq:TituloChartMaxTablero text="LÍMITE DE CRÉDITO" width="100%" textAlign="right"/>
					</s:HGroup>  
				</s:HGroup>
			</s:HGroup>
			<s:HGroup paddingLeft="10" paddingTop="3" >
				<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
					<s:fill>
						<s:SolidColor color="0xBABABA"/>
					</s:fill>		
				</s:Ellipse>
				<pq:TituloChartMaxTablero id="lblPer3" />
				<pq:TituloChartMaxTablero id="tendencia3" />
			</s:HGroup>
			
			<mx:LineChart height="100%" width="100%" id="myChart"
						  mouseSensitivity="5" 
						  dataTipRenderer="{DataToolTipLineaDeCredito}" 
						  showDataTips="true" 
						  showDataTipTargets="false"  
						  dataTipMode="single" 
						  paddingRight="30" paddingLeft="20" paddingTop="20"
						  seriesFilters="[]">
				<mx:series>
					<!-- CURRENT -->
					<mx:LineSeries yField="montoUSD_0" xField="numeroMes" form="segment"  lineStroke="{sA}" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries yField="montoUSD_0"  xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
										<s:fill>
											<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
					<!-- AYER -->
					<mx:LineSeries yField="montoUSD_1"  xField="numeroMes" form="segment" lineStroke="{sB}" width="100%" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries yField="montoUSD_1"  xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
										<s:fill>
											<s:SolidColor color="0x666666"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
					<!-- PASADO -->
					<mx:LineSeries yField="montoUSD_2"  xField="numeroMes" form="segment" lineStroke="{sC}" width="100%" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries yField="montoUSD_2"  xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
										<s:fill>
											<s:SolidColor color="0xBABABA"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
					<!--linea de credito-->
					<mx:PlotSeries yField="montoLimite_0" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									<s:Ellipse width="8" height="2" horizontalCenter="0" verticalCenter="0">
										<s:fill>
											<s:SolidColor color="0x{catalogoColores.LABEL_AMARILLO}"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
					<!--Limite de credito-->
					<mx:LineSeries yField="montoLinea_0"  form="segment"  lineStroke="{s3}" showDataEffect="{fxInterpolateIn}" />
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vDia"  categoryField="numeroMes" />
				</mx:horizontalAxis>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vDia}" axisStroke="{trazoGruezo}" tickPlacement="none" showLine="true" showLabels="true"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction" />
				</mx:horizontalAxisRenderers>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad" labelFunction="formateoEje" />
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad}" showLine="false" showLabels="{true}" tickPlacement="none" styleName="axisVerticalLabels"/>
				</mx:verticalAxisRenderers>
				<mx:backgroundElements>
					<mx:GridLines visible="{true}">
						<mx:horizontalStroke>
							<s:SolidColorStroke weight="0.5" color="0xeeeeee" />
						</mx:horizontalStroke>
					</mx:GridLines>
				</mx:backgroundElements>
			</mx:LineChart>	
		</s:VGroup>	
	</graficaPie:contenido>
</comun:ContenedorComparacionTablero>	