<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		 xmlns:lay = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisDeVentas.*"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:otros="skins.otros.*"
		 xmlns:grafica="skins.botones.grafica.*" 
		 xmlns:pqNet="skins.botones.pqNet.*"
		 xmlns:shaders="skins.skin.shaders.*" 
		 xmlns:contenedores="skins.skin.contenedores.*" 
		 xmlns:mapa ="mx.com.proquifa.proquifanet.rsl.vista.mapas.tableros.clientes.resumenVentasEnPeriodoMax.*"
		 xmlns:todos = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisDeVentas.todos.*"
		 xmlns:altos = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisDeVentas.altos.*"
		 xmlns:medios = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisDeVentas.medios.*"
		 xmlns:dist = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisDeVentas.distribuidor.*"
		 xmlns:botonesToggle="skins.botonesToggle.*" 
		 creationComplete="group1_creationCompleteHandler(event)"
		 width="100%" height="100%" 
		 
		 
		 >
	
	<fx:Declarations>
		<mapa:MapaResumenVentasEnPeriodoMax dispatcher="{this}"/>
	</fx:Declarations>
	
	<fx:Metadata>
		[Event(name="Regresar_VistaDefaultAnalisisVentas", type="flash.events.Event")]
	</fx:Metadata>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.resumenVentasEnPeriodoMax.EventoResumenVentasEnPeriodoMax;
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			
			import spark.events.IndexChangeEvent;
			
			private const _GRAFICA:String = "grafica_VistaDefaultAnalisisVentas";
			private const _INICIO:String = "incio_VistaDefaultAnalisisVentas";
			
			
			[Bindable]
			private var _arrBtneraTipoVentas:ArrayCollection = new ArrayCollection( [  { valor:' TODOS', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }, 
				{ valor:' ALTOS', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 },
				{ valor:' MEDIOS', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 },
				{ valor:' DISTRIBUIDORES', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }
			] );
			
			
			private const flechaIzq:Class =  catalogoIconosBotones.getInstance().tab;
			private const flechaDer:Class =  catalogoIconosBotones.getInstance().tabalreves;
			
			private var anchoPanelGraficas:int = 300;
			
			public var vistaARegresar:String;
			protected function btnRegresarInicio_clickHandler(event:MouseEvent):void
			{
				vistaARegresar = _INICIO; 
				dispatchEvent(new Event("Regresar_VistaDefaultAnalisisVentas"));
			}
			
			protected function btnRegresarGrafica_clickHandler(event:MouseEvent):void
			{
				vistaARegresar = _GRAFICA;
				dispatchEvent(new Event("Regresar_VistaDefaultAnalisisVentas"));
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				btnMostrarGraficos.source = flechaDer;
				
				
				this.addEventListener(EventoResumenVentasEnPeriodoMax.ENVIAR_SELECCION_CHECK_FROM_CENTRO_TO_VISTA_DEFAULT_ANALISIS_VENTAS,escucharCambioDeVistaClienteEsacEnTodasLasVistas);
				
				this.addEventListener(EventoResumenVentasEnPeriodoMax.ENVIAR_SELECCION_CENTRO_TO_GRAFICA_VISTA_ESAC_ALTOS,escucharSeleccionDeEsacAltos);
				this.addEventListener(EventoResumenVentasEnPeriodoMax.ENVIAR_SELECCION_CENTRO_TO_GRAFICA_VISTA_ESAC_MEDIOS,escucharSeleccionDeEsacMedios);
				this.addEventListener(EventoResumenVentasEnPeriodoMax.ENVIAR_SELECCION_CENTRO_TO_GRAFICA_VISTA_ESAC_DISTRIBUIDOR,escucharSeleccionDeEsacDistribuidor);
				
			}
			
			
			private var currentVistaAltos:String = "cliente";
			private var currentVistaMedios:String = "cliente";
			private var currentVistaDist:String = "cliente";
			private function escucharCambioDeVistaClienteEsacEnTodasLasVistas(event:EventoResumenVentasEnPeriodoMax):void
			{
				if(altosVisible)
				{
					currentVistaAltos = event.vistaSolicitada;
					grpGraficaAltos.recibeSeleccionDeVistaAltos(event.vistaSolicitada);
				}
				else if(mediosVisible)
				{
					currentVistaMedios = event.vistaSolicitada;
					grpGraficaMedios.recibeSeleccionDeVistaMedios(event.vistaSolicitada);
				}
				else if(disVisible)
				{
					currentVistaDist = event.vistaSolicitada;
					
					if(currentVistaDist == grpDistribuidorClientes.ESAC_VISTA)
					{
						if(showGraficos)
						{
							showGraficos = false;
							btnMostrarGraficos.source = flechaDer;
							this.invalidateDisplayList();
						}
					}
					else if(currentVistaDist == grpDistribuidorClientes.CLIENTE_VISTA)
					{
						if(!showGraficos)
						{
							showGraficos = true;
							btnMostrarGraficos.source = flechaIzq;
							this.invalidateDisplayList();
						}
					}
					grpGraficaDistribuidor.recibeSeleccionDeVistaDistribuidor(event.vistaSolicitada);
				}
			}
			
			public function set recibirFiltros( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				_event = $event;
				
				iniciarSolicitudDeDatos();
			} 
			
			private var _event:EventoTableroClientes;
			/* private var ultimosParametros:EventoTableroClientes; */ 
			private function iniciarSolicitudDeDatos():void
			{
				var soliResumenVentas:EventoTableroClientes = new EventoTableroClientes(EventoTableroClientes.CONSULTAR_RESUMEN_VENTAS_TODOS);
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				
			/* 	_event = $evento; */
				
//				if($comprobarCambioDeParametros)
//				{
//					if(ultimosParametros && (ultimosParametros.keyConsulta != _event.keyConsulta))
//					{ 
//						/* eventEspera.mensaje = "iniciarEspera";
//						eventEspera.idButtons = [];
//						eventEspera.tipoEventos = [];
//						eventEspera.tipoEventos.push("CONSULTAR_RESUMEN_VENTAS_TODOS");
//						dispatchEvent(eventEspera); */
//						
//						soliResumenVentas.parametros = _event.parametros;
//						ultimosParametros.parametros = _event.parametros; 
//						
//						dispatchEvent(soliResumenVentas);
//					}
//					else if(!ultimosParametros)
//					{
//						/* 	eventEspera.mensaje = "iniciarEspera";
//						eventEspera.idButtons = [];
//						eventEspera.tipoEventos = [];
//						eventEspera.tipoEventos.push("CONSULTAR_RESUMEN_VENTAS_TODOS");
//						dispatchEvent(eventEspera); */
//						
//						soliResumenVentas.parametros = _event.parametros;
//						ultimosParametros = new EventoTableroClientes(EventoTableroClientes.SOLO_DUMMY_SOY_CONSULTA_LINEAL);
//						ultimosParametros.parametros = _event.parametros;
//						dispatchEvent(soliResumenVentas);
//					} 
//				}
//				else
//				{
					eventEspera.mensaje = "iniciarEspera";
					eventEspera.idButtons = [];
					eventEspera.tipoEventos = [];
					eventEspera.tipoEventos.push("CONSULTAR_RESUMEN_VENTAS_TODOS");
					dispatchEvent(eventEspera); 
					
/* 					if(!ultimosParametros)
					{
						ultimosParametros = new EventoTableroClientes(EventoTableroClientes.SOLO_DUMMY_SOY_CONSULTA_LINEAL);
					}
					
					ultimosParametros.parametros = _event.parametros; */
					
					soliResumenVentas.parametros = _event.parametros;
					dispatchEvent(soliResumenVentas);
				/* } */
			}
			
			
			public var showGraficos:Boolean = false;
			protected function btnMostrarGraficos_clickHandler(event:MouseEvent):void
			{
				var i:int = 0;
				if(!showGraficos)
				{
					showGraficos = true;
					btnMostrarGraficos.source = flechaIzq;
					
				}
				else
				{
					showGraficos = false;
					btnMostrarGraficos.source = flechaDer;
				}
				this.invalidateDisplayList();  
			}
			
			[Bindable]
			private var todosVisible:Boolean = true;
			[Bindable]
			private var altosVisible:Boolean = false;
			[Bindable]
			private var mediosVisible:Boolean = false;
			[Bindable]
			private var disVisible:Boolean = false;
			protected function btneraTipoVentas_changingHandler(event:IndexChangeEvent):void
			{
				todosVisible = false;
				altosVisible = false;
				mediosVisible = false;
				disVisible = false;
				
				if(event.newIndex == 0)
				{
					todosVisible = true;
					layoutVistaDefault.percentWidthParaMostrarGraficas = 23;
				}
				else if(event.newIndex == 1)
				{
					altosVisible = true;
					showGraficos = true;
					btnMostrarGraficos.source = flechaIzq;
					layoutVistaDefault.percentWidthParaMostrarGraficas = 30;
				} 
				else if(event.newIndex == 2)
				{
					mediosVisible = true;
					showGraficos = true;
					btnMostrarGraficos.source = flechaIzq;
					layoutVistaDefault.percentWidthParaMostrarGraficas = 30;
				} 
				else if(event.newIndex == 3)
				{
					disVisible = true;
					
					if(currentVistaDist == grpDistribuidorClientes.CLIENTE_VISTA)
					{
						showGraficos = true;
						btnMostrarGraficos.source = flechaIzq;
						layoutVistaDefault.percentWidthParaMostrarGraficas = 23;
					}
					else
					{
						showGraficos = false;
						btnMostrarGraficos.source = flechaDer;
					}
				} 
				
				this.invalidateDisplayList();
			}
			
			
			private function escucharSeleccionDeEsacAltos(event:EventoResumenVentasEnPeriodoMax):void
			{
				grpGraficaAltos.currentEsac = event.esac;
			}
			
			private function escucharSeleccionDeEsacMedios(event:EventoResumenVentasEnPeriodoMax):void
			{
				grpGraficaMedios.currentEsac = event.esac;
			}
			
			private function escucharSeleccionDeEsacDistribuidor(event:EventoResumenVentasEnPeriodoMax):void
			{
				grpGraficaDistribuidor.currentEsac = event.esac;
			}
			
			
			
			
		]]>
	</fx:Script>
	
	
	<s:layout>
		<lay:LayoutVistaDefaultAnalisisVentas id="layoutVistaDefault" percentWidthParaMostrarGraficas="23"/>
	</s:layout>
	
	<contenedores:VGroupConPaddingStandardPqNet id="grpTodosGridGrafica" >
		<componentes:TituloChartMaxTablero width="100%" text="VENTAS DEL PERIODO"/>
		<otros:divisionGruesa width="100%"/>
		<botonesToggle:ButtonBarColores width="100%" height="40" id="btneraTipoVentas" requireSelection="true" selectedIndex="0" dataProvider="{_arrBtneraTipoVentas}" changing="btneraTipoVentas_changingHandler(event)"/>
		
		
		<s:Group width="100%" height="100%">
			<todos:TodosAnalisisVentasVistaCentral width="100%" height="100%" visible="{todosVisible}"/>
			<altos:AltosClientesEsacVistaCentral width="100%" height="100%" id="grpAltosClientes" visible="{altosVisible}"/>
			<medios:MediosClientesEsacVistaCentral width="100%" height="100%" id="grpMediosClientes" visible="{mediosVisible}"/>
			<dist:DistribuidorClientesEsacVistaCentral width="100%" height="100%" id="grpDistribuidorClientes" visible="{disVisible}"/>
		</s:Group> 
		
		<s:VGroup width="100%">
			<otros:divisionHueca width="100%"/>
			<s:HGroup width="100%" height="40" verticalAlign="middle" paddingBottom="5" paddingTop="10" >
				<grafica:botonPopUp id="btnRegresarGrafica" icono="chart" click="btnRegresarGrafica_clickHandler(event)"/>
				<pqNet:botonPqNetLargo id="btnRegresarInicio" label="Inicio" click="btnRegresarInicio_clickHandler(event)" />
			</s:HGroup>
		</s:VGroup>  
	</contenedores:VGroupConPaddingStandardPqNet>
	
	<s:Group id="grpGraficasVistaDerecha">
		<s:Rect width="100%" height="100%">
			<s:filters>
				<shaders:sombraBevelFilter direccion="left"/>
			</s:filters>
			<s:fill>	
				<s:SolidColor color="#eaeaea"/>	
			</s:fill>
		</s:Rect>
		
		<todos:TodosGraficasDerecha visible="{todosVisible}" width="100%" height="100%"/>
		<altos:AltosGraficaDerecha id="grpGraficaAltos" visible="{altosVisible}" width="100%" height="100%"/>
		<medios:MediosGraficaDerecha id="grpGraficaMedios" visible="{mediosVisible}" width="100%" height="100%"/>
		<dist:DistribuidorGraficaDerecha id="grpGraficaDistribuidor" visible="{disVisible}" width="100%" height="100%"/>
	</s:Group>  
	
	<s:Group width="0" height="100%" id="grpTabMenu" visible="{todosVisible}"> 
		<s:Image id="btnMostrarGraficos" verticalCenter="0" left="-18" click="btnMostrarGraficos_clickHandler(event)" />
	</s:Group>
	
	
</s:Group>
