<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
					xmlns:mate="http://mate.asfusion.com/"
					xmlns:debug="com.asfusion.mate.utils.debug.*" >
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.core.GlobalDispatcher;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.comun.notificados.EventoNotificados;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.comun.notificados.EventoReporteNotificados;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.notificados.ModeloReporteNotificados;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.notificados.BusquedaTipo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.notificados.HistorialNotificados;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.notificados.TablaNotificados;
		]]>
	</mx:Script>

	<mate:Debugger level="{Debugger.ALL}"/>
	
	<!--obtener lista de clientes -->	
	<mate:EventHandlers type="{EventoReporteNotificados.OBTENER_CLIENTE}">
		<!--<mate:RemoteObjectInvoker instance="{servicio.servicioBusquedaClienteResponsable}"
		method="clienteResponsable" 
		showBusyCursor="true"> --><!--method es la funcion que regresa de Mock-->
		<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerClientes"
								  arguments="{[event.valorAdicional]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="setClientesNotificado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="faultNumeroStock"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{BusquedaTipo}">
		<mate:PropertyInjector source="{ModeloReporteNotificados}" 
							   sourceKey="clientesNotificado"
							   targetKey="obtenerClientes"/>
	</mate:Injectors>
	
	<!--Obtener  lista de empleado--> 
	<mate:EventHandlers type="{EventoReporteNotificados.OBTENER_CLIENTE}">
		<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerEmpleadosPorTipo"
								  arguments="{[event.tipo,event.valorAdicional]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="setEmpleadoNotificado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="faultNumeroStock"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{BusquedaTipo}">
		<mate:PropertyInjector source="{ModeloReporteNotificados}" 
							   sourceKey="empleadoNotificado"
							   targetKey="obtenerEmpleadosResponsable"/>
	</mate:Injectors>
	
	<!--Prueba seleccion de viewStack-->
	<mate:EventHandlers type="{EventoNotificados.CAMBIA_VIEW_STACK}">

				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="setCambiaTabla"
									arguments="{event.tabla}"/>
				
	</mate:EventHandlers>
	<mate:Injectors	target="{TablaNotificados}">
		
		<mate:PropertyInjector source="{ModeloReporteNotificados}" sourceKey="cambiarTabla" targetKey="obtenerCambioTabla"/>
		
	</mate:Injectors>
	
	<!--Obtener lista de notificados --> 
	<mate:EventHandlers type="{EventoReporteNotificados.OBTENER_NOTIFICADOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.REPORTE_NOTIFICADOS}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerReporteNotificados"
								  arguments="{[event.cliente, event.responsable, event.tipoDeNotificacion]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="setReporteNotificado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="faultNumeroStock"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{TablaNotificados}">
		<mate:PropertyInjector source="{ModeloReporteNotificados}" 
							   sourceKey="reporteNotificado"
							   targetKey="obtenerNotificados"/>
	</mate:Injectors>
	
<!--Obtener Historial notificados --> 
	<mate:EventHandlers type="{EventoReporteNotificados.OBTENER_HISTORIAL_NOTIFICADOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.REPORTE_HISTORIAL_NOTIFICADOS}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerRNotificadoHistorial"
								  arguments="{event.folioInt}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="setHistorialNotificado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloReporteNotificados}"
									method="faultNumeroStock"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{HistorialNotificados}">
		<mate:PropertyInjector source="{ModeloReporteNotificados}" 
							   sourceKey="historialNotificado"
							   targetKey="obtenerHistorialNotificados"/>
	</mate:Injectors>	
	
</mate:EventMap>
