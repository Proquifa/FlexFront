<?xml version="1.0" encoding="utf-8"?>
<chekbox:CheckBoxPq xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:chekbox="skins.skin.chekbox.*"
					
					selected="false" labelLeft="PERIODICOS" labelRight="LINEALES" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.productos.EventoTableroProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.productos.ParametrosBusquedaProducto;
			
		
			
			// PRODUCTOS
			private var _eventProductos:EventoTableroProductos;
			public function set recibeFiltros( $event:EventoTableroProductos):void{
				if( $event == null )
					return;
				selected = $event.parametros.lineal == 1 ? true: false;
				_eventProductos = $event;
				addEventListener( Event.CHANGE, changeHandlerProductos, false, 0, true );
			}
			protected function changeHandlerProductos(event:Event):void
			{
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				
				var evento:EventoTableroProductos;
				switch(this.parentDocument.className)
				{
					case "ProductosOCTransitoComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_OC_TRANSITO_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_TRANSITO");
						break;
					} 
					case "ProductosOCRecibidaComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_OC_RECIBIDAS_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_RECIBIDAS_PROD");
						break;
					} 
					case "ProductosClientes_Comparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_CLIENTES_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_CLIENTES_PROD");
						break;
					}
					case "ProductosRechazosComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_OC_RECHAZADA_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_RECHAZADA_PROD");
						break;
					}
					case "ProductoAvisoDeCambiosComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_AVISO_CAMBIOS_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_AVISO_CAMBIOS_PROD");
						break;
					}
					case "ProductoComprasComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_COMPRAS_REALIZADAS_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_COMPRAS_REALIZADAS_PROD");
						break;
					}
					case "ProductoPagosComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_PAGOS_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_PAGOS_PROD");
						break;
					}
					case "CancelacionCotTabProdComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_CANCELACION_COT_TAB_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_CANCELACION_COT_TAB_PROD");
						break;
					}
					case "ProductoCotPetComparacion":
					{
						evento = new EventoTableroProductos( EventoTableroProductos.BUSCA_COMPARATIVA_COT_PED_TAB_PROD);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_COT_PED_TAB_PROD");
						break;
					}
					default:
					{
						break;
					}
				}
				dispatchEvent(eventEspera);
				var par:ParametrosBusquedaProducto = _eventProductos.parametros;
				evento.isIndividual = true;
				evento.parametros.lineal = par.lineal = selected == true ? 1: 0;
				evento.parametros = par;
				dispatchEvent(evento);
			}
		]]>
	</fx:Script>
</chekbox:CheckBoxPq>
