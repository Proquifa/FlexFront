<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/"
			   xmlns:debug="com.asfusion.mate.utils.debug.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.compras.cobros.EventoConsultaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.finanzas.facturacion.EventoConsultaFacturacion2013;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.compras.cobros.ModeloConsultaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ParametrosBusquedaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.finanzas.facturacion.ModeloConsultaFacturacion2013;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorAccion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ColumnaLineaDTiempoCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ColumnaTiempoProcesoCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ConsultaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ConsultaInspectorCobrosCobrada;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ConsultaInspectorCobrosEntrega;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ConsultaInspectorCobrosMonitoreo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.ConsultaInspectorCobrosRevision;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.GridConsultaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.MenuConsultaCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosAbiertoVsCerrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosCPagoCobrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosCPagoPorCobrar;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosDRC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosETVsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosMedioDPagoProgramado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosNICobrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosNIPorCobrar;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.GraficoCobrosProgramadoVsPorProgramar;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.graficosCobrosETvsFT.GraficoCobrosETVsFT_Secundaria;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.graficosCobrosETvsFT.GraficoCobrosETvsFT_AbiertoVsCerrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.graficosCobrosETvsFT.GraficoCobrosETvsFT_CPagoPorCobrar;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.graficosCobrosETvsFT.GraficoCobrosETvsFT_Clientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.graficosCobrosETvsFT.GraficoCobrosETvsFT_Cobrador;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.cobros.componentesGraficas.graficosCobrosETvsFT.GraficoCobrosETvsFT_DRC;
			
		]]>
	</mx:Script>
	<!--<mate:Debugger level="{Debugger.ALL}"/>-->
	
	<!--Obtner lista de cobros por busqueda rapida y avanzada-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_CONSULTA_COBROS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerCobros"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setListaCobros"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
				
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>		
	</mate:EventHandlers>
	<mate:Injectors	targets="{[ConsultaCobros,GridConsultaCobros,GraficoCobrosNIPorCobrar,GraficoCobrosNICobrado,
					GraficoCobrosCPagoPorCobrar,GraficoCobrosCPagoCobrado,GraficoCobrosAbiertoVsCerrado,
					GraficoCobrosProgramadoVsPorProgramar,GraficoCobrosDRC,GraficoCobrosMedioDPagoProgramado,GraficoCobrosETVsFT,
					GraficoCobrosETvsFT_AbiertoVsCerrado,GraficoCobrosETvsFT_Clientes,GraficoCobrosETvsFT_CPagoPorCobrar,GraficoCobrosETvsFT_DRC,GraficoCobrosETvsFT_Cobrador]}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="listaCobros"
							   targetKey="obtenerListaCobros"/>
	</mate:Injectors>
	
	<mate:EventHandlers type="{EventoEsperar.CONFIGURAR_ESPERA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setControlDeBloqueoPantalla"
							arguments="{[currentEvent.mensaje, currentEvent.tipoEventos,currentEvent.idButtons,currentEvent.error]}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[MenuConsultaCobros,GridConsultaCobros]}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="actualizarEstadoDeEsperaYBloqueo"
							   targetKey="actualizarEsperaYBloqueo"/> 
	</mate:Injectors>	
	
	
	<!--Obtner linea de tiempo cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_LINEA_DTIEMPO}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerLineaTiempoResumen"
								  arguments="{[event.factura,event.fpor]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setListaLineaDTiempo"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="faultError"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors	target="{ColumnaLineaDTiempoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="listaLineaDTiempo"
							   targetKey="obtenerLineaDTiempoCobros"/>
	</mate:Injectors>
	
	<!--Obtner proceso inspector ENTREGA-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INSPECTOR_ENTREGA}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerInspectorEntrega"
								  arguments="{[event.factura,event.cpedido]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setObtenerInspectorEntrega"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="faultErrorEntrega"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors	target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="obtnerInspectorEntrega"
							   targetKey="obtenTiempoProcesoEntrega"/>
	</mate:Injectors>
	
	<!--Obtner proceso inspector REVISION-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INSPECTOR_REVISION}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerInspectorRevision"
								  arguments="{[event.factura,event.cpedido]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setObtenerInspectorRevision"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="faultErrorRevision"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors	target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="obtnerInspectorRevision"
							   targetKey="obtenTiempoProcesoRevision"/>
	</mate:Injectors>
	
	<!--Obtner proceso inspector COBROS-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INSPECTOR_COBROS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerInspectorCobro"
								  arguments="{[event.factura,event.cpedido,event.conCredito]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setObtenerInspectorCobros"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="faultErrorCobro"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="obtnerInspectorCobros"
							   targetKey="recibeTiempoProcesoCobros"/> 
	</mate:Injectors>
	
	<!--Evento para mostrar ocultar tab grafica-->
	<mate:EventHandlers type="{EventoConsultaCobros.MOSTRAR_OCULTAR_TAB_GRAFICAS}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setMostrarOcultaTabGrafica"
							arguments="{event.tabGrafica}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="mostrarOcultaTabGrafica"
							   targetKey="mostrarOcultarTab"/> 
	</mate:Injectors>	
	
	<!--Evento para recibir info de FACTURACION Proceso cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INSPECTOR_FACTURACION}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInspectorFacturacion"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerInspectorFacturacion"
							   targetKey="obtenTiempoProcesoFacturacion"/> 
	</mate:Injectors>
	
	<!--Evento para recibir info de COBRADA Proceso cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTNER_INFO_COBRADA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInspectorCobrada"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtnerInspectorCobrada"
							   targetKey="obtenTiempoProcesoCobrada"/> 
	</mate:Injectors>

	<!--Evento para recibir info de Cancelada Proceso cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INFO_CANCELADA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInspectorCancelada"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerInspectorCancelada"
							   targetKey="obtenTiempoProcesoCancelada"/> 
	</mate:Injectors>
	
	<!--Evento para recibir info de Cancelada Proceso cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INFO_REFACTURADA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInspectorRefacturada"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ColumnaTiempoProcesoCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerInspectorRefacturada"
							   targetKey="obtenTiempoProcesoRefacturada"/> 
	</mate:Injectors>
	
	<!--Evento para recibir info finicio y ffin de ENTREGA Proceso cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INFO_ENTREGA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInfoEntregas"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[ConsultaInspectorCobrosEntrega]}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerInfoEntregas"
							   targetKey="obtenerInfoInspectorEntregas"/> 
	</mate:Injectors>
	
	<!--Evento para recibir info finicio y ffin de REVISION Proceso cobros-->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INFO_REVISION}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInfoRevision"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaInspectorCobrosRevision}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerInfoRevision"
							   targetKey="obtenerInfoInspectorRevision"/> 
	</mate:Injectors>
	
	<!--Evento para recibir info finicio y ffin de COBROS -->
<!--	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_INFO_COBRO}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerInfoCobros"
							arguments="{event.tProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaInspectorCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerInfoCobros"
							   targetKey="obtenerInfoInspectorCobro"/> 
	</mate:Injectors>-->
	
	<!--obtener los Tres rangos de TOTALES  de cobros, presente,pasado, y postpasado -->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_TOTALES_COBROS}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerComparativasDPeriodos"
								  arguments="{event.parametros}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setObtenerTotalesCobros"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="obtenerTotalesCobros"
							   targetKey="obtenerTotalCobros"/>
	</mate:Injectors>
	
	<!--Evento para pasar las condiciones de la busqueda avanzada a la sección de comparativas para así poder realizar busquedas individuales con los 
	mismos parámetros-->
	<mate:EventHandlers type="{EventoConsultaCobros.COPIAR_CONDICIONES_A_TOTALES_INDIVIDUALES}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setCopiarConficionesParaTotales"
							arguments="{event}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerCondicionesParaTotales"
							   targetKey="_InfoCondicionesTotales"/> 
	</mate:Injectors>
	<!--obtener los TOTALES del PASADO  de cobros -->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_TOTALES_COBROS_PASADO}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerComparativasDPeriodos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setObtenerTotalesPasadoCobros"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
				
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
		
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="obtenerTotalesPasadoCobros"
							   targetKey="obtenerTotalCobros"/>
	</mate:Injectors>
	
	<!--obtener los TOTALES del POSTPASADO  de cobros -->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_TOTALES_COBROS_POSTPASADO}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COBROS_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerComparativasDPeriodos"
								  arguments="{event.parametros}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCobros}"
									method="setObtenerTotalesPostPasadoCobros"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}" 
							   sourceKey="obtenerTotalesPostPasadoCobros"
							   targetKey="obtenerTotalCobros"/>
	</mate:Injectors>
	<!--Evento para pasar info a la grafica ETvsFTSecundaria-->
	<mate:EventHandlers type="{EventoConsultaCobros.PASAR_INFO_A_ETVSFT_SECUNDARIA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="pasarInfoAGraficaETvsFT"
							arguments="{event.arrayTemp}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GraficoCobrosETVsFT_Secundaria}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="enviarInfoAGraficaETvsFT"
							   targetKey="obtenerInfoDeGraficaPrincipalETvsFT"/> 
	</mate:Injectors>
	<!--obtener tipo de filtro para graficos secundarios -->
	<mate:EventHandlers type="{EventoConsultaCobros.OBTENER_FILTRO_GRAFICO_SECUNDARIO}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setFiltroGraficoSecundario"
							arguments="{event.tipo}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[GraficoCobrosETvsFT_AbiertoVsCerrado,GraficoCobrosETvsFT_Clientes,GraficoCobrosETvsFT_CPagoPorCobrar,GraficoCobrosETvsFT_DRC,GraficoCobrosETVsFT_Secundaria,GraficoCobrosETvsFT_Cobrador]}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="filtroGraficoSecundario"
							   targetKey="obtenerFiltroGrafico"/> 
	</mate:Injectors>
	
	<!--===========================================================MODIFICACIONES PARA CONSULTAS POR DEMANDA===================================-->
	
	<!--Evento que inyecta la vista seleccionada en el menu-->
	<mate:EventHandlers type="{EventoConsultaCobros.SETTEAR_CURRENT_VISTA_SELECTED}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setSettearSelectedVista"
							arguments="{event.selectedVista}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{MenuConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="enviarVistaSeleccionadaActualmente"
							   targetKey="recibirLaVistaSeleccionada"/> 
	</mate:Injectors>
	
	<!--Evento que setea true o false para actualizar o no la información en la vista seleccionada actualmente-->
	<mate:EventHandlers type="{EventoConsultaCobros.ACTUALIZAR_VISTA_ACTUAL}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setActualizarDatosVistaActual"
							arguments="{event.actualizarVistaCurrent}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridConsultaCobros}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="actualizarLaVistaSeleccionada"
							   targetKey="actualizarVistaActual"/> 
	</mate:Injectors>
	
	<!--/////////////////////////////////////////// ENVIAR FACTURA Y FPOR  //////////////////////////////////////////--> 
	
	<mate:EventHandlers type="{EventoConsultaCobros.ENVIAR_DATOS_DE_FACTURA}">
		<mate:MethodInvoker generator="{ModeloConsultaCobros}"
							method="setObtenerFacturaFpor"
							arguments="{[event.factura, event.fpor]}"/>  <!--ConsultaInspectorCobrosMonitoreo-->
	</mate:EventHandlers>
	<mate:Injectors            targets="{[ConsultaInspectorCobrosMonitoreo,ConsultaInspectorCobrosCobrada]}">
		<mate:PropertyInjector source="{ModeloConsultaCobros}"
							   sourceKey="obtenerFacturaFpor"
							   targetKey="recibirFacturaFpor"/> 
		
	</mate:Injectors> 
</mate:EventMap>
