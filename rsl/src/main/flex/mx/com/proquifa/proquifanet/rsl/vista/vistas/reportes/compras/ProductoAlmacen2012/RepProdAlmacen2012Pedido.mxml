<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:lista ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 xmlns:pqNet="skins.botones.pqNet.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:otros="skins.otros.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.compras.prodAlmacen2012.EventoRepProAlmacen2012;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.ProductoAlmacen;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PartidaPedido;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			
			import spark.events.IndexChangeEvent;
			
			private var _stock:Boolean = false;
			private var _enfocarBool:Boolean = false;
			private var _botonBar:String;
			private var _descripcionAnterior:String;
			private var _arrEnfoque:ArrayCollection;
			private var _arrPedido:ArrayCollection;
			private var _montoTotal:Number;
			private var _piezasTotal:int;
			private var _montoTotalEnfoque:Number;
			private var _piezasTotalEnfoque:int;
			private var _filtros:Object;
			private var _itemSelected:int = -1;
			[Bindable] private var _arrPrincipal:ArrayCollection;
			[Bindable] private var _arrBusquedaFD:ArrayCollection = new ArrayCollection();
			
			public function set recibeFiltro(filtro:Object):void{
				_filtros = filtro;
			}
			
			public function set recibeEtiquetaButonBar(boton:String):void{
				_botonBar = boton;
			}
			
			public function set obtenerProductoAlmacen(producto:ArrayCollection):void{
				if(producto == null) return ;
				_arrBusquedaFD = new ArrayCollection();
				_arrBusquedaFD = producto;
			}
			
			public function set obtenerListaPartidasProdlmacen($lista:ArrayCollection):void{
				if($lista == null) return;
				
				var i:int = 0;
				var _activo:int = 0 ;
				var _bandera:Boolean = false;
				_enfocarBool = false;
				//this.btnEnfoque.visible = this.btnEnfoque.includeInLayout = true;
				this.btnEnfoque.rendererPq = 'enfoque';
				_arrEnfoque = new ArrayCollection();
				_arrPedido = new ArrayCollection();
				
				var arrTemp:ArrayCollection = ObjectUtil.copy($lista) as ArrayCollection;
				var _fechaResultado:Date = new Date(new Date().fullYear,new Date().month,new Date().date);
				
				for( i = 0 ; i<arrTemp.length ; i++){
					if((_botonBar == 'Tránsito') && ((arrTemp[i].tipoFlete == 'Programado') || (arrTemp[i].destinos == 'Stock'))){
						arrTemp.removeItemAt(i);
						i = i - 1; 
					}
					if((_botonBar == 'Programado') && ((arrTemp[i].tipoFlete == 'Flete Express') || (arrTemp[i].tipoFlete == 'Regular') || (arrTemp[i].destinos == 'Stock'))){
						arrTemp.removeItemAt(i);
						i = i - 1; 
					}
					if((_botonBar == 'Stock') && (arrTemp[i].destinos != 'Stock')){
						arrTemp.removeItemAt(i);
						i = i - 1; 
					}
					
					if(_botonBar != 'Stock'){
						var fe:Date =  new Date ((arrTemp[i] as PartidaPedido).FPEntrega.fullYear,(arrTemp[i] as PartidaPedido).FPEntrega.month,(arrTemp[i] as PartidaPedido).FPEntrega.date);
						if (_fechaResultado <= fe) {  //FT
							(arrTemp[i] as PartidaPedido).inTime = "1";
						}else{
							(arrTemp[i] as PartidaPedido).inTime = "0";
						}
					}
				}
				
				if(_filtros != null){
					/* if( _filtros.cliente != '--TODOS--' ){
					for( i = 0; i < arrTemp.length; i++ ){
					(arrTemp[i] as PartidaPedido).numeroFila = i + 1 ;
					if(_filtros.cliente != ( arrTemp[i] as PartidaPedido).nombreCliente ){ 
					arrTemp.removeItemAt( i );	i--;							
					} 
					}
					} */
					if( _filtros.control != '--TODOS--'){
						for( i = 0; i < arrTemp.length; i++ ){
							if((arrTemp[i] as PartidaPedido).enfoque != 'Enfoque'){
								if(((arrTemp[i] as PartidaPedido).estado == 'STOCK') || ((arrTemp[i] as PartidaPedido).estado == 'Despachable') || ((arrTemp[i] as PartidaPedido).estado == 'A destrucción') || ((arrTemp[i] as PartidaPedido).estado == 'No entregado') || ((arrTemp[i] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[i] as PartidaPedido).estado == 'A programacion') || ((arrTemp[i] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[i] as PartidaPedido).estado == 'En entrega') || ((arrTemp[i] as PartidaPedido).estado == 'En inspección')){
									if(_filtros.control == ( arrTemp[i] as PartidaPedido).control ){ 
										//arrTemp.removeItemAt( i );	i--;
										(arrTemp[i] as PartidaPedido).enfoque = 'Enfoque';
										_arrEnfoque.addItem(arrTemp[i]);
									}
								}
							}
						}
					}
					if( _filtros.flete != '--TODOS--' ){
						for( i = 0; i < arrTemp.length; i++ ){
							if((arrTemp[i] as PartidaPedido).enfoque != 'Enfoque'){
								if(((arrTemp[i] as PartidaPedido).estado == 'STOCK') || ((arrTemp[i] as PartidaPedido).estado == 'Despachable') || ((arrTemp[i] as PartidaPedido).estado == 'A destrucción') || ((arrTemp[i] as PartidaPedido).estado == 'No entregado') || ((arrTemp[i] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[i] as PartidaPedido).estado == 'A programacion') || ((arrTemp[i] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[i] as PartidaPedido).estado == 'En entrega') || ((arrTemp[i] as PartidaPedido).estado == 'En inspección')){
									if(_filtros.flete == ( arrTemp[i] as PartidaPedido).tipoFlete ){ 
										//arrTemp.removeItemAt( i );	i--;
										(arrTemp[i] as PartidaPedido).enfoque = 'Enfoque';
										_arrEnfoque.addItem(arrTemp[i]);
									}
								}
							}
						}
					}
					if( _filtros.marca != '--TODOS--' ){
						for( i = 0; i < arrTemp.length; i++ ){
							if((arrTemp[i] as PartidaPedido).enfoque != 'Enfoque'){
								if(((arrTemp[i] as PartidaPedido).estado == 'STOCK') || ((arrTemp[i] as PartidaPedido).estado == 'Despachable') || ((arrTemp[i] as PartidaPedido).estado == 'A destrucción') || ((arrTemp[i] as PartidaPedido).estado == 'No entregado') || ((arrTemp[i] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[i] as PartidaPedido).estado == 'A programacion') || ((arrTemp[i] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[i] as PartidaPedido).estado == 'En entrega') || ((arrTemp[i] as PartidaPedido).estado == 'En inspección')){
									if(_filtros.marca == ( arrTemp[i] as PartidaPedido).fabrica ){ 
										//arrTemp.removeItemAt( i );	i--;
										(arrTemp[i] as PartidaPedido).enfoque = 'Enfoque';
										_arrEnfoque.addItem(arrTemp[i]);
									}
								}
							}
						}
					}
					if( _filtros.pqNet	!= '--TODOS--' ){
						for( i = 0; i < arrTemp.length; i++ ){
							if((arrTemp[i] as PartidaPedido).enfoque != 'Enfoque'){
								if(((arrTemp[i] as PartidaPedido).estado == 'STOCK') || ((arrTemp[i] as PartidaPedido).estado == 'Despachable') || ((arrTemp[i] as PartidaPedido).estado == 'A destrucción') || ((arrTemp[i] as PartidaPedido).estado == 'No entregado') || ((arrTemp[i] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[i] as PartidaPedido).estado == 'A programacion') || ((arrTemp[i] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[i] as PartidaPedido).estado == 'En entrega') || ((arrTemp[i] as PartidaPedido).estado == 'En inspección')){
									if( _filtros.pqNet == ( arrTemp[i] as PartidaPedido).estado ){ 
										//arrTemp.removeItemAt( i );	i--;
										(arrTemp[i] as PartidaPedido).enfoque = 'Enfoque';
										_arrEnfoque.addItem(arrTemp[i]);
									}
								}
							}
						}
					}
					if( _filtros.producto != '--TODOS--' ){
						for( i = 0; i < arrTemp.length; i++ ){
							if((arrTemp[i] as PartidaPedido).enfoque != 'Enfoque'){
								if(((arrTemp[i] as PartidaPedido).estado == 'STOCK') || ((arrTemp[i] as PartidaPedido).estado == 'Despachable') || ((arrTemp[i] as PartidaPedido).estado == 'A destrucción') || ((arrTemp[i] as PartidaPedido).estado == 'No entregado') || ((arrTemp[i] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[i] as PartidaPedido).estado == 'A programacion') || ((arrTemp[i] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[i] as PartidaPedido).estado == 'En entrega') || ((arrTemp[i] as PartidaPedido).estado == 'En inspección')){
									if(_filtros.producto == ( arrTemp[i] as PartidaPedido).manejo ){ 
										//arrTemp.removeItemAt( i );	i--;
										(arrTemp[i] as PartidaPedido).enfoque = 'Enfoque';
										_arrEnfoque.addItem(arrTemp[i]);
									}
								}
							}
						}
					}
					if( _filtros.tipo != '--TODOS--' ){
						for( i = 0; i < arrTemp.length; i++ ){
							if((arrTemp[i] as PartidaPedido).enfoque != 'Enfoque'){
								if(((arrTemp[i] as PartidaPedido).estado == 'STOCK') || ((arrTemp[i] as PartidaPedido).estado == 'Despachable') || ((arrTemp[i] as PartidaPedido).estado == 'A destrucción') || ((arrTemp[i] as PartidaPedido).estado == 'No entregado') || ((arrTemp[i] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[i] as PartidaPedido).estado == 'A programacion') || ((arrTemp[i] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[i] as PartidaPedido).estado == 'En entrega') || ((arrTemp[i] as PartidaPedido).estado == 'En inspección')){
									if( _filtros.tipo == ( arrTemp[i] as PartidaPedido).tipo ){
										(arrTemp[i] as PartidaPedido).enfoque = 'Enfoque';
										_arrEnfoque.addItem(arrTemp[i]);
										//arrTemp.removeItemAt( i );	i--;							
									}
								} 
							}
						}
					}
				}
				
				for(var d:int = 0; d<arrTemp.length ; d++){
					(arrTemp[d] as PartidaPedido).vieneD = 'Transito';
					if(((arrTemp[d] as PartidaPedido).estado == 'STOCK') || ((arrTemp[d] as PartidaPedido).estado == 'Despachable') || ((arrTemp[d] as PartidaPedido).estado == 'A destrucción') 
						|| ((arrTemp[d] as PartidaPedido).estado == 'No entregado') || ((arrTemp[d] as PartidaPedido).estado == 'En asignacion') || ((arrTemp[d] as PartidaPedido).estado == 'A programacion') 
						|| ((arrTemp[d] as PartidaPedido).estado == 'A facturacion') || ((arrTemp[d] as PartidaPedido).estado == 'En entrega') || ((arrTemp[d] as PartidaPedido).estado == 'En inspección') 
						|| ((arrTemp[d] as PartidaPedido).estado == 'A surtir')){
						
						(arrTemp[d] as PartidaPedido).info = true;
						if(_filtros == null || _filtros.filtro == false ) (arrTemp[d] as PartidaPedido).enfoque = 'Enfoque';
						
						if((arrTemp[d] as PartidaPedido).enfoque == 'Enfoque'){
							_activo += 1;
							if((_activo == 1) && (arrTemp.length - 1 == d)){
								(arrTemp[d] as PartidaPedido).activo = -1;
							}else if((_activo > 1) && (arrTemp.length - 1 == d)){ 
								(arrTemp[d] as PartidaPedido).activo = 0;
							}else if(_activo > 1){
								(arrTemp[d] as PartidaPedido).activo = -2;
							}else{
								(arrTemp[d] as PartidaPedido).activo = _activo;
							}	
							_bandera = true;
						}else{
							_activo = 0;
						}
						
						if((arrTemp[d] as PartidaPedido).enfoque == null && _bandera == true && _activo == 0){
							(arrTemp[d - 1] as PartidaPedido).activo = -1;
							_bandera = false;							
						} 
						
						if(_filtros == null || _filtros.filtro == false)  _arrEnfoque.addItem(arrTemp[d]);	
					}else{
						if(_activo == 1 && _bandera == true){
							(arrTemp[d - 1] as PartidaPedido).activo = -1;
							_bandera = false;
						}
						if(_activo > 1 && _bandera == true){
							(arrTemp[d - 1] as PartidaPedido).activo = 0;
							_bandera = false;
						}
						
						_activo = 0;
						(arrTemp[d] as PartidaPedido).activo = _activo;
						(arrTemp[d] as PartidaPedido).info = false;
					}
				} 
				

				var _arrTempoEnfoque:ArrayCollection = new ArrayCollection;
				var _arrTempoPedido:ArrayCollection = new ArrayCollection;
				for(var r:int = 0; r<arrTemp.length ; r++){
					if((arrTemp[r] as PartidaPedido).info == true){
						_arrTempoEnfoque.addItem(arrTemp[r]);
					}else{
						_arrTempoPedido.addItem(arrTemp[r]);
					}
				}
				
				arrTemp = new ArrayCollection();
				
				for(var a:int = 0;  a<_arrTempoEnfoque.length ; a++){
					arrTemp.addItem(_arrTempoEnfoque[a]);
				}
				for(var b:int = 0; b<_arrTempoPedido.length ; b++){
					arrTemp.addItem(_arrTempoPedido[b]);
				}
				
				_montoTotal = 0;
				_piezasTotal = 0;
				for(var k:int = 0 ; k<arrTemp.length ; k++){
					(arrTemp[k] as PartidaPedido).numeroFila = k+1;
					_montoTotal += (arrTemp[k] as PartidaPedido).precioUnitarioDLSTotal;
					_piezasTotal += (arrTemp[k] as PartidaPedido).cantidadPedida;
				}
				
				_arrPrincipal = new ArrayCollection();
				_arrPrincipal = ObjectUtil.copy( arrTemp ) as ArrayCollection;
				//var arrTemporal:ArrayCollection = ObjectUtil.copy( arrTemp ) as ArrayCollection;
				
				var objeto:PartidaPedido = new PartidaPedido();
				objeto.ultimoLista = true;
				objeto.totalPartidas = arrTemp.length;
				objeto.totalMonto = _montoTotal;
				objeto.totalPiezas = _piezasTotal;
				objeto.info = false;
				_arrPrincipal.addItem(objeto);
				
				this._arrPedido = ObjectUtil.copy(_arrPrincipal) as ArrayCollection;
				//this.lstPartidas.dataProvider = ObjectUtil.copy( _arrPrincipal ) as ArrayCollection;
				
				if(_arrBusquedaFD.length != 0){
					for(var g:int = 0; g<_arrPrincipal.length ; g++){
						if((_arrPrincipal[g] as PartidaPedido).folioFD == (_arrBusquedaFD[0] as ProductoAlmacen).folioFD){
							this.lstPartidas.selectedIndex = g ;
							break;
						}
					}
				}else{
					for(var f:int = 0; f<_arrPrincipal.length ; f++){
						if((_arrPrincipal[f] as PartidaPedido).info == true){
							this.lstPartidas.selectedIndex = f ;
							break;
						}
					}	
				}
				
				if (lstPartidas.selectedItem != null){
					if((lstPartidas.selectedItem as PartidaPedido).destinos == 'Stock'){
						lblNombreCliente.text = (lstPartidas.selectedItem as PartidaPedido).descripcion;
						lblNombreCliente.toolTip = (lstPartidas.selectedItem as PartidaPedido).descripcion;
						this.btnEnfoque.visible = this.btnEnfoque.includeInLayout = false;
					}else{
						lblNombreCliente.text = 'P-' + (lstPartidas.selectedItem as PartidaPedido).cpedido;
						lblNombreCliente.toolTip = '';
					}
				}
				_montoTotalEnfoque = 0;
				_piezasTotalEnfoque = 0;
				for( var j:int = 0; j< _arrEnfoque.length; j++ ){
					_montoTotalEnfoque += (_arrEnfoque[j] as PartidaPedido).precioUnitarioDLSTotal;
					_piezasTotalEnfoque += (_arrEnfoque[j] as PartidaPedido).cantidadPedida;
					(_arrEnfoque[j] as PartidaPedido).numeroFila = j+1;
					(_arrEnfoque[j] as PartidaPedido).fondo = 'false';
					if(_arrEnfoque.length - 1 == j){
						(_arrEnfoque[j] as PartidaPedido).respuesta = 'enfoque';
					}
				}
				
				var objetoEnfoque:PartidaPedido = new PartidaPedido();
				objetoEnfoque.ultimoLista = true;
				objetoEnfoque.totalPartidas = _arrEnfoque.length;
				objetoEnfoque.totalMonto = _montoTotalEnfoque;
				objetoEnfoque.totalPiezas = _piezasTotalEnfoque;
				objetoEnfoque.info = false;
				_arrEnfoque.addItem(objetoEnfoque);
				
				obtenInfoGeneral();
			}
			public function set obtenerErrorPartidaPedido($error:Boolean):void{
				if($error != false ){ 
					_arrBusquedaFD = new ArrayCollection();
					var arrTemp:ArrayCollection = new ArrayCollection();
					
					var objeto:PartidaPedido = new PartidaPedido();
					objeto.ultimoLista = true;
					objeto.totalPartidas = arrTemp.length;
					objeto.totalMonto = 0;
					objeto.totalPiezas = 0;
					arrTemp.addItem(objeto);
					
					lstPartidas.dataProvider = arrTemp;
					lblNombreCliente.text = "";
					
					this.lstPartidas.selectedIndex = 0;
					obtenInfoGeneral();
				}
			}
			
			public function set recibeListaPartidasProdAlamacen( $evt:ArrayCollection):void{
				trabajaVista( $evt );
			}
			private function trabajaVista($evt:ArrayCollection):void{
				var _contador:int = 0 ;
				var _bandera:Boolean = false;
				this.btnEnfoque.visible = this.btnEnfoque.includeInLayout = true;
				_arrEnfoque = new ArrayCollection();
				_arrPedido = new ArrayCollection();
				
				if( $evt == null ){
					lblNombreCliente.text = "";
					lstPartidas.dataProvider = new ArrayCollection();
					return;
				}
				
				_montoTotal = 0;
				_piezasTotal = 0;
				for( var i:int = 0; i < $evt.length; i++ ){
					if($evt[i].folioOC == null){
						$evt[i].ocRelacionada != null ? $evt[i].folioOC = $evt[i].ocRelacionada : $evt[i].folioOC = $evt[i].folioOC;
					}
					($evt[i] as ProductoAlmacen).vieneD = 'Stock';
					($evt[i] as ProductoAlmacen).numeroDeFila = i+1;
					_montoTotal += ($evt[i] as ProductoAlmacen).producto.costo;
					_piezasTotal += ($evt[i] as ProductoAlmacen).cantidad;
				}
				
				this.lstPartidas.dataProvider = new ArrayCollection();
				
				this._arrPedido = ObjectUtil.copy($evt) as ArrayCollection;
				this.lstPartidas.dataProvider = ObjectUtil.copy( $evt ) as ArrayCollection;
				var $ultimoProducto:ProductoAlmacen = new ProductoAlmacen();
				$ultimoProducto.totalProductosLista =  $evt.length;
				$ultimoProducto.vieneD = 'Stock';
				$ultimoProducto.info = false;
				$ultimoProducto.totalMonto = _montoTotal;
				$ultimoProducto.totalPiezas = _piezasTotal;
				this.lstPartidas.dataProvider.addItem( $ultimoProducto );
				
				if( this.lstPartidas.dataProvider.length > 1 ){
					this.lstPartidas.selectedIndex = 0;
					
					if((this.lstPartidas.dataProvider[0] as ProductoAlmacen).destino == 'Stock'){
						lblNombreCliente.text = (this.lstPartidas.dataProvider[0] as ProductoAlmacen).descripcionProducto;
						lblNombreCliente.toolTip = (this.lstPartidas.dataProvider[0] as ProductoAlmacen).descripcionProducto;
						this.btnEnfoque.visible = this.btnEnfoque.includeInLayout = false;
					}else{
						lblNombreCliente.text = 'P-' + (this.lstPartidas.dataProvider[0] as ProductoAlmacen).piRelacionada; 
					}
				}else{
					lblNombreCliente.text = '';
				}
				
				for( var d:int = 0; d < _arrEnfoque.length; d++ ){
					(_arrEnfoque[d] as ProductoAlmacen).numeroDeFila = d+1;
					(_arrEnfoque[d] as ProductoAlmacen).ultimo = 'false';
					if(_arrEnfoque.length - 1 == d){
						(_arrEnfoque[d] as ProductoAlmacen).ubicacion = 'enfoque';
					}
				}
				
				obtenInfoGeneral();
			}
			private function obtenInfoGeneral(event:IndexChangeEvent = null):void{
				if(event != null && lstPartidas.dataProvider.length > 0 ){
					if( event.newIndex != -1 && this.lstPartidas.dataProvider[event.newIndex].info != true){
						event.preventDefault();
					}
				}
				/* if((this.lstPartidas.selectedItem as PartidaPedido).info == false){
				this.lstPartidas.selectedIndex = _itemSelected
				return;
				} */
				
				var evt:EventoRepProAlmacen2012 = new EventoRepProAlmacen2012(EventoRepProAlmacen2012.OBTENER_INFO_GENERAL);
				_itemSelected = this.lstPartidas.selectedIndex;
				if(this.lstPartidas.selectedIndex != -1 && this.lstPartidas.selectedItem.vieneD != null && lstPartidas.dataProvider.length >= 1 ){ 
					if(this.lstPartidas.selectedItem.vieneD == 'Transito'){
						evt.folioDesignado = (this.lstPartidas.selectedItem as PartidaPedido).folioFD ;	
					}else{
						evt.folioDesignado = (this.lstPartidas.selectedItem as ProductoAlmacen).folioFD ;
					}
				} 
				dispatchEvent( evt );
			}
			public function set obtenerError($evt:Boolean):void{
				if($evt ){ 
					lstPartidas.dataProvider = new ArrayCollection();
					lblNombreCliente.text = "";
					this.trabajaVista(lstPartidas.dataProvider as ArrayCollection); 
				}
			}
			protected function enfoqueHandler(event:MouseEvent):void{
				if( _enfocarBool ){
					_enfocarBool = false;	
					this.lstPartidas.dataProvider = ObjectUtil.copy( _arrPedido ) as ArrayCollection;
					for(var g:int = 0; g<_arrPedido.length ; g++){
						if((_arrPedido[g] as PartidaPedido).info == true){
							this.lstPartidas.selectedIndex = g ;
							break;
						}
					}
					obtenInfoGeneral();
				}else{
					_enfocarBool = true;
					this.lstPartidas.dataProvider = ObjectUtil.copy( _arrEnfoque ) as ArrayCollection;
					this.lstPartidas.selectedIndex = 0;
					obtenInfoGeneral();
				}
				btnEnfoque.rendererPq =! _enfocarBool ? "enfoque" : "enfoquedown"; 
			}
			
			protected function caretChangeHandler(event:IndexChangeEvent):void
			{
				if(this.lstPartidas.selectedIndex != -1 ){ //&& this.lstPartidas.selectedItem.vieneD != 'Stock'
					if(event != null && lstPartidas.dataProvider.length > 0 ){
						if( event.newIndex != -1 && this.lstPartidas.dataProvider[event.newIndex].info != true){
							event.preventDefault();
						}
					}	
				}
			}
			
			protected function changingHandler(event:IndexChangeEvent):void
			{
				if(this.lstPartidas.selectedIndex != -1  ){ //&& this.lstPartidas.selectedItem.vieneD != 'Stock'
					if(event != null && lstPartidas.dataProvider.length > 0 ){
						if( event.newIndex != -1 && this.lstPartidas.dataProvider[event.newIndex].info != true){
							event.preventDefault();
						}
					}	
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Rect height="100%" right="0" left="0">
		<s:fill>
			<s:SolidColor color="0xf8f8f8"/>
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" height="100%"  paddingTop="10" paddingLeft="17" paddingRight="10" gap="0">
		
		<s:HGroup width="100%" height="50" verticalAlign="middle" paddingRight="15">
			<s:Label fontSize="20" width="100%" textAlign="center" verticalAlign="middle" id="lblNombreCliente" maxDisplayedLines="1"  color="0x{catalogoColores.LABEL_GRIS }" /> 
			<pqNet:botonPqNetLargo id="btnEnfoque"  rendererPq="enfoque" click="enfoqueHandler(event)" />
		</s:HGroup>
		
		<otros:division width="100%"/>
		<s:List id="lstPartidas" itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.compras.ProductoAlmacen2012.itemRenderer.RepoProdAlamcen2012IRPedido" caretChange="caretChangeHandler(event)" changing="changingHandler(event)"
				width="100%" borderVisible="false"  horizontalScrollPolicy="off" height="100%" selectionColor="0xeaeaea" contentBackgroundColor="0xf8f8f8" change="obtenInfoGeneral(event)" dataProvider="{_arrPrincipal}"/>
		
	</s:VGroup>	
</s:Group>