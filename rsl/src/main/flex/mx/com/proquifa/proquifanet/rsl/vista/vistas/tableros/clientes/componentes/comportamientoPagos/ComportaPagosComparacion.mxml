<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorComparacionTableroClientes xmlns:fx="http://ns.adobe.com/mxml/2009" 
									xmlns:s="library://ns.adobe.com/flex/spark"
									xmlns:mx="library://ns.adobe.com/flex/mx" 
									xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
									xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*" 
									xmlns:otros="skins.otros.*"
									titulo="COMPORTAMIENTO PAGOS" circulosComportamientoPagosBool="true"
									width="100%" height="100%"
									>
	
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600"/>
		<mx:SolidColorStroke id = "s1" color="0x3b98af" weight="2"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
		
		<mx:SolidColorStroke id = "sA" color="0x3b98af" weight="6"/>
		<mx:SolidColorStroke id = "sB" color="0x666666" weight="4"/>
		<mx:SolidColorStroke id = "sC" color="0xBABABA" weight="2"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import skins.catalogos.catalogoColores;
			
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			
			private var _listaMensual:ArrayCollection = new ArrayCollection(["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"]);
			
			private var _listaQuincenal:ArrayCollection = new ArrayCollection([{11:"11",valor:"1ra. Enero"},{12:"12",valor:"2da. Enero"},{21:"21",valor:"1ra. Febrero"},{22:"22",valor:"2da. Febrero"},{31:"31",valor:"1ra. Marzo"},{32:"32",valor:"2da. Marzo"},{41:"41",valor:"1ra. Abril"},
				{42:"42",valor:"2da. Abril"},{51:"51",valor:"1ra. Mayo"},{52:"52",valor:"2da. Mayo"},{61:"61",valor:"1ra. Junio"},{62:"62",valor:"2da. Junio"},{71:"71",valor:"1ra. Julio"},{72:"72",valor:"2da. Julio"},{81:"81",valor:"1ra. Agosto"},{82:"82",valor:"2da. Agosto"},
				{91:"91",valor:"1ra. Septiembre"},{92:"92",valor:"2da. Septiembre"},{101:"101",valor:"1ra. Octubre"},{102:"102",valor:"2da. Octubre"},{111:"111",valor:"1ra. Noviembre"},{112:"112",valor:"2da. Noviembre"},{121:"121",valor:"1ra. Diciembre"},{122:"122",valor:"2da. Diciembre"}]);
			
			public function set recibeLinealComportamientoPagos( $lista:ArrayCollection ):void
			{
				if($lista == null )
					return;
				
				_linealArrGrafica = $lista;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "COMPORTAMIENTO_PAGOS_0") );
				myChart1.dataProvider = iniciarGrafica( _linealArrGrafica  );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart4.dataProvider = arrMinisChart;
				myChart5.dataProvider = arrMinisChart;
			}
			
			private function filtrarPeriodos( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objetoPeriodo1:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "COMPORTAMIENTO_PAGOS_0") );
				var objetoPeriodo2:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "COMPORTAMIENTO_PAGOS_1") );
				var objetoPeriodo3:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "COMPORTAMIENTO_PAGOS_2") );
				var objetoPeriodo4:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "COMPORTAMIENTO_PAGOS_4") );
				var objetoPeriodo5:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "COMPORTAMIENTO_PAGOS_5") );
				objetoPeriodo1.etiquetaX = objetoPeriodo1.mes = _event.labelPeriodo1;
				objetoPeriodo2.etiquetaX = objetoPeriodo2.mes = _event.labelPeriodo2;
				objetoPeriodo3.etiquetaX = objetoPeriodo3.mes = _event.labelPeriodo3;
				objetoPeriodo4.etiquetaX = objetoPeriodo4.mes = _event.labelPeriodo4;
				objetoPeriodo5.etiquetaX = objetoPeriodo5.mes = _event.labelPeriodo5;
				arrReturn.addItem( objetoPeriodo5 );
				arrReturn.addItem( objetoPeriodo4 );
				arrReturn.addItem( objetoPeriodo3 );
				arrReturn.addItem( objetoPeriodo2 );
				arrReturn.addItem( objetoPeriodo1 );
				return arrReturn;
			}
			
			private function generateObjectItemBarChart( $lista:ArrayCollection ):Object
			{
				var objetoReturn:Object = new Object();
				objetoReturn.mes = ""; 
				objetoReturn.montoPorCobrar = 0;
				objetoReturn.montoCobrado = 0;
				objetoReturn.tasaCobranza = 0;
				
				for( var m:int = 0; m < $lista.length; m++ )
				{
					var resumen:ResumenConsulta = $lista[m] as ResumenConsulta;
					if( resumen.conceptoResultado == "Por Cobrar")
					{
						objetoReturn.montoPorCobrar += resumen.total;
					}
					else if( resumen.conceptoResultado == "Cobrada")
					{
						objetoReturn.montoCobrado += resumen.total;
					}
					
					objetoReturn.montoPorCobrarLabel =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objetoReturn.montoPorCobrar ) );
					objetoReturn.montoCobradoLabel =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objetoReturn.montoCobrado ) );
				}
				
				if( isNaN( objetoReturn.tasaCobranza ) )
				{
					objetoReturn.tasaCobranza = 0;	
				}
				return objetoReturn;
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object = new Object();
				var cuenta:int = 1;
				var resumen:ResumenConsulta;
				var m:int;
				var tasaCo:Number;
				
				if(_event != null && _event.parametros.periodo.toLowerCase() == "quincenal")
				{
					objeto = new Object();
					objeto.numeroMes = cuenta;
					objeto.mes = _listaQuincenal[_event.parametros.rangoMinMes].valor;
					objeto.montoPorCobrar = 0;
					objeto.montoCobrado = 0;
					objeto.tasaCobranza = 0;
					objeto.tasaCobranza_0 = 0;
					objeto.tasaCobranza_1 = 0;
					objeto.tasaCobranza_2 = 0;
					
					for( m = 0; m < $lista.length; m++ )
					{
						resumen = $lista[m] as ResumenConsulta;
						if( resumen.conceptoResultado == "Por Cobrar")
						{
							objeto.montoPorCobrar += resumen.total;
						}
						else if( resumen.conceptoResultado == "Cobrada")
						{
							objeto.montoCobrado += resumen.total;
						}
						
						tasaCo = 0;
						tasaCo = ( objeto.montoCobrado /(objeto.montoCobrado + objeto.montoPorCobrar)) *100;
						
						if( !isNaN(tasaCo) )
						{
							if( resumen.etiqueta == "COMPORTAMIENTO_PAGOS_0" )
								objeto.tasaCobranza_0 = tasaCo;
							if( resumen.etiqueta == "COMPORTAMIENTO_PAGOS_1" )
								objeto.tasaCobranza_1 = tasaCo;
							if( resumen.etiqueta == "COMPORTAMIENTO_PAGOS_2" )
								objeto.tasaCobranza_2 = tasaCo;
							
							objeto.tasaCobranza = tasaCo;
						}
					}
					arrReturn.addItem(objeto);
				}
				else
				{
					while( cuenta < 13)
					{
						if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
						{
							objeto = new Object();
							objeto.numeroMes = cuenta;
							objeto.mes = _listaMensual[cuenta -1];
							objeto.montoPorCobrar = 0;
							objeto.montoCobrado = 0;
							objeto.tasaCobranza = 0;
							objeto.tasaCobranza_0 = 0;
							objeto.tasaCobranza_1 = 0;
							objeto.tasaCobranza_2 = 0;
							
							for( m = 0; m < $lista.length; m++ )
							{
								resumen = $lista[m] as ResumenConsulta;
								if(cuenta == resumen.mes)
								{ 
									if( resumen.conceptoResultado == "Por Cobrar")
									{
										objeto.montoPorCobrar += resumen.total;
									}
									else if( resumen.conceptoResultado == "Cobrada")
									{
										objeto.montoCobrado += resumen.total;
									}
									
									tasaCo = 0;
									tasaCo = ( objeto.montoCobrado /(objeto.montoCobrado + objeto.montoPorCobrar)) *100;
									
									if( !isNaN(tasaCo) )
									{
										if( resumen.etiqueta == "COMPORTAMIENTO_PAGOS_0" )
											objeto.tasaCobranza_0 = tasaCo;
										if( resumen.etiqueta == "COMPORTAMIENTO_PAGOS_1" )
											objeto.tasaCobranza_1 = tasaCo;
										if( resumen.etiqueta == "COMPORTAMIENTO_PAGOS_2" )
											objeto.tasaCobranza_2 = tasaCo;
										
										objeto.tasaCobranza = tasaCo;
									}
								}
							}
							arrReturn.addItem(objeto);
						}
						cuenta++;
					}
				}
				return arrReturn;
			}
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			
			
			public function set recibirFiltros( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "COMPORTAMIENTO_PAGOS_0") );
				myChart1.dataProvider = iniciarGrafica( _linealArrGrafica  );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart4.dataProvider = arrMinisChart;
				myChart5.dataProvider = arrMinisChart;
			}
			
			public function set recibirFiltrosIndividual( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "COMPORTAMIENTO_PAGOS_0") );
				myChart1.dataProvider = iniciarGrafica( _linealArrGrafica  );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart4.dataProvider = arrMinisChart;
				myChart5.dataProvider = arrMinisChart;
			}
			
			private function formateoEje($valor:Number, valorPrevio:Object, eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String{
				return $etiqueta.toString().toUpperCase();
			}
			
		]]>
	</fx:Script>
	<comun:contenido>
		<s:VGroup width="100%" height="100%" horizontalAlign="center" >
			<!-- CHART TODO-->
			<mx:ColumnChart height="100%" width="100%" id="myChart" 
							dataTipRenderer="{ComportaPagosToolTip}"
							mouseSensitivity="5" 
							showDataTips="true"
							showDataTipTargets="false"
							dataTipMode="single"
							paddingRight="30" paddingLeft="20" paddingTop="20"
							paddingBottom="40"
							seriesFilters="[]"
							fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal"
							>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieCantidad" 
										 yField="montoPorCobrar"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 showDataEffect="{fxInterpolateIn}"
										 />
						<mx:ColumnSeries id="serieCobradas" 
										 yField="montoCobrado" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
					<mx:LineSeries 
						id="myChartLine"
						yField="tasaCobranza"
						lineStroke="{s1}"
						showDataEffect="{fxInterpolateIn}" >
						<mx:verticalAxis>
							<mx:LinearAxis id="v1"/>
						</mx:verticalAxis>
					</mx:LineSeries>
					<mx:PlotSeries yField="tasaCobranza"  showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<fx:Script>
										<![CDATA[
											import mx.charts.series.items.PlotSeriesItem;
											import skins.catalogos.catalogoColores;
											
										]]>
									</fx:Script>
									<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
										<s:fill>
											<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
										</s:fill>
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
						<mx:verticalAxis>
							<mx:LinearAxis id="v2"/>
						</mx:verticalAxis>
					</mx:PlotSeries>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="pagosMes" categoryField="mes" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="ventasDLS" labelFunction="formateoEje" autoAdjust="false" padding="1"  minimum="0"/>
				</mx:verticalAxis>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{pagosMes}" axisStroke="{trazoGruezo}" tickPlacement="none"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
					<mx:AxisRenderer axis="{v1}" showLine="false" showLabels="false" tickPlacement="none" />
					<mx:AxisRenderer axis="{v2}" showLine="false" showLabels="false" tickPlacement="none" />
				</mx:horizontalAxisRenderers>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{ventasDLS}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels"/>
					<mx:AxisRenderer axis="{v1}" showLine="false" showLabels="false" tickPlacement="none" styleName="axisVerticalLabels"/>
					<mx:AxisRenderer axis="{v2}" showLine="false" showLabels="false" tickPlacement="none" styleName="axisVerticalLabels"/>
				</mx:verticalAxisRenderers>
			</mx:ColumnChart>
			
			<otros:division width="80%" />
			
			<!-- CHART LINEAS -->
			<mx:LineChart height="100%" width="100%" id="myChart1" 
						  dataTipRenderer="{ComportaPagosToolTip}"
						  mouseSensitivity="5" 
						  showDataTips="true"
						  showDataTipTargets="false"
						  dataTipMode="single"
						  paddingRight="30" paddingLeft="20" paddingTop="20"
						  seriesFilters="[]"
						  >
				<mx:series>
					<mx:LineSeries 
						yField="tasaCobranza_0" 
						xField="mes"
						width="100%"
						form="segment" 
						lineStroke="{sA}" 
						showDataEffect="{fxInterpolateIn}" />
					<mx:LineSeries 
						yField="tasaCobranza_1" 
						xField="mes" 
						width="100%"
						form="segment" 
						lineStroke="{sB}" 
						showDataEffect="{fxInterpolateIn}" />
					<mx:LineSeries 
						yField="tasaCobranza_2" 
						xField="mes" 
						width="100%"
						form="segment" 
						lineStroke="{sC}" 
						showDataEffect="{fxInterpolateIn}" />
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="pagosMes2" categoryField="mes" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="ventasDLS2" labelFunction="formateoEje" autoAdjust="false" padding="1"  minimum="0"/>
				</mx:verticalAxis>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{pagosMes2}" axisStroke="{trazoGruezo}" tickPlacement="none" showLine="true"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction" />
				</mx:horizontalAxisRenderers>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{ventasDLS2}" showLine="false" showLabels="false" tickPlacement="none" styleName="axisVerticalLabels"/>
				</mx:verticalAxisRenderers>
			</mx:LineChart>
			
		</s:VGroup>  
	</comun:contenido>
	<comun:espacioB>
		<s:VGroup width="100%" height="100%" horizontalAlign="center" paddingBottom="70" >
			<!-- CHART 1 -->
			<componentes:TituloChartMaxTablero width="100%" text="COBRADA" />
			<mx:ColumnChart width="100%" height="100%" id="myChart4"
							showDataTips="true" 
							showDataTipTargets="false"
							dataTipRenderer="{ComportaPagosToolTip}"
							mouseSensitivity="5" 
							dataTipMode="single"  
							columnWidthRatio=".5"
							seriesFilters="[]"
							paddingRight="40" paddingLeft="20" paddingTop="20"
							>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries
							yField="montoCobrado" 
							showDataEffect="{fxInterpolateIn}"
							itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
							/>
					</mx:ColumnSet>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vMes1" categoryField="etiquetaX" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad1" baseAtZero="true" title="Cantidad de partidas" labelFunction="formateoEje"/>
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad1}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vMes1}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
				</mx:horizontalAxisRenderers>
			</mx:ColumnChart>
			
			<otros:division width="80%" />
			<!-- CHART 2 -->
			<componentes:TituloChartMaxTablero width="100%" text="POR COBRAR" />
			<mx:ColumnChart width="100%" height="100%" id="myChart5"
							showDataTips="true" 
							showDataTipTargets="false"
							dataTipRenderer="{ComportaPagosToolTip}"
							mouseSensitivity="5" 
							dataTipMode="single"  
							columnWidthRatio=".5"
							seriesFilters="[]"
							paddingRight="40" paddingLeft="20" paddingTop="20"
							>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries
							yField="montoPorCobrar"
							showDataEffect="{fxInterpolateIn}"
							itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
							/>
					</mx:ColumnSet>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vMes2" categoryField="etiquetaX" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad2" baseAtZero="true" title="Cantidad de partidas" labelFunction="formateoEje"/>
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad2}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vMes2}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}" tickPlacement="none"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
				</mx:horizontalAxisRenderers>
			</mx:ColumnChart>
			
		</s:VGroup>
	</comun:espacioB>
</comun:ContenedorComparacionTableroClientes>
