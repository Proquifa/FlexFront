<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 
		 autoDrawBackground="false"
		 mouseOut="mouseOutHandler()"
		 hideEffect="{fxFade}">
	<fx:Declarations>	
		<s:Fade id="fxFade" duration="200" alphaFrom="1" alphaTo="0"/>
		<s:SolidColor id="s1" color="0x{catalogoColores.LABEL_NEGRO}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.charts.series.items.LineSeriesItem;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.events.FlexEvent;
			import mx.formatters.NumberFormatter;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable] private var _mes:String="";
			[Bindable] private  var _monto:String="";
			
			override public function set data(value:Object):void
			{
				var hd:HitData = value as HitData;
				var montoXCobrar:Number = Number( value.item.montoPorCobrar );
				var montoCobrado:Number = Number( value.item.montoCobrado );
				var total:Number = montoXCobrar + montoCobrado;
				
				var mixXCobrar:Number = Number( value.item.mixmontoPorCobrar );
				var mixCobrado:Number = Number( value.item.mixmontoCobrado );
				var mixTotal:Number = mixXCobrar + mixCobrado;
				var mesStr:String = String(value.item.mes).toUpperCase() != 'UNDEFINED' ? String(value.item.mes).toUpperCase(): 'ANUAL';
				if(value.element.yField == "montoPorCobrar")
				{
					_mes =  'xC\n' + mesStr ;
					_monto = "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(montoXCobrar)
						+'\n% '+ porcentaje(montoXCobrar, total);
				}
				else if( value.element.yField == "tasaCobranza" )
				{
					_mes =  mesStr;
					_monto = (value.item.tasaCobranza as Number).toFixed(2) + " %";
				}
				else if( value.element.yField == "tasaCobranza_0" )
				{
					_mes =  mesStr;
					_monto = (value.item.tasaCobranza_0 as Number).toFixed(2) + " %";
				}
				else if( value.element.yField == "tasaCobranza_1" )
				{
					_mes =  mesStr;
					_monto = (value.item.tasaCobranza_1 as Number).toFixed(2) + " %";
				}
				else if( value.element.yField == "tasaCobranza_2" )
				{
					_mes =  mesStr;
					_monto = (value.item.tasaCobranza_2 as Number).toFixed(2) + " %";
				}
				else if(value.element.yField == "montoCobrado")
				{
					_mes =  'C\n'+ mesStr;
					_monto = "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(montoCobrado)
						+'\n% '+ porcentaje(montoCobrado, total);
				}
				else if(value.element.yField == "mixmontoCobrado")
				{
					_monto = 'C\n'+"$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(mixCobrado)
						+ '\n% '+ porcentaje(mixCobrado, mixTotal);
				}
				else if(value.element.yField == "mixmontoPorCobrar")
				{
					_monto = 'xC\n'+"$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(mixXCobrar)
						+ '\n% '+ porcentaje(mixXCobrar, mixTotal);
				}
			}
			
			protected function porcentaje($cantidad:Number, $total:Number):String
			{
				return Number( ($cantidad*100)/$total).toFixed(2);
			}
			
			override public function move(x:Number, y:Number):void
			{
				super.move(x+4, y + 25);
			}  
			
			protected function removerToolTip():void
			{
				//trace('delete');
				visible = false;
				includeInLayout = false;
			}
			
			private var idTimeOut:uint;
			
			protected function mouseOutHandler():void
			{
				//trace('comienza timer');
				clearInterval( idTimeOut );
				idTimeOut = setTimeout( removerToolTip, 4500);
			}
			
		]]>
	</fx:Script>
	<s:Ellipse width="80" height="80" verticalCenter="0" horizontalCenter="0" fill="{s1}" alpha=".6" />
	<s:Label verticalAlign="middle" text="{_mes+'\n'+_monto}" horizontalCenter="0" verticalCenter="0" fontSize="10" fontFamily="Helvetica" fontWeight="bold" fontStyle="normal" color="0x{catalogoColores.LABEL_BLANCO}" textAlign="center"/>
</s:ItemRenderer>
