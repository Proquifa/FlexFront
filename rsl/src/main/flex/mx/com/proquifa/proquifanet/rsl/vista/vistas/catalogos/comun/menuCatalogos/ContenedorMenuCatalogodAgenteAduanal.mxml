<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:otros="skins.otros.*" 
		 xmlns:shaders="skins.skin.shaders.*"
		 width="100%" height="100%"
		 >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.agenteAduanal.EventoCatAgenteAduanalGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.EventoCatClientes_General;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.EventoCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.AgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.comun.GroupMenu;
			import mx.core.IVisualElement;
			
			import skins.catalogos.catalogoIconosBotoneras;
			
			[Bindable] private var _proveedorSeleccionado:Proveedor;
			[Bindable] private var _clienteSeleccionado:Cliente;
			[Bindable] private var _agenteAduanalSeleccionado:AgenteAduanal;
			[Bindable] private var _size:Number=357;
			
			private var roles:ArrayCollection = DatosGlobales.getInstance()._usuario.roles;
			private var _tituloMenu:String
			private var _itemVisual:IVisualElement;
			private var _itemVisualMin:IVisualElement;
			private var _endX:Number;
			private var _startX:Number;
			private var dummy:itemMenuCatalogosClass;
			private var master:Boolean = false;
			
			private var arregloBotones:Array;
			public var grpMenu:GroupMenu;
			public var grpMenuMin:GroupMenu;
			
			
			
			public function get tituloMenu():String
			{
				return _tituloMenu;
			}
			
			public function set tituloMenu(value:String):void
			{
				_tituloMenu = value;
				lbl_titulo.text = _tituloMenu.toUpperCase();
			}
			
			
			public function get itemVisual():IVisualElement
			{
				return _itemVisual;
			}
			
			public function set itemVisual(value:IVisualElement):void
			{
				_itemVisual = value;
				arregloBotones = (value as MenuLikeCaraLibro).dataProvider;
				itemVisualMinimizado = value
				
				if(_itemVisual)
				{
					grpMenu = new GroupMenu;
					grpMenu.percentHeight = 100;
					grpMenu.percentWidth = 100;
					grpMenu.addElement(_itemVisual);
					zonaMenu.addElement(grpMenu);
				}
			}
			
			public function set itemVisualMinimizado(value:IVisualElement):void
			{
				_itemVisualMin = value;
				
				if(_itemVisualMin)
				{
					grpMenuMin = new GroupMenu;
					grpMenuMin.percentHeight = 100;
					grpMenuMin.percentWidth = 100;
					grpMenuMin.addElement(_itemVisualMin);
					zonaMenuMinimizado.addElement(_itemVisualMin);
				} 
			}
			
			protected function btnmenu_clickHandler(event:MouseEvent):void
			{
				if(_tituloMenu.toLowerCase() == "proveedores")
				{
					var evt:EventoCatProGeneral = new EventoCatProGeneral( EventoCatProGeneral.CAMBIA_VISTAS_NIVEL_SUPERIOR_CAT_PROVEEDORES );
					evt.proveedorSeleccionado = new Proveedor();
					evt.vieneDe = '';
					dispatchEvent( evt );				
				}
				else if(_tituloMenu.toLowerCase() == "clientes")
				{
					var evto:EventoCatClientes_General = new EventoCatClientes_General( EventoCatClientes_General.CAMBIA_VISTAS_NIVEL_SUPERIOR_CAT_CLIENTES );
					evto.clienteSeleccionado = new Cliente();
					evto.vieneDe = '';
					dispatchEvent( evto );				
				}
				else if(_tituloMenu.toLowerCase() == "agentes aduanales")
				{
					var evtA:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.CAMBIA_VISTA_MANU_AGENTE_A );
					evtA.agenteSeleccionado = new AgenteAduanal();
					evtA.vieneDe = '';
					dispatchEvent( evtA );			
				}
			}
			
			
			public function get endX():Number
			{
				return _endX;
			}
			
			public function set endX(value:Number):void
			{
				_startX = this.x;
				_endX = value;
				trace("Start: "+_startX +" End X: "+value);
			}
			
			public function updateTween(elapsedTime:Number, duration:Number):void 
			{
				var tempX:Number = ExponentialEaseOut(elapsedTime, _startX, _endX - _startX, duration);
				this.x = tempX;
			}
			
			public static function ExponentialEaseOut(t:Number, b:Number, c:Number, d:Number):Number
			{
				return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
			}
			
			
			public function set recibeProveedorSeleccionado($pro:Proveedor):void
			{
				if( $pro == null )
					return;
				
				if( isNaN( $pro.idProveedor ) )
				{
					isNew();
				}
				else
				{
					_proveedorSeleccionado = $pro;
					lblNombre.text = _proveedorSeleccionado.nombre;
					lblRS.text = _proveedorSeleccionado.razonSocial;
				}
				
			}
			
			private function isNew():void
			{
				lblNombre.text = 'Nuevo';
				lblRS.text = '';
			}
			
			
			public function set recibeClienteSeleccionado($cli:Cliente):void
			{
				if( $cli == null )
					return;
				
				
				if( isNaN( _clienteSeleccionado.idCliente) )
				{
					isNew();
				}
				else
				{
					_clienteSeleccionado = $cli;
					lblNombre.text = _clienteSeleccionado.nombre;
					lblRS.text = _clienteSeleccionado.razonSocial;
					
					if(_clienteSeleccionado != null)
					{
						validarRoles();						
					}
				}
			}
			
			public function validarRoles():void
			{
				if (roles.length > 0)
				{
					for (var j:Number=0; j<roles.length; j++)
					{
						if (roles[j]=="CatCliente_Master" )
						{
							master = true;
							break;
						}
					}
				}
			}
			
			
			public function maximizarMenu():void
			{
				menuExtendido.visible = menuExtendido.includeInLayout = true;
				menuMinimizado.visible = menuMinimizado.includeInLayout = false;
				/*lbl_titulo.refresh();
				lblNombre.refresh();
				lblRS.refresh(); */            
			}
			
			public function minimizarMenu():void
			{
				menuExtendido.visible = menuExtendido.includeInLayout = false;
				menuMinimizado.visible = menuMinimizado.includeInLayout = true;
			}
			
			public function set recibeAgenteAduanalSeleccionado($agente:AgenteAduanal):void
			{
				if( $agente == null )
					return;
				
				
				if( isNaN( $agente.idAgenteAduanal) )
				{
					isNew();
				}
				else
				{
					_agenteAduanalSeleccionado = $agente;
					lblNombre.text = _agenteAduanalSeleccionado.nombreComercial;
					lblRS.text = _agenteAduanalSeleccionado.nombreLegal;
					
				}
			}
			
			[Bindable]
			public function get size():Number
			{
				return _size;
			}
			
			public function set size(value:Number):void
			{
				_size = value;
			}
			[Bindable] private  var tam27:Number;
			[Bindable] private  var tam24:Number;
			[Bindable] private  var tam16:Number;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				
				tam27 = (27 / 468) * (unscaledWidth);
				tam24 = (24 / 468) * (unscaledWidth);
				tam16 = (16 / 468) * (unscaledWidth);
			}
		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill >
			<s:SolidColor color="0xeaeaea" />
		</s:fill>
		<s:filters>
			<shaders:sombraVertical />
		</s:filters>
	</s:Rect>
	
	<s:VGroup id="menuExtendido" width="100%" height="100%" paddingLeft="20" paddingRight="20" paddingTop="15" gap="10" >
		
		<s:HGroup width="100%" verticalAlign="middle" paddingTop="-3" id="menuExtendido1">
			<s:Image id="btnmenu" source="{catalogoIconosBotoneras.getInstance().flechaIzquierdaupdown}" click="btnmenu_clickHandler(event)"
					 mouseOver="{ btnmenu.source = catalogoIconosBotoneras.getInstance().flechaIzquierdaover}"
					 mouseOut="{ btnmenu.source = catalogoIconosBotoneras.getInstance().flechaIzquierdaupdown}"/>
			<label:TituloBankGothic_30 id="lbl_titulo" width="100%" paddingBottom="0" maxDisplayedLines="1" fontSize="{tam27}"/>
		</s:HGroup>
		
		<s:VGroup width="100%" horizontalAlign="center" gap="0" id="menuExtendido2">
			<s:Spacer height="15"/>
			<otros:divisionHueca width="100%"/>
			<s:Spacer height="10"/>
			<label:TextoBankGothic_24 id="lblNombre" width="100%" textAlign="center" fontSize="{tam24}"/>
			<label:Texto_16 id="lblRS" width="100%" textAlign="center" fontSize="{tam16}"/>
			<s:Spacer height="10"/>
			<otros:divisionHueca width="100%"/>
		</s:VGroup>
		
		<s:Scroller height="100%" width="100%">
			<s:VGroup id="zonaMenu" width="100%" height="100%" paddingTop="10" gap="15" />
		</s:Scroller>
	</s:VGroup>
	
	
	<s:VGroup id="menuMinimizado" width="100%" height="100%" paddingTop="15" gap="25" visible="false">
		
		<s:HGroup width="100%" verticalAlign="middle" paddingTop="-3" horizontalAlign="center" paddingLeft="15">
			<s:Image id="btnmenuMin" source="{catalogoIconosBotoneras.getInstance().flechaIzquierdaupdown}" click="btnmenu_clickHandler(event)"
					 mouseOver="{ btnmenuMin.source = catalogoIconosBotoneras.getInstance().flechaIzquierdaover}"
					 mouseOut="{ btnmenuMin.source = catalogoIconosBotoneras.getInstance().flechaIzquierdaupdown}"/>
			<label:TituloBankGothic_30 id="lbl_tituloMin" width="100%" paddingBottom="0" maxDisplayedLines="1" autoSize="true" sizeAdjust="{size}"/>
		</s:HGroup>
		<s:Scroller height="100%" width="100%">
			<s:VGroup id="zonaMenuMinimizado" width="100%" height="100%" paddingTop="30" />
		</s:Scroller>
	</s:VGroup>
	
</s:Group>
