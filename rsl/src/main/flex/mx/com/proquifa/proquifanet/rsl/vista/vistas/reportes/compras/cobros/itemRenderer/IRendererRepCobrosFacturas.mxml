<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:consultas="skins.skin.comun.consultas.*" 
				xmlns:linkButton="skins.skin.linkButton.*" 
				xmlns:spacers="skins.skin.spacers.*"
				xmlns:label="skins.skin.label.*" 
				xmlns:otros="skins.otros.*" 
				width="100%"
				>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Cobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			
			override public function set data(value:Object):void{
				super.data = value;
				this.autoDrawBackground= true;
				
				this.vgp1.includeInLayout = this.vgp1.visible = false; 
				this.vgp0.includeInLayout = this.vgp0.visible = true;
				
				if((data as Cobros).estado == 'ultimo'){
					
					this.vgp1.includeInLayout = this.vgp1.visible = true; 
					this.vgp0.includeInLayout = this.vgp0.visible = false;
					
					this.autoDrawBackground= false;
				}
			}
			
			private function verPInterno():void{
				var _pInterno:String  = lblPI.label.substring(3);
				var _url:URLRequest = new URLRequest();
				var path:Object = Util.rutaNueva(_pInterno);
				_url.url = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + path.ruta + _pInterno + ".pdf";
				navigateToURL(_url);	 
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:VGroup width="100%" height="100%" id="vgp0" gap="0">
		<s:HGroup width="100%" height="100%">
			<consultas:LineaItemSeleccionado visible.selected="true"/>
			<s:VGroup width="100%" height="100%" paddingTop="10" paddingBottom="10">
				<s:VGroup id="columnaizq" width="100%" >
					<s:HGroup width="100%" horizontalAlign="left" >
						<label:Titulo paddingTop="0" id="lbcantidad" width="100%" text="# {( data as Cobros).numFila +' 路 ' + '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares) +' 路 ' + (data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' pza' : ' pzas')  }" />
						<s:HGroup width="70%" horizontalAlign="right"  paddingRight="10">
							<label:Titulo paddingTop="0" text="FEP: " />
							<label:Fecha id="lblFEP" fecha="{(data as Cobros).fechaEsperadaPago} " />
						</s:HGroup>
					</s:HGroup>
					
					<s:HGroup  width="100%" horizontalAlign="left" paddingTop="5" paddingBottom="5">
						<linkButton:LinkButtonPQNet2 id="lblPI" label="PI-{(data as Cobros).cpedido} " click="verPInterno()"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<label:Titulo paddingTop="0" textAlign="left" text="Vendi贸: " />
						<label:Texto id="lblVendio" textAlign="left" text="{(data as Cobros).fpor} " />
						<s:HGroup width="100%" horizontalAlign="right" paddingRight="5"  >
							<label:Titulo paddingTop="0" text="Cond. pago: " fontSize="13" fontWeight="bold"/>
							<label:Texto id="lblCPago"  text="{(data as Cobros).cpago} " />
						</s:HGroup>
					</s:HGroup>				
					
					<s:HGroup  width="100%" horizontalAlign="left" paddingTop="5" >
						<s:HGroup width="100%">
							<label:Titulo paddingTop="0" text="Medio de pago: " />
							<label:Texto id="lblMPago" text="{(data as Cobros).medioPago} "   />
						</s:HGroup>
					</s:HGroup>
				</s:VGroup>
			</s:VGroup>
		</s:HGroup>
		<s:VGroup width="100%" >
			<otros:division id="LineaFinal" width="100%"/>
		</s:VGroup>
	</s:VGroup>
	
	<s:VGroup  width="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="25" paddingBottom="25" id="vgp1" height="100%">
		<label:TextoGrisCasiNegro id="lblTFacturas" text="{(data as Cobros).partidas + ((data as Cobros).partidas == 1 ? ' Pedido': ' Pedidos') } 路 ${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares)} USD"/>
		<label:TextoGrisCasiNegro text="{(data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' Pieza' : ' Piezas')} "/>
		<label:TextoGris text="TOTAL"/>
	</s:VGroup>
</s:ItemRenderer>
