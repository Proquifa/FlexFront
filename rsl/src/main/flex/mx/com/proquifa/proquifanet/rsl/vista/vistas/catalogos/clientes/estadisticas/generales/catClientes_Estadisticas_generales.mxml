<?xml version="1.0" encoding="utf-8"?>
<contenedores:VGroupConPaddingStandardPqNet 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:contenedores="skins.skin.contenedores.*"
	xmlns:label="skins.skin.label.*" 
	xmlns:otros="skins.otros.*" 
	width="100%" height="100%" gap="10"
	creationComplete="crearGraficas()" xmlns:consultas="skins.skin.comun.consultas.*"
	
	>
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.agenteAduanal.EventoCatAgenteAduanalGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.estadisticas.EventoCatClientes_EstadisticasGenerales;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.alertPqNet.ResultAlert;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ParametrosBusquedaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			import mx.managers.PopUpManager;
			
			import spark.components.VGroup;
			import spark.primitives.Rect;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			private var _currentCliente:Cliente;
			private var e:Empleado = DatosGlobales.getInstance()._usuario;
			public var _popUpAgregarMarca:catClientes_popUpInicio;
			
			[Embed (source="skins/imagenes/iconos/botones/botoneras/actualizar.png")]
			private var imgNormal:Class;
			
			[Embed (source="skins/imagenes/iconos/botones/botoneras/actualizarverde.png")]
			private var imgDown:Class;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if (_popUpAgregarMarca )
				{
					_popUpAgregarMarca.x = (this.stage.stageWidth - (((this.stage.stageWidth * 68)/100)/2))-(_popUpAgregarMarca.width/2)-40;
					_popUpAgregarMarca.y = (this.stage.stageHeight/2)-(_popUpAgregarMarca.height/2);  
				}
			}
			
			protected function mostrarPopUp($evt:EventoCatClientes_EstadisticasGenerales):void
			{
				dispatchEvent(new EventoCatClientes_EstadisticasGenerales(EventoCatClientes_EstadisticasGenerales.MOSTRAR_POPUP))
			}
			
			public function popUpInicio():void
			{
				var app:DisplayObject = FlexGlobals.topLevelApplication as DisplayObject;
				_popUpAgregarMarca = catClientes_popUpInicio(PopUpManager.createPopUp(app,catClientes_popUpInicio,true));
				_popUpAgregarMarca.removeEventListener(EventoCatClientes_EstadisticasGenerales.OBTENER_ESTADISTICAS_GENERALES,obtenerInfo);
				_popUpAgregarMarca.addEventListener(EventoCatClientes_EstadisticasGenerales.OBTENER_ESTADISTICAS_GENERALES,obtenerInfo,false,0,true);
				_popUpAgregarMarca.removeEventListener(EventoCatClientes_EstadisticasGenerales.CANCELAR_POPUP,mostrarPopUp);
				_popUpAgregarMarca.addEventListener(EventoCatClientes_EstadisticasGenerales.CANCELAR_POPUP,mostrarPopUp,false,0,true);
				PopUpManager.centerPopUp(_popUpAgregarMarca);
				
				_popUpAgregarMarca.x = (this.stage.stageWidth - (((this.stage.stageWidth * 68)/100)/2))-(_popUpAgregarMarca.width/2)-40;
				_popUpAgregarMarca.y = (this.stage.stageHeight/2)-(_popUpAgregarMarca.height/2);  
				trace(_popUpAgregarMarca.x);
				trace(_popUpAgregarMarca.y);
				/* _popUpAgregarMarca.x = ((this.width/68)*100) - (_popUpAgregarMarca.width / 2);
				
				
				_popUpAgregarMarca.y = (this.height/2) - (_popUpAgregarMarca.height / 2);
				*/
			}
			
			public function iniciarVista():void
			{
				
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.tipoEventos.push("SOLICITAR_LA_CONSULTA_LINEAL");
				eventEspera.tipoEventos.push("OBTENER_MONTOS_OBJETIVO");
				dispatchEvent(eventEspera);
				
				var parametros:ParametrosBusquedaCliente = new ParametrosBusquedaCliente();
				var soliInfoTabClientes:EventoCatClientes_EstadisticasGenerales = new EventoCatClientes_EstadisticasGenerales(EventoCatClientes_EstadisticasGenerales.SOLICITAR_LA_CONSULTA_LINEAL);
				parametros.cliente = soliInfoTabClientes.params.idCliente = _currentCliente.idCliente;
				parametros.anio = soliInfoTabClientes.params.anio = new Date().getFullYear();
				parametros.periodo = soliInfoTabClientes.params.periodo = "Anual";
				parametros.tipoPeriodo = soliInfoTabClientes.params.tipoPeriodo = 0;
				parametros.mes = soliInfoTabClientes.params.mes = 0;
				soliInfoTabClientes.params.rangoMinMes = 1;
				soliInfoTabClientes.params.rangoMaxMes = 12;
				parametros.eventas = soliInfoTabClientes.params.idVentas = 0;
				parametros.esac = soliInfoTabClientes.params.esacString = "";
				parametros.tipo = soliInfoTabClientes.params.tipoT = "hab";
				parametros.esacMaster = soliInfoTabClientes.params.idEsacMaster = 0;
				parametros.conEsacMaster = soliInfoTabClientes.params.conEsacMaster = true;
				parametros.corporativo = soliInfoTabClientes.params.corporativo = 0;
				parametros.lineal = soliInfoTabClientes.params.lineal = 0;
				soliInfoTabClientes.parametros = parametros;
				dispatchEvent(soliInfoTabClientes);
				var soliMontosObjetivos:EventoCatClientes_EstadisticasGenerales;
				soliMontosObjetivos = soliInfoTabClientes.duplicarEvento(EventoCatClientes_EstadisticasGenerales.OBTENER_MONTOS_OBJETIVO);
				parametros.colaborador = 0;
				soliMontosObjetivos.params.idColaborador = 0;
				soliMontosObjetivos.parametros = parametros;
				dispatchEvent(soliMontosObjetivos);
				
				
			}
			public function obtenerInfo($evt:EventoCatClientes_EstadisticasGenerales):void{
				imgActualizar.visible = true;
				imgActualizar.source = imgDown;
				setTimeout(iniciarVista, 100);
				
			}
			private var arrayTodasLasGraficas:ArrayCollection;
			public function crearGraficas():void
			{
				arrayTodasLasGraficas = new ArrayCollection;
				arrayTodasLasGraficas.addItem(new catClientes_miniMixProductos());
				arrayTodasLasGraficas.addItem(new catClientes_miniMixMarcas());
				arrayTodasLasGraficas.addItem(new catClientes_miniCotPed());
				arrayTodasLasGraficas.addItem(new catClientes_miniCotNoPed());
				arrayTodasLasGraficas.addItem(new catClientes_miniSeguimientosTab);
				arrayTodasLasGraficas.addItem(new catClientes_miniCancelacionCotizacion);
				arrayTodasLasGraficas.addItem(new catClientes_miniPedidos);
				arrayTodasLasGraficas.addItem(new catClientes_miniEntregasTab);
				arrayTodasLasGraficas.addItem(new catClientes_miniPeriodo);
				arrayTodasLasGraficas.addItem(new catClientes_miniComportaPagos);
				insertarGraficas(arrayTodasLasGraficas);
				
				
				//actualizar año actual
				var today_date:Date = new Date();
				var thisyear:uint = today_date.getFullYear();
				this.anioActual.text="Año "+thisyear.toString();
			}
			
			private var rectFondoB:Rect;
			public function insertarGraficas( graficas:ArrayCollection):void
			{
				contenedorGraficas.removeAllElements();
				if( rectFondoB != null )
					rectFondoB.visible = false;
				
				var relleno:SolidColor = new SolidColor();
				relleno.color = 0xeaeaea;
				if( graficas.length > 0 )
				{
					var iteraciones:int = graficas.length/2;
					var residuo:int = graficas.length%2;
					for(var m:int = 0; m < iteraciones ; m++)
					{
						var contenedor:VGroup = new VGroup();
						contenedor.percentHeight = 100;
						contenedor.percentWidth = 100;
						contenedor.gap = 0;
						contenedor.addElement(graficas[m*2]);
						
						var Hrecta:Rect = new Rect();
						if(m == 0 || m == iteraciones -1 && residuo == 0 )
						{
							Hrecta.percentWidth = 90;
						}
						else
						{
							Hrecta.percentWidth = 100;
						}
						if( m == 0 ) 
							contenedor.horizontalAlign = "right";
						if( m == iteraciones -1 ) 
							contenedor.horizontalAlign = "left";
						
						Hrecta.height = 2;
						Hrecta.fill = relleno;
						Hrecta.verticalCenter = 0;
						contenedor.addElement( Hrecta );
						
						contenedor.addElement(graficas[(m*2)+1]);
						contenedorGraficas.addElement(contenedor);
						
						var vrecta:Rect = new Rect();
						vrecta.width = 2;
						vrecta.percentHeight = 98;
						vrecta.fill = relleno;
						vrecta.verticalCenter = 0;
						vrecta.right = 0;
						if( m < iteraciones-1)
						{
							contenedorGraficas.addElement( vrecta );
						}
					}
					if(residuo != 0)
					{
						if( graficas.length != 1 )
						{
							var vrecta2:Rect = new Rect();
							vrecta2.width = 2;
							vrecta2.percentHeight = 98;
							vrecta2.fill = relleno;
							vrecta2.verticalCenter = 0;
							vrecta2.right = 0; 
							contenedorGraficas.addElement( vrecta2 );
						}
						var contenedor2:VGroup = new VGroup();
						contenedor2.percentHeight = 100;
						contenedor2.percentWidth = 100;
						contenedor2.addElement(graficas[graficas.length-1]);
						contenedorGraficas.addElement(contenedor2); 
					}
				}
			}
			
			public function get currentCliente():Cliente
			{
				return _currentCliente;
			}
			
			public function set currentCliente(value:Cliente):void
			{
				_currentCliente = value;
			}
			public function set actualizarEsperaYBloqueo(object:Object):void{
				imgActualizar.source = imgNormal;
			}
			
			protected function actualizar_clickHandler(event:MouseEvent):void
			{
				imgActualizar.source = imgDown;
			 	iniciarVista();
			
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" verticalAlign="bottom" >
		<s:Image source="{catalogoIconosEtiquetas.getInstance().estadisticasClienteGris45x40}"/>
		<label:TituloBankGothic_30 text="VISTA GENERAL"/>
		<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Image id="imgActualizar" source="{catalogoIconosBotones.getInstance().iconoActualizarNormal}" click="actualizar_clickHandler(event)" visible="false"/>
		</s:HGroup>
				  
		<label:TituloBankGothic_30 id="anioActual" text=""/>
	</s:HGroup>
	<otros:divisionGruesa width="100%"/>	
	<s:HGroup id="contenedorGraficas" width="100%" height="100%" verticalAlign="middle"/>
</contenedores:VGroupConPaddingStandardPqNet>
