<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  
		 xmlns:otros="skins.otros.*" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:pqNet="skins.botones.pqNet.*" 
		 xmlns:chekbox="skins.skin.chekbox.*" 
		 creationComplete="group1_creationCompleteHandler(event)"
		 width="100%" height="100%" xmlns:evento="skins.botones.evento.*" xmlns:dateField="skins.skin.dateField.*" xmlns:generales="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.*" xmlns:combos="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" xmlns:Campanas="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.Campanas.*" xmlns:Componentes="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.Campanas.Componentes.*" 
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.EventoCatClientes_General;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProCampanas;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Campana;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.asistencia.TipoChecada;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.Campanas.itemRender.itemRenderListadoCampanasComerciales;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			
			[Bindable] public var heightComponentes:Number = 25;
			private var _habilitados:ArrayCollection;
			[Bindable] public var numCampanas_proveedor:Number;
			private var _currentProveedor:Proveedor;
			private var indiceCampanaSeleccionada:Number;
			
			
			public function get currentProveedor():Proveedor
			{
				return _currentProveedor;
			}

			public function set currentProveedor(value:Proveedor):void
			{
				_currentProveedor = value;
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				grpBotoneraHead.addEventListener(EventoCatProCampanas.CLIC_BOTONERA_CAMPANAS,verificarBotoneraHead);
				vistaEdicion.addEventListener("cancelarCreacionDeCampaña",cancelarCreacionCampana);
				lstCampanasVP.addEventListener("editarCampanaComercial",editarCampanaComercialSeleccionada);
				lstCampanasVP.addEventListener("eliminarCampanaComercial",eliminarCampanaComercialSeleccionada);
				
			}
			
			[Bindable] public var tipoSelectTiempo:String = "activas";
			private function verificarBotoneraHead(event:EventoCatProCampanas):void
			{
				
				
				tipoSelectTiempo = event.tipoSelect;
				if(tipoSelectTiempo == "activas"){
					cantidadCampanas = campanasActivas.length;
					if(campanasActivas.length > 0)
					{
						enumerarListaCampnas(campanasActivas);
						lstCampanasVP.dataProvider = campanasActivas;
						textoG.visible = textoG.includeInLayout = false;
						txtBuscador.visible = true;
						lstCampanasVP.visible = lstCampanasVP.includeInLayout = true;
						if(lstCampanasVP.selectedIndex < 0 )
						{
							lstCampanasVP.selectedIndex = 0;	
						}
						lstCampanasVP.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
					}
					else{
						textoG.visible = textoG.includeInLayout = true;;
						txtBuscador.visible = false;
						lstCampanasVP.dataProvider = new ArrayCollection();
						infoFamilia.limpiarInformacion();
					}
				
					
				}else if(tipoSelectTiempo == "historia"){
					
					cantidadCampanas = campanasInactivas.length;
					if(campanasInactivas.length > 0)
					{
					
						enumerarListaCampnas(campanasInactivas);
						lstCampanasVP.dataProvider = campanasInactivas;
						textoG.visible = textoG.includeInLayout = false;
						txtBuscador.visible = true;
						lstCampanasVP.visible = lstCampanasVP.includeInLayout = true;
						if(lstCampanasVP.selectedIndex < 0 )
						{
							lstCampanasVP.selectedIndex = 0;	
						}
						lstCampanasVP.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
					}
					else{
						numCampana = "";
						textoG.visible = textoG.includeInLayout = true;;
						txtBuscador.visible = false;
						lstCampanasVP.dataProvider = new ArrayCollection();
						infoFamilia.limpiarInformacion();
					}
					
					
				}
				
			}
			
			
			public function iniciarVista():void
			{
				grpContratos.visible = grpContratos.includeInLayout = true;
				
				vistaEdicion.visible = vistaEdicion.includeInLayout = false;
			}
			
			private var _currentCliente:Cliente;
			public function get currentCliente():Cliente
			{
				return _currentCliente;
			}
			
			public function set currentCliente(value:Cliente):void
			{
				_currentCliente = value;
			}
			
			
			private function cancelarCreacionCampana(event:Event):void{
				grpContratos.visible = grpContratos.includeInLayout = true;
				
				vistaEdicion.visible = vistaEdicion.includeInLayout = false;
				editando = false;
			}
			
			private var editando:Boolean;
			private function editarCampanaComercialSeleccionada(event:Event):void{
				creandoCampana = false;
				editando = true;
				vistaEdicion.proveedorActual = currentProveedor;
				grpContratos.visible = grpContratos.includeInLayout = false;
				vistaEdicion.vieneDeEditar = false;
				vistaEdicion.visible = vistaEdicion.includeInLayout = true;
				vistaEdicion.tipoCampana.enabled = false;
			    vistaEdicion.recibeCampanaComercial(lstCampanasVP.dataProvider[lstCampanasVP.selectedIndex]);
				
			}
			
			private function eliminarCampanaComercialSeleccionada(event:Event):void{
				
				
				alertaSingleton.show("¿Desea eliminar esta camapaña?",catalogoAlertas.TIT_ADV_atencion,"","SI","NO","","",null,false,alertListenerEliminar);
				
			}
			
			private function alertListenerEliminar(eventObj:EventoAlertaPqNet):void {
				if (eventObj.respuesta.botonSeleccionado == "SI"){
					
					var evECAM:EventoCatProCampanas = new EventoCatProCampanas(EventoCatProCampanas.ELIMINAR_CAMPANA_COMERCIAL);
					evECAM.camp = ObjectUtil.copy(lstCampanasVP.selectedItem) as Campana;
					dispatchEvent(evECAM);
				}
			}
			
			public function inicia():void
			{
				
				/*editarInfo('cancelar');*/
				
			}
			
			private var creandoCampana:Boolean;
			protected function btnAgregar_clickHandler(event:MouseEvent):void
			{
				vistaEdicion.tipoCampana.enabled = true;
				vistaEdicion.proveedorActual = currentProveedor;
				creandoCampana = true;
				vistaEdicion.vieneDeEditar = false;
				vistaEdicion.limpiarVista();
				grpContratos.visible = grpContratos.includeInLayout = false;
				vistaEdicion.vieneDeEditar = false;
				vistaEdicion.visible = vistaEdicion.includeInLayout = true;
			
				
				
				
			}
			
			
			private function enumerarListaCampnas($campanas:ArrayCollection):void
			{
				for (var i:int = 0; i < $campanas.length; i++) 
				{
					Campana($campanas[i]).numFila = i+1;
				}
			}
			
			[Bindable] private var numCampana:String;
			protected function lstContratosV_changingHandler(event:IndexChangeEvent):void
			{
				numCampana = "Campaña #"+ (lstCampanasVP.selectedIndex + 1);
				if (lstCampanasVP && lstCampanasVP.selectedItem && lstCampanasVP.selectedItem != undefined){
					
					infoFamilia.recibeInformacion(lstCampanasVP.dataProvider[lstCampanasVP.selectedIndex]);
					indiceCampanaSeleccionada = lstCampanasVP.selectedIndex;
				
					
					
				} 
				
			}
			
			
			
			
			public function set confirmacionRegistroContrato(respuesta:Boolean):void{
				
				if( respuesta == true)
				{
					
					var evtCon:EventoCatClientes_General = new EventoCatClientes_General(EventoCatClientes_General.OBTENER_CONTRATOS_POR_IDCLIENTE);
					evtCon.idCliente = _currentCliente.idCliente;
					dispatchEvent(evtCon);
					alertaSingleton.show("Operación Exitosa");
				}
				
			} 
			
			
			public function set recibeConfirmacionEliminarContrato(respuesta:Boolean):void{
				
				if( respuesta == true)
				{
					var evtCon:EventoCatClientes_General = new EventoCatClientes_General(EventoCatClientes_General.OBTENER_CONTRATOS_POR_IDCLIENTE);
					evtCon.idCliente = _currentCliente.idCliente;
					dispatchEvent(evtCon);
					alertaSingleton.show("Operación Exitosa");
				}
				
			} 
			
			
			
			
			public var clienteSelecionado:Cliente;
			public function set recibeClienteSeleccionado($cliente:Cliente):void
			{
				if ($cliente == null) return;
				clienteSelecionado = $cliente;
				
			}
			
			
			private function selectRenderer(item:Object):ClassFactory
			{
				var classFactory:ClassFactory = new ClassFactory(itemRenderListadoCampanasComerciales);
			
				
				return classFactory;
			}
			
			
			public function set recibeRespuestaAgregarActulizarCampana(respuesta:Boolean):void{
				if(respuesta)
				{
					alertaSingleton.show("Operación Exitosa");
					grpContratos.visible = grpContratos.includeInLayout = true;
					vistaEdicion.visible = vistaEdicion.includeInLayout = false;
					var evtCam:EventoCatProCampanas = new EventoCatProCampanas(EventoCatProCampanas.OBTENER_CAMPANAS_COMERCIALES);
					evtCam.idProveedor = currentProveedor.idProveedor;
					grpBotoneraHead.selectIndex = 0;
					dispatchEvent(evtCam);
				}
			}
			
			
			private var campanasActivas:ArrayCollection;
			private var campanasInactivas:ArrayCollection;
			[Bindable]private var cantidadCampanas:Number;
			[Bindable] private var fechaActulizacion:Date;
			public function set recibeListadoDeCampanasComerciales(camp:ArrayCollection):void{
				
				campanasActivas = new ArrayCollection();
				campanasInactivas = new ArrayCollection();
				var fechaHoy:Date = new Date();
				if(camp == null)
					return;
				
				
				grpBotoneraHead.selectIndex = 0;
				if(camp.length > 0)
				{
					fechaActulizacion = camp[0].fuaCampana;
					for (var i:int = 0; i < camp.length; i++) 
					{
						if(camp[i].fechaFin < fechaHoy )
						{
							campanasInactivas.addItem(camp[i]);
						}
						else if(camp[i].fechaFin >= fechaHoy )
						{
							campanasActivas.addItem(camp[i]);
						}
					}
				}
					
				if(campanasActivas.length > 0)
				{
					cantidadCampanas = campanasActivas.length;
					enumerarListaCampnas(campanasActivas);
					lstCampanasVP.dataProvider = campanasActivas;
					textoG.visible = textoG.includeInLayout = false;
					txtBuscador.visible = true;
					lstCampanasVP.visible = lstCampanasVP.includeInLayout = true;
					if(lstCampanasVP.selectedIndex < 0 )
					{
						if(!editando && !creandoCampana)
							lstCampanasVP.selectedIndex = 0;
						
						else if(creandoCampana)
							lstCampanasVP.selectedIndex = campanasActivas.length -1;
						
						else if(editando)
							lstCampanasVP.selectedIndex = indiceCampanaSeleccionada;
						
					}
					editando = false;
					lstCampanasVP.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
					
					
					
					
				}
				
				
				
				if(camp.length == 0 || campanasActivas.length == 0)
				{
					textoG.visible = textoG.includeInLayout = true;
					numCampana = "";
					txtBuscador.visible = false;
					lstCampanasVP.dataProvider = new ArrayCollection();
					infoFamilia.limpiarInformacion();
					cantidadCampanas = campanasActivas.length;
				}
			
			}
			

			
			protected function txtBuscador_changeHandler(event:TextOperationEvent):void
			{
				if(tipoSelectTiempo == "activas")
				lstCampanasVP.dataProvider = UtilsGrid.queryCampoXLike(campanasActivas,"nombre",txtBuscador.text);
				else if (tipoSelectTiempo == "historia")
					lstCampanasVP.dataProvider = UtilsGrid.queryCampoXLike(campanasInactivas,"nombre",txtBuscador.text);	
			}
			
			
			public function set recibeConfirmacionEliminarCampana(res:Boolean):void{
				if(res)
				{
					var evtCam:EventoCatProCampanas = new EventoCatProCampanas(EventoCatProCampanas.OBTENER_CAMPANAS_COMERCIALES);
					evtCam.idProveedor = currentProveedor.idProveedor;
					dispatchEvent(evtCam);
					
					alertaSingleton.show("Operación Exitosa");
					
					grpContratos.visible = grpContratos.includeInLayout = true;
					vistaEdicion.visible = vistaEdicion.includeInLayout = false;
				}
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		
	</fx:Declarations>
	
	
	<s:VGroup width="100%" height="100%" id="grpContenedorPrincipal" gap="0" >
		<s:HGroup width="100%" verticalAlign="bottom" paddingBottom="10" paddingTop="14" id="vistaPrin" paddingLeft="20">
			<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_campanaGris}"/>
			<label:TituloBankGothic_30 text="CAMPAÑAS"/>
			<s:Spacer width="100%"/>
			<s:HGroup height="100%" verticalAlign="bottom" horizontalAlign="right" paddingRight="20">
				<label:Texto_13_VerdeAzul text="Última actualización: "/>
				<label:Fecha_13_VerdeAzul id="lblFua" fecha="{fechaActulizacion}"/>
			</s:HGroup> 
		</s:HGroup>
		
		<s:HGroup width="100%">
			<otros:divisionGruesa width="100%" />
		</s:HGroup>
		
		<s:HGroup width="100%" height="100%" gap="0" id="grpContratos" >
			<s:VGroup width="60%" height="100%" paddingLeft="15" paddingRight="20">
				<s:Spacer height="30" width="100%" />
				<s:VGroup width="100%" horizontalAlign="right" gap="10">
					<label:Titulo text="CAMPAÑAS COMERCIALES" />
					<otros:divisionGruesa />
				</s:VGroup>
				
				<s:VGroup width="100%" height="100%" gap="20" paddingTop="10">
					
					<Componentes:BotoneraCampanas id="grpBotoneraHead" />
					<s:VGroup width="100%" height="100%" paddingTop="20" >
						<s:HGroup width="100%" height="100%" id="textoG" verticalAlign="middle">
							<label:TituloNovecento_18 id="lblSeleccionNoPartidas" text="SIN CAMPAÑAS"  width="100%" height="100%" textAlign="center" verticalAlign="middle" horizontalCenter="0" color="#c2c3c9" fontSize="30" />
						</s:HGroup>
						<s:VGroup width="100%" horizontalAlign="center" >
							<s:TextInput id="txtBuscador" visible="false" width="70%" skinClass="skins.textinput.busqueda.skinTextInputBusqueda2D"  horizontalCenter="0" prompt=" Nombre Campaña" change="txtBuscador_changeHandler(event)" />
						</s:VGroup> 
						<mx:Spacer height="32" />
						<s:List id="lstCampanasVP" width="100%" height="100%" itemRendererFunction="selectRenderer" borderVisible="false" horizontalScrollPolicy="off" visible="false" includeInLayout="false" changing="lstContratosV_changingHandler(event)" />
						<s:VGroup width="100%" horizontalAlign="center">
							
							<label:TextoGris text="{cantidadCampanas} {cantidadCampanas==1?'Campaña':'Campañas'}" id="txtTotal"/>
							<label:TextoGris text="TOTAL" />
						</s:VGroup>
					</s:VGroup>
					
					<s:VGroup width="100%" gap="10" paddingBottom="20" horizontalAlign="center" >
						<otros:divisionHueca />
						<pqNet:botonPqNetLargo id="btnAgregar" width="30%" colorBase="#0b8692"  color="#0b8692" icono="mas_agregar_horario" label="Crear Campaña" click="btnAgregar_clickHandler(event)" />
					</s:VGroup>
				</s:VGroup>
				
			</s:VGroup>
			
			<s:Group width="40%" height="100%">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#e1e1e1" />
					</s:fill>
				</s:Rect>
				<s:VGroup width="100%" height="100%" paddingLeft="20" paddingRight="21" paddingTop="-10">
					<s:Spacer height="29" width="100%" />
					<s:VGroup width="100%" horizontalAlign="right">
						<s:Spacer height="10" />
						<label:Titulo text="DETALLE DE CAMPAÑA" />
						<otros:divisionGruesa />
						<label:Titulo_18_VerdeAzul text=" " id="sinFamilia" paddingTop="0" width="100%"/>
						<label:Titulo_18_VerdeAzul text="{numCampana}" id="confamilia" paddingTop="0" width="100%"/>
						<otros:division width="100%" height="2" colorLinea="negro" />	
					</s:VGroup>
					
					<s:VGroup width="100%" height="100%" gap="20" paddingTop="10">
						<s:VGroup width="100%" height="100%" >
							<Campanas:CatPro_DetalleCampana width="100%" height="100%" id="infoFamilia" />
						</s:VGroup>
					</s:VGroup>
					
				</s:VGroup>
			</s:Group>
			
		</s:HGroup>
		
		<Campanas:VistaEdicionCampanas width="100%" height="100%" id="vistaEdicion" visible="false" includeInLayout="false" />
		
	</s:VGroup>
</s:Group>