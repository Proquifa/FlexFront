<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mate="http://mate.asfusion.com/">
	
	<!--dispatcher="{new GlobalDispatcher()}"-->
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.ventas.notificados.EventoReporteNotificadosNew;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.reportes.ventas.notificados.ModeloReporteNotificadosNew;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.NotificadosDetalle;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.NotificadosEmpresa;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.NotificadosGral;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.NotificadosMenu;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.NotificadosPartida;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.CharModificadoClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.CharModificadoEV;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.CharModificadoInconsistencia;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.CharModificadoNivelIngreso;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.CharModificadosMontos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.CharModifificadoESAC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosESAC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosEV;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosEnviadosNoEnviados;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosMarca;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosMontos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosNivelesIngreso;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosRazonAC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosTipoAviso;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ChartNotificadosTipoProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.graficas.ReporteNotificadosContenedorGraficas;
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para obtener los resportes Notificados -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.OBTENER_REPORTE_NOTIFICADOS}">
			<mate:RemoteObjectInvoker destination="{ Destinos.REPORTE_NOTIFICADOS }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerReporteNotificados"
									  arguments="{[event.cliente,event.responsable,event.tipoNotificacion,event.folioNT,event.folioDoc,event.master,event.ev]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloReporteNotificadosNew}"
										method="resultObtenerReportesNotificados"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloReporteNotificadosNew}"
										method="errorObtenerReporte"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para obtener los resportes Notificados -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.OBTENER_REPORTE_NOTIFICADOS_MODIFICADOS}">
			<mate:RemoteObjectInvoker destination="{ Destinos.REPORTE_NOTIFICADOS }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerReporteNotificados"
									  arguments="{[event.cliente,event.responsable,event.tipoNotificacion,event.folioNT,event.folioDoc,event.master,event.ev]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloReporteNotificadosNew}"
										method="resultObtenerReportesNotificadosModificados"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloReporteNotificadosNew}"
										method="errorObtenerReporteModificados"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para obtener los resportes Notificados -->
		
		<mate:Injectors      	targets="{[NotificadosGral]}">
			<mate:PropertyInjector 	source="{ModeloReporteNotificadosNew}" 
									sourceKey="ObtenReportesNot"
									targetKey="recibirReportesNot"/>
		</mate:Injectors>
		
		
		<mate:Injectors      	target="{NotificadosGral}">
			<mate:PropertyInjector 	source="{ModeloReporteNotificadosNew}" 
									sourceKey="ObtenReportesNotModif"
									targetKey="recibirReportesNot"/>
		</mate:Injectors>
		
		
		
		<!-- BUSQUEDA AVANZADA DE REPORTE NOTIFICADOS POR FOLIOS -->
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.OBTENER_REPORTE_NOTIFICADOS_AVANZADA}">
			<mate:RemoteObjectInvoker destination="{ Destinos.REPORTE_NOTIFICADOS }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerReporteNotificados"
									  arguments="{[event.cliente,event.responsable,event.tipoNotificacion,event.folioNT,event.folioDoc,event.master,event.ev]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloReporteNotificadosNew}"
										method="resultObtenerReportesNotificadosAvanzada"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloReporteNotificadosNew}"
										method="errorNotificadosFolios"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors      	target="{NotificadosGral}">
			<mate:PropertyInjector 	source="{ModeloReporteNotificadosNew}" 
									sourceKey="ObtenReportesNot"
									targetKey="recibirReportesNot"/>
		</mate:Injectors>
		
		
		<mate:Injectors      	target="{NotificadosGral}">
			<mate:PropertyInjector 	source="{ModeloReporteNotificadosNew}" 
									sourceKey="ObtenReportesNotModif"
									targetKey="recibirReportesNot"/>
		</mate:Injectors>
		
		
		
		
		<!-- CHARTS -->
		<mate:Injectors targets=  "{[ ChartNotificadosNivelesIngreso ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaNivelIngreso"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosClientes ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaClientes"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosEV ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaEV"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosESAC ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaESAC"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosMontos ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaMonto"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosRazonAC ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaRazon"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosTipoAviso ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaTipoAviso"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ ChartNotificadosEnviadosNoEnviados ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaEnviadoNoEnviado"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=   "{[ChartNotificadosMarca]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaMarca"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=   "{[ChartNotificadosTipoProducto]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaTipoProducto"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		
		<!-- CHART MODIFICADOS -->
		
		<mate:Injectors targets=  "{[ CharModificadoNivelIngreso ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaNivelIngresoModif"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ CharModificadosMontos ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaMontosModif"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ CharModificadoClientes ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaClientesModif"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ CharModificadoInconsistencia ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaInconsistenciasModif"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ CharModificadoEV ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaEVModif"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		
		<mate:Injectors targets=  "{[ CharModifificadoESAC ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarGraficaESACModif"
								   targetKey="recibirDataProvider"/>
		</mate:Injectors>
		

		
		
		
		
		
		<!-- DATOS BOTONERA -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.ETIQUETAS_BOTONERA}">
			<mate:MethodInvoker arguments="{[event.etiqueta,event.cliente,event.responsable]}"
								generator="{ModeloReporteNotificadosNew}"
								method="datosBotonera"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ NotificadosMenu ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarObjLabels"
								   targetKey="recibirObjLabels"/>
		</mate:Injectors>
	
		
		<!-- FILTRAR EN VISTA -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_VISTA}">
			<mate:MethodInvoker arguments="{[event.etiqueta, event.cliente, event.diaFiltro, event.responsable, event.cpedido, event.tipoProducto, event.marca, event.clasificacion, event.control,event.tipoResponsable ]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtrarNotificados"/>
		</mate:EventHandlers>
		
		<!-- FILTRAR EN VISTA MODIF-->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_VISTA_MODIF}">
			<mate:MethodInvoker arguments="{[event.etiqueta, event.cliente, event.diaFiltro, event.responsable, event.cpedido, event.clasificacion,event.tipoResponsable ]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtrarNotificadosMODIF"/>
		</mate:EventHandlers>
		
		
		
		<!-- ETIQUETA FECHA GENERAL-->
		
<!--		<mate:EventHandlers type="{ EventoReporteNotificadosNew.TITULO_FECHA}">
			<mate:MethodInvoker arguments="{[event.diaFiltro]}"
								generator="{ModeloReporteNotificadosNew}"
								method="tituloFecha"/>
		</mate:EventHandlers>-->
		
<!--		<mate:Injectors targets="{[ NotificadosGral ]}" debug="true">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarfecha"
								   targetKey="recibirTitulo"/>
		</mate:Injectors>
		-->
		
		<mate:Injectors target="{NotificadosGral}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarfecha"
								   targetKey="recibirTitulo"/>
		</mate:Injectors>
		
		<!-- FILTRAR POR CLIENTE 2 PANEL -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_CLIENTE}">
			<mate:MethodInvoker arguments="{[event.cliente, event.concepto]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporCliente"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ NotificadosEmpresa ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarNotificacionesPorCliente"
								   targetKey="recibirNotificacionesClientePanelDos"/>
		</mate:Injectors>
		
		
		
		<!-- FILTRAR POR CLIENTE 2 PANEL  MODIFICACION -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_CLIENTE_MODIF}">
			<mate:MethodInvoker arguments="{[event.cliente, event.folio]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporClienteModif"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ NotificadosEmpresa ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarNotificacionesPorClienteModif"
								   targetKey="recibirNotificacionesClientePanelDos"/>
		</mate:Injectors>
		
		
		
		<!-- FILTRAR POR CPEDIDO 3 PANEL -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_CPEDIDO}">
			<mate:MethodInvoker arguments="{[event.cpedido]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporCpedido"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ NotificadosPartida ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarNotificacionesPorCpedido"
								   targetKey="recibirNotificacionesCpedidoPanelTres"/>
		</mate:Injectors>
		
		
		<!-- FILTRAR POR CPEDIDO 3 PANEL   MODIFICADOS -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_CPEDIDO_MODIF}">
			<mate:MethodInvoker arguments="{[event.folio]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporIncosistencia"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ NotificadosPartida ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarNotificacionesPorIncosistencia"
								   targetKey="recibirNotificacionesCpedidoPanelTres"/>
		</mate:Injectors>
		
		
		
		<!-- FILTRAR POR CPEDIDO 4 DATOS   MODIFICADOS -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_INCONSITENCIA}">
			<mate:MethodInvoker arguments="{[event.folio, event.incosistencia]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporCpedidoModif"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ NotificadosDetalle ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarNotificacionesPorCpedidoModif"
								   targetKey="recibirNotificacionesDetalle"/>
		</mate:Injectors>
		
		
		<!-- FILTRAR POR CPEDIDO 4 PANEL   MODIFICADOS -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_DETALLES_MODIF}">
			<mate:MethodInvoker arguments="{[event.folio]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporDetalleModif"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[NotificadosDetalle ]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarNotificacionesPorCpedidoModif"
								   
								   targetKey="recibirNotificacionesCpedidoPanelTres"/>			
		</mate:Injectors>
		
		
		
		
		<!-- FILTRAR DETALLES PANEL -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.FILTRAR_DATOS_DETALLES}">
			<mate:MethodInvoker arguments="{[event.cpedido,event.concepto]}"
								generator="{ModeloReporteNotificadosNew}"
								method="filtarporDetalles"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[NotificadosDetalle]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresaNotificacionesPorConcepto"
								   targetKey="recibirNotificacionesDetalle"/>
		</mate:Injectors>
		
		
		
		<!-- DATOS SWITCH -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.DATOS_SWITCH}">
			<mate:MethodInvoker arguments="{[event.swtichBotonera]}"
								generator="{ModeloReporteNotificadosNew}"
								method="obtenerSwitch"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[NotificadosGral,NotificadosEmpresa,NotificadosPartida,NotificadosDetalle,ReporteNotificadosContenedorGraficas]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarSwitch"
								   targetKey="obtenerSwitch"/>
		</mate:Injectors>
		
		
		<!-- DATOS BOTONERA GENERAL (PRIMER PANEL) -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.DATOS_BOTONERA_GENERAL}">
			<mate:MethodInvoker arguments="{[event.etiqueta, event.cliente, event.diaFiltro, event.responsable, event.cpedido, event.tipoProducto, event.marca, event.clasificacion, event.control,event.tipoResponsable ]}"
								generator="{ModeloReporteNotificadosNew}"
								method="obtenerDatosBotonera"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[NotificadosGral]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="regresarDatosBotonera"
								   targetKey="recibirDatosBotonera"/>
		</mate:Injectors>
		
		
		<!-- PONER EN TODOS LA BOTONERA DE GENERAL -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.REGRESAR_A_TODOS}">
			<mate:MethodInvoker arguments="{[event.todos]}"
								generator="{ModeloReporteNotificadosNew}"
								method="ponerEnTodos"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[NotificadosGral]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="enviarTodos"
								   targetKey="obtenerTodos"/>
		</mate:Injectors>
		
		
			
		
		<!-- CONSTRUIR GRAFICAS -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.GENERAR_GRAFICAS}">
			<mate:MethodInvoker arguments="{[event.nuevoIndex]}"
								generator="{ModeloReporteNotificadosNew}"
								method="generarGrafica"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[ReporteNotificadosContenedorGraficas]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="generaGrafica"
								   targetKey="creacionGrafica"/>
		</mate:Injectors>
		
		
		
		<!-- ENVIAR LABEL DE BOTONERA MONTOS -->
		
		<mate:EventHandlers type="{ EventoReporteNotificadosNew.OBTENER_LABEL_MONTO}">
			<mate:MethodInvoker arguments="{[event.clasificacion]}"
								generator="{ModeloReporteNotificadosNew}"
								method="obtenerLabelMonto"/>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[NotificadosMenu]}">
			<mate:PropertyInjector source="{ModeloReporteNotificadosNew}"
								   sourceKey="enviarLabelMontos"
								   targetKey="recibicirLabelFiltroMonto"/>
		</mate:Injectors>
		
		

		
		
	</fx:Declarations>
</mate:EventMap>



