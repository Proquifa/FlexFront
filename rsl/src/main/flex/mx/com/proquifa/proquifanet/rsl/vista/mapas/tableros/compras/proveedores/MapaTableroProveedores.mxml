<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:mate="http://mate.asfusion.com/"
			   xmlns:servicio = "mx.com.proquifa.proquifanet.rsl.vista.eventos.servicios.*" >
	
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ModeloTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.ConsultaBusqueda;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.DatosGeneralesEconomicos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MAXOCconfirmadasCanceladas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxAvisoDeCambios;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxGaficaTop10Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxOCRecahzados;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxOCRecibido;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxOCenTransito;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxPagosOC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MaxTop10Clientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MinTop10Clientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniAvisoDeCambios;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniOCRecibida;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniOCconfirmadasCanceladas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniOCenTransito;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniPagosOC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniRechazados;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.MiniTop10Producos;
			
		]]>
	</mx:Script>
	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_PROVEEDORES}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerProveedores"
								  arguments="{[event.valorAdicional]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setListaProveedores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaBusqueda}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}" 
							   sourceKey="ListaProveedores"
							   targetKey="obtenerProveedores"/>
	</mate:Injectors>

	<!--Datos Generales Economicos-->
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.PROVEEDOR_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="buscarProveedorPorId"
								  arguments="{[event.idProveedor]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setDatosEconomicosProveedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{DatosGeneralesEconomicos}">
		<mate:PropertyInjector targetKey="recivirInformacionProvedor"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="datosEconomicosProveedor"
							   />
	</mate:Injectors>
	
	
<!--	<mate:EventHandlers type="{EventoTableroProveedores.OBTENER_NUMERO_STOCK_POR_ID}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.BUSQUEDA_PRODUCTO_ALMACEN}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerNumeroStockPorId"
								  arguments="{[event.idProveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"
								  showBusyCursor="true">-->
			<!--arguments="{[event.idproveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"-->
			<!-- arguments="{[event.idproveedor.toString(),1,12,'2010','Anual','','']}"-->
<!--			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setNumeroStock"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultNumeroStock"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
			
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{DatosGeneralesEconomicos}">
		<mate:PropertyInjector targetKey="obtenerNumeroStockPorId"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="numeroStock"
							   />
	</mate:Injectors>-->
	
<!--	<mate:EventHandlers type="{EventoTableroProveedores.OBTENER_MOROSIDAD}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.FACTURA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerMorosidad"
								  arguments="{[event.idProveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"
								  showBusyCursor="true">-->
			<!-- arguments="{[event.idproveedor.toString(),1,12,'2010','Anual','','']}"-->
			<!--arguments="{[event.idproveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"-->
<!--			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setMorosidad"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultMorosidad"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
			
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{DatosGeneralesEconomicos}">
		<mate:PropertyInjector targetKey="obtenerMorosidad"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="morosidad"
							   />
	</mate:Injectors>-->
	
<!--	<mate:EventHandlers type="{EventoTableroProveedores.OBTENER_ADEUDO_POR_ID}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.FACTURA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerAdeudoPorId"
								  arguments="{[event.idProveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"
								  showBusyCursor="true">-->
			<!-- arguments="{[event.idproveedor.toString(),1,12,'2010','Anual','','']}"-->
			<!--arguments="{[event.idproveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"-->
<!--			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setAdeudoProveedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultAdeudo"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
			
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{DatosGeneralesEconomicos}">
		<mate:PropertyInjector targetKey="obtenerAdeudoPorId"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="adeudoProveedor"
							   />
	</mate:Injectors>-->
	
	
<!--	<mate:EventHandlers type="{EventoTableroProveedores.OBTENER_FACTURAS_POR_ID}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.FACTURA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerFacturasPorId"
								  arguments="{[event.idProveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"
								  showBusyCursor="true">-->
			<!-- arguments="{[event.idproveedor.toString(),1,12,'2010','Anual','','']}"-->
			<!--arguments="{[event.idproveedor,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"-->
<!--			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setFacturasProveedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultFacturas"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
			
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{DatosGeneralesEconomicos}">
		<mate:PropertyInjector targetKey="obtenerFacturasPorId"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="facturaProveedor"
							   />
	</mate:Injectors>-->
	
<!--Topten Productos Grafica-->	
<!--	<mate:EventHandlers type="{EventoTableroProveedores.TOP_TEN_PRODUCTOS}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.PRODCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="topTenProductosGrafica"
								  arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
								  showBusyCursor="true">-->
			<!--arguments="{[event.provee,event.mesInicio,event.mesFin,event.anio,event.tipoeriodo,event.periodo,event.mes]}"-->
<!--			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setDescripcionTopTenProductosGrafica"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{MiniTop10Producos}">
		
		<mate:PropertyInjector targetKey="topTenProductosGrafica"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="descripcionTopTenProductosGrafica"
							   />
	</mate:Injectors>
	
	<mate:Injectors				target="{MaxGaficaTop10Productos}">
		<mate:PropertyInjector targetKey="topTenProductosGrafica"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="descripcionTopTenProductosGrafica"
							   />
	</mate:Injectors>-->
	
<!--Topten Productos Tabla y Grafica-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.PRODCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerProductosXIdProveedor"
								  arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setDescripcionTopTenProductosTabla"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{MaxGaficaTop10Productos}">
		<mate:PropertyInjector targetKey="topTenProductosTabla"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="descripcionTopTenProductosTabla"
							   />
	</mate:Injectors>
	<mate:Injectors				target="{MiniTop10Producos}">
		
		<mate:PropertyInjector targetKey="topTenProductosGrafica"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="descripcionTopTenProductosTabla"
							   />
	</mate:Injectors>
	<mate:Injectors				target="{MaxGaficaTop10Productos}">
		
		<mate:PropertyInjector targetKey="topTenProductosGrafica"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="descripcionTopTenProductosTabla"
							   />
	</mate:Injectors>

	<!--TopTen Clientes grafica-->
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<mate:RemoteObjectInvoker   destination="{Destinos.PEDIDO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerPedidosXIdProveedor"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes, false]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setClientesGraficaProv"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MinTop10Clientes}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="clientesGraficaProv"
							   targetKey="obtenerClientesTopProvGrafica"/>
	</mate:Injectors>	
	
	<mate:Injectors				target="{MaxTop10Clientes}">
		<mate:PropertyInjector targetKey="obtenerClientesTopProvGrafica"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="clientesGraficaProv"
							   />
	</mate:Injectors>
	
<!--TopTen Clientes Tabla-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<mate:RemoteObjectInvoker   destination="{Destinos.PEDIDO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerPedidosXIdProveedor"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes, false]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setClientesTablaProv"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MaxTop10Clientes}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="clientesTablaProv"
							   targetKey="obtenerClientesTopProvTabla"/>
	</mate:Injectors>	
	
<!-- OCRecibidas Grafica-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.PARTIDA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPartidasCompraRecibidasXMes"
								  arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setPartidasEnTiempo"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{MiniOCRecibida}">
		<mate:PropertyInjector targetKey="obtenerPartidasEnTiempo"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="partidasEnTiempo"
							   />
	</mate:Injectors>
	
	<mate:Injectors		   target="{MaxOCRecibido}">
		<mate:PropertyInjector targetKey="obtenerPartidasEnTiempo"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="partidasEnTiempo"
							   />
	</mate:Injectors>
<!--OCRecibidas Tabla-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		
		<mate:RemoteObjectInvoker destination="{Destinos.PARTIDA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPartidasCompraProveedorRecibidas"
								  arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"								  
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOrdenCompraRecibida"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{MaxOCRecibido}">
		<mate:PropertyInjector targetKey="obtenerPartidasCompraEnTyFT"
							   source="{ModeloTableroProveedores}" 
							   sourceKey="ordenCompraRecibida"
							   />
	</mate:Injectors>
	
	
<!--   OCTransito  Tabla-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
				<mate:RemoteObjectInvoker   destination="{Destinos.PARTIDA_COMPRA_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerPartidasCompraProveedorTransito"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
									showBusyCursor="true">
				<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOCenTransito"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
			<mate:MethodInvoker generator="{ModeloTableroProveedores}"
								method="faultProducto"
								arguments="{fault}"/>
			
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MaxOCenTransito}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocEnTransito"
							   targetKey="obtenerOCEnTransito"/>
	</mate:Injectors>
	
	<!--  OCTransito  Grafica-->		
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
	<!--<mate:RemoteObjectInvoker instance="{servicio.servicioOCTransitoGrafica}"
								  method="ocTransitoGrafica" 
								  showBusyCursor="true"> --><!--method es la funcion que regresa de Mock-->
			<mate:RemoteObjectInvoker   destination="{Destinos.PARTIDA_COMPRA_SERVICE}" 
										endpoint="{Destinos.END_POINT}"
										method="obtenerPartidasCompraTransitoXMes"  
										arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"  
										showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOCenTransitoGraf"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MiniOCenTransito}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocEnTransitoGrafica"
							   targetKey="obtenerOCEnTransitoGraf"/>
	</mate:Injectors>
	<mate:Injectors            target="{MaxOCenTransito}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocEnTransitoGrafica"
							   targetKey="obtenerOCEnTransitoGraf"/>
	</mate:Injectors>
	
	<!--   Rechazo  -->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<mate:RemoteObjectInvoker   destination="{Destinos.PARTIDA_COMPRA_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerPartidasCompraRechazadas"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOCRechazadas"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MaxOCRecahzados}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocRechazadas"
							   targetKey="obtenerOCRechazados"/>
	</mate:Injectors>
	<mate:Injectors            target="{MiniRechazados}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocRechazadas"
							   targetKey="obtenerOCRechazados"/>
	</mate:Injectors>
	<mate:Injectors            target="{MaxOCRecahzados}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocRechazadas"
							   targetKey="obtenerOCRechazadosGrafica"/>
	</mate:Injectors>
	
	<!--  Rechazo  Grafica-->		
<!--	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">-->
		<!--<mate:RemoteObjectInvoker instance="{servicio.servicioOCTransitoGrafica}"
		method="ocTransitoGrafica" 
		showBusyCursor="true"> --><!--method es la funcion que regresa de Mock-->
<!--		<mate:RemoteObjectInvoker   destination="{Destinos.PARTIDA_COMPRA_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerPartidasCompraTransitoXMes"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOCenTransitoGraf"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>-->
<!--	<mate:Injectors            target="{MiniOCenTransito}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocEnTransitoGrafica"
							   targetKey="obtenerOCEnTransitoGraf"/>
	</mate:Injectors>-->
<!--	<mate:Injectors            target="{MaxOCenTransito}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocEnTransitoGrafica"
							   targetKey="obtenerOCEnTransitoGraf"/>
	</mate:Injectors>-->
	
	<!--  Compras  Grafica-->		
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<!--<mate:RemoteObjectInvoker instance="{servicio.servicioOCTransitoGrafica}"
		method="ocTransitoGrafica" 
		showBusyCursor="true"> --><!--method es la funcion que regresa de Mock-->
		<mate:RemoteObjectInvoker   destination="{Destinos.COMPRA_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerComprasConfirmadas"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOCCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MiniOCconfirmadasCanceladas}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocCompras"
							   targetKey="obtenerOCCompras"/>
	</mate:Injectors>
	<mate:Injectors            target="{MAXOCconfirmadasCanceladas}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocCompras"
							   targetKey="obtenerOCCompras"/>
	</mate:Injectors>	
	
	<!--   Compras  Tabla-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<mate:RemoteObjectInvoker   destination="{Destinos.COMPRA_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerComprasConfirmadasXProveedor"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setOCComprasTabla"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MAXOCconfirmadasCanceladas}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="ocComprasTabla"
							   targetKey="obtenerOCComprasTabla"/>
	</mate:Injectors>

	<!--  Pagos  Grafica-->		
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<!--<mate:RemoteObjectInvoker instance="{servicio.servicioOCTransitoGrafica}"
		method="ocTransitoGrafica" 
		showBusyCursor="true"> --><!--method es la funcion que regresa de Mock-->
		<mate:RemoteObjectInvoker   destination="{Destinos.PAGO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerCantidadPagosXIdProveedor"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MiniPagosOC}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="obtenerPagos"
							   targetKey="obtenerPagosGrafica"/>
	</mate:Injectors>
	<mate:Injectors            target="{MaxPagosOC}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="obtenerPagos"
							   targetKey="obtenerPagosGrafica"/>
	</mate:Injectors>	
	
	<!--   Pagos  Tabla-->	
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<mate:RemoteObjectInvoker   destination="{Destinos.PAGO_PROVEEDOR_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerPagoXIdProveedor"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setPagosTabla"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            target="{MaxPagosOC}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="pagosTabla"
							   targetKey="obtenerPagosTabla"/>
	</mate:Injectors>	
	
	<!--  Aviso de Cambios  Grafica y tabla-->		
	<mate:EventHandlers type="{EventoTableroProveedores.BUSCAR_DATOS_GENERALES_PROVEEDORES}">
		<!--<mate:RemoteObjectInvoker instance="{servicio.servicioOCTransitoGrafica}"
		method="ocTransitoGrafica" 
		showBusyCursor="true"> --><!--method es la funcion que regresa de Mock-->
		<mate:RemoteObjectInvoker   destination="{Destinos.CONSULTA_AVISO_DE_CAMBIOS}" 
									endpoint="{Destinos.END_POINT}"
									method="consultaAvisoDeCambiosPorProveedorTablero"  
									arguments="{[event.idProveedor,event.anioInt,event.periodo,event.tipoPeriodo,event.mes]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="setAvisoDeCambios"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProveedores}"
									method="faultProducto"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors            targets="{[MiniAvisoDeCambios , MaxAvisoDeCambios]}">
		<mate:PropertyInjector source="{ModeloTableroProveedores}"
							   sourceKey="obtenerAvisoDeCambios"
							   targetKey="obtenerAvisoDCambiosGrafica"/>
	</mate:Injectors>	
	
</mate:EventMap>
