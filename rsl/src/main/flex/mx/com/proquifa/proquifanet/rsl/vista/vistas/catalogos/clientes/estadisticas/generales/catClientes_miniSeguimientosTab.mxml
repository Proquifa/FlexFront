<?xml version="1.0" encoding="utf-8"?>
<comun:contenedorCatalogosTableroMiniChart 
	xmlns:componentes = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
	xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.comun.*"
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="100%" height="100%"
	titulo="SEGUIMIENTOS"
	
	>
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="300"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.seguimientosTab.SeguimientosToolTip;
			
			
			private const _tamanioMinimo:int = 170;
			
			private var _listaMensual:ArrayCollection = new ArrayCollection
				([
					"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
				]);
			
			private var _listaQuincenal:ArrayCollection = new ArrayCollection
				([
					{11:"11",valor:"1ra. Enero"},{12:"12",valor:"2da. Enero"},{21:"21",valor:"1ra. Febrero"},{22:"22",valor:"2da. Febrero"},{31:"31",valor:"1ra. Marzo"},{32:"32",valor:"2da. Marzo"},{41:"41",valor:"1ra. Abril"},
					{42:"42",valor:"2da. Abril"},{51:"51",valor:"1ra. Mayo"},{52:"52",valor:"2da. Mayo"},{61:"61",valor:"1ra. Junio"},{62:"62",valor:"2da. Junio"},{71:"71",valor:"1ra. Julio"},{72:"72",valor:"2da. Julio"},{81:"81",valor:"1ra. Agosto"},{82:"82",valor:"2da. Agosto"},
					{91:"91",valor:"1ra. Septiembre"},{92:"92",valor:"2da. Septiembre"},{101:"101",valor:"1ra. Octubre"},{102:"102",valor:"2da. Octubre"},{111:"111",valor:"1ra. Noviembre"},{112:"112",valor:"2da. Noviembre"},{121:"121",valor:"1ra. Diciembre"},{122:"122",valor:"2da. Diciembre"}
				]);
			
			
			public function set recibeInfoSeguimientos( $lista:ArrayCollection ):void
			{
				if($lista == null ) 
					return;
				
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( $lista, "etiqueta", "SEGUIMIENTO_0") ); 
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				objeto = new Object();
				objeto.seguimientoAET = 0;
				objeto.seguimientoAFT = 0;
				objeto.seguimientoCET = 0;
				objeto.seguimientoCFT = 0;
				objeto.totalA = 0;
				objeto.totalC = 0;
				objeto.montoTotalA = 0;
				objeto.montoTotalC = 0;
				objeto.montoTotalAET = 0;
				objeto.montoTotalAFT = 0;
				objeto.montoTotalCET = 0;
				objeto.montoTotalCFT = 0;
				
				for( var m:int = 0; m < $lista.length;m++ )
				{
					var segCot:ResumenConsulta = $lista[m] as ResumenConsulta;
					
					if( segCot.conceptoResultado == "FUERA TIEMPO ABIERTA" || segCot.conceptoResultado == "EN TIEMPO ABIERTA" )
					{
						objeto.montoTotalA += segCot.total;
					}
					else if( segCot.conceptoResultado == "FUERA TIEMPO CERRADA" || segCot.conceptoResultado == "EN TIEMPO CERRADA" )
					{
						objeto.montoTotalC += segCot.total;
					}
					
					if( segCot.conceptoResultado == "EN TIEMPO ABIERTA" )
					{
						objeto.seguimientoAET += segCot.piezasTotal;
						objeto.montoTotalAET += segCot.total;
					}
					else if( segCot.conceptoResultado == "FUERA TIEMPO ABIERTA" )
					{
						objeto.seguimientoAFT += segCot.piezasTotal;
						objeto.montoTotalAFT += segCot.total;
					}
					else if( segCot.conceptoResultado == "EN TIEMPO CERRADA" )
					{
						objeto.seguimientoCET += segCot.piezasTotal;
						objeto.montoTotalCET += segCot.total;
					}
					else if( segCot.conceptoResultado == "FUERA TIEMPO CERRADA" )
					{
						objeto.seguimientoCFT += segCot.piezasTotal;
						objeto.montoTotalCFT += segCot.total;
					}
				}
				objeto.totalA = objeto.seguimientoAET + objeto.seguimientoAFT;
				objeto.totalC = objeto.seguimientoCET + objeto.seguimientoCFT;
				objeto.seguimientoAETLabel = objeto.seguimientoAET + "ET";
				objeto.seguimientoAFTLabel = objeto.seguimientoAFT+ "FT";
				objeto.seguimientoCETLabel = objeto.seguimientoCET + "ET";
				objeto.seguimientoCFTLabel = objeto.seguimientoCFT+ "FT";
				arrReturn.addItem(objeto);
				return arrReturn;
			}
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = String( $valor );
				return strRegreso;
			}
			public function set limpiarGraficas( $limpiar:Boolean ):void
			{
				
				myChart.dataProvider = new ArrayCollection;
			}		
			
		]]>
	</fx:Script>
	<comun:contenido>
		<s:VGroup width="100%" height="100%" horizontalAlign="right" paddingTop="50" paddingBottom="10" >
			<mx:ColumnChart width="100%" height="100%" id="myChart" 
							showDataTips="true" dataTipMode="single"  
							paddingRight="{ width > _tamanioMinimo ? 40 : 5}"
							paddingLeft="{ width > _tamanioMinimo ? 20 : 5}"
							dataTipRenderer="{SeguimientosToolTip}" showDataTipTargets="false"
							mouseSensitivity="5" seriesFilters="[]"
							>
				<mx:series>
					<mx:ColumnSet type="stacked" showErrorTip="false">
						<mx:ColumnSeries id="serieAFT"
										 yField="seguimientoAFT" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieAET"
										 yField="seguimientoAET" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
					<mx:ColumnSet>
					</mx:ColumnSet>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieCFT"
										 yField="seguimientoCFT"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieCET" 
										 yField="seguimientoCET"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vMes" categoryField="mes" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad" baseAtZero="true" labelFunction="formateoEje"/> 
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad}" showLine="false" showLabels="{ width > _tamanioMinimo ? true : false}" tickPlacement="none" styleName="axisVerticalLabels" />
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vMes}" showLabels="false" showLine="false"/>
				</mx:horizontalAxisRenderers>
				
				<mx:backgroundElements>
					<mx:GridLines visible="{ width > _tamanioMinimo ? true: false}">
						<mx:horizontalStroke>
							<s:SolidColorStroke weight="0.5" color="0xeeeeee" />
						</mx:horizontalStroke>
					</mx:GridLines>
				</mx:backgroundElements>
			</mx:ColumnChart>
			<componentes:horizontalAxisChartPq id="barraX" text="ABIERTAS / CERRADAS" width="100%" horizontalCenter="0" 
											   paddingRight="{ width > _tamanioMinimo ? 40 : 5}" paddingLeft="{ width > _tamanioMinimo ? 40 : 5}" />
		</s:VGroup>
	</comun:contenido>
	
</comun:contenedorCatalogosTableroMiniChart>
