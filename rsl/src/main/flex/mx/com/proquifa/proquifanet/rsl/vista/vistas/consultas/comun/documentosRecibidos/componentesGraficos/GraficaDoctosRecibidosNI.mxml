<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		 xmlns:graficas="skins.skin.graficas.*"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DocumentoRecibido;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			private var keys:Object;
			private var _infoNI:ArrayCollection;
			private var _totalClie: int = 0;
			public function set recibirDocumentos($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) return ;
				
				_infoNI = new ArrayCollection();
				myChart.dataProvider = new ArrayCollection();
				_totalClie = 0;
				if($infoGrafica.length >0){
					
					/**
					 * Se obtiene un array del ArrayCollection con el fin de aplicar funciones espécificas de los Arrays como el ordenar
					 * */
					var arrayTemp:Array = new Array();
					arrayTemp = (ObjectUtil.copy($infoGrafica) as ArrayCollection).source;
					/**
					 * Se elimina el último elemento del arreglo que trae el conteo de las filas.
					 * */
					if(arrayTemp.length>1)
						// arrayTemp.pop();
					
					arrayTemp.sortOn("nivelIngreso");
					
					/**
					 * Se obtiene un array con todos los nombres de Empresa sin duplicarse, que será el que controlará el for para las sumas.
					 * */
					keys = new Object();
					
					var arrayTotalNIngreso:Array = new Array();
					arrayTotalNIngreso = arrayTemp.filter(quitaDuplicados);
					
					FormarLosNivelIngreso(arrayTotalNIngreso,arrayTemp,_infoNI);
					
					myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoNI,null,'totalDocumentos', _totalClie);
					
					//Para liberar Memoria
					arrayTemp = new Array();
					arrayTotalNIngreso = new Array();
					keys = new Object();
				}
			}
			private function FormarLosNivelIngreso(TotalNingresos:Array,NingresoInfo:Array,infoNIngreso:ArrayCollection):void
			{
				var totalDoctoRecibido:int;
				var currentDoctoRecibido:DocumentoRecibido; 
				var j:int;
				var totalClientes:int;
				var itemResumenConsulta:ResumenConsulta;
				var keysC = new Object();
				for(var i:int =0; i<TotalNingresos.length; i++){
					j=0;
					totalDoctoRecibido =0;
					totalClientes =0;
					keys = new Object();
					currentDoctoRecibido = NingresoInfo[j] as DocumentoRecibido;
					while( (TotalNingresos[i] as DocumentoRecibido).nivelIngreso == currentDoctoRecibido.nivelIngreso ){
						
						totalDoctoRecibido++;
						if(!keysC.hasOwnProperty(currentDoctoRecibido.nombreEmpresa)){
							keysC[currentDoctoRecibido.nombreEmpresa] = currentDoctoRecibido.nombreEmpresa;
							_totalClie++;
						}
						if(!keys.hasOwnProperty(currentDoctoRecibido.nombreEmpresa)){
							keys[currentDoctoRecibido.nombreEmpresa] = currentDoctoRecibido.nombreEmpresa;
							totalClientes++;
						}
						
						NingresoInfo.shift();
						if(NingresoInfo.length >0)
							currentDoctoRecibido = NingresoInfo[j] as DocumentoRecibido;
						else
							currentDoctoRecibido =new DocumentoRecibido();
					}
					
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta.etiqueta = (TotalNingresos[i] as DocumentoRecibido).nivelIngreso.toLocaleUpperCase();
					itemResumenConsulta.totalClientes = totalClientes;
					itemResumenConsulta.totalDocumentos = totalDoctoRecibido;
					
					infoNIngreso.addItem(ObjectUtil.copy(itemResumenConsulta));
				}
			}
			public function quitaDuplicados(item:DocumentoRecibido, idx:uint, nivelIngreso:Array):Boolean{
				if (keys.hasOwnProperty(item.nivelIngreso)) {
					return false;
				} else {
					keys[item.nivelIngreso] = item.nivelIngreso;
					return true;
				}
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" gap="0">
		<s:Spacer width="100%" height="48%"/>
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%" 
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5"> 
			<graficas:series>
				<graficas:pieSeriesPqNet field="totalDocumentos"/> <!--piezasTotal-->
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="6%"/>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" verticalAlign="middle" height="5%">	
			<componentes:tituloChartTablero width="100%" text="NIVEL DE INGRESO" textAlign="center"/>
		</s:VGroup>
	</s:VGroup>
</s:Group>
