<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				width="100%" autoDrawBackground="false"
				>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.TiempoProceso;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroEjecucion_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroGeneralSC_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroGeneral_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroHistorial_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroMonitoreo_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroProgramacion_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroRecoleccionCheque_ConsultaFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.itemCobro.itemCobroSolicitud_ConsultaFacturacion;
			
			
			private var _inspectorCobroGeneral:itemCobroGeneral_ConsultaFacturacion = new itemCobroGeneral_ConsultaFacturacion();
			private var _inspectorCobroGeneralSC:itemCobroGeneralSC_ConsultaFacturacion = new itemCobroGeneralSC_ConsultaFacturacion();
			private var _inspectorCobroProgramacion:itemCobroProgramacion_ConsultaFacturacion = new itemCobroProgramacion_ConsultaFacturacion();
			private var _inspectorCobroSolicitud:itemCobroSolicitud_ConsultaFacturacion = new itemCobroSolicitud_ConsultaFacturacion();
			private var _inspectorCobroEjecucion:itemCobroEjecucion_ConsultaFacturacion = new itemCobroEjecucion_ConsultaFacturacion();
			private var _inspectorCobroMonitoreo:itemCobroMonitoreo_ConsultaFacturacion = new itemCobroMonitoreo_ConsultaFacturacion();
			
			private var _inspectorRecoleccionCheque:itemCobroRecoleccionCheque_ConsultaFacturacion = new itemCobroRecoleccionCheque_ConsultaFacturacion();
			
			private var _inspectorCobroHistorial:itemCobroHistorial_ConsultaFacturacion = new itemCobroHistorial_ConsultaFacturacion();
			
			override public function set data(value:Object):void
			{
				
				var currentItem:Object = value;
				
				super.data = currentItem; 
				procesos.removeAllElements();
				
				if(currentItem.etapa == 'COBRO_GRAL')
				{
					_inspectorCobroGeneral._cobroGeneral = currentItem as TiempoProceso;
					procesos.addElement( _inspectorCobroGeneral);
					
				}
				else if( currentItem.etapa == 'GENERALES')
				{
					_inspectorCobroGeneralSC._cobroGeneralSC = currentItem as TiempoProceso;
					procesos.addElement(_inspectorCobroGeneralSC);
					
				}
				else if( currentItem.etapa == 'COBRO_PROGR')
				{
					_inspectorCobroProgramacion.grpTC.visible =_inspectorCobroProgramacion.grpTC.includeInLayout = false; 
					_inspectorCobroProgramacion.lblTituloTipoCambio.visible = _inspectorCobroProgramacion.lblTituloTipoCambio.includeInLayout = false;
					_inspectorCobroProgramacion.lblTipoCambio.visible = _inspectorCobroProgramacion.lblTipoCambio.includeInLayout = false;
					
					if(currentItem.cobro == 'M.N.')
					{
						_inspectorCobroProgramacion.grpTC.visible =_inspectorCobroProgramacion.grpTC.includeInLayout = true; 
						
						if(currentItem.doscResult1 == null || currentItem.doscResult1 == 'Pendiente' || currentItem.doscResult1 =='ND')
						{
							_inspectorCobroProgramacion.lbltc.text = currentItem.cobro;
						}
						else
						{
							_inspectorCobroProgramacion.lbltc.text = '$ '+ UtilsFormatosNumericos.precisionADosDecimalesConComas(parseInt(currentItem.doscResult1))+ ' M.N.';
						}
						
					}
					else
					{
						_inspectorCobroProgramacion.lblTituloTipoCambio.visible = _inspectorCobroProgramacion.lblTituloTipoCambio.includeInLayout = true;
						_inspectorCobroProgramacion.lblTipoCambio.visible = _inspectorCobroProgramacion.lblTipoCambio.includeInLayout = true;
					} 
					_inspectorCobroProgramacion._cobroProgramacion = currentItem as TiempoProceso;
					procesos.addElement(_inspectorCobroProgramacion);
					
				}
				else if( currentItem.etapa == 'COBRO_EJECU')
				{
					if(data.fechaProgramacion != null)
					{
						if(data.comentarios == 'Realizada')
						{
							_inspectorCobroEjecucion.etqComentario.visible = _inspectorCobroEjecucion.etqComentario.includeInLayout = true;
							_inspectorCobroEjecucion.lblComentarios.visible = _inspectorCobroEjecucion.lblComentarios.includeInLayout = true;
						}
						else
						{
							_inspectorCobroEjecucion.etqComentario.visible = _inspectorCobroEjecucion.etqComentario.includeInLayout = false;
							_inspectorCobroEjecucion.lblComentarios.visible = _inspectorCobroEjecucion.lblComentarios.includeInLayout = false;
						}
						
						_inspectorCobroEjecucion._cobroEjecucion = currentItem as TiempoProceso;
						procesos.addElement(_inspectorCobroEjecucion);	
					}
				}
				else if( currentItem.etapa == 'COBRO_MONITOREO')
				{
					if( currentItem.doscResult1 == null || currentItem.doscResult1 == 'Pendiente' || currentItem.doscResult1 == 'ND')
					{
						_inspectorCobroMonitoreo.lbl_CPagosMonitoreo.visible = _inspectorCobroMonitoreo.lbl_CPagosMonitoreo.includeInLayout = true;
						_inspectorCobroMonitoreo.lnkCPagosMonitoreo.visible = _inspectorCobroMonitoreo.lnkCPagosMonitoreo.includeInLayout = false; 
					}
					else
					{
						_inspectorCobroMonitoreo.lnkCPagosMonitoreo.visible = _inspectorCobroMonitoreo.lnkCPagosMonitoreo.includeInLayout = true; 
						_inspectorCobroMonitoreo.lbl_CPagosMonitoreo.visible = _inspectorCobroMonitoreo.lbl_CPagosMonitoreo.includeInLayout = false;
					}
					
					if(currentItem.fechaProgramacion == null)
					{
						if(currentItem.monto <= 0)
							_inspectorCobroMonitoreo.lblMontoCobradoMon.text = 'Pendiente';
					}
					else
					{
						if(currentItem.monto <= 0)
						{
							_inspectorCobroMonitoreo.lblMontoCobradoMon.text = 'ND';
						}
						else
						{
							_inspectorCobroMonitoreo.lblMontoCobradoMon.text ='$ '+UtilsFormatosNumericos.precisionADosDecimalesConComas(currentItem.monto)+' ' +currentItem.comentarios; 
						}
					}
					_inspectorCobroMonitoreo._cobroMonitoreo = currentItem as TiempoProceso;
					_inspectorCobroMonitoreo.valida( currentItem as TiempoProceso );
					procesos.addElement(_inspectorCobroMonitoreo);
					
				}
				else if( currentItem.etapa == 'SOLICITUD_RECOLECCION' )
				{
					if(data.fechaRevision != null)
					{
						_inspectorCobroSolicitud.recibeInformacion( currentItem as TiempoProceso );
					} 
					procesos.addElement( _inspectorCobroSolicitud);	
					_inspectorCobroSolicitud.recibeInformacion( currentItem as TiempoProceso );
					
				}
				else if( currentItem.etapa == 'RECOLECCION_CHEQUE')
				{
					procesos.addElement( _inspectorRecoleccionCheque );
					_inspectorRecoleccionCheque.recibeInformacion( currentItem as TiempoProceso );
				}
				else if( currentItem.etapa == 'COBRO_HISTORIAL')
				{
					this._inspectorCobroHistorial._cobroHistorial = data.historial; 
					if(data.numFila == 0) procesos.addElement(_inspectorCobroHistorial);
				}  
			}
		]]>
	</fx:Script>
	<s:VGroup id="procesos" width="100%" height="100%"/>
</s:ItemRenderer>
