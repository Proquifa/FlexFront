<?xml version="1.0" encoding="utf-8"?>
<contenedores:VGroupConPaddingStandardPqNet
		 xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:contenedores="skins.skin.contenedores.*"
		 xmlns:label="skins.skin.label.*" 
		 xmlns:otros="skins.otros.*"
		 gap="10" width="100%" height="100%"
		 creationComplete="catPro_Estadisticas_Generales_creationCompleteHandler(event)"
		 
		 >
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.estadisticas.EventoCatClientes_EstadisticasGenerales;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.estadisticas.EventoCatProEstadisticasGenerales;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.proveedor.ParametrosBusquedaProveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.estadisticas.generales.catClientes_popUpInicio;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			import mx.managers.PopUpManager;
			
			import spark.components.VGroup;
			import spark.primitives.Rect;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			private var _usuario:Empleado = DatosGlobales.getInstance()._usuario;
			public var _popUpAgregarMarca:catPro_popUpInicio;
			
			[Embed (source="skins/imagenes/iconos/botones/botoneras/actualizar.png")]
			private var imgNormal:Class;
			
			[Embed (source="skins/imagenes/iconos/botones/botoneras/actualizarverde.png")]
			private var imgDown:Class;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if (_popUpAgregarMarca )
				{
					_popUpAgregarMarca.x = (this.stage.stageWidth - (((this.stage.stageWidth * 68)/100)/2))-(_popUpAgregarMarca.width/2)-40;
					_popUpAgregarMarca.y = (this.stage.stageHeight/2)-(_popUpAgregarMarca.height/2);  
				}
			}
			
			protected function mostrarPopUp($evt:EventoCatProEstadisticasGenerales):void
			{
				dispatchEvent(new EventoCatProEstadisticasGenerales(EventoCatProEstadisticasGenerales.MOSTRAR_POPUP))
			}
			
			public function popUpInicio():void
			{
				var app:DisplayObject = FlexGlobals.topLevelApplication as DisplayObject;
				_popUpAgregarMarca = catPro_popUpInicio(PopUpManager.createPopUp(app,catPro_popUpInicio,true));
				_popUpAgregarMarca.removeEventListener(EventoCatProEstadisticasGenerales.OBTENER_ESTADISTICAS_GENERALES,obtenerInfo);
				_popUpAgregarMarca.addEventListener(EventoCatProEstadisticasGenerales.OBTENER_ESTADISTICAS_GENERALES,obtenerInfo,false,0,true);
				_popUpAgregarMarca.removeEventListener(EventoCatProEstadisticasGenerales.CANCELAR_POPUP,mostrarPopUp);
				_popUpAgregarMarca.addEventListener(EventoCatProEstadisticasGenerales.CANCELAR_POPUP,mostrarPopUp,false,0,true);
				PopUpManager.centerPopUp(_popUpAgregarMarca);
				
				_popUpAgregarMarca.x = (this.stage.stageWidth - (((this.stage.stageWidth * 68)/100)/2))-(_popUpAgregarMarca.width/2)-40;
				_popUpAgregarMarca.y = (this.stage.stageHeight/2)-(_popUpAgregarMarca.height/2);  
			
			}
			
			public function obtenerInfo($evt:EventoCatProEstadisticasGenerales):void{
				imgActualizar.visible = true;
				imgActualizar.source = imgDown;
				setTimeout(iniciarVista, 100);
				
			}
			
			public function iniciarVista():void
			{
				
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("consultaProveedor");
				eventEspera.tipoEventos.push("BUSCA_GRAFICAS_DE_TABLERO_PROVEEDOR");
				eventEspera.tipoEventos.push("BUSCAR_MONTO_ACUMULADO");
				dispatchEvent(eventEspera);
				
				
				var solicitarMontoAcumulado:EventoCatProEstadisticasGenerales = new EventoCatProEstadisticasGenerales(EventoCatProEstadisticasGenerales.BUSCAR_MONTO_ACUMULADO);
				var parametro:ParametrosBusquedaProveedor = new ParametrosBusquedaProveedor();
				parametro.anio = new Date().getFullYear();
				parametro.idProveedor = _currentProveedor.idProveedor;
				solicitarMontoAcumulado.parametros = parametro;
				dispatchEvent(solicitarMontoAcumulado);
				
				
				
				var soliInfoTabProveedor:EventoCatProEstadisticasGenerales = new EventoCatProEstadisticasGenerales(EventoCatProEstadisticasGenerales.BUSCA_GRAFICAS_DE_TABLERO_PROVEEDOR);
				var par:ParametrosBusquedaProveedor = new ParametrosBusquedaProveedor();
				par.idProveedor = currentProveedor.idProveedor;
				par.idUsuario = 0;
				par.valorAdicional = "PROVEEDOR";
				par.anio = new Date().getFullYear();
				par.periodo = "Anual";
				par.tipoPeriodo = 0;
				par.mesInicio = 1;
				par.mesFin = 12;
				par.mes = 0;
				soliInfoTabProveedor.parametros = par;
				dispatchEvent(soliInfoTabProveedor);
			}
			
			
			
			private var _currentProveedor:Proveedor;
			
			public function get currentProveedor():Proveedor
			{
				return _currentProveedor;
			}

			public function set currentProveedor(value:Proveedor):void
			{
				_currentProveedor = value;
			}
			
			
			private var arrayTodasLasGraficas:ArrayCollection;
			protected function catPro_Estadisticas_Generales_creationCompleteHandler(event:FlexEvent):void
			{
				arrayTodasLasGraficas = new ArrayCollection;
				arrayTodasLasGraficas.addItem(new catPro_MiniTop50Productos());
				arrayTodasLasGraficas.addItem(new catPro_MiniTop10Cliente());
				arrayTodasLasGraficas.addItem(new catPro_MiniOCTransito());
				arrayTodasLasGraficas.addItem(new catPro_MiniOCRecibidas());
				arrayTodasLasGraficas.addItem(new catPro_MiniRechazos());
				arrayTodasLasGraficas.addItem(new catPro_MiniAvisoDeCambio());
				arrayTodasLasGraficas.addItem(new catPro_MiniCompras());
				arrayTodasLasGraficas.addItem(new catPro_MiniPagos());
				arrayTodasLasGraficas.addItem(new catPro_MiniCondicionesDePago());
				arrayTodasLasGraficas.addItem(new catPro_MiniLineaDeCredito());
				
				insertarGraficas(arrayTodasLasGraficas);
				
				//actualizar año actual
				var today_date:Date = new Date();
				var thisyear:uint = today_date.getFullYear();
				this.anioActual.text="Año "+thisyear.toString();
			}
			
			private var rectFondoB:Rect;
			public function insertarGraficas( graficas:ArrayCollection):void{
				contenedorGraficas.removeAllElements();
				if( rectFondoB != null )
					rectFondoB.visible = false;
				
				var relleno:SolidColor = new SolidColor();
				relleno.color = 0xeaeaea;
				if( graficas.length > 0 )
				{
					var iteraciones:int = graficas.length/2;
					var residuo:int = graficas.length%2;
					for(var m:int = 0; m < iteraciones ; m++)
					{
						var contenedor:VGroup = new VGroup();
						contenedor.percentHeight = 100;
						contenedor.percentWidth = 100;
						contenedor.gap = 0;
						contenedor.addElement(graficas[m*2]);
						
						var Hrecta:Rect = new Rect();
						if(m == 0 || m == iteraciones -1 && residuo == 0 )
						{
							Hrecta.percentWidth = 90;
						}
						else
						{
							Hrecta.percentWidth = 100;
						}
						if( m == 0 ) 
							contenedor.horizontalAlign = "right";
						if( m == iteraciones -1 ) 
							contenedor.horizontalAlign = "left";
						
						Hrecta.height = 2;
						Hrecta.fill = relleno;
						Hrecta.verticalCenter = 0;
						contenedor.addElement( Hrecta );
						
						contenedor.addElement(graficas[(m*2)+1]);
						contenedorGraficas.addElement(contenedor);
						
						var Vrecta:Rect = new Rect();
						Vrecta.width = 2;
						Vrecta.percentHeight = 98;
						Vrecta.fill = relleno;
						Vrecta.verticalCenter = 0;
						Vrecta.right = 0;
						if( m < iteraciones-1)
						{
							contenedorGraficas.addElement( Vrecta );
						}
					}
					if(residuo != 0)
					{
						if( graficas.length != 1 )
						{
							var Vrecta2:Rect = new Rect();
							Vrecta2.width = 2;
							Vrecta2.percentHeight = 98;
							Vrecta2.fill = relleno;
							Vrecta2.verticalCenter = 0;
							Vrecta2.right = 0; 
							contenedorGraficas.addElement( Vrecta2 );
						}
						var contenedor2:VGroup = new VGroup();
						contenedor2.percentHeight = 100;
						contenedor2.percentWidth = 100;
						contenedor2.addElement(graficas[graficas.length-1]);
						contenedorGraficas.addElement(contenedor2); 
					}
				}
			}
			
			public function set actualizarEsperaYBloqueo(object:Object):void{
				imgActualizar.source = imgNormal;
			}
			
			protected function actualizar_clickHandler(event:MouseEvent):void
			{
				imgActualizar.source = imgDown;
				iniciarVista();
				
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" verticalAlign="bottom" >
		<s:Image source="{catalogoIconosEtiquetas.getInstance().estadisticasProveedoresGris32x40}"/>
		<label:TituloBankGothic_30 text="VISTA GENERAL"/>
		<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Image id="imgActualizar" source="{catalogoIconosBotones.getInstance().iconoActualizarNormal}" click="actualizar_clickHandler(event)" visible="false"/>
		</s:HGroup>
		<s:Spacer width="100%"/>
		<label:TituloBankGothic_30 id="anioActual" text=""/>
	</s:HGroup>
	<otros:divisionGruesa width="100%"/>
	<s:HGroup id="contenedorGraficas" width="100%" height="100%" verticalAlign="middle"/>
	
</contenedores:VGroupConPaddingStandardPqNet>
