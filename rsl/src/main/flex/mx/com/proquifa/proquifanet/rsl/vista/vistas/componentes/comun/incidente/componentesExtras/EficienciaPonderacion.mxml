<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:label="skins.skin.label.*" xmlns:s="library://ns.adobe.com/flex/spark">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Incidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Accion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.IncidentePonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Ponderacion;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var _incidente:IncidentePonderacion = new IncidentePonderacion();
			//public var _acciones:ArrayCollection = new ArrayCollection();
			
			
			[Bindable]
			public var promedio:Number = 0;
			
			private function actualizargrid(event:Event):void{
				for(var m:int = 0; m< this._incidente.acciones.length;m++){
					if(this._incidente.acciones[m].idAccion == event.currentTarget.accion2.idAccion){
						this._incidente.acciones[m] = event.currentTarget.accion2; 
					}
				}
				this.calcularpromedio();
			}
			
			private function formatofecha(item:Object, column:DataGridColumn):String{
				var fecha:String = "";
				fecha = this.validadorfecha.format(item[column.dataField]);
				return fecha;
			}
			
			private function porcentaje(item:Object, column:DataGridColumn):String{
				var fecha:String = "";
				fecha = item[column.dataField].toString() + "%";
				return fecha;
			}
			/*public function set recibir_AccionesIncidente(incidente:Incidente):void{
			this._incidente = new IncidentePonderacion();
			this._incidente.set_Incidente(incidente);
			//this._acciones = new ArrayCollection();
			this.promedio = 0;
			if(!(isNaN(this._incidente.idIncidente))){
			if(this._incidente.idIncidente != 0){
			calcularpromedio();
			}
			}
			}*/
			
			public function set recibir_PonderacionIncidente(_ponderacion:Ponderacion):void{
				this._incidente = new IncidentePonderacion();
				this._incidente.set_Ponderacion(_ponderacion);
				//this._acciones = new ArrayCollection();
				this.promedio = 0;
				if(!(isNaN(this._incidente.idPonderacion))){
					if((this._incidente.incidente != 0) || (this._incidente.idIncidente != 0)){
						calcularpromedio();
					}
				}
			}
			
			private function calcularpromedio():void{
				this.promedio = 0.0;
				var temp:Number = 0.0;
				for(var m:int = 0;m< this._incidente.acciones.length;m++){
					temp = temp + this._incidente.acciones[m].eficaciaReal;
				}
				this.promedio = temp / this._incidente.acciones.length;
			}
			
			private function cargarimplicados():void{
				var evento:EventoPonderacion = new EventoPonderacion(EventoPonderacion.TRAER_IMPLICADOS_PONDERACION);
				evento._ponderacion = this._incidente.get_Ponderacion();
				this.dispatchEvent(evento);
			}
			
			public function editarAccion(_accion:Accion):void{
				var popupeditar:PopUpEficiencia = new PopUpEficiencia();
				popupeditar = PopUpManager.createPopUp(this,PopUpEficiencia,true) as PopUpEficiencia;
				popupeditar.accion2 = _accion;
				popupeditar.buscar();
				popupeditar.addEventListener("ActualizarGridOportunidad",actualizargrid,false,0,true);
			}
			
			
			/*public function actualizar_ponderacion():void{
			var evento:EventoPonderacion = new EventoPonderacion(EventoPonderacion.ACTUALIZAR_PONDERACION);
			evento._ponderacion = this._incidente.get_Ponderacion();
			this.dispatchEvent(evento);
			}
			
			public function set recibir_actualizarponderacion(_ponderacion:Ponderacion):void{
			trace("algo");
			
			}*/
			
		]]>
	</mx:Script>
	<mx:DateFormatter id="validadorfecha" formatString="DD/MM/YYYY"/>
	<mx:HBox  width="100%">
		<!--<mx:Label width="100%" fontSize="25" text="Eficacia" fontWeight="bold"/>-->
		<label:labelSubtitulo text="Eficacia" width="100%" />
		<mx:VBox   height="100%" verticalAlign="middle">
			<!--<mx:Button verticalCenter="0" label="Implicados" click="cargarimplicados();"/>-->
			<s:Button styleName="botonNegroOld" verticalCenter="0" label="Implicados" click="cargarimplicados();"/>
		</mx:VBox>
	</mx:HBox>
	
	<mx:DataGrid  height="100%" width="100%" dataProvider="{this._incidente.acciones}" >
		<mx:columns>
			<mx:DataGridColumn headerText="#" dataField="numFila"/>
			<mx:DataGridColumn headerText="ACC" dataField="folio"/>
			<mx:DataGridColumn headerText="RealizÃ³" dataField="nombreResponsable"/>
			<mx:DataGridColumn headerText="FER" labelFunction="formatofecha" dataField="fechaEstimadaRealizacion"/>
			<mx:DataGridColumn headerText="FR" labelFunction="formatofecha" dataField="fechaRealizacion"/>
			<mx:DataGridColumn headerText="Atraso" dataField="diasAtraso"/>
			<mx:DataGridColumn headerText="HH" dataField="horasInvertidas"/>
			<mx:DataGridColumn headerText="EE" dataField="eficacia"/>
			<mx:DataGridColumn headerText="EV" dataField="eficaciaVerificacion"/>
			<mx:DataGridColumn headerText="ER" dataField="eficaciaReal"/>
			<mx:DataGridColumn headerText="">
				<mx:itemRenderer>
					<mx:Component>
						<mx:LinkButton  textDecoration="underline" color="#0C4AFC"  label="Editar" click="this['outerDocument'].editarAccion(this.data)" >
							
						</mx:LinkButton>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox width="100%">
		<mx:Label text="Eficacia Global Real" width="50%" textAlign="center" fontWeight="bold"/>
		<mx:Label text="{this.promedio + '%'}" width="50%" textAlign="center"/>
	</mx:HBox>
</mx:VBox>