<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
		 xmlns:graficas="skins.skin.graficas.*"
		 width="100%" height="100%"
		 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PartidaCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			//[Bindable] private var _infoEstados:ArrayCollection = new ArrayCollection();
			
			private var keys:Object;
			public var _currentType:String;
			private  var _infoEstatusET:ArrayCollection;
			private  var _infoEstatusFT:ArrayCollection;
			private var arrayEstatusET:Array = new Array();
			private var arrayEstatusFT:Array = new Array();
			private var totalCotizacion:Object;
			private var total:int = 0;
			
			public function set obtenerFiltroGrafico(tipo:String):void{
				if(_currentType != tipo){
					_currentType = tipo;
					total = 0;
					totalCotizacion = new Object;
					if(_currentType =="ET"){
						if(_infoEstatusET != null ){
							calcularTotales(arrayEstatusET);							
							myChart.dataProvider = myChart.aplicarFormatoConsultas(_infoEstatusET,null,"cotizacionesTotal",true,total);
						}
							
					}
					else if(_currentType =="FT"){
						calcularTotales(arrayEstatusFT);						
						myChart.dataProvider = myChart.aplicarFormatoConsultas(_infoEstatusFT,null,"cotizacionesTotal",true,total);
					}
				}
			}
			
			private function calcularTotales(listaCotiza:Array):void{
				for each (var partida:PartidaCotizacion in listaCotiza) 
				{
					if(!totalCotizacion.hasOwnProperty(partida.cotizacion)){
						totalCotizacion[partida.cotizacion]=1;
						total++;
					}
				}
				
			}
			
			public function set obtenerInfoGrafico($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) return ;
				totalCotizacion = new Object;
				total = 0;
				
				
				//myChart.dataProvider =myChart.aplicarFormatoConsultaCotizaciones(new ArrayCollection());
				
				_infoEstatusET = new ArrayCollection();
				_infoEstatusFT = new ArrayCollection();
				myChart.dataProvider = new ArrayCollection();
				
				var arrayTemp:Array =  new Array();
				arrayTemp = $infoGrafica.source; 
				
				/**
				 * Se dividen todos los Estatus y/o situación que estan en tiempo vs las fuera de tiempo y se ordenan
				 * */ 
			
				
				arrayEstatusET = arrayTemp.filter(ObtenerTodosLosEstatusET);
				arrayEstatusFT = arrayTemp.filter(ObtenerTodosLosEstatusFT);
				arrayEstatusET.sortOn("situacion");
				arrayEstatusFT.sortOn("situacion");
				
				//Para liberar memoria
				arrayTemp = new Array();
				/**
				 * arreglo temporal para controlar el ciclo del for que se encargará de sumar las cantidades de cada Estatus y/o situación,
				 * quitando las duplicados
				 * */
				
				keys= new Object();
				var arrayTotalEstatusET:Array = new Array();
				arrayTotalEstatusET = arrayEstatusET.filter(quitaDuplicados);
				
				keys= new Object();
				var arrayTotalEstatusFT:Array = new Array();
				arrayTotalEstatusFT = arrayEstatusFT.filter(quitaDuplicados);
				
				/**
				 * Se forman los objetos que serán enviados a la grafica, los totales de cada Estatus y/o situación
				 * */
				
				FormarLosEstatus(arrayTotalEstatusET,arrayEstatusET,"ESTATUS_ET",_infoEstatusET);
				FormarLosEstatus(arrayTotalEstatusFT,arrayEstatusFT,"ESTATUS_FT",_infoEstatusFT);
				
				if(_currentType =="ET"){
					calcularTotales(arrayEstatusET);			
					myChart.dataProvider = myChart.aplicarFormatoConsultas(_infoEstatusET,null,"cotizacionesTotal",true,total);
				}
				else{
					calcularTotales(arrayEstatusFT);					
					myChart.dataProvider = myChart.aplicarFormatoConsultas(_infoEstatusFT,null,"cotizacionesTotal",true,total);
				}
				
				//Para liberar memoria
				arrayTotalEstatusET = new Array();
				arrayTotalEstatusFT= new Array();
			}
			
			private function FormarLosEstatus(TotalEstatus:Array,arrayTemp:Array,etiqueta:String,infoEstatus:ArrayCollection):void
			{
				
				var totalPartidas:int;
				var totalPiezas:int;
				var totalCotizaciones:int;
				var totalMonto:Number;
				var totalClientes:int;
				var keysMarca:Object;
				
				var estatusInfo:Array = ObjectUtil.copy(arrayTemp) as Array;
				
				var currentPartidaCoti:PartidaCotizacion; 
				var j:int;
				var itemResumenConsulta:ResumenConsulta;
				for(var i:int =0; i<TotalEstatus.length; i++){
					j=0;
					keys = new Object();
					keysMarca = new Object();
					totalPartidas =0;
					totalPiezas =0;
					totalCotizaciones =0;
					totalMonto =0;
					totalClientes =0;
					currentPartidaCoti = estatusInfo[j] as PartidaCotizacion;
					while( (TotalEstatus[i] as PartidaCotizacion).situacion == currentPartidaCoti.situacion ){
						totalPartidas += currentPartidaCoti.partida;
						totalPiezas += currentPartidaCoti.cantidad;
						totalMonto += currentPartidaCoti.precio;
						
						if(!keys.hasOwnProperty(currentPartidaCoti.cotizacion)){
							keys[currentPartidaCoti.cotizacion]= currentPartidaCoti.cotizacion;
							totalCotizaciones++;
						}
						
						if(!keysMarca.hasOwnProperty(currentPartidaCoti.cliente)){
							keysMarca[currentPartidaCoti.cliente] = currentPartidaCoti.cliente;
							totalClientes++;
						}
						
						estatusInfo.shift();
						if(estatusInfo.length >0)
							currentPartidaCoti = estatusInfo[j] as PartidaCotizacion;
						else
							currentPartidaCoti =new PartidaCotizacion();
					}
					
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta.conceptoResultado = (TotalEstatus[i] as PartidaCotizacion).situacion.toLocaleUpperCase();
					itemResumenConsulta.etiqueta = etiqueta;
					itemResumenConsulta.total = totalMonto;
					itemResumenConsulta.totalClientes = totalClientes;
					itemResumenConsulta.cotizacionesTotal = totalCotizaciones;
					itemResumenConsulta.partidas = totalPartidas;
					itemResumenConsulta.piezasTotal = totalPiezas;
					
					infoEstatus.addItem(ObjectUtil.copy(itemResumenConsulta));
				}
			}
			
			public function quitaDuplicados(item:PartidaCotizacion, idx:uint, _clientes:Array):Boolean{
				if (keys.hasOwnProperty(item.situacion)) {
					return false;
				} else {
					keys[item.situacion] = item.situacion;
					return true;
				}
			}
			private function ObtenerTodosLosEstatusET(item:Object, idx:uint, _clientes:Array):Boolean
			{
				return item.conforme == "SC" ? true : false;
			}
			
			private function ObtenerTodosLosEstatusFT(item:Object, idx:uint, _clientes:Array):Boolean
			{
				return item.conforme == "SNC" ? true : false;
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="0">
		<s:Spacer width="100%" height="10%"/>
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%" 
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5">   
			<graficas:series>
				<graficas:pieSeriesPqNet field="piezasTotal"/>  <!--piezasTotal-->
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="10%"/>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" height="8%" verticalAlign="middle">
			<componentes:tituloChartTablero width="100%" text="ESTADO" textAlign="center"/>
		</s:VGroup>
		<s:Spacer width="100%" height="2%"/>
	</s:VGroup>
</s:Group>