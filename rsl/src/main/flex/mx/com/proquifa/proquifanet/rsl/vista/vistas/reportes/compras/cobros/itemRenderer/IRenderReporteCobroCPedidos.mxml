<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:otros="skins.otros.*" width="100%" height="100%" xmlns:linkButton="skins.skin.linkButton.*" xmlns:spacers="skins.skin.spacers.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Cobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable] private var _color:uint = 0xFFFFFF;
			[Bindable] private var _colorSelect:uint = 0xeaeaea;
			[Bindable] private var _drc:uint;
			[Bindable] private var dias:int = 0;
			override public function set data(value:Object):void{
				super.data = value;
				this.autoDrawBackground= true;
				
				this.vgp1.includeInLayout = this.vgp1.visible = false; 
				this.vgp0.includeInLayout = this.vgp0.visible = true;
				this.borderSuperior.includeInLayout = this.borderSuperior.visible = false;
				this.borderFondo.visible = this.borderFondo.includeInLayout = false;
				this.image.visible = this.image.includeInLayout = false;
				this.lblMoroso.visible = this.lblMoroso.includeInLayout = false;
				this.lbldrc.visible = this.lbldrc.includeInLayout = false;
				elipse.visible = elipse.includeInLayout = true;
				this.lblFEP.visible = this.lblFEP.includeInLayout = true;
				this.lblFEPNA.visible = this.lblFEPNA.includeInLayout = false;
				this.lblCancelada.visible = this.lblCancelada.includeInLayout = false;
				hgVendio.paddingBottom = 0;
				dias = parseInt((data as Cobros).diasRestantesCobro);
				if (dias > 3 ){
					_drc = 0x70a047;//Verde
				}else if(dias > 0 && dias <= 3){
					_drc = 0xFFFF70;//Amarillo
				}else if ((data as Cobros).diasRestantesCobro != "Pendiente" && dias == 0){
					_drc = 0xdd9c12;//Naranja
				}else if (dias < 0 && dias >= -3){
					_drc = 0xd10c0c;//Rojo
				}else if (dias < -3){
					_drc = 0x773F8C;//Morado
				}else{
					elipse.visible = elipse.includeInLayout = false;
				}
				
				if((data as Cobros).estado == 'ultimo'){
					
					this.vgp1.includeInLayout = this.vgp1.visible = true; 
					this.vgp0.includeInLayout = this.vgp0.visible = false;
					_color = 0xf8f8f8;
					_colorSelect = 0xf8f8f8;
					this.autoDrawBackground= false;
				}
				else if ((data as Cobros).estado == 'Cobrada' || (data as Cobros).estado == 'Cancelada' ){
					autoDrawBackground = false;
					_color = 0xf8f8f8;
					_colorSelect = 0xf8f8f8;
					hgVendio.paddingBottom = 10;
					this.lblMoroso.visible = this.lblMoroso.includeInLayout = true;
					this.lbldrc.visible = this.lbldrc.includeInLayout = false;
					if ((data as Cobros).moroso == "SI" ){
						_drc = 0xd10c0c;//Rojo
					}else if ((data as Cobros).moroso == "NO" ){
						_drc = 0x70a047;//Verde
					}else{
						_drc = 0x000000;
						if ((data as Cobros).estado == 'Cancelada' ){
							_drc = 0xd10c0c;//Rojo
							this.lblFEP.visible = this.lblFEP.includeInLayout = false;
							this.lblFEPNA.visible = this.lblFEPNA.includeInLayout = true;
							this.lblCancelada.visible = this.lblCancelada.includeInLayout = true;
						}
						this.lblMoroso.visible = this.lblMoroso.includeInLayout = false;
					}
					
				}
				else if ((data as Cobros).estado == 'finaly' ){
					_color = 0xFFFFFF;
					_colorSelect = 0xeaeaea;
					borderFondo.includeInLayout = borderFondo.visible = true;
					this.image.visible = this.image.includeInLayout = true;
					this.lblMoroso.visible = this.lblMoroso.includeInLayout = false;
					this.lbldrc.visible = this.lbldrc.includeInLayout = true;
					borderSuperior.includeInLayout = borderSuperior.visible = true;
				}
				else{
					_color = 0xFFFFFF;
					_colorSelect = 0xeaeaea;
					borderFondo.includeInLayout = borderFondo.visible = true;
					this.image.visible = this.image.includeInLayout = true;
					this.lblMoroso.visible = this.lblMoroso.includeInLayout = false;
					this.lbldrc.visible = this.lbldrc.includeInLayout = true;
				}
			}
			
			private function verFactura():void{
				var _factura:String  = lblFactura.label.substring(2);
				var _url:URLRequest = new URLRequest();
				var path:Object = Util.rutaFecha(data.fechaFacturacion);
				_url.url = RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA + lblVendio.text +"/" + path.ruta + (data as Cobros).factura + ".pdf";
				navigateToURL(_url);	
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:Group height="100%" width="100%" id="grpPrincipal">
		<s:BorderContainer creationPolicy="all" width="{width}" height="100%" id="borderFondo" borderColor="0xf8f8f8"
						   backgroundColor.normal="{_color}" backgroundColor.hovered="{_colorSelect}" backgroundColor.selected="{_colorSelect}">
		</s:BorderContainer >
		<s:VGroup width="100%" height="100%" id="vgp0" gap="0" >
			<s:HGroup width="100%" height="100%">
				<s:Rect width="6" height="100%" visible="false" visible.selected="true" >
					<s:fill>
						<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}" />
					</s:fill>
				</s:Rect>
				<s:VGroup width="100%" paddingRight="10">
					<s:VGroup id="columnaizq" width="100%" >
						<s:HGroup width="100%" horizontalAlign="left" paddingTop="10" paddingBottom="5">
							<s:Label id="lbcantidad" width="100%" text="# {( data as Cobros).numFila +' · ' + '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares) +' · ' + (data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' pza' : ' pzas')  }" fontSize="13" fontWeight="bold" />
							<s:HGroup width="70%" horizontalAlign="right"  >
								<s:Label  text="FEP: " fontSize="13" fontWeight="bold" />
								<s:Label id="lblFEP"  text="{UtilsFecha.formatoFechaDDMMMYY((data as Cobros).fechaEsperadaPago)} " />
								<s:Label id="lblFEPNA"  text="NA" />
							</s:HGroup>
						</s:HGroup>
						<s:HGroup  width="100%" horizontalAlign="left" paddingTop="5" paddingBottom="5">
							<linkButton:LinkButtonPQNet id="lblFactura" label="F-{(data as Cobros).factura} " fontSize="13" fontWeight="bold" textAlign="left" click="verFactura()"/>
							<s:HGroup width="100%" horizontalAlign="right">
								<s:Label  text="Fecha facturación: " fontSize="13" fontWeight="bold" />
								<s:Label id="lblFechaFacturacion" textAlign="right" text="{UtilsFecha.formatoFechaDDMMMYY((data as Cobros).fechaFacturacion)} " fontSize="13" />
							</s:HGroup>
						</s:HGroup>
						
						<s:HGroup width="100%" paddingTop="5" id="hgVendio" >
							<s:Label textAlign="left" text="Vendió: " fontSize="13" fontWeight="bold" />
							<s:Label id="lblVendio" textAlign="left" text="{(data as Cobros).fpor} " />
							<s:HGroup width="100%" textAlign="right" id="lbldrc">
								<spacers:spacerHorizontalPqNet/>
								<s:Ellipse width="10" height="10" visible="{(data as Cobros).color == null ? false : true}" id="elipse">
									<s:fill>
										<s:SolidColor id="elipse1" color="{_drc}"/>
									</s:fill>  
								</s:Ellipse>
								<s:Label id="lblRestanteCobros" text=" DRC: {(data as Cobros).diasRestantesCobro == null ? 'Pendiente' : (data as Cobros).diasRestantesCobro} " fontSize="13" fontWeight="bold"/>
							</s:HGroup>
							<s:HGroup id="lblMoroso" width="100%" horizontalAlign="right" >
								<s:Label text="Moroso:" fontSize="13" fontWeight="bold"  />
								<s:Label text="{(data as Cobros).moroso == null ? 'Pendiente' : (data as Cobros).moroso}" fontSize="13" color="{_drc}" />
							</s:HGroup>
							<s:HGroup id="lblCancelada" width="100%" horizontalAlign="right" >
								<s:Label text="CANCELADA" fontSize="13" color="{_drc}" />
							</s:HGroup>
						</s:HGroup>
						<s:HGroup id="image" width="100%" horizontalAlign="left" paddingTop="5" paddingBottom="10" verticalAlign="middle" >
							<s:Image source="{catalogoIconosGrid.getInstance().render_enfoque}" />
						</s:HGroup>
					</s:VGroup>
				</s:VGroup>
			</s:HGroup>
			<s:VGroup width="100%">
			</s:VGroup>
			<s:Group width="100%" height="1" >
				<s:BorderContainer creationPolicy="all" width="{width}" height="1" id="borderSuperior" borderColor="{_color}"
								   backgroundColor.normal="{_color}" backgroundColor.hovered="{_colorSelect}" backgroundColor.selected="{_colorSelect}">
					<s:filters>
						<s:DropShadowFilter alpha="1" angle="90" blurX="0" blurY="4" id="filtroEnfoque"
											color="#424242" distance="0" hideObject="false" inner="false" knockout="false" 
											quality="4" strength="2.5"/>
					</s:filters>
				</s:BorderContainer >
				<otros:division width="100%" id="division"/>
			</s:Group>
		</s:VGroup>
	</s:Group>
	<s:VGroup  width="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="25" paddingBottom="25" id="vgp1" height="100%">
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center" >
			<s:Label fontSize="12" id="lblTFacturas" color="0x{catalogoColores.LABEL_GRIS}" fontWeight="bold" text="{(data as Cobros).partidas + ((data as Cobros).partidas == 1 ? ' Factura': ' Facturas') }"/>
			<s:Label fontSize="12" color="0x{catalogoColores.LABEL_GRIS}" fontWeight="bold" text="· ${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares)} USD"/>
		</s:HGroup>
		<s:Label fontSize="12" color="0x{catalogoColores.LABEL_GRIS}" fontWeight="bold" text="{(data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' Pieza' : ' Piezas')} "/>
		<s:Label fontSize="14" color="0x{catalogoColores.LABEL_GRIS}" text="TOTAL"/>
	</s:VGroup>
</s:ItemRenderer>
