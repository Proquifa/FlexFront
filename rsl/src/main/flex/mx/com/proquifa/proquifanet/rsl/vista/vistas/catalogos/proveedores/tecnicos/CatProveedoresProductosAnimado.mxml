<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"  
		  xmlns:botonesToggle="skins.botonesToggle.*" 
		  xmlns:otros="skins.otros.*" 
		  xmlns:label="skins.skin.label.*"
		  xmlns:control="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.zitemRenderer.tecnicos.*" 
		  xmlns:chekbox="skins.skin.chekbox.*"
		  width="100%" height="100%"
		  creationComplete="creaVista()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.EventoCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.tecnicos.EventoCatProProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecioProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Producto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.zitemRenderer.tecnicos.CatPro_IR_Prod_TitulosTipo;
			import mx.utils.ObjectUtil;
			
			import spark.components.richTextEditorClasses.SizeTool;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotoneras; 
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable] private var _arrIndustria:ArrayCollection = new ArrayCollection( [  { industria:'INDUSTRIAL',altura:50 },  { industria:'CLÍNICA',altura:50 },  { industria:'INSTITUCIONAL',altura:50 }, { industria:'GUBERNAMENTAL',altura:50 } 	] );
			
			[Bindable] private var _arrButton:ArrayCollection = new ArrayCollection( [  { valor:'FARMA', valorBase:'Farma', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }, 
				{ valor:'ALIMENTOS', valorBase:'Alimentos', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 },
				{ valor:'AGUAS', valorBase:'Aguas', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }
			] );
			
			[Bindable] private var _arrFarma:ArrayCollection = new ArrayCollection( [  { tipo:'Estándares',num:0 },  { tipo:'Reactivos',num:1 },  { tipo:'Publicaciones',num:2 },  { tipo:'Labware',num:3 },  { tipo:'Medicamentos',num:4 } ,  { tipo:'Asesorías',num:5 } ,  { tipo:'Capacitaciones',num:6 } 	] );
			[Bindable] private var _arrAlimentos:ArrayCollection = new ArrayCollection( [  { tipo:'Estándares',num:0 },  { tipo:'Reactivos',num:1 }, { tipo:'Labware',num:2 }, { tipo:'Diagnóstico',num:3 }, { tipo:'Publicaciones',num:4 }, { tipo:'Medicamentos',num:5 },  { tipo:'Asesorías',num:6 } ,  { tipo:'Capacitaciones',num:7 } 	] );
			[Bindable] private var _arrAguas:ArrayCollection = new ArrayCollection( [  { tipo:'Estándares',num:0 },  { tipo:'Reactivos',num:1 }, { tipo:'Labware',num:2 }, { tipo:'Pruebas de aptitud',num:3 }, { tipo:'Publicaciones',num:4 }, { tipo:'Medicamentos',num:5 },  { tipo:'Asesorías',num:6 } ,  { tipo:'Capacitaciones',num:7 } 	] );
			private var _indiceSeleccionado:int;
			private var _arregloTitulos:ArrayCollection;
			private var _proveedor:Proveedor;
			private var _universoPermisos:ArrayCollection;
			private var _tipo:String;
			private var _titulo:CatPro_IR_Prod_TitulosTipo;
			
			public function set recibeProveedorSeleccionado($pro:Proveedor):void
			{
				if( $pro == null )
				{
					return;
				}
				
				_proveedor = $pro;
				cargaFechaActualizacion();
				consultaTipoProducto();
			}
			
			private function consultaTipoProducto():void
			{
				
				var evt:EventoCatProProductos = new EventoCatProProductos( EventoCatProProductos.CARGA_PRODUCTOS_POR_PROVEEDOR );
				evt.idProveedor = _proveedor.idProveedor;
				dispatchEvent( evt );
			}
			
			private function creaVista():void
			{
				chkUnico.seleccionaColor('palomaGrande');
				//addEventListener( Event.RESIZE, ajustaTamanio );
				ajustaConTiempo();
				lstIndustria.dataProvider = new ArrayCollection();
				lstIndustria.dataProvider = ObjectUtil.copy( _arrIndustria ) as ArrayCollection;
				lstIndustria.selectedIndex = 0;
				botoneraBarra_clickHandler();
				addEventListener( EventoCatProProductos.MODIFICA_CONFIGURACION, modificaConfiguracion,false,0,true );
				
				
				
				if ( DatosGlobales.getInstance()._usuario.nombreFuncion == "Comprador" ||
					DatosGlobales.getInstance()._usuario.nombreFuncion == "Gerente de Compras" ){
					
					controlBiologico.hgMundiales.enabled = controlQuimico.hgMundiales.enabled = false;
					controlBiologico.hgNacionales.enabled = controlQuimico.hgNacionales.enabled = false;
					controlBiologico.hgNormal.enabled = controlQuimico.hgNormal.enabled = false;
					controlBiologico.hgOrigen.enabled = controlQuimico.hgOrigen.enabled = false;
					hgUnico.enabled = false;
					
				}
				
			}
			
			private var indiceSeleccionadoAnterior:int;
			protected function botoneraBarra_clickHandler():void
			{
				if( botoneraBarra.selectedItem != undefined )
				{
					if(  lstIndustria.selectedIndex == 0 )///// Este nivel solo es para industrial
					{ 
						indiceSeleccionadoAnterior = botoneraBarra.selectedIndex ;
						var listaopcionesIndustria:ArrayCollection = new ArrayCollection();
						cargaEtiquetasIndustral();
					}
				}
				else
				{
					botoneraBarra.selectedIndex = indiceSeleccionadoAnterior;
				}
			}
			
			public function cargaEtiquetasIndustral():void
			{
				if( botoneraBarra.selectedItem != undefined )
				{
					_arregloTitulos = new ArrayCollection();
					
					if(  botoneraBarra.selectedItem.valor == 'FARMA' )
					{
						_arregloTitulos = ObjectUtil.copy( _arrFarma ) as ArrayCollection;
					}
					else if( botoneraBarra.selectedItem.valor == 'ALIMENTOS' )
					{
						_arregloTitulos = ObjectUtil.copy( _arrAlimentos ) as ArrayCollection;
					}
					else if( botoneraBarra.selectedItem.valor == 'AGUAS' )
					{
						_arregloTitulos = ObjectUtil.copy( _arrAguas ) as ArrayCollection;
					}
					
					btnIzquierdo.enabled = false;
					btnDerecho.enabled = true;
					_indiceSeleccionado = 0;			
					grpImagenes.removeAllElements();
					//grpImagenes.x = ( pnlImagenes.width/2 ) -125;
					cargaTitulosEnElGrupo();
				}
			}
			
			private function cambia( $sentido:String, totalmovimientos:int = 1 ):void
			{
				$sentido == 'izquierda' ?   _indiceSeleccionado = _indiceSeleccionado - 1 : _indiceSeleccionado = _indiceSeleccionado + 1;
				_indiceSeleccionado == 0 ? btnIzquierdo.enabled = false : btnIzquierdo.enabled = true;
				_indiceSeleccionado == _arregloTitulos.length - 1 ? btnDerecho.enabled = false : btnDerecho.enabled = true;
				cargaTitulosEnElGrupo();
				moveRight.stop();
				moveLeft.stop();
				
				if( $sentido == 'izquierda' )
				{
					moveRight.duration = 180;
					moveRight.xBy = _titulo.width * totalmovimientos;
					moveRight.play();
				}
				else
				{
					moveLeft.duration = 180;
					moveLeft.xBy = _titulo.width * totalmovimientos * -1;
					moveLeft.play();
				} 
			}
			
			[Bindable] private var listaTemporalOtros:ArrayCollection;
			private function cargaTitulosEnElGrupo():void
			{
				grpImagenes.removeAllElements();
				var numItemsQueCaben:int = 0;
				var iniciaConteo:Boolean = false;
				numItemsQueCaben = 1;
				iniciaConteo = false;
				
				var listaTemporalQuimico:ArrayCollection = new ArrayCollection();
				var listaTemporalBiologico:ArrayCollection = new ArrayCollection();
				listaTemporalOtros = new ArrayCollection();
				var item:ConfiguracionPrecioProducto = new ConfiguracionPrecioProducto();
				
				// aqui se limpia la vista
				lblQuimico.text = 'Deshabilitado';
				lblBiologico.text = 'Deshabilitado';
				lblQuimico.setStyle('color', '0x' + catalogoColores.LABEL_ROJO_CLARO );
				lblBiologico.setStyle('color', '0x' + catalogoColores.LABEL_ROJO_CLARO );
				
				chkUnico.selected = false;
				controlQuimico.data = listaTemporalQuimico;
				controlQuimico._origen = '';
				controlBiologico.data = listaTemporalBiologico;
				controlBiologico._origen = '';
				chkUnico.selected = false;
				_tipo='';
				
				for(var g:int =0; g < _arregloTitulos.length; g++ )
				{
					_titulo = new CatPro_IR_Prod_TitulosTipo();
					
					if( _arregloTitulos[g].num == _indiceSeleccionado ) //solo pasa una vez por aqui
					{ 
						if( _universoPermisos != null )
						{
							for( var i:int = 0; i < _universoPermisos.length; i++ )
							{
								item = ObjectUtil.copy( _universoPermisos[i] ) as ConfiguracionPrecioProducto;
								item.producto.industria == null ? item.producto.industria =	 'FARMA' : item.producto.industria = item.producto.industria.toUpperCase(); //si viene como nul se tomara como origen la insdustria FARMA
								
								if( item.producto.industria == botoneraBarra.selectedItem.valor && item.producto.tipoString ==  _arregloTitulos[g].tipo && item.producto.subtipo.toUpperCase() == 'QUÍMICO'  )
								{
									listaTemporalQuimico.addItem( item );
								}
								else if( item.producto.industria == botoneraBarra.selectedItem.valor && item.producto.tipoString ==  _arregloTitulos[g].tipo && item.producto.subtipo.toUpperCase() == 'BIOLÓGICO' )
								{
									listaTemporalBiologico.addItem( item );
								}
								else if(  item.producto.industria == botoneraBarra.selectedItem.valor && item.producto.tipoString ==  _arregloTitulos[g].tipo  )
								{
									if( item.producto.subtipo == null || item.producto.subtipo == '' )
									{
										listaTemporalOtros.addItem( item );
									}
								} 
							}
						}
						
						if(  _arregloTitulos[g].tipo == 'Estándares' ||  _arregloTitulos[g].tipo == 'Reactivos' )
						{
							grpQuimicoBiologico.visible = grpQuimicoBiologico.includeInLayout = true;
							controlUnico.visible = controlUnico.includeInLayout = false;
							
							controlQuimico.data = listaTemporalQuimico;
							controlQuimico._origen = 'QUÍMICO';
							controlBiologico.data = listaTemporalBiologico;
							controlBiologico._origen = 'BIOLÓGICO';
							
							if( listaTemporalQuimico.length > 0 || listaTemporalBiologico.length > 0 )
							{
								_titulo.isHabilitado = true;
							}
							
							if( listaTemporalQuimico.length > 0 )
							{
								lblQuimico.text = 'Habilitado';
								lblQuimico.setStyle('color', '0x' + catalogoColores.LABEL_VERDE_AZUL );
							}
							
							if( listaTemporalBiologico.length > 0 )
							{
								lblBiologico.text = 'Habilitado';
								lblBiologico.setStyle('color', '0x' + catalogoColores.LABEL_VERDE_AZUL );
							}
							
						}
						else
						{
							grpQuimicoBiologico.visible = grpQuimicoBiologico.includeInLayout = false;
							controlUnico.visible = controlUnico.includeInLayout = true;
							
							if( listaTemporalOtros.length > 0)
							{
								_titulo.isHabilitado = true;
								chkUnico.selected = true;	
							}else{
								chkUnico.selected = false;
							}
						}
						
						_titulo.height = imgBotonI.height + 10;
						_titulo.data = _arregloTitulos[g];
						
						if(_arregloTitulos[g].tipo == "Estándares")
						{
							_tipo ="Estandares";
						}
						else
						{
							_tipo = _arregloTitulos[g].tipo;
						}
						grpImagenes.addElement( _titulo );
					}
					else
					{
						_titulo.limpiarText();
						grpImagenes.addElement( _titulo );
					}
				} 
			}
			
			
			/* 			private function ajustaTamanio( _evt:Event ):void{
			setTimeout( ajustaConTiempo, 150 );
			} */
			
			private function ajustaConTiempo():void
			{
				var indiceSeleccionada:int = lstIndustria.selectedIndex;
				/*for( var i:int = 0; i < _arrIndustria.length; i++)
				{
					_arrIndustria[i].altura = (310/1940)*($height);
				}*/
				lstIndustria.dataProvider = new ArrayCollection();
				lstIndustria.dataProvider = ObjectUtil.copy( _arrIndustria ) as ArrayCollection;
				lstIndustria.selectedIndex = indiceSeleccionada;
			}
			/////////////////////////////////////////////////////////////////////////// Se reciben los datos de la BD  ///////////////////////////////////////////////////// 
			public function set recibeTipoProducto($datos:ArrayCollection):void
			{
				if($datos==null)
				{
					return;
				}
				_universoPermisos = new ArrayCollection();
				_universoPermisos=ObjectUtil.copy($datos) as ArrayCollection;
				cargaTitulosEnElGrupo();
			}
			
			private function modificaConfiguracion( $evt:EventoCatProProductos ):void
			{
				//se debe recibir forzosamente un aconfiguracion aunque venga vacia
				var evt:EventoCatProProductos;
				if( isNaN( $evt.idConfiguracionProducto) ) ///es uno nuevo que se va agregar
				{  
					evt = new EventoCatProProductos( EventoCatProProductos.AGREGA_TIPO_PRODUCTO );
					evt.producto = new ConfiguracionPrecioProducto();
					evt.producto.producto = new Producto();
					evt.producto.producto.tipo =  _tipo; //se determina por que es la unica etiqueta seleccionada/visual
					evt.producto.producto.subtipo = $evt.origen;
					evt.producto.producto.control = $evt.control;
					evt.producto.idConfiguracion = 0 ;
					evt.producto.nivel = 'Familia';
					evt.producto.idProveedor = _proveedor.idProveedor;
					
					if( botoneraBarra.selectedItem != undefined )
					{
						evt.producto.producto.industria = botoneraBarra.selectedItem.valorBase;
					}
					else
					{
						return;
					}
					evt.ventana = "CatProveedor_Productos    nuevo( idProveedor:"+_proveedor.idProveedor+", Familia:  "+botoneraBarra.selectedItem.valorBase+
						", "+_tipo+", "+$evt.servicio+", "+$evt.control+" )"; 
				}
				else /////////////////////////////////////////////////////////////////////////////////es uno existente que se va a eliminar
				{
					evt = new EventoCatProProductos( EventoCatProProductos.ELIMINA_TIPO_PRODUCTO );
					evt.idConfiguracionProducto = $evt.idConfiguracionProducto;
					evt.ventana = "CatProveedor_Productos    elimina( idProveedor:"+_proveedor.idProveedor+", idConfigProducto:"+evt.idConfiguracionProducto+
						", Familia:  "+botoneraBarra.selectedItem.valorBase+", "+_tipo+", "+$evt.servicio+", "+$evt.control+" )"; 
				}
				dispatchEvent( evt );
			}
			
			protected function chkUnico_changeHandler():void{
				var evt:EventoCatProProductos;
				
				if( chkUnico.selected )//es nuevo
				{ 
					
					
					evt = new EventoCatProProductos( EventoCatProProductos.AGREGA_TIPO_PRODUCTO );
					evt.producto = new ConfiguracionPrecioProducto();
					evt.producto.producto = new Producto();
					evt.producto.producto.tipo =  _tipo; //se determina por que es la unica etiqueta seleccionada / visual
					evt.producto.producto.subtipo = null;
					evt.producto.producto.control = null;
					evt.producto.idConfiguracion = 0;
					evt.producto.nivel = 'Familia';
					evt.producto.idProveedor = _proveedor.idProveedor;
					
					if(lstIndustria.selectedIndex == 0)
					{
						evt.producto.producto.industria = "Farma";
					}
					else if (lstIndustria.selectedIndex == 1)
					{
						evt.producto.producto.industria = "Clínico";
					}
					
					if( botoneraBarra.selectedItem != undefined )
					{
						evt.producto.producto.industria = botoneraBarra.selectedItem.valorBase;
					}
					else
					{
						return;
					}
				}
				else // se elimina
				{ 
					evt = new EventoCatProProductos( EventoCatProProductos.ELIMINA_TIPO_PRODUCTO );
					evt.idConfiguracionProducto =  ( listaTemporalOtros[0] as ConfiguracionPrecioProducto ).idConfiguracion;
				}
				
				dispatchEvent( evt );
			}
			
			public function set confirmaAgregaTipoProducto( $dato:Boolean ):void
			{
				if( !$dato )
				{
					return;
				}
				consultaTipoProducto();
				var evt:EventoCatProGeneral = new EventoCatProGeneral( EventoCatProGeneral.OBTENER_PRODUCTOS_DESDE_PRODUCTOS );
				evt.proveedorSeleccionado = _proveedor;
				dispatchEvent( evt ); 
				cargaFechaActualizacion();
			}
			
			public function set confirmaTipoProductoEliminado( $dato:Boolean ):void
			{
				if( !$dato )
				{
					return;
				}
				consultaTipoProducto();
				var evt:EventoCatProGeneral = new EventoCatProGeneral( EventoCatProGeneral.OBTENER_PRODUCTOS_DESDE_PRODUCTOS );
				evt.proveedorSeleccionado = _proveedor;
				dispatchEvent( evt ); 
				cargaFechaActualizacion();
			}
			
			private function cargaFechaActualizacion():void
			{
				var evt:EventoCatProProductos = new EventoCatProProductos( EventoCatProProductos.CONSULTA_FUA);
				evt.idProveedor = _proveedor.idProveedor;
				dispatchEvent( evt );
			}
			
			public function set recibeFUA( $dato:Proveedor ):void
			{
				
				if($dato == null)
					return;
				
				_proveedor.FUAProductos = $dato.FUAProductos;
				lblFUA.fecha = _proveedor.FUAProductos;
			}
			
			protected function click_industria(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				botoneraBarra.selectedIndex = 0;
				if (lstIndustria.selectedIndex == 0)
				{
					
					_arrButton = new ArrayCollection( [  { valor:'FARMA', valorBase:'Farma', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }, 
						{ valor:'ALIMENTOS', valorBase:'Alimentos', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 },
						{ valor:'AGUAS', valorBase:'Aguas', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }] );
					botoneraBarra.percentWidth=50;
					botonera.visible = titulo.visible = checks.visible = true;
					cargaTitulosEnElGrupo();
				}
				else if (lstIndustria.selectedIndex == 1)
				{
					
					_arrButton = new ArrayCollection([{ valor:'CLÍNICO', valorBase:'Clínico', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }] );
					_arregloTitulos = ObjectUtil.copy( _arrFarma ) as ArrayCollection;
					botoneraBarra.selectedIndex = 0;
					botoneraBarra.width=230;
					botonera.visible = titulo.visible = checks.visible = true;
					cargaTitulosEnElGrupo();
				}
				else if (lstIndustria.selectedIndex == 2)
				{
					botonera.visible = titulo.visible = checks.visible = false;
				}
				else if (lstIndustria.selectedIndex == 3 )
				{
					_arrButton = new ArrayCollection([{ valor:'GOBIERNO', valorBase:'Gobierno', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:16 }] );
					_arregloTitulos = ObjectUtil.copy( _arrFarma ) as ArrayCollection;
					botoneraBarra.selectedIndex = 0;
					botoneraBarra.width=230;
					botonera.visible = titulo.visible = checks.visible = true;
					cargaTitulosEnElGrupo();
				}
				
			}
			
			[Bindable] private var sizeBtn:Number;
			override protected function updateDisplayList($width:Number, $height:Number):void
			{
				super.updateDisplayList($width,$height);
				sizeBtn = (310/1311)*($height);
				for (var i:int = 0; i < _arrIndustria.length; i++) 
				{
					_arrIndustria[i].altura = sizeBtn;
					
				}
				_arrIndustria.refresh();
				lstIndustria.dataProvider = _arrIndustria;
				
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Sine id="sineEasing" easeInFraction="0.3"/>
		<s:Move id="moveRight"  target="{grpImagenes}" 
				easer="{sineEasing}"/>
		<s:Move id="moveLeft"  target="{grpImagenes}"
				easer="{sineEasing}"/>
		
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" id="barraTitulo" horizontalAlign="center" gap="0">
		<s:HGroup width="100%" verticalAlign="bottom" paddingLeft="20" paddingRight="20" paddingTop="20" paddingBottom="10">
			<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_productosGris }"/>
			<label:TituloBankGothic_30 text="PRODUCTOS"/>
			<s:Spacer width="100%"/>
			<s:HGroup height="100%" verticalAlign="bottom" horizontalAlign="right">
				<label:Texto_13_VerdeAzul text="Última actualización: "/>
				<label:Fecha_13_VerdeAzul id="lblFUA"/>
			</s:HGroup>
		</s:HGroup>
		<s:VGroup width="100%" paddingRight="20">
			<otros:divisionGruesa width="100%"/>
		</s:VGroup>  
		
		<s:HGroup width="100%" height="100%">
			<s:Group width="26%" height="100%">
				<s:Rect left="0" right="0" top="0" bottom="0" width="100%" height="100%"  >
					<s:fill >
						<s:LinearGradient rotation="180" >
							<s:entries >
								<s:GradientEntry color="0x{catalogoColores.LABEL_CASI_NEGRO}" />
								<s:GradientEntry color="0x{catalogoColores.LABEL_NEGRO}" />
								<s:GradientEntry color="0x{catalogoColores.LABEL_NEGRO}" />
								<s:GradientEntry color="0x{catalogoColores.LABEL_NEGRO}" />
								<s:GradientEntry color="0x{catalogoColores.LABEL_CASI_NEGRO}" />
							</s:entries>
						</s:LinearGradient>
					</s:fill>
				</s:Rect>
				<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off" id="lstIndustria"  contentBackgroundAlpha="0" click="click_industria(event)"
						itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.zitemRenderer.tecnicos.CatPro_IR_Prod_TituloIndustria"/>
			</s:Group>
			<s:VGroup width="100%" height="100%" paddingTop="30" gap="10">
				<s:HGroup width="100%" horizontalAlign="center" id="botonera">
					<botonesToggle:ButtonBarColores width="50%" height="40" id="botoneraBarra" click="botoneraBarra_clickHandler()" dataProvider="{_arrButton}" selectedIndex="0"/>
				</s:HGroup>
				<s:Spacer height="15"/>
				
				<s:Group width="100%" height="85"  depth="-500" id="titulo">
					<s:HGroup width="50%" horizontalAlign="center" horizontalCenter="0" height="85" gap="0" verticalAlign="middle" id="grpNegro" >
						<s:Group width="30%" height="{imgBotonI.height + 25 }"  id="btnIzquierdo" click="cambia('izquierda')" contentBackgroundColor="white"  >
							<s:Rect id="background" left="1" right="1" top="1" bottom="1" width="100%" height="100%"  >
								<s:fill >
									<s:SolidColor color="white"/>
								</s:fill>
							</s:Rect>
							<s:Image id="imgBotonI" source="{ catalogoIconosBotoneras.getInstance().flechasIzquierdaCatProNormal }" horizontalCenter="0" verticalCenter="0"
									 mouseOver="{imgBotonI.source = catalogoIconosBotoneras.getInstance().flechasIzquierdaCatProDown}" mouseOut="{imgBotonI.source = catalogoIconosBotoneras.getInstance().flechasIzquierdaCatProNormal}"/>
						</s:Group>
						<s:VGroup  width="40%" paddingTop="20" depth="-5000" horizontalAlign="center">
							<s:Panel   height="100%" id="pnlImagenes" borderVisible="false" borderAlpha="0" dropShadowVisible="false" horizontalCenter="0" 
									   contentBackgroundAlpha="0" backgroundAlpha="0" controlBarVisible="false" skinClass="skins.skin.panelSpark.PanelSinTitleBar"   >
								<s:HGroup width="100%" height="100%"  verticalAlign="middle" id="grpImagenes" gap="-2" />
							</s:Panel>
						</s:VGroup>
						<s:Group width="30%" height="{imgBotonD.height + 25 }"   id="btnDerecho" click="cambia('derecha')" >
							<s:Rect id="background2" left="1" right="1" top="1" bottom="1" width="100%" height="100%" >
								<s:fill >
									<s:SolidColor color="white"/>
								</s:fill>
							</s:Rect>
							<s:Image id="imgBotonD" source="{ catalogoIconosBotoneras.getInstance().flechasDerechaCatProNormal }" horizontalCenter="0" verticalCenter="0"
									 mouseOver="{imgBotonD.source = catalogoIconosBotoneras.getInstance().flechasDerechaCatProDown}" mouseOut="{imgBotonD.source = catalogoIconosBotoneras.getInstance().flechasDerechaCatProNormal}"/>
						</s:Group>
					</s:HGroup>
				</s:Group>
				<s:Scroller width="100%" height="100%">
					<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" >
						<s:Group width="60%" height="80%" id="checks">
							<s:VGroup width="100%" height="100%" id="grpQuimicoBiologico"  horizontalAlign="center" >
								<s:Label text="QUÍMICO" fontSize="18" width="55%" />
								<s:Label color="0x{catalogoColores.LABEL_VERDE_AZUL}" id="lblQuimico" text="Habilitado" width="55%" />
								<s:HGroup width="100%">
									<s:Spacer width="55%"/>
									<control:CatPro_IR_Prod_TipoControl id="controlQuimico"/>
								</s:HGroup>
								<s:Spacer height="25"/>
								<otros:division width="100%"/>
								<s:Spacer height="30"/>
								<s:Label text="BIOLÓGICO" fontSize="18" width="55%" />
								<s:Label color="0x{catalogoColores.LABEL_VERDE_AZUL}" id="lblBiologico" text="Habilitado" width="55%" />
								<s:HGroup width="100%">
									<s:Spacer width="55%"/>
									<control:CatPro_IR_Prod_TipoControl id="controlBiologico" />
								</s:HGroup>
							</s:VGroup>
							<s:HGroup width="100%" id="controlUnico"  verticalAlign="middle" horizontalAlign="center" paddingTop="30" visible="false" includeInLayout="false">
								<s:Label text="HABILITAR " fontSize="18" id="lblHabilitaUnico"/>
								<s:Spacer width="5"/>
								<s:HGroup paddingTop="-15" id="hgUnico">
									<chekbox:checkBoxRadio id="chkUnico" change="chkUnico_changeHandler()"/>
								</s:HGroup>
							</s:HGroup>
						</s:Group>
					</s:VGroup>
				</s:Scroller>
			</s:VGroup>
		</s:HGroup>
	</s:VGroup>
</s:VGroup>
