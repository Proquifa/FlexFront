<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%"
		 creationComplete="init(event)" gap="10"
		 xmlns:graficas="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.graficaPie.*"
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoGraficaPiePqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.reportes.ventas.SeguimientoCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import skins.skin.graficas.pieSeriesPqNet;
			import skins.skin.graficas.pieSeriesVS;
			
			[Bindable]
			private var _datos:ArrayCollection = new ArrayCollection();
			//public var totales:SeguimientoCotizacionAgrupada = new SeguimientoCotizacionAgrupada();
			
			protected function init(event:FlexEvent):void
			{
				var series:Array = new Array();
				var serie:pieSeriesPqNet = new pieSeriesPqNet();
				//serie.field = "total";
				//serie.field = "nivelIngreso";
				serie.field = "total";
				series.push(serie);
				this.grafica.series = series;
				this.grafica.addEventListener( EventoGraficaPiePqNet.CAMBIO_INFORMACION_GRAFICA, grafica_listener );
				this.grafica.addEventListener(EventoGraficaPiePqNet.MUESTRA_INFORMACION_GENERAL_GRAFICA, graficaGeneral_listener);
			}
			
			protected function grafica_listener(event:EventoGraficaPiePqNet):void
			{
				/* if(event.data != null && event.item != null){
					var data:Object = event.data;
					//grafica.lbTitulo.text = data.etiquetaEncabezado + "(" + event.item.percentValue.toFixed(2) + "%)";
					//grafica.lbDescripcion.text = data.etiqueta;ç
					var labelAndPlural:String = '';
					if( _filtroLabel == "Seguimiento"){
						labelAndPlural = _filtroLabel + ( data.total == 1 ? '': 's');
					}else if( _filtroLabel == "Confirmación" ){
						labelAndPlural = data.total == 1 ? _filtroLabel: 'Confirmaciones';
					}
					grafica.lbDescripcion.text = data.total + ' ' + labelAndPlural ;
					grafica.lbTitulo.text = ' ( ' + event.item.percentValue.toFixed(2) + '%)'; //data.tipo + ' ( ' + event.item.percentValue.toFixed(2) + '%)';
				}else{
					grafica.lbTitulo.text = "";
					grafica.lbDescripcion.text = "";
				} */
			}
			
			private function iniciarGrafica( $datos:ArrayCollection ):ArrayCollection{
				var arrTemp:ArrayCollection = ObjectUtil.copy( $datos ) as ArrayCollection;
				var arrReturn:ArrayCollection = new ArrayCollection();
				for( var h:int = 0; h < arrTemp.length; h++ ){
						var cotizaciones:ArrayCollection = arrTemp[h].cotizaciones;
						for( var g:int = 0; g < cotizaciones.length; g++ ){
								var currentSeguimiento:SeguimientoCotizacion = cotizaciones[g] as SeguimientoCotizacion;
									if( currentSeguimiento != null && currentSeguimiento.ultimo == "" )	arrReturn.addItem( currentSeguimiento );
						}
				}
				return arrReturn;
			}
			
			public function graficaGeneral_listener(event:EventoGraficaPiePqNet):void{
				mostrarTotales();
			}
			private function mostrarTotales():void{
				/* var labelAndPlural:String = '';
				if( _filtroLabel == "Seguimiento"){
					labelAndPlural = _filtroLabel + ( totales.totalCotizaciones == 1 ? '': 's');
				}else if( _filtroLabel == "Confirmación" ){
					labelAndPlural = totales.totalCotizaciones == 1 ? _filtroLabel: 'Confirmaciones';
				}
				grafica.lbTitulo.text = "Totales";
				grafica.lbDescripcion.text = 'No. ' + labelAndPlural + ': ' + totales.totalCotizaciones; */
			}
			
			private var _filtroLabel:String = '';
			
			public function set recibirObjLabels( $objLabel:Object ):void{
				if( $objLabel == null )	return;
				_filtroLabel = validaDisplay( $objLabel.origen );
			}
			
			public function set recibirPieNivelIngreso( $lista:ArrayCollection ):void{
				if( $lista == null ) return;
				_datos = $lista;
			}
			
			private function validaDisplay( $propiedad:* ):String{
				if( $propiedad == null ) return '';
				return $propiedad.toString();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<componentes:tituloChartTablero width="100%" text="NIVEL DE INGRESO CLIENTES" textAlign="center" paddingTop="20"/>
	<graficas:GraficaPiePqNet id="grafica" dataProvider="{ this._datos }" width="100%" height="100%"/>
</s:VGroup>
