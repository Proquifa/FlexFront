<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:mate="http://mate.asfusion.com/" >
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProMArcas;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.comerciales.ModeloCataProMarca;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.popup.ModeloPopUp;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.marca.CatProMarca;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.marca.popUps.AgregarMarca_popUp;
		]]>
	</fx:Script>
	
	<fx:Declarations>
<!--		<mate:Debugger level="{Debugger.ALL}"/>-->
		<!-- /////////////////////////////////////////////////////////////////// cargar Marcas asociadas/////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProMArcas.OBTENER_MARCAS_ASOCIADAS }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="consultarFabricantes"
									  arguments="{[ event.idProveedor ]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="setObtenMarcasAsociadas"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="errorCargarMarcasAsociadas"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatProMarca}">
			<mate:PropertyInjector source="{ModeloCataProMarca}" 
								   sourceKey="ObtenMarcasAsociadas"
								   targetKey="recibeMarcasAsociadas"/>
		</mate:Injectors>
		<!-- /////////////////////////////////////////////////////////////////// Modificar  Elimina  /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProMArcas.EDITA_ASOCIACION_MARCA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="verificarFabricante"
									  arguments="{[ event.idProveedor, event.idFabricante, event.estado ]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="setAsociacionMarcas"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatProMarca}">
			<mate:PropertyInjector source="{ModeloCataProMarca}" 
								   sourceKey="AsociacionMarcas"
								   targetKey="confirmaAsociacionMarcas"/>
		</mate:Injectors>
		
		
		<mate:EventHandlers type="{EventoCatProMArcas.AGREGAR_NUEVA_MARCA}">
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="operacionesFabricante"
									  arguments="{[event.fabricante, event.tipoDeOperacion]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="recibeConfirmacionDeGuardarMarca"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors target="{CatProMarca}">
			<mate:PropertyInjector source="{ModeloCataProMarca}"
								   sourceKey="regresaConfirmacionDeGuardadoDeMarca"
								   targetKey="recibeConfirmacionDeGuardadoDeMarca" />
		</mate:Injectors>
		
		
		
		
		<mate:EventHandlers type="{EventoCatProMArcas.EDITAR_MARCA}">
			<mate:RemoteObjectInvoker destination="{Destinos.FABRICANTE_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="actualizarFablicantes"
									  arguments="{[event.fabricante]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="recibeEditarFabricante"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCataProMarca}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors target="{CatProMarca}">
			<mate:PropertyInjector source="{ModeloCataProMarca}"
								   sourceKey="regresaEditadoMarca"
								   targetKey="recibeConfirmacionEditarMarca" />
		</mate:Injectors>
		
		
		<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para obtener la respuesta del popUp Alerta Singleton  -->
		<mate:EventHandlers type="{EventoAlertaPqNet.RESPUESTA_ALERTA}">
			<mate:MethodInvoker generator="{ModeloPopUp}"
								method="setRegresaBotonSeleccion"
								arguments="{event.respuesta}"/>  
		</mate:EventHandlers>
		<mate:Injectors target="{AgregarMarca_popUp}">
			<mate:PropertyInjector source="{ModeloPopUp}"
								   sourceKey="regresaSeleccion"
								   targetKey="recibeDelAlert"/>	
		</mate:Injectors>
		
	</fx:Declarations>

</mate:EventMap>