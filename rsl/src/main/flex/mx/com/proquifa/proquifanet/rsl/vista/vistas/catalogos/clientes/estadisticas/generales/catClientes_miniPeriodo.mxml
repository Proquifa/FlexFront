<?xml version="1.0" encoding="utf-8"?>
<comun:contenedorCatalogosTableroMiniChart 
	xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.comun.*" 
	xmlns:componentes = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="100%" height="100%"
	titulo="VENTAS DEL PERIODO"
	
	>
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600" />
		<mx:SolidColorStroke id = "s1" color="0x3b98af" weight="2"/>
		<mx:SolidColorStroke id = "s2" color="0xdd9c12" weight="2"/>
		<mx:SolidColor id="sc3" color="0x{catalogoColores.LABEL_NARANJA}" alpha="1"/>
		<s:SolidColorStroke id="stroke2" color="0x{catalogoColores.LABEL_NARANJA}" weight="5"/>
		<mx:SolidColorStroke id = "sObj" color="0xC54B8C" weight="3"/>
		<mx:SolidColor id="sc4" color="0xC54BCC" alpha="1"/>
		<s:SolidColorStroke id="stroke4" color="0xC54B8C" weight="5"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.PeriodoToolTip;
			
			import skins.catalogos.catalogoColores;
			
			private const _tamanioMinimo:int = 170;
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			private var _listaMontoObjetivo:ArrayCollection = new ArrayCollection();
			private var _listaMontoObjetivoFundamental:ArrayCollection = new ArrayCollection();
			private var totalLegend:Number = 0;
			
			private var yallegaronlosMontosObjetivos:Boolean = false;
			private var yallegaronlosMontosObjetivosFundamentales:Boolean = false;
			private var yallegaronLasVentas:Boolean = false;
			
			private var _listaMensual:ArrayCollection = new ArrayCollection
				([
					"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
				]);
			
			private var _listaQuincenal:ArrayCollection = new ArrayCollection
				([
					{11:"11",valor:"1ra. Enero"},{12:"12",valor:"2da. Enero"},{21:"21",valor:"1ra. Febrero"},{22:"22",valor:"2da. Febrero"},{31:"31",valor:"1ra. Marzo"},{32:"32",valor:"2da. Marzo"},{41:"41",valor:"1ra. Abril"},
					{42:"42",valor:"2da. Abril"},{51:"51",valor:"1ra. Mayo"},{52:"52",valor:"2da. Mayo"},{61:"61",valor:"1ra. Junio"},{62:"62",valor:"2da. Junio"},{71:"71",valor:"1ra. Julio"},{72:"72",valor:"2da. Julio"},{81:"81",valor:"1ra. Agosto"},{82:"82",valor:"2da. Agosto"},
					{91:"91",valor:"1ra. Septiembre"},{92:"92",valor:"2da. Septiembre"},{101:"101",valor:"1ra. Octubre"},{102:"102",valor:"2da. Octubre"},{111:"111",valor:"1ra. Noviembre"},{112:"112",valor:"2da. Noviembre"},{121:"121",valor:"1ra. Diciembre"},{122:"122",valor:"2da. Diciembre"}
				]);
			
			
			public function set recibeInfoVentasPeriodo( $lista:ArrayCollection ):void
			{
				if($lista == null ) return;
				
				_linealArrGrafica = $lista;
				
				yallegaronLasVentas = true;
				
				llamarAIniciarGrafica();
			}
			
			private function llamarAIniciarGrafica():void
			{
				if(yallegaronlosMontosObjetivos && yallegaronLasVentas) //&& yallegaronlosMontosObjetivosFundamentales
				{
					yallegaronlosMontosObjetivos = false;
					yallegaronLasVentas = false;
					myChart.dataProvider = iniciarGrafica( _linealArrGrafica );
				}
				else
				{
					setTimeout(llamarAIniciarGrafica,300);
				}
			}
			
			public function set recibeMontosObjetivo($montos:ArrayCollection):void
			{
				if($montos == null) 
					return;
				_listaMontoObjetivo = new ArrayCollection();
				_listaMontoObjetivo = ordenarMontos( $montos );
				yallegaronlosMontosObjetivos = true;
			}    
			
			public function set recibeMontosObjetivoFundamental($montos:ArrayCollection):void
			{
				if($montos == null) 
					return;
				_listaMontoObjetivoFundamental = new ArrayCollection();
				_listaMontoObjetivoFundamental = ordenarMontos($montos);
				yallegaronlosMontosObjetivosFundamentales = true;
			}   
			
			private function ordenarMontos($arreglo:ArrayCollection):ArrayCollection
			{
				var ordenar:SortField = new SortField();
				ordenar.name = "mes";
				ordenar.numeric = true;
				var tipo:Sort = new Sort();
				tipo.fields = [ordenar];
				$arreglo.sort = tipo;
				$arreglo.refresh();
				
				return $arreglo;
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				totalLegend = 0;
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				var contador:int = 0;
				var contador2:int = 0;
				var cuenta:int = 1;
				var resumen:ResumenConsulta;
				
				
				if(_event != null && _event.periodo.toLowerCase() == "quincenal")
				{
					objeto = new Object();
					objeto.numeroMes = cuenta;
					objeto.mes = _listaQuincenal[_event.rangoMinMes].valor;
					objeto.montoUSD_0 = 0;
					objeto.montoUSD_1 = 0;
					objeto.montoUSD_2 = 0;
					objeto.montoObjetivo = 0;
					objeto.montoFundamental = 0;
					
					for( m = 0; m < $lista.length;m++ )
					{
						resumen = $lista[m] as ResumenConsulta;
						if( resumen.etiqueta == "VENTAS_0" || resumen.etiqueta == "NOTA_0" ){
							objeto.montoUSD_0 += resumen.total;
							totalLegend += resumen.total;	
						}
					}
					
					if((_listaMontoObjetivo.length != 0) && (_listaMontoObjetivo.length != _maximoMeses - 1) ){
						objeto.montoObjetivo = _listaMontoObjetivo[contador].monto ;
						contador++;
					}	
					
					if((_listaMontoObjetivoFundamental.length != 0) && (_listaMontoObjetivoFundamental.length != _maximoMeses - 1) ){
						objeto.montoFundamental = _listaMontoObjetivoFundamental[contador2].monto ;  //  VERIFICAR SI ES MONTO
						contador2++;
					}	
					arrReturn.addItem( objeto );
				}
				else
				{
					
					while( cuenta < 13)
					{
						if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
						{
							objeto = new Object();
							objeto.numeroMes = cuenta;
							objeto.mes = _listaMensual[cuenta -1];
							objeto.montoUSD_0 = 0;
							objeto.montoUSD_1 = 0;
							objeto.montoUSD_2 = 0;
							objeto.montoObjetivo = 0;
							objeto.montoFundamental = 0;
							objeto.totalPeriodo = 0;
							
							for( m = 0; m < $lista.length;m++ )
							{
								resumen = $lista[m] as ResumenConsulta;
								if(cuenta == resumen.mes)
								{
									if( resumen.etiqueta == "VENTAS_0" || resumen.etiqueta == "NOTA_0" )
									{
										objeto.montoUSD_0 += resumen.total;
										totalLegend += resumen.total;
									} 
								}
							}
							
							if((_listaMontoObjetivo.length != 0) && (_listaMontoObjetivo.length != _maximoMeses - 1) )
							{
								objeto.montoObjetivo = _listaMontoObjetivo[contador].monto ;
								contador++;
							}	
							if((_listaMontoObjetivoFundamental.length != 0) && (_listaMontoObjetivoFundamental.length != _maximoMeses - 1) ){
								objeto.montoFundamental = _listaMontoObjetivoFundamental[contador2].monto ;  //  VERIFICAR SI ES MONTO
								contador2++;
							}
							arrReturn.addItem(objeto);
						}
						cuenta++;
					}
				}
				
				for( var g:int = 0; g < arrReturn.length; g++ )
				{
					arrReturn[g].totalPeriodo = totalLegend;
				}
				return arrReturn;
			}
			
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			public function set recibirFiltros( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				_linealArrGrafica = new ArrayCollection;
				_listaMontoObjetivo = new ArrayCollection;
				_listaMontoObjetivoFundamental = new ArrayCollection;
				
				_event = $event;
				_minimoMeses = _event.rangoMinMes;
				_maximoMeses = _event.rangoMaxMes;
				
				yallegaronlosMontosObjetivos = false;
				yallegaronLasVentas = false;
				
				llamarAIniciarGrafica();
			} 
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			public function set limpiarGraficas( $limpiar:Boolean ):void
			{
				
				myChart.dataProvider =  new ArrayCollection;
			}		
		]]>
	</fx:Script>
	<comun:contenido >
		<s:VGroup width="100%" height="100%" horizontalAlign="right" paddingTop="50" paddingBottom="10" >
			<mx:LineChart height="100%" width="100%" id="myChart"
						  mouseSensitivity="5" 
						  dataTipRenderer="{PeriodoToolTip}" 
						  showDataTips="true" 
						  showDataTipTargets="false"  
						  dataTipMode="single" 
						  paddingRight="{ width > _tamanioMinimo ? 30 : 5}"
						  paddingLeft="{ width > _tamanioMinimo ? 20 : 5}"
						  seriesFilters="[]"
						  >
				<mx:series>
					<mx:LineSeries  yField="montoObjetivo" xField="numeroMes" form="step"  lineStroke="{s2}" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries id="montoObjetivo" yField="montoObjetivo" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}" stroke="{stroke2}" fill="{sc3}" itemRenderer="mx.charts.renderers.TriangleItemRenderer">
					</mx:PlotSeries>
					<mx:LineSeries yField="montoFundamental" xField="numeroMes" form="segment" lineStroke="{sObj}" width="100%" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries id="montoObjetivoFundamental" yField="montoFundamental" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}" itemRenderer="mx.charts.renderers.TriangleItemRenderer" fill="{sc4}" stroke="{stroke4}"> 
					</mx:PlotSeries>
					<mx:LineSeries yField="montoUSD_0" xField="numeroMes" form="segment"  lineStroke="{s1}" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries id="montoActual" yField="montoUSD_0" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
										<s:fill>
											<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
				</mx:series>
				<mx:horizontalAxis>
					<mx:DateTimeAxis id="ventasMes" alignLabelsToUnits="true" displayLocalTime="true" dataUnits="months" />
				</mx:horizontalAxis>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{ventasMes}" showLine="false" showLabels="false" />
				</mx:horizontalAxisRenderers>
				
				<mx:verticalAxis>
					<mx:LinearAxis id="ventasDLS" labelFunction="formateoEje" /> 
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{ventasDLS}" showLine="false" showLabels="{ width > _tamanioMinimo ? true : false}" tickPlacement="none" styleName="axisVerticalLabels"/>
				</mx:verticalAxisRenderers>
				
				<mx:backgroundElements>
					<mx:GridLines visible="{ width > _tamanioMinimo ? true: false}">
						<mx:horizontalStroke>
							<s:SolidColorStroke weight="0.5" color="0xeeeeee" />
						</mx:horizontalStroke>
					</mx:GridLines>
				</mx:backgroundElements>
			</mx:LineChart>
			<componentes:horizontalAxisChartPq text="VENTAS EN DLS" horizontalCenter="0" width="100%"
											   paddingRight="{ width > _tamanioMinimo ? 30 : 5}" paddingLeft="{ width > _tamanioMinimo ? 70 : 5}" />
		</s:VGroup>
	</comun:contenido>
	
</comun:contenedorCatalogosTableroMiniChart>
