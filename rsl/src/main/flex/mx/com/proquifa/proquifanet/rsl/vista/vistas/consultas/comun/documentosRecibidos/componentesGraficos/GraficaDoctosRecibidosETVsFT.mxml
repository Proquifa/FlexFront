<?xml version="1.0" encoding="utf-8"?>
<graficas:PieChartPqGris xmlns:fx="http://ns.adobe.com/mxml/2009" 
						 xmlns:s="library://ns.adobe.com/flex/spark" 
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
						 xmlns:graficas="skins.skin.graficas.*" width="99%" height="99%"
						 dataProvider="{null}"
						 itemClick="selectedVs(event)"
						 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
						 fondoCircular="true" fondoCircularRadius="7"
						 showDataTips="false"  innerRadius=".5" 
						 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.comun.documentosRecibidos.EventoDocumentosRecibidos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DocumentoRecibido;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			private var keys:Object;
			private var _graficoTipo:Boolean = false;
			private var _cargaInfo:Boolean = false;
			private var _infoETVsFT:ArrayCollection;
			
			public function set recibeControlUpdateGrafico(update:Boolean):void{
				_cargaInfo = update; 
			}
			
			public function set recibirDocumentos($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) return ;
				
				_infoETVsFT = new ArrayCollection();
				dataProvider = new ArrayCollection();
				
				if($infoGrafica.length >0){
					
					/**
					 * Se obtiene un array del ArrayCollection con el fin de aplicar funciones espécificas de los Arrays como el ordenar
					 * */
					var arrayTemp:Array = new Array();
					arrayTemp = ObjectUtil.copy(($infoGrafica) as ArrayCollection).source;
					/**
					 * Se elimina el último elemento del arreglo que trae el conteo de las filas.
					 * */
					if(arrayTemp.length>1)
						// arrayTemp.pop();
					arrayTemp.sortOn("enTiempo",Array.DESCENDING);
					
					/**
					 * Se obtiene un array con ET o FT con el fin de saber si vienen los dos o sólo uno 
					 *  sin duplicarse, que será el que controlará el for para las sumas.
					 * */
					keys = new Object();
					var arrayTotalETvsFT:Array = new Array();
					arrayTotalETvsFT = arrayTemp.filter(quitaDuplicados);
					
					if(arrayTotalETvsFT.length>1)
						arrayTotalETvsFT.sortOn("enTiempo",Array.DESCENDING);
					
					FormarLosETvsFT(arrayTotalETvsFT,arrayTemp,_infoETVsFT);
					
					var eventoPasarInfo:EventoDocumentosRecibidos = new EventoDocumentosRecibidos(EventoDocumentosRecibidos.PASAR_INFO_A_ETVSFT_SECUNDARIA);
					eventoPasarInfo.arregloExtra = (ObjectUtil.copy(_infoETVsFT) as ArrayCollection);
					dispatchEvent(eventoPasarInfo);
					
					dataProvider = aplicarFormatoConsultasDeDosEtiquetas(_infoETVsFT,"ET vs FT",'totalDocumentos');
					useCursorHand = true;
					//Para liberar Memoria
					arrayTemp = new Array();
					arrayTotalETvsFT = new Array();
					keys = new Object();
				}
			}
			
			public function quitaDuplicados(item:DocumentoRecibido, idx:uint, etVsFT:Array):Boolean{
				if (keys.hasOwnProperty(item.enTiempo)) {
					return false;
				} else {
					keys[item.enTiempo] = item.enTiempo;
					return true;
				}
			}
			private function FormarLosETvsFT(TotalETvsFT:Array,etvsftInfo:Array,infoETvsFT:ArrayCollection):void
			{
				var totalDocumentos:int;
				var totalClientes:int;
				var keysClientesFT:Object= new Object();
				keys = new Object();
				
				var currentDoctoRecibido:DocumentoRecibido; 
				var j:int;
				var itemResumenConsulta:ResumenConsulta;
				for(var i:int =0; i<TotalETvsFT.length; i++){
					j=0;
					totalDocumentos =0;
					totalClientes =0;
					currentDoctoRecibido = etvsftInfo[j] as DocumentoRecibido;
					while( (TotalETvsFT[i] as DocumentoRecibido).enTiempo == currentDoctoRecibido.enTiempo ){
						
						totalDocumentos++
						/**
						 * Para el conteo de cotizaciones Dando Peso a las cotizaciones que están FT
						 * */
						if( currentDoctoRecibido.enTiempo == "FT"){
							if(!keysClientesFT.hasOwnProperty(currentDoctoRecibido.nombreEmpresa)){
								keysClientesFT[currentDoctoRecibido.nombreEmpresa] = currentDoctoRecibido.nombreEmpresa;
								totalClientes++;
							}
						}else{
							if(!keys.hasOwnProperty(currentDoctoRecibido.nombreEmpresa) && !keysClientesFT.hasOwnProperty(currentDoctoRecibido.nombreEmpresa)){
								keys[currentDoctoRecibido.nombreEmpresa] = currentDoctoRecibido.nombreEmpresa;
								totalClientes++;
							}
						}
						
						etvsftInfo.shift();
						if(etvsftInfo.length >0)
							currentDoctoRecibido = etvsftInfo[j] as DocumentoRecibido;
						else
							currentDoctoRecibido =new DocumentoRecibido();
					}
					
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta.etiqueta = (TotalETvsFT[i] as DocumentoRecibido).enTiempo.toLocaleUpperCase();
					itemResumenConsulta.totalClientes = totalClientes;
					itemResumenConsulta.totalDocumentos = totalDocumentos;
					
					infoETvsFT.addItem(ObjectUtil.copy(itemResumenConsulta));
				}
				/**
				 * Se necesita ordenar inversamente primero la suma de los ET y luego los FT para invertir colores en la gráfica.
				 * */ 
				if(infoETvsFT.length>0){
					if(infoETvsFT.length == 1){
						if((infoETvsFT[0] as ResumenConsulta).etiqueta == "FT"){
							itemResumenConsulta = new ResumenConsulta();
							itemResumenConsulta.etiqueta = "ET";
							itemResumenConsulta.totalPedidos =0;
							itemResumenConsulta.totalDocumentos =0;
							infoETvsFT.addItemAt(itemResumenConsulta,0);
						}
					} else{
						infoETvsFT.addItem(ObjectUtil.copy(infoETvsFT[0]));
						infoETvsFT.removeItemAt(0);
					} 
				}
			}
			
			private function selectedVs(event:ChartItemEvent):void{
				var evt:EventoDocumentosRecibidos = new EventoDocumentosRecibidos(EventoDocumentosRecibidos.MOSTRAR_SELECTED_GRAFICA);
				
				evt.tipo = event.hitData.item.etiqueta;
				evt.valorAdicional = 'grafETVsFT';
				evt.seleccionarGraficas = 1;
				dispatchEvent(evt);
			}
		]]>
	</fx:Script>
	<graficas:series>
		<graficas:pieSeriesVS field="totalDocumentos"/>
	</graficas:series>
</graficas:PieChartPqGris>