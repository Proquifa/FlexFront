<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="100%"
				xmlns:otros="skins.otros.*"
				fontSize="12">
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.reportes.seguimientos.HistorialPartidaEnSeguimiento;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable]	private var _ico:Class;
			[Bindable]	private var estadoNormal:Boolean = true;
			
			override public function set data(value:Object):void{
				super.data = value;
				if(value != null){
					if(value.ultimo == ""){
						this.estadoNormal = true;
					}
					else{
						this.autoDrawBackground = false;
						this.estadoNormal = false;
					}	
				}
				if( value is HistorialPartidaEnSeguimiento ){
						// si la fecha fr es pendiente o null entonces comparo con la fecha de hoy
						var fechaFR:Date = value.fr as Date; 
						var fechaFer:Date = value.fer as Date;
						if( fechaFR != null ) fechaFR = new Date( fechaFR.fullYear, fechaFR.month, fechaFR.date, 0, 0, 0);
						if( fechaFer != null ) fechaFer = new Date( fechaFer.fullYear, fechaFer.month, fechaFer.date, 0, 0, 0);
						var diasDif:int = UtilsFecha.regresaDiferenciaEntreFechasEnDiasRestandoFinesConSigno( (fechaFR == null ? new Date(): fechaFR), fechaFer );
						if( diasDif < 0 ){
								_ico = catalogoIconosGrid.getInstance().render_circuloRojo;
						}else{
								_ico = catalogoIconosGrid.getInstance().render_circuloVerde;
						}
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%" verticalAlign="middle" visible="{estadoNormal}" includeInLayout="{estadoNormal}" paddingTop="20" >
			<s:HGroup width="100%" >
					<s:Label width="100%" fontWeight="bold" text="# { data.numFila } · { data.estadoFinal }" paddingBottom="15" />
					<s:Image id="imgEstado" source="{ this._ico }" />
			</s:HGroup>	
		
			<s:Label fontWeight="bold" width="100%" color="0x{catalogoColores.LABEL_VERDE_AZUL}" text="{data.vendedor}" paddingBottom="15" />
		
			<s:Label fontWeight="bold" text="Origen:"/>
			<s:Label text="{data.estado}" paddingBottom="15" />
		
			<s:Label fontWeight="bold" text="Situación:" visible="{ data.situacion != null }" includeInLayout="{ data.situacion != null }"/>
			<s:Label text="{data.situacion}" paddingBottom="15" visible="{ data.situacion != null }" includeInLayout="{ data.situacion != null }"/>
		
			<s:Label fontWeight="bold" text="Contacto:"/>
			<s:Label text="{data.contacto}" paddingBottom="15" />
		
			<s:Label fontWeight="bold" text="FER:"/>
			<s:Label text="{data.ferString}" paddingBottom="15" />
		
			<!--<s:HGroup width="100%">
				<s:Label fontWeight="bold" text="FUA:"/>
				<s:Label text="{data.fuaString}"/>
			</s:HGroup>-->
		
			<s:Label fontWeight="bold" text="FR:"/>
			<s:Label text="{data.frString}" paddingBottom="15" />
		
			<s:Label width="100%" text="Comentarios:" fontWeight="bold"/>
			<s:Label width="100%" text="{data.comentarios}" maxDisplayedLines="3"/>
		
			<otros:division width="100%" visible="{ estadoNormal }" includeInLayout="{ estadoNormal }"/>
	</s:VGroup>
	
	<s:Label width="100%" textAlign="center" verticalAlign="middle" text="Sin información" visible="{!estadoNormal}" includeInLayout="{!estadoNormal}"
			 paddingTop="25" paddingBottom="50"/>
</s:ItemRenderer>
