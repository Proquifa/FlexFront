<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:label="skins.skin.label.*"
		 xmlns:otros="skins.otros.*" 
		 xmlns:grafica="skins.botones.grafica.*" 
		 width="100%" height="50"
		 creationComplete="init(event)" 
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			
			
			[Bindable] private var _indice:String;
			[Bindable] private var _colorUno:uint = 0xffffff;
			[Bindable] private var _label:String;
			private var _tipoBoton:String;
			
			
			public function init(event:FlexEvent):void
			{
				establecerLabel();
			}
			
			public function establecerLabel():void
			{
				if( _tipoBoton == "analisis_todos")
				{
					_label = "TODOS";
					img.source = catalogoIconosBotones.getInstance().analisis_todos;
				}
				if( _tipoBoton == "analisis_altos")
				{
					_label = "ALTOS";
					img.source = catalogoIconosBotones.getInstance().analisis_altos;
				}
				if( _tipoBoton == "analisis_medios")
				{
					_label = "MEDIOS";
					img.source = catalogoIconosBotones.getInstance().analisis_medios;
				}
				if( _tipoBoton == "analisis_bajos")
				{
					_label = "BAJOS";
					img.source = catalogoIconosBotones.getInstance().analisis_bajos;
				}
				if( _tipoBoton == "analisis_nuevos")
				{
					_label = "NUEVOS";
					img.source = catalogoIconosBotones.getInstance().analisis_medios;
				}
				if( _tipoBoton == "analisis_distribuidores")
				{
					_label = "DISTRIBUIDORES";
					img.source = catalogoIconosBotones.getInstance().analisis_distribuidores;
				}
				if( _tipoBoton == "analisis_estrategicos")
				{
					_label = "ESTRATEGICOS";
					img.source = catalogoIconosBotones.getInstance().analisis_medios;
				}
				if( _tipoBoton == "analisis_normales")
				{
					_label = "NORMALES";
					img.source = catalogoIconosBotones.getInstance().analisis_bajos;
				}
			}
			
			public function clickHandler():void
			{
				if(currentState != "disabled")
				{
					currentState = "seleccionado";
					gradient.rotation = 90;
				}
				else
				{
					gradient.rotation = 0;
				}
				
				lblBoton.setStyle("color","0x"+catalogoColores.LABEL_VERDE_AZUL);
				lblIndice.setStyle("color","0x"+catalogoColores.LABEL_VERDE_AZUL);
				
				if( _tipoBoton == "analisis_todos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_todos_selected;
				}
				if( _tipoBoton == "analisis_altos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_altos_selected;
				}
				if( _tipoBoton == "analisis_medios")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_medios_selected;
				}
				if( _tipoBoton == "analisis_bajos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_bajos_selected;
				}
				if( _tipoBoton == "analisis_nuevos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_nuevos_selected;
				} 
				if( _tipoBoton == "analisis_distribuidores")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_distribuidores_selected;
				} 
				if( _tipoBoton == "analisis_estrategicos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_nuevos_selected;
				} 
				if( _tipoBoton == "analisis_normales")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_bajos_selected;
				} 
			}
			
			public function deseleccionar():void
			{
				lblBoton.setStyle("color","0x"+catalogoColores.LABEL_NEGRO);
				lblIndice.setStyle("color","0x"+catalogoColores.LABEL_NEGRO);
				lblIndice.visible = false;
				
				if( _tipoBoton == "analisis_todos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_todos;
				}
				if( _tipoBoton == "analisis_altos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_altos;
				}
				if( _tipoBoton == "analisis_medios")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_medios;
				}
				if( _tipoBoton == "analisis_bajos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_bajos;
				}
				if( _tipoBoton == "analisis_nuevos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_nuevos;
				}
				if( _tipoBoton == "analisis_distribuidores")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_distribuidores;
				} 
				if( _tipoBoton == "analisis_estrategicos")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_nuevos;
				}
				if( _tipoBoton == "analisis_normales")
				{
					img.source = catalogoIconosBotones.getInstance().analisis_bajos;
				}
				
				currentState = "normal";
			}
			
			public function get tipoBoton():String
			{
				return _tipoBoton;
			}
			public function set tipoBoton(value:String):void
			{
				_tipoBoton = value;
			}
			
			[Bindable]
			public function get indice():String
			{
				return _indice;
			}
			
			public function set indice(value:String):void
			{
				_indice = value;
			}
			public function get label():String
			{
				return _label;
			}
			
			public function set label(value:String):void
			{
				_label = value;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="seleccionado"/>
		<s:State name="disabled"/>
	</s:states>
	<s:Rect width="100%" height="100%" >
		<s:fill>
			<s:LinearGradient id="gradient" rotation="90">
				<s:GradientEntry color="{ _colorUno }"  color.seleccionado="0xd9d7d8" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Group width="100%" height="100%">
		<label:Titulo id="lblIndice" right="1" text="{_indice.toUpperCase()}" paddingTop="5" paddingRight="5" visible="false"/>
		<s:VGroup id="grpPrincipal" width="100%" height="100%"   >
			
			<s:Spacer height="100%"/>
			<s:VGroup id="contenido" width="100%" height="100%" horizontalAlign="center" paddingTop="-2" >
				<s:Image id="img"  />
				<label:Titulo id="lblBoton" textAlign="center" text="{_label}" fontSize="9" paddingTop="0"  width="100%" fontWeight="bold"/>
			</s:VGroup>
			<s:Spacer height="100%"/>
		</s:VGroup>
	</s:Group>
</s:Group>
