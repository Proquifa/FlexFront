<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="init(event)" click="clickHandler(event)" stateChangeComplete="stateChangeHandler(event)"
		 width="93" minHeight="32">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			
			private var _tipoBoton:String;
			[Bindable]	private var _colorUno:uint = 0x323333;
			[Bindable]	private var _colorDos:uint = 0x323333;
			public var imagen:String = "tabla";
			[Bindable]	public var total:String = "";
			[Bindable]	public var label1:String = "";
			private var _label2:String = "";
			
			[Bindable]
			public function get label2():String
			{
				return _label2;
			}

			public function set label2(value:String):void
			{
				_label2 = value.split(' ').join('\n');// le aplico un salto de linea para que quede como en el diseÃ±o
			}

			[Bindable]
			[Inspectable(category="General", enumeration="pasado,anteantier,antier,ayer,hoy,manana,pasadomanana,pospasado,futuro,todo", defaultValue="hoy")]
			public function get tipoBoton():String
			{
				//pasado, futuro altura 32
				//ayer,todo,manana altura 92
				//antier,pasadomanana altura 72
				//anteantier,pospasado
				//hoy altura 175
				return _tipoBoton;
			}
			public function set tipoBoton(value:String):void
			{
				_tipoBoton = value;
			}

			protected function clickHandler(event:MouseEvent):void
			{
					if( currentState == "seleccionado"){
							imagen = imagen == "tabla" ? "grafica": "tabla";
					}
					if(currentState != "disabled"){
							currentState = "seleccionado";
					}
					dispatchEvent( new Event("clickCustomButton", true, false) );
			}
			
			protected function init(event:FlexEvent):void
			{
					//			ALTURA
					if( _tipoBoton == "pasado" || _tipoBoton == "futuro" ) height = 32;
					else if( _tipoBoton == "ayer" || _tipoBoton == "todo" || _tipoBoton == "manana" ) height = 94;
					else if( _tipoBoton == "antier" || _tipoBoton == "pasadomanana" ) height = 72;
					else if( _tipoBoton == "anteantier" || _tipoBoton == "pospasado" ) height = 53;
					else if( _tipoBoton == "hoy" ){
						height = 175;
					}
					//			/ALTURA
					//			ETIQUETAS
					if( _tipoBoton == "ayer" || _tipoBoton == "hoy" || _tipoBoton == "manana" ){
						lblSub.visible = lblSub.includeInLayout = true;
						separator.visible = separator.includeInLayout = true;
					}else{
						lblSub.visible = lblSub.includeInLayout = false;
						separator.visible = separator.includeInLayout = false;
					}
					//			/ETIQUETAS
					if( _tipoBoton == "todo" ){
						lblHead.setStyle( 'fontSize', 17 );
					}
					//			COLORES
					if( _tipoBoton == "hoy" || _tipoBoton == "todo" ){
						_colorUno = 0x323333;
						_colorDos = 0x323333;
					}
					if( _tipoBoton == "ayer" ){
						_colorUno = 0x9e2124;
						_colorDos = 0x991b1e;
					}
					if( _tipoBoton == "antier" ){
						_colorUno = 0x861b1d;
						_colorDos = 0x7f1719;
					}
					if( _tipoBoton == "anteantier" ){
						_colorUno = 0x711716;
						_colorDos = 0x6d1514;
					}
					if( _tipoBoton == "pasado" ){
						_colorUno = 0x601311;
						_colorDos = 0x5f1310;
					}
					if( _tipoBoton == "manana" ){
						_colorUno = 0x8ca642;
						_colorDos = 0x86a03b;
					}
					if( _tipoBoton == "pasadomanana" ){
						_colorUno = 0x758f34;
						_colorDos = 0x6e882f;
					}
					if( _tipoBoton == "pospasado" ){
						_colorUno = 0x627a2a;
						_colorDos = 0x5e7628;
					}
					if( _tipoBoton == "futuro" ){
						_colorUno = 0x546922;
						_colorDos = 0x526721;
					}
					//			/COLORES
			}
			
			protected function stateChangeHandler(event:FlexEvent):void
			{
					if( currentState == "normal" )	imagen = "tabla";
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="seleccionado"/>
		<s:State name="disabled"/>
	</s:states>
	<s:Rect width="100%" height="100%" >
			<s:fill>
					<s:LinearGradient rotation="90" >
							<s:GradientEntry color="{ this._colorUno }" ratio="0" color.seleccionado="#288092" />
							<s:GradientEntry color="{ this._colorDos }" ratio="1" color.seleccionado="#1c7184"/>
					</s:LinearGradient>
			</s:fill>
	</s:Rect>
	<!--15 12 10 9-->
	<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
			<s:Group width="100%" height="{ this.label1 == 'HOY' ? 40: 20 }" >
						<s:Label id="lblHead" horizontalCenter="0" verticalCenter="0" textAlign="center" color="#FFFFFF" 
								 fontFamily="Helvetica" fontWeight="bold" fontSize="12" fontStyle="normal" maxDisplayedLines="2"
								 text="{ this.label1 }" maxWidth="75" />
						<s:Label id="lblExp" horizontalCenter="{ ( lblHead.width/2 ) + 8 }" verticalCenter="-6" color="#FFFFFF" fontFamily="Helvetica"
								 fontSize="9" fontStyle="normal" fontWeight="bold" maxDisplayedLines="1" maxWidth="50"
								  text="{ this.total }"/>
			</s:Group>
			<s:Rect id="separator" width="60%" height="0.7">
					<s:fill>
						<s:SolidColor color="#FFFFFF" /> 
					</s:fill>
			</s:Rect>
			<s:Label id="lblSub" color="#FFFFFF" maxDisplayedLines="2" fontFamily="Helvetica" fontWeight="bold" fontSize="10" fontStyle="normal"
							 text="{ this.label2.toUpperCase() }" textAlign="center" paddingTop="{ this.label1 == 'HOY' ? 18: 10 }"/>
	</s:VGroup>
</s:Group>
