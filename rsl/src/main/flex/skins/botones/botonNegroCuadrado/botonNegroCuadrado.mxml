<?xml version="1.0" encoding="utf-8"?>
<s:Button xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" skinClass="skins.botones.botonNegroCuadrado.skinBotonNegroCuadrado" creationComplete="init()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import skins.catalogos.catalogoIconosBotoneras;
			
			[Bindable]	public var colorBase:String=""; //="ea00ff";
			[Inspectable(category="General", enumeration="true,false", defaultValue="false")]
			[Bindable]	public var gradientePqnet:Boolean = false;
			[Inspectable(category="General", enumeration="adicionales,adicionalesdown,candadoblanco,candadoblancodown,cliente,disponibilidad,disponibilidaddown,esac,esacdown,manejo,manejodown,ojoMordor,precio,preciodown,rechazo,rechazodown,conRequisicion,conRequisiciondown,sinRequisicion,sinRequisiciondown,graficaPie,graficaPiedown,registroInc,registroIncdown,reformulacionInc,reformulacionIncdown,registrarIncidente,registrarIncidentedown,marcadores,marcadoresdown,flechanegratitulo,flechanegratitulodown,proforma,proformadown,reloj,relojdown,carritobotonera,carritobotoneradown,flechaIzquierdaover,flechaIzquierdaupdown,agrupar,agrupardown,solicitudes,solicitudesdown", defaultValue="adicionales")]
			[Bindable]	public var icono:String="";
			
			private var colorOver:String ="";
			private var colorGradiente:String ="";
			
			private var rojoInicio:uint = new uint();
			private var verdeInicio:uint=new uint();
			private var azulInicio:uint =new uint();
			
			private var rojoFinal:String;
			private var verdeFinal:String;
			private var azulFinal:String;
			
			public function init():void{
				if( icono == "" ){
					skinBotonNegroCuadrado(skin).icono.includeInLayout = skinBotonNegroCuadrado(skin).icono.visible = false;	
				}else{
					skinBotonNegroCuadrado(skin).icono.source = catalogoIconosBotoneras.getInstance()[icono];
				}
				if( label == "" ){
					skinBotonNegroCuadrado(skin).labelDisplay.includeInLayout = skinBotonNegroCuadrado(skin).labelDisplay.visible = false;
				}else{
					skinBotonNegroCuadrado(skin).labelDisplay.includeInLayout = skinBotonNegroCuadrado(skin).labelDisplay.visible = true;
				}
				///			COLOR
				if(this.colorBase != ""){
					if(colorBase.indexOf('#') != -1){
						colorBase = colorBase.substr(1,6);
					}else if(colorBase.indexOf('0x') != -1){
						colorBase = colorBase.substr(2,6);
					}
					rojoInicio = convertStringToUint( colorBase.substr(0,2) );
					verdeInicio = convertStringToUint( colorBase.substr(2,2) );
					azulInicio = convertStringToUint( colorBase.substr(4,2) );
					/**
					 * separo el color en 3 pares, luego convierto a decimal cada par y les resto 30, 
					 * si el resultado es menor de 0 los igualo a cero para evitar numeros negativos
					 */
					rojoFinal = ((rojoInicio - 30 < 0 ? rojoInicio = 0 : rojoInicio -= 30)).toString(16);
					rojoFinal.length < 2 ? rojoFinal = "0" + rojoFinal : rojoFinal;
					verdeFinal = ((verdeInicio - 30 < 0 ? verdeInicio = 0 : verdeInicio -= 30)).toString(16);
					verdeFinal.length < 2 ? verdeFinal = "0" + verdeFinal : verdeFinal;
					azulFinal = ((azulInicio - 30 < 0 ? azulInicio = 0 : azulInicio -= 30)).toString(16);
					azulFinal.length < 2 ? azulFinal = "0" + azulFinal : azulFinal;
					colorOver = "0x" + rojoFinal + verdeFinal + azulFinal;
					
					skinBotonNegroCuadrado(skin).colorNormal = uint("0x" + colorBase);
					skinBotonNegroCuadrado(skin).colorOver = uint(colorOver);
					///			GRADIENTE
					if(this.gradientePqnet == true){
						rojoInicio = convertStringToUint( colorBase.substr(0,2) );
						verdeInicio = convertStringToUint( colorBase.substr(2,2) );
						azulInicio = convertStringToUint( colorBase.substr(4,2) );
						rojoFinal = ((rojoInicio - 95 < 0 ? rojoInicio = 0 : rojoInicio -= 95)).toString(16);
						rojoFinal.length < 2 ? rojoFinal = "0" + rojoFinal : rojoFinal;
						verdeFinal = ((verdeInicio - 95 < 0 ? verdeInicio = 0 : verdeInicio -= 95)).toString(16);
						verdeFinal.length < 2 ? verdeFinal = "0" + verdeFinal : verdeFinal;
						azulFinal = ((azulInicio - 95 < 0 ? azulInicio = 0 : azulInicio -= 95)).toString(16);
						azulFinal.length < 2 ? azulFinal = "0" + azulFinal : azulFinal;
						colorGradiente = "0x" + rojoFinal + verdeFinal + azulFinal;
						skinBotonNegroCuadrado(skin).colorGradiente = uint(colorGradiente);
						skinBotonNegroCuadrado(skin).colorGradienteAbajo = uint(colorGradiente);
					}else{
						skinBotonNegroCuadrado(skin).colorGradiente = uint("0x" + colorBase);
						skinBotonNegroCuadrado(skin).colorGradienteAbajo = uint(colorOver);
					}
				}
			}
			public function convertStringToUint(value:String):uint  
			{  
				var colorString:String = "0x" + value;  
				var colorUint:uint = uint(colorString);
				return colorUint;
			}  
		]]>
	</fx:Script>
</s:Button>
