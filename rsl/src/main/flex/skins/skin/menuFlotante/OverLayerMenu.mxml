<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:btnToggleEstados="skins.botonesToggle.btnToggleEstados.*"
		  click="seleccionar()"
		  width="100%" height="100%" gap="0"
		  creationComplete="vgroup1_creationCompleteHandler(event)"
		  >
	
	<fx:Declarations>
		<s:Parallel id="fxShowOpcionesBusqueda" duration="400" effectEnd="fxShowOpcionesBusqueda_effectEndHandler(event)">
			<s:Resize target="{valoresLayer}" heightFrom="0" heightTo="{_heightVariable}" />
			<s:Fade target="{valoresLayer}" alphaFrom="0" alphaTo="1" duration="330"/>		
		</s:Parallel>
		
		<s:Parallel id="fxHideOpcionesBusqueda" duration="300" effectEnd="fxHideOpcionesBusqueda_effectEndHandler(event)">
			<s:Resize target="{valoresLayer}" heightFrom="{_heightVariable}" heightTo="0" />
			<s:Fade target="{valoresLayer}" alphaFrom="1" alphaTo="0" startDelay="100" duration="200"/>		
		</s:Parallel>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.ValorAdicional;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.StringFunciones;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			private var isShowBusqueda:Boolean;
			private var _subMenuSelected:String;
			private var _arrayValores:Array;
			
			[Bindable] private var _tipoBoton:String;
			[Bindable] private var _heightVariable:Number;
			[Bindable] private var _arrayMostrado:ArrayCollection;
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				
			}
			
			public function startAnimacionLayer():void
			{
				if(!fxShowOpcionesBusqueda.isPlaying && !isShowBusqueda)
				{
					fxShowOpcionesBusqueda.play();
				}
			}
			
			protected function fxShowOpcionesBusqueda_effectEndHandler(event:EffectEvent):void
			{
				isShowBusqueda = true;
				setTimeout(comprobarIsMouseOverEnBusqueda,700);
			}
			
			private function comprobarIsMouseOverEnBusqueda():void
			{
				if(isShowBusqueda)
				{
					if(!(grpOpcionesBusqueda.contentMouseX > 0 && grpOpcionesBusqueda.contentMouseX <= grpOpcionesBusqueda.width) ||
						!(grpOpcionesBusqueda.contentMouseY > 0 && grpOpcionesBusqueda.contentMouseY <= grpOpcionesBusqueda.height))
					{
						if(!fxHideOpcionesBusqueda.isPlaying)
						{
							fxHideOpcionesBusqueda.play();
						}
					}
					else
					{
						setTimeout(comprobarIsMouseOverEnBusqueda,500);
					}
				}
			}
			
			protected function fxHideOpcionesBusqueda_effectEndHandler(event:EffectEvent):void
			{
				isShowBusqueda = false;
				dispatchEvent(new Event("terminoAnimacion",true));
			}
			
			public function marcarSeleccionado():void
			{
				btn.currentState = "seleccionado";
				btn.lblIndice.visible = true;
				btn.clickHandler();
			}
			
			public function seleccionar():void
			{
				if(!_arrayMostrado)
				{
					btn.currentState = "seleccionado";
					btn.clickHandler();
				}
				
				//btn.lblIndice.visible = true;
				
				if(!fxShowOpcionesBusqueda.isPlaying && !isShowBusqueda && _arrayValores)
				{
					fxShowOpcionesBusqueda.play();
					dispatchEvent(new Event("empezoAnimacion",true));
				}
			}
			
			protected function valoresLayer_clickHandler(event:MouseEvent):void
			{
				//btn.indice = obtenerAbreviatura(valoresLayer.selectedItem.valorMostrado);
				
				btn.label = _subMenuSelected = (valoresLayer.selectedItem.valorMostrado as String).toUpperCase();
				btn.currentState = "seleccionado";
				btn.clickHandler();
				dispatchEvent(new Event("escuchaSubMenuBusqueda",true));
				
			}
			
			public function deseleccionar():void
			{
				//if(btn.currentState != "seleccionado")
				{
					btn.establecerLabel();
					valoresLayer.selectedIndex = -1;
				}
				btn.deseleccionar();
			}
			
			//////////////////////////////// GETTERS AND SETTERS /// /////////////////////////////			
			
			public function get arrayValores():Array
			{
				return _arrayValores;
			}
			
			public function set arrayValores(value:Array):void
			{
				if(value)
				{
					_arrayValores = value;
					_heightVariable = _arrayValores.length * 34;
					var cont:Number=0;
					if(_arrayValores.length > 0)
					{
						_arrayMostrado = new ArrayCollection();
						for(var g:int=0; g < _arrayValores.length; g++)
						{
							var curr:ValorAdicional = new ValorAdicional;
							if(_arrayValores[g] != "--ninguno--" && _arrayValores[g] != "0" && StringFunciones.noAccent(_arrayValores[g]) != "sin asignacion" && _arrayValores[g] != "" && _arrayValores[g] != "null"  )
							{
								curr.valorMostrado = _arrayValores[g];
								_arrayMostrado.addItem(curr);
							}
							else
							{
								cont++;
							}
						}
					}
					_heightVariable = _heightVariable - (cont * 34);
				}
			}
			
			public function get subMenuSelected():String
			{
				return _subMenuSelected;
			}
			
			public function get tipoBoton():String
			{
				return _tipoBoton;
			}
			
			/**
			 * Se setea el tipo boton de: nivelIngreso, corporativo, ruta, clientes, cuentaClave
			 * */
			public function set tipoBoton(value:String):void
			{
				_tipoBoton = value;
			}
			
			
			
		]]>
	</fx:Script>
	<s:VGroup id="grpOpcionesBusqueda" width="100%" gap="0">
		<btnToggleEstados:botonBusqCatClientes width="100%" id="btn" tipoBoton="{_tipoBoton}" />
		
		<s:List id="valoresLayer"  width="100%" height="0" horizontalScrollPolicy="off" verticalScrollPolicy="off"
				dataProvider="{_arrayMostrado}" borderVisible="false" contentBackgroundAlpha=".6" click="valoresLayer_clickHandler(event)"
				itemRenderer="skins.skin.menuFlotante.ItemsRenders.IR_ValoresBusquedaCatClientes" />
	</s:VGroup>
</s:VGroup>
