<?xml version="1.0" encoding="utf-8"?>
<s:CheckBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark"
			xmlns:mx="library://ns.adobe.com/flex/mx"  
			styleName="cat_pro_checkRadio_defaultPQNet"
			focusColor="0x257d92"
			creationComplete="checkbox1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosGrid;
			
			private var _nombreStiloFuente:String = "default14";
			
			private var _tipoCheck:String;
			
			public function configurarCheckRadio($tipo:String,$nombreDelStilo:String):void{
				
				if($nombreDelStilo != null && StringUtil.trim($nombreDelStilo).length >0)
				{
					
					if($nombreDelStilo == "default10")
					{
						CheckRadioSkinDefaultPQNet(skin).fuenteNormal = "checkRadio_titulo_10";
						CheckRadioSkinDefaultPQNet(skin).fuenteSeleccionado = "checkRadio_titulo_10";
						CheckRadioSkinDefaultPQNet(skin).fuenteDisable = "checkRadio_titulo_10_gris";
						
					}
					if($nombreDelStilo == "default14")
					{
						CheckRadioSkinDefaultPQNet(skin).fuenteNormal = "checkRadio_titulo_14";
						CheckRadioSkinDefaultPQNet(skin).fuenteSeleccionado = "checkRadio_titulo_14";
						CheckRadioSkinDefaultPQNet(skin).fuenteDisable = "checkRadio_titulo_14_gris";
						
					}
					else if($nombreDelStilo == "default22")
					{
						CheckRadioSkinDefaultPQNet(skin).fuenteNormal = "checkRadio_titulo_22";
						CheckRadioSkinDefaultPQNet(skin).fuenteSeleccionado = "checkRadio_titulo_22";
						CheckRadioSkinDefaultPQNet(skin).fuenteDisable = "checkRadio_titulo_22_gris";
					}
					
					_nombreStiloFuente = $nombreDelStilo;
				}
				
				if($tipo != null && StringUtil.trim($tipo).length >0)
				{
					_tipoCheck = $tipo;
					
					if( $tipo == 'cuadrado' )
					{	
						CheckRadioSkinDefaultPQNet(skin).checkRadioNormal = catalogoIconosGrid.getInstance().checkCuadrado;
						CheckRadioSkinDefaultPQNet(skin).checkRadioSeleccionado = catalogoIconosGrid.getInstance().checkCuadradoSelected;
						CheckRadioSkinDefaultPQNet(skin).checkRadioDisable = catalogoIconosGrid.getInstance().checkCuadradoDesHabilitado;
					}
					else if( $tipo == 'socioComercial' )
					{
						CheckRadioSkinDefaultPQNet(skin).checkRadioNormal = catalogoIconosGrid.getInstance().checkSocios;
						CheckRadioSkinDefaultPQNet(skin).checkRadioDisable = catalogoIconosGrid.getInstance().checkSocios;
						CheckRadioSkinDefaultPQNet(skin).checkRadioSeleccionado = catalogoIconosGrid.getInstance().checkSociosSelected;
					}
					else if ($tipo == 'cuadrado2' )
					{
						CheckRadioSkinDefaultPQNet(skin).checkRadioNormal = catalogoIconosGrid.getInstance().checkCuadrado;
						CheckRadioSkinDefaultPQNet(skin).fuenteNormal = "cltas_titulo_12_pTop0";
						CheckRadioSkinDefaultPQNet(skin).fuenteSeleccionado = "cltas_titulo_12_pTop0";
						CheckRadioSkinDefaultPQNet(skin).checkRadioSeleccionado = catalogoIconosGrid.getInstance().checkCuadradoSelected;
						CheckRadioSkinDefaultPQNet(skin).checkRadioDisable = catalogoIconosGrid.getInstance().checkCuadradoDesHabilitado;
					}
					else
					{
						trace("ADVERTENCIA ::::::::: Este check no se ha habilitado para el tipo: " + $tipo);
					}
				}
			}
			
			[Inspectable(category="Common",defaultValue="default14",enumeration="default22,default14,default10")]
			public function get nombreStiloFuente():String
			{
				return _nombreStiloFuente;
			}
			
			public function set nombreStiloFuente(value:String):void
			{
				_nombreStiloFuente = value;
			}
			
			[Inspectable(category="Common",defaultValue="cuadrado",enumeration="socioComercial,cuadrado,cuadrado2")]
			public function get tipoCheck():String
			{
				return _tipoCheck;
			}
			
			public function set tipoCheck(value:String):void
			{
				_tipoCheck = value;
			}
			
			protected function checkbox1_creationCompleteHandler(event:FlexEvent):void
			{
				configurarCheckRadio(_tipoCheck,_nombreStiloFuente);
			}
			
		]]>
	</fx:Script>
	
</s:CheckBox>
