<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 xmlns:textinput="skins.skin.textinput.*"
			>
	
	<!--Este componente no puede ser usado en contenedores Group se desborda-->
	
	<fx:Script>
		<![CDATA[
			import skins.catalogos.catalogoIconosGrid;
 			
			private var _text:String;
			private var _restrict:String;
			private var _maxChars:int = 0;
			private var _habilitaBoton:Boolean = false;
			private var _editable:Boolean = false;
			private var _botonvisible:Boolean = false;
			
			
			
			[Bindable]
			public function get botonvisible():Boolean
			{
				return _botonvisible;
			}

			public function set botonvisible(value:Boolean):void
			{
				_botonvisible = value;
				this.boton.visible = value;
			}
			
 			[Bindable]
			public function get editable():Boolean
			{
				return _editable;
			}	
			public function set editable(value:Boolean):void
			{
				_editable = value;
			} 

			[Bindable]
			public function get habilitaBoton():Boolean
			{
				return _habilitaBoton;
			}

			public function set habilitaBoton(value:Boolean):void
			{
				_habilitaBoton = value;
				if( value == true ){
					boton.source = catalogoIconosGrid.getInstance().menosTextInput;
					this.texto.visible = true;
					this.textoOculto.visible = false;
				}else{
					boton.source = catalogoIconosGrid.getInstance().masTextInput;
					this.textoOculto.visible = true;
					this.texto.visible = false;
				}
			}

			[Bindable]
			public function get restrict():String
			{
				return _restrict;
			}

			public function set restrict(value:String):void
			{
				_restrict = value;
				texto.restrict = value;
			}

			[Bindable]
			public function get text():String
			{
				return _text;
			}
			public function set text(value:String):void
			{
				_text = value;
				texto.text = value;
			}
			[Bindable]
			private var habilitaClickBoton:Boolean;
			public function habilitaClickBotonFuncion(dato:Boolean):void{
				this.boton.visible = dato;
				habilitaClickBoton = dato;
			}
			protected function boton_clickHandler(event:MouseEvent):void
			{
				if( habilitaClickBoton ){
					if( _habilitaBoton == true ){
						boton.source = catalogoIconosGrid.getInstance().masTextInput;
						textoOculto.text = "NA";
						this.textoOculto.visible= true;
						this.texto.visible= false;
						_habilitaBoton = false;
					}else{
						boton.source = catalogoIconosGrid.getInstance().menosTextInput;
						this.textoOculto.visible= false;
						this.texto.visible= true;
						_habilitaBoton = true;
					}
				}
			}

			[Bindable]
			public function get maxChars():int
			{
				return _maxChars;
			}

			public function set maxChars(value:int):void
			{
				_maxChars = value;
			}

			
		]]>
	</fx:Script>
	
	<!--Este componente no puede ser usado en contenedores Group se desborda-->
	<s:Group width="100%" height="100%">
		<textinput:txtInputBlancoDefaultPQNet width="100%" height="100%" id="texto" maxChars="{maxChars}" editable="{editable}" text="0"/>
		<textinput:txtInputBlancoDefaultPQNet width="100%" height="100%" id="textoOculto" enabled="false" visible="false"/>
	</s:Group>
	<s:Image id="boton" verticalCenter="0" horizontalCenter="{(this.width / 2)-17}" click="boton_clickHandler(event)"/>
</s:Group>
