<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for Spark TextArea component.  

     @see spark.components.TextArea
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
    alpha.disabledStates="0.5" blendMode="normal">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.TextArea")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        <![CDATA[
        import mx.core.FlexVersion;

        private var lineBreakChanged:Boolean;
        private var paddingChanged:Boolean;
        private var verticalAlignChanged:Boolean;
        
        /* Define the skin elements that should not be colorized. 
           For text area, the skin itself is colorized but the individual parts are not as well 
           as the border since it uses the borderColor style. */
        static private const exclusions:Array = ["background", "scroller", "promptDisplay", "border"];
        
        /* exclusions before Flex 4.5 for backwards-compatibility purposes */
        static private const exclusions_4_0:Array = ["background", "scroller", "promptDisplay", "border"];
        
        /**
         * @private
         */
        override public function get colorizeExclusions():Array 
        {
            // Since border is styleable via borderColor, no need to allow chromeColor to affect
            // the border.  This is wrapped in a compatibility flag since this change was added  
            // in Flex 4.5
            if (FlexVersion.compatibilityVersion < FlexVersion.VERSION_4_5)
            {
                return exclusions_4_0;
            }
            
            return exclusions;
        }
        
        /* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
        static private const contentFill:Array = ["bgFill"];
        
        /**
         *  @private
         */
        override public function get contentItems():Array {return contentFill};
        
        /**
         *  @private
         */
        override protected function commitProperties():void
        {
            super.commitProperties();
            
            if (lineBreakChanged)
            {
                updateStringStyle("lineBreak");
                lineBreakChanged = false;
            }
            if (paddingChanged)
            {
                updatePadding();
                paddingChanged = false;
            }
            if (verticalAlignChanged)
            {
                updateStringStyle("verticalAlign");
                verticalAlignChanged = false;
            }
        }
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        /**
         *  @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
        {
            if (getStyle("borderVisible") == true)
            {
                border.visible = true;
                shadow.visible = true;
                background.left = background.top = background.right = background.bottom = 1;
                textDisplay.left = textDisplay.top = textDisplay.right = textDisplay.bottom = 1;
                if (promptDisplay)
                {
                    /* promptDisplay.setLayoutBoundsSize(unscaledWidth - 2, unscaledHeight - 2);
                    promptDisplay.setLayoutBoundsPosition(1, 1); */
					promptDisplay.includeInLayout = true;
					promptDisplay.horizontalCenter = promptDisplay.verticalCenter = 0;
					/* promptDisplay.width = unscaledWidth - 1;
					promptDisplay.y = (unscaledHeight-promptDisplay.height)/2; */ 
                }
            }
            else
            {
                border.visible = false;
                shadow.visible = false;
                background.left = background.top = background.right = background.bottom = 0;
                if (promptDisplay)
                {
                    /* promptDisplay.setLayoutBoundsSize(unscaledWidth - 1, unscaledHeight - 1);
                    promptDisplay.setLayoutBoundsPosition(1, 1); */
					promptDisplay.includeInLayout = true;
					promptDisplay.horizontalCenter = promptDisplay.verticalCenter = 0;
					/* promptDisplay.width = unscaledWidth - 1;
					promptDisplay.y = (unscaledHeight-promptDisplay.height)/2; */ 
                }
            }
            
            borderStroke.color = getStyle("borderColor");
            borderStroke.alpha = getStyle("borderAlpha");
            
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
        
        /**
         *  @private
         */
        private function updatePadding():void
        {
            if (!textDisplay)
                return;
            
            // Push padding styles into the textDisplay
            var padding:Number;
            
            padding = getStyle("paddingLeft");
            if (textDisplay.getStyle("paddingLeft") != padding)
                textDisplay.setStyle("paddingLeft", padding);
            
            padding = getStyle("paddingTop");
            if (textDisplay.getStyle("paddingTop") != padding)
                textDisplay.setStyle("paddingTop", padding);
            
            padding = getStyle("paddingRight");
            if (textDisplay.getStyle("paddingRight") != padding)
                textDisplay.setStyle("paddingRight", padding);
            
            padding = getStyle("paddingBottom");
            if (textDisplay.getStyle("paddingBottom") != padding)
                textDisplay.setStyle("paddingBottom", padding);

            if (!promptDisplay)
                return;
            
            padding = getStyle("paddingLeft");
            if (promptDisplay.getStyle("paddingLeft") != padding)
                promptDisplay.setStyle("paddingLeft", padding);
            
            padding = getStyle("paddingTop");
            if (promptDisplay.getStyle("paddingTop") != padding)
                promptDisplay.setStyle("paddingTop", padding);
            
            padding = getStyle("paddingRight");
            if (promptDisplay.getStyle("paddingRight") != padding)
                promptDisplay.setStyle("paddingRight", padding);
            
            padding = getStyle("paddingBottom");
            if (promptDisplay.getStyle("paddingBottom") != padding)
                promptDisplay.setStyle("paddingBottom", padding);
        }
        
        /**
         *  @private
         */
        private function updateStringStyle(styleName:String):void
        {
            if (!textDisplay)
                return;
            
            // Push style into the textDisplay
            var style:String;
            
            style = getStyle(styleName);
            if (textDisplay.getStyle(styleName) != style)
                textDisplay.setStyle(styleName, style);

            if (!promptDisplay)
                return;
            
            // Push style into the promptDisplay
            style = getStyle(styleName);
            if (promptDisplay.getStyle(styleName) != style)
                promptDisplay.setStyle(styleName, style);
        }
        
        /**
         *  @private
         */
        override public function styleChanged(styleProp:String):void
        {
            var allStyles:Boolean = !styleProp || styleProp == "styleName";

            super.styleChanged(styleProp);
            
            if (allStyles || styleProp.indexOf("lineBreak") == 0)
            {
                lineBreakChanged = true;
                invalidateProperties();
            }
            if (allStyles || styleProp.indexOf("padding") == 0)
            {
                paddingChanged = true;
                invalidateProperties();
            }
            if (allStyles || styleProp.indexOf("verticalAlign") == 0)
            {
                verticalAlignChanged = true;
                invalidateProperties();
            }
        }
        ]]>
    </fx:Script>
    
    <fx:Script>
        <![CDATA[
        /** 
         * @private 
         */     
        private static const focusExclusions:Array = ["textDisplay", "scroller", "promptDisplay"];

        /**
         *  @private
         */
        override public function get focusSkinExclusions():Array { return focusExclusions;};
        ]]>
    </fx:Script>
    
    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled" stateGroups="disabledStates"/>
        <s:State name="normalWithPrompt"/>
        <s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
    </s:states>
    
    <!-- border --> 
    <!--- @private -->
	<s:Path id="border" left="0" right="0" top="0" bottom="0"
			data="M 373.801 397.99 L 373.801 397.74 C 379.894 397.73 385.658 395.78 390.47 392.1 L 390.622 392.299 C 385.766 396.013 379.949 397.98 373.801 397.99 Z M 366.801 397.99 L 348.801 397.99 L 348.801 397.74 L 366.801 397.74 L 366.801 397.99 Z M 341.801 397.99 L 323.801 397.99 L 323.801 397.74 L 341.801 397.74 L 341.801 397.99 Z M 316.801 397.99 L 298.801 397.99 L 298.801 397.74 L 316.801 397.74 L 316.801 397.99 Z M 291.801 397.99 L 273.801 397.99 L 273.801 397.74 L 291.801 397.74 L 291.801 397.99 Z M 266.801 397.99 L 248.801 397.99 L 248.801 397.74 L 266.801 397.74 L 266.801 397.99 Z M 241.801 397.99 L 223.801 397.99 L 223.801 397.74 L 241.801 397.74 L 241.801 397.99 Z M 216.801 397.99 L 198.801 397.99 L 198.801 397.74 L 216.801 397.74 L 216.801 397.99 Z M 191.801 397.99 L 173.801 397.99 L 173.801 397.74 L 191.801 397.74 L 191.801 397.99 Z M 166.801 397.99 L 148.801 397.99 L 148.801 397.74 L 166.801 397.74 L 166.801 397.99 Z M 141.801 397.99 L 123.801 397.99 L 123.801 397.74 L 141.801 397.74 L 141.801 397.99 Z M 116.801 397.99 L 98.801 397.99 L 98.801 397.74 L 116.801 397.74 L 116.801 397.99 Z M 91.801 397.99 L 73.801 397.99 L 73.801 397.74 L 91.801 397.74 L 91.801 397.99 Z M 66.801 397.99 L 48.801 397.99 L 48.801 397.74 L 66.801 397.74 L 66.801 397.99 Z M 41.801 397.99 L 27.633 397.99 C 26.349 397.99 25.059 397.902 23.797 397.729 L 23.832 397.48 C 25.082 397.653 26.361 397.74 27.633 397.74 L 41.801 397.74 L 41.801 397.99 Z M 17.026 395.899 C 11.429 393.591 6.68 389.441 3.653 384.217 L 3.87 384.092 C 6.869 389.27 11.575 393.381 17.122 395.669 L 17.026 395.899 Z M 395.606 387.369 L 395.409 387.215 C 399.159 382.422 401.141 376.674 401.141 370.592 L 401.141 369.789 L 401.391 369.789 L 401.391 370.592 C 401.391 376.729 399.391 382.531 395.606 387.369 Z M 0.951 377.747 C 0.319 375.425 0 373.018 0 370.592 L 0 359.801 L 0.25 359.801 L 0.25 370.592 C 0.25 372.995 0.566 375.381 1.192 377.681 L 0.951 377.747 Z M 401.391 362.789 L 401.141 362.789 L 401.141 344.789 L 401.391 344.789 L 401.391 362.789 Z M 0.25 352.801 L 0 352.801 L 0 334.801 L 0.25 334.801 L 0.25 352.801 Z M 401.391 337.789 L 401.141 337.789 L 401.141 319.789 L 401.391 319.789 L 401.391 337.789 Z M 0.25 327.801 L 0 327.801 L 0 309.801 L 0.25 309.801 L 0.25 327.801 Z M 401.391 312.789 L 401.141 312.789 L 401.141 294.789 L 401.391 294.789 L 401.391 312.789 Z M 0.25 302.801 L 0 302.801 L 0 284.801 L 0.25 284.801 L 0.25 302.801 Z M 401.391 287.789 L 401.141 287.789 L 401.141 269.789 L 401.391 269.789 L 401.391 287.789 Z M 0.25 277.801 L 0 277.801 L 0 259.801 L 0.25 259.801 L 0.25 277.801 Z M 401.391 262.789 L 401.141 262.789 L 401.141 244.789 L 401.391 244.789 L 401.391 262.789 Z M 0.25 252.801 L 0 252.801 L 0 234.8 L 0.25 234.8 L 0.25 252.801 Z M 401.391 237.789 L 401.141 237.789 L 401.141 219.789 L 401.391 219.789 L 401.391 237.789 Z M 0.25 227.8 L 0 227.8 L 0 209.8 L 0.25 209.8 L 0.25 227.8 Z M 401.391 212.789 L 401.141 212.789 L 401.141 194.789 L 401.391 194.789 L 401.391 212.789 Z M 0.25 202.8 L 0 202.8 L 0 184.8 L 0.25 184.8 L 0.25 202.8 Z M 401.391 187.789 L 401.141 187.789 L 401.141 169.789 L 401.391 169.789 L 401.391 187.789 Z M 0.25 177.8 L 0 177.8 L 0 159.8 L 0.25 159.8 L 0.25 177.8 Z M 401.391 162.789 L 401.141 162.789 L 401.141 144.789 L 401.391 144.789 L 401.391 162.789 Z M 0.25 152.8 L 0 152.8 L 0 134.8 L 0.25 134.8 L 0.25 152.8 Z M 401.391 137.789 L 401.141 137.789 L 401.141 119.789 L 401.391 119.789 L 401.391 137.789 Z M 0.25 127.8 L 0 127.8 L 0 109.8 L 0.25 109.8 L 0.25 127.8 Z M 401.391 112.789 L 401.141 112.789 L 401.141 94.789 L 401.391 94.789 L 401.391 112.789 Z M 0.25 102.8 L 0 102.8 L 0 84.8 L 0.25 84.8 L 0.25 102.8 Z M 401.391 87.789 L 401.141 87.789 L 401.141 69.789 L 401.391 69.789 L 401.391 87.789 Z M 0.25 77.8 L 0 77.8 L 0 59.8 L 0.25 59.8 L 0.25 77.8 Z M 401.391 62.789 L 401.141 62.789 L 401.141 44.789 L 401.391 44.789 L 401.391 62.789 Z M 0.25 52.8 L 0 52.8 L 0 34.8 L 0.25 34.8 L 0.25 52.8 Z M 401.391 37.789 L 401.141 37.789 L 401.141 27.399 C 401.142 24.86 400.788 22.345 400.091 19.925 L 400.331 19.856 C 401.035 22.299 401.392 24.836 401.391 27.399 L 401.391 37.789 Z M 0.25 27.8 L 0 27.8 L 0 27.399 C 0 21.407 1.915 15.716 5.539 10.941 L 5.738 11.092 C 2.147 15.823 0.25 21.462 0.25 27.399 L 0.25 27.8 Z M 397.317 13.555 C 394.243 8.421 389.478 4.378 383.899 2.172 L 383.991 1.939 C 389.621 4.166 394.43 8.246 397.532 13.427 L 397.317 13.555 Z M 10.606 6.136 L 10.451 5.939 C 15.255 2.153 21.043 0.1 27.187 0.004 L 27.19 0.254 C 21.102 0.349 15.367 2.383 10.606 6.136 Z M 377.164 0.458 C 376.044 0.32 374.898 0.25 373.76 0.25 L 359.188 0.25 L 359.188 0 L 373.76 0 C 374.909 0 376.064 0.071 377.195 0.21 L 377.164 0.458 Z M 352.188 0.25 L 334.188 0.25 L 334.188 0 L 352.188 0 L 352.188 0.25 Z M 327.188 0.25 L 309.188 0.25 L 309.188 0 L 327.188 0 L 327.188 0.25 Z M 302.188 0.25 L 284.188 0.25 L 284.188 0 L 302.188 0 L 302.188 0.25 Z M 277.188 0.25 L 259.188 0.25 L 259.188 0 L 277.188 0 L 277.188 0.25 Z M 252.188 0.25 L 234.188 0.25 L 234.188 0 L 252.188 0 L 252.188 0.25 Z M 227.188 0.25 L 209.188 0.25 L 209.188 0 L 227.188 0 L 227.188 0.25 Z M 202.188 0.25 L 184.188 0.25 L 184.188 0 L 202.188 0 L 202.188 0.25 Z M 177.188 0.25 L 159.188 0.25 L 159.188 0 L 177.188 0 L 177.188 0.25 Z M 152.188 0.25 L 134.188 0.25 L 134.188 0 L 152.188 0 L 152.188 0.25 Z M 127.188 0.25 L 109.188 0.25 L 109.188 0 L 127.188 0 L 127.188 0.25 Z M 102.188 0.25 L 84.189 0.25 L 84.189 0 L 102.188 0 L 102.188 0.25 Z M 77.189 0.25 L 59.189 0.25 L 59.189 0 L 77.189 0 L 77.189 0.25 Z M 52.189 0.25 L 34.189 0.25 L 34.189 0 L 52.189 0 L 52.189 0.25 Z"
			winding="nonZero">
		<s:fill>
			<s:SolidColor id="borderStroke" color="0xFFFFFF"/>
		</s:fill>
	</s:Path>

    <!-- fill -->
    <!--- Defines the appearance of the TextArea component's background. -->
	<s:Path id="background" left="0" right="0" top="0" bottom="0"
			data="M 373.801 397.99 L 373.801 397.74 C 379.894 397.73 385.658 395.78 390.47 392.1 L 390.622 392.299 C 385.766 396.013 379.949 397.98 373.801 397.99 Z M 366.801 397.99 L 348.801 397.99 L 348.801 397.74 L 366.801 397.74 L 366.801 397.99 Z M 341.801 397.99 L 323.801 397.99 L 323.801 397.74 L 341.801 397.74 L 341.801 397.99 Z M 316.801 397.99 L 298.801 397.99 L 298.801 397.74 L 316.801 397.74 L 316.801 397.99 Z M 291.801 397.99 L 273.801 397.99 L 273.801 397.74 L 291.801 397.74 L 291.801 397.99 Z M 266.801 397.99 L 248.801 397.99 L 248.801 397.74 L 266.801 397.74 L 266.801 397.99 Z M 241.801 397.99 L 223.801 397.99 L 223.801 397.74 L 241.801 397.74 L 241.801 397.99 Z M 216.801 397.99 L 198.801 397.99 L 198.801 397.74 L 216.801 397.74 L 216.801 397.99 Z M 191.801 397.99 L 173.801 397.99 L 173.801 397.74 L 191.801 397.74 L 191.801 397.99 Z M 166.801 397.99 L 148.801 397.99 L 148.801 397.74 L 166.801 397.74 L 166.801 397.99 Z M 141.801 397.99 L 123.801 397.99 L 123.801 397.74 L 141.801 397.74 L 141.801 397.99 Z M 116.801 397.99 L 98.801 397.99 L 98.801 397.74 L 116.801 397.74 L 116.801 397.99 Z M 91.801 397.99 L 73.801 397.99 L 73.801 397.74 L 91.801 397.74 L 91.801 397.99 Z M 66.801 397.99 L 48.801 397.99 L 48.801 397.74 L 66.801 397.74 L 66.801 397.99 Z M 41.801 397.99 L 27.633 397.99 C 26.349 397.99 25.059 397.902 23.797 397.729 L 23.832 397.48 C 25.082 397.653 26.361 397.74 27.633 397.74 L 41.801 397.74 L 41.801 397.99 Z M 17.026 395.899 C 11.429 393.591 6.68 389.441 3.653 384.217 L 3.87 384.092 C 6.869 389.27 11.575 393.381 17.122 395.669 L 17.026 395.899 Z M 395.606 387.369 L 395.409 387.215 C 399.159 382.422 401.141 376.674 401.141 370.592 L 401.141 369.789 L 401.391 369.789 L 401.391 370.592 C 401.391 376.729 399.391 382.531 395.606 387.369 Z M 0.951 377.747 C 0.319 375.425 0 373.018 0 370.592 L 0 359.801 L 0.25 359.801 L 0.25 370.592 C 0.25 372.995 0.566 375.381 1.192 377.681 L 0.951 377.747 Z M 401.391 362.789 L 401.141 362.789 L 401.141 344.789 L 401.391 344.789 L 401.391 362.789 Z M 0.25 352.801 L 0 352.801 L 0 334.801 L 0.25 334.801 L 0.25 352.801 Z M 401.391 337.789 L 401.141 337.789 L 401.141 319.789 L 401.391 319.789 L 401.391 337.789 Z M 0.25 327.801 L 0 327.801 L 0 309.801 L 0.25 309.801 L 0.25 327.801 Z M 401.391 312.789 L 401.141 312.789 L 401.141 294.789 L 401.391 294.789 L 401.391 312.789 Z M 0.25 302.801 L 0 302.801 L 0 284.801 L 0.25 284.801 L 0.25 302.801 Z M 401.391 287.789 L 401.141 287.789 L 401.141 269.789 L 401.391 269.789 L 401.391 287.789 Z M 0.25 277.801 L 0 277.801 L 0 259.801 L 0.25 259.801 L 0.25 277.801 Z M 401.391 262.789 L 401.141 262.789 L 401.141 244.789 L 401.391 244.789 L 401.391 262.789 Z M 0.25 252.801 L 0 252.801 L 0 234.8 L 0.25 234.8 L 0.25 252.801 Z M 401.391 237.789 L 401.141 237.789 L 401.141 219.789 L 401.391 219.789 L 401.391 237.789 Z M 0.25 227.8 L 0 227.8 L 0 209.8 L 0.25 209.8 L 0.25 227.8 Z M 401.391 212.789 L 401.141 212.789 L 401.141 194.789 L 401.391 194.789 L 401.391 212.789 Z M 0.25 202.8 L 0 202.8 L 0 184.8 L 0.25 184.8 L 0.25 202.8 Z M 401.391 187.789 L 401.141 187.789 L 401.141 169.789 L 401.391 169.789 L 401.391 187.789 Z M 0.25 177.8 L 0 177.8 L 0 159.8 L 0.25 159.8 L 0.25 177.8 Z M 401.391 162.789 L 401.141 162.789 L 401.141 144.789 L 401.391 144.789 L 401.391 162.789 Z M 0.25 152.8 L 0 152.8 L 0 134.8 L 0.25 134.8 L 0.25 152.8 Z M 401.391 137.789 L 401.141 137.789 L 401.141 119.789 L 401.391 119.789 L 401.391 137.789 Z M 0.25 127.8 L 0 127.8 L 0 109.8 L 0.25 109.8 L 0.25 127.8 Z M 401.391 112.789 L 401.141 112.789 L 401.141 94.789 L 401.391 94.789 L 401.391 112.789 Z M 0.25 102.8 L 0 102.8 L 0 84.8 L 0.25 84.8 L 0.25 102.8 Z M 401.391 87.789 L 401.141 87.789 L 401.141 69.789 L 401.391 69.789 L 401.391 87.789 Z M 0.25 77.8 L 0 77.8 L 0 59.8 L 0.25 59.8 L 0.25 77.8 Z M 401.391 62.789 L 401.141 62.789 L 401.141 44.789 L 401.391 44.789 L 401.391 62.789 Z M 0.25 52.8 L 0 52.8 L 0 34.8 L 0.25 34.8 L 0.25 52.8 Z M 401.391 37.789 L 401.141 37.789 L 401.141 27.399 C 401.142 24.86 400.788 22.345 400.091 19.925 L 400.331 19.856 C 401.035 22.299 401.392 24.836 401.391 27.399 L 401.391 37.789 Z M 0.25 27.8 L 0 27.8 L 0 27.399 C 0 21.407 1.915 15.716 5.539 10.941 L 5.738 11.092 C 2.147 15.823 0.25 21.462 0.25 27.399 L 0.25 27.8 Z M 397.317 13.555 C 394.243 8.421 389.478 4.378 383.899 2.172 L 383.991 1.939 C 389.621 4.166 394.43 8.246 397.532 13.427 L 397.317 13.555 Z M 10.606 6.136 L 10.451 5.939 C 15.255 2.153 21.043 0.1 27.187 0.004 L 27.19 0.254 C 21.102 0.349 15.367 2.383 10.606 6.136 Z M 377.164 0.458 C 376.044 0.32 374.898 0.25 373.76 0.25 L 359.188 0.25 L 359.188 0 L 373.76 0 C 374.909 0 376.064 0.071 377.195 0.21 L 377.164 0.458 Z M 352.188 0.25 L 334.188 0.25 L 334.188 0 L 352.188 0 L 352.188 0.25 Z M 327.188 0.25 L 309.188 0.25 L 309.188 0 L 327.188 0 L 327.188 0.25 Z M 302.188 0.25 L 284.188 0.25 L 284.188 0 L 302.188 0 L 302.188 0.25 Z M 277.188 0.25 L 259.188 0.25 L 259.188 0 L 277.188 0 L 277.188 0.25 Z M 252.188 0.25 L 234.188 0.25 L 234.188 0 L 252.188 0 L 252.188 0.25 Z M 227.188 0.25 L 209.188 0.25 L 209.188 0 L 227.188 0 L 227.188 0.25 Z M 202.188 0.25 L 184.188 0.25 L 184.188 0 L 202.188 0 L 202.188 0.25 Z M 177.188 0.25 L 159.188 0.25 L 159.188 0 L 177.188 0 L 177.188 0.25 Z M 152.188 0.25 L 134.188 0.25 L 134.188 0 L 152.188 0 L 152.188 0.25 Z M 127.188 0.25 L 109.188 0.25 L 109.188 0 L 127.188 0 L 127.188 0.25 Z M 102.188 0.25 L 84.189 0.25 L 84.189 0 L 102.188 0 L 102.188 0.25 Z M 77.189 0.25 L 59.189 0.25 L 59.189 0 L 77.189 0 L 77.189 0.25 Z M 52.189 0.25 L 34.189 0.25 L 34.189 0 L 52.189 0 L 52.189 0.25 Z"
			winding="nonZero">
		<s:fill>
			<s:SolidColor id="bgFill" color="0x000000" />
		</s:fill>
	</s:Path>
    
    <!-- shadow -->
    <!--- @private -->
	<s:Path id="shadow" left="0" right="0" top="0" bottom="0"
			data="M 373.801 397.99 L 373.801 397.74 C 379.894 397.73 385.658 395.78 390.47 392.1 L 390.622 392.299 C 385.766 396.013 379.949 397.98 373.801 397.99 Z M 366.801 397.99 L 348.801 397.99 L 348.801 397.74 L 366.801 397.74 L 366.801 397.99 Z M 341.801 397.99 L 323.801 397.99 L 323.801 397.74 L 341.801 397.74 L 341.801 397.99 Z M 316.801 397.99 L 298.801 397.99 L 298.801 397.74 L 316.801 397.74 L 316.801 397.99 Z M 291.801 397.99 L 273.801 397.99 L 273.801 397.74 L 291.801 397.74 L 291.801 397.99 Z M 266.801 397.99 L 248.801 397.99 L 248.801 397.74 L 266.801 397.74 L 266.801 397.99 Z M 241.801 397.99 L 223.801 397.99 L 223.801 397.74 L 241.801 397.74 L 241.801 397.99 Z M 216.801 397.99 L 198.801 397.99 L 198.801 397.74 L 216.801 397.74 L 216.801 397.99 Z M 191.801 397.99 L 173.801 397.99 L 173.801 397.74 L 191.801 397.74 L 191.801 397.99 Z M 166.801 397.99 L 148.801 397.99 L 148.801 397.74 L 166.801 397.74 L 166.801 397.99 Z M 141.801 397.99 L 123.801 397.99 L 123.801 397.74 L 141.801 397.74 L 141.801 397.99 Z M 116.801 397.99 L 98.801 397.99 L 98.801 397.74 L 116.801 397.74 L 116.801 397.99 Z M 91.801 397.99 L 73.801 397.99 L 73.801 397.74 L 91.801 397.74 L 91.801 397.99 Z M 66.801 397.99 L 48.801 397.99 L 48.801 397.74 L 66.801 397.74 L 66.801 397.99 Z M 41.801 397.99 L 27.633 397.99 C 26.349 397.99 25.059 397.902 23.797 397.729 L 23.832 397.48 C 25.082 397.653 26.361 397.74 27.633 397.74 L 41.801 397.74 L 41.801 397.99 Z M 17.026 395.899 C 11.429 393.591 6.68 389.441 3.653 384.217 L 3.87 384.092 C 6.869 389.27 11.575 393.381 17.122 395.669 L 17.026 395.899 Z M 395.606 387.369 L 395.409 387.215 C 399.159 382.422 401.141 376.674 401.141 370.592 L 401.141 369.789 L 401.391 369.789 L 401.391 370.592 C 401.391 376.729 399.391 382.531 395.606 387.369 Z M 0.951 377.747 C 0.319 375.425 0 373.018 0 370.592 L 0 359.801 L 0.25 359.801 L 0.25 370.592 C 0.25 372.995 0.566 375.381 1.192 377.681 L 0.951 377.747 Z M 401.391 362.789 L 401.141 362.789 L 401.141 344.789 L 401.391 344.789 L 401.391 362.789 Z M 0.25 352.801 L 0 352.801 L 0 334.801 L 0.25 334.801 L 0.25 352.801 Z M 401.391 337.789 L 401.141 337.789 L 401.141 319.789 L 401.391 319.789 L 401.391 337.789 Z M 0.25 327.801 L 0 327.801 L 0 309.801 L 0.25 309.801 L 0.25 327.801 Z M 401.391 312.789 L 401.141 312.789 L 401.141 294.789 L 401.391 294.789 L 401.391 312.789 Z M 0.25 302.801 L 0 302.801 L 0 284.801 L 0.25 284.801 L 0.25 302.801 Z M 401.391 287.789 L 401.141 287.789 L 401.141 269.789 L 401.391 269.789 L 401.391 287.789 Z M 0.25 277.801 L 0 277.801 L 0 259.801 L 0.25 259.801 L 0.25 277.801 Z M 401.391 262.789 L 401.141 262.789 L 401.141 244.789 L 401.391 244.789 L 401.391 262.789 Z M 0.25 252.801 L 0 252.801 L 0 234.8 L 0.25 234.8 L 0.25 252.801 Z M 401.391 237.789 L 401.141 237.789 L 401.141 219.789 L 401.391 219.789 L 401.391 237.789 Z M 0.25 227.8 L 0 227.8 L 0 209.8 L 0.25 209.8 L 0.25 227.8 Z M 401.391 212.789 L 401.141 212.789 L 401.141 194.789 L 401.391 194.789 L 401.391 212.789 Z M 0.25 202.8 L 0 202.8 L 0 184.8 L 0.25 184.8 L 0.25 202.8 Z M 401.391 187.789 L 401.141 187.789 L 401.141 169.789 L 401.391 169.789 L 401.391 187.789 Z M 0.25 177.8 L 0 177.8 L 0 159.8 L 0.25 159.8 L 0.25 177.8 Z M 401.391 162.789 L 401.141 162.789 L 401.141 144.789 L 401.391 144.789 L 401.391 162.789 Z M 0.25 152.8 L 0 152.8 L 0 134.8 L 0.25 134.8 L 0.25 152.8 Z M 401.391 137.789 L 401.141 137.789 L 401.141 119.789 L 401.391 119.789 L 401.391 137.789 Z M 0.25 127.8 L 0 127.8 L 0 109.8 L 0.25 109.8 L 0.25 127.8 Z M 401.391 112.789 L 401.141 112.789 L 401.141 94.789 L 401.391 94.789 L 401.391 112.789 Z M 0.25 102.8 L 0 102.8 L 0 84.8 L 0.25 84.8 L 0.25 102.8 Z M 401.391 87.789 L 401.141 87.789 L 401.141 69.789 L 401.391 69.789 L 401.391 87.789 Z M 0.25 77.8 L 0 77.8 L 0 59.8 L 0.25 59.8 L 0.25 77.8 Z M 401.391 62.789 L 401.141 62.789 L 401.141 44.789 L 401.391 44.789 L 401.391 62.789 Z M 0.25 52.8 L 0 52.8 L 0 34.8 L 0.25 34.8 L 0.25 52.8 Z M 401.391 37.789 L 401.141 37.789 L 401.141 27.399 C 401.142 24.86 400.788 22.345 400.091 19.925 L 400.331 19.856 C 401.035 22.299 401.392 24.836 401.391 27.399 L 401.391 37.789 Z M 0.25 27.8 L 0 27.8 L 0 27.399 C 0 21.407 1.915 15.716 5.539 10.941 L 5.738 11.092 C 2.147 15.823 0.25 21.462 0.25 27.399 L 0.25 27.8 Z M 397.317 13.555 C 394.243 8.421 389.478 4.378 383.899 2.172 L 383.991 1.939 C 389.621 4.166 394.43 8.246 397.532 13.427 L 397.317 13.555 Z M 10.606 6.136 L 10.451 5.939 C 15.255 2.153 21.043 0.1 27.187 0.004 L 27.19 0.254 C 21.102 0.349 15.367 2.383 10.606 6.136 Z M 377.164 0.458 C 376.044 0.32 374.898 0.25 373.76 0.25 L 359.188 0.25 L 359.188 0 L 373.76 0 C 374.909 0 376.064 0.071 377.195 0.21 L 377.164 0.458 Z M 352.188 0.25 L 334.188 0.25 L 334.188 0 L 352.188 0 L 352.188 0.25 Z M 327.188 0.25 L 309.188 0.25 L 309.188 0 L 327.188 0 L 327.188 0.25 Z M 302.188 0.25 L 284.188 0.25 L 284.188 0 L 302.188 0 L 302.188 0.25 Z M 277.188 0.25 L 259.188 0.25 L 259.188 0 L 277.188 0 L 277.188 0.25 Z M 252.188 0.25 L 234.188 0.25 L 234.188 0 L 252.188 0 L 252.188 0.25 Z M 227.188 0.25 L 209.188 0.25 L 209.188 0 L 227.188 0 L 227.188 0.25 Z M 202.188 0.25 L 184.188 0.25 L 184.188 0 L 202.188 0 L 202.188 0.25 Z M 177.188 0.25 L 159.188 0.25 L 159.188 0 L 177.188 0 L 177.188 0.25 Z M 152.188 0.25 L 134.188 0.25 L 134.188 0 L 152.188 0 L 152.188 0.25 Z M 127.188 0.25 L 109.188 0.25 L 109.188 0 L 127.188 0 L 127.188 0.25 Z M 102.188 0.25 L 84.189 0.25 L 84.189 0 L 102.188 0 L 102.188 0.25 Z M 77.189 0.25 L 59.189 0.25 L 59.189 0 L 77.189 0 L 77.189 0.25 Z M 52.189 0.25 L 34.189 0.25 L 34.189 0 L 52.189 0 L 52.189 0.25 Z"
			winding="nonZero">
		<s:fill>
			<s:SolidColor color="0x000000" alpha=".1" />
		</s:fill>
	</s:Path>

    <!--- Defines the scroller that is used to scroll the TextArea control. -->
    <s:Scroller id="scroller" left="25" top="25" right="25" bottom="25" 
				minViewportInset="1" measuredSizeIncludesScrollBars="false" hasFocusableChildren="false">
        <!--- @copy spark.components.supportClasses.SkinnableTextBase#textDisplay -->
        <s:RichEditableText id="textDisplay" heightInLines="10" widthInChars="15"
							paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0"/>
    </s:Scroller>
    
    <!--- Defines the Label that is used for prompt text. The includeInLayout property is false so the prompt text does not affect measurement. -->
    <s:Label id="promptDisplay" textAlign="center" width="100%"
                mouseEnabled="false" mouseChildren="false"
                includeIn="normalWithPrompt,disabledWithPrompt" 
                includeInLayout="false"
				horizontalCenter="0" verticalCenter="0"
                />            

</s:SparkSkin>
