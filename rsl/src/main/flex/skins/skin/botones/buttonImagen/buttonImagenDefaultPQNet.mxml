<?xml version="1.0" encoding="utf-8"?>
<s:Button xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  skinClass="skins.skin.botones.buttonImagen.buttonImagenSkinDefaultPQNet"
		  >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.seleccionHorario.assets.imagenesComponenteHorario;
			
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosGrid;
			
			
			private var _tipoDeImagen:String ="imgEngrane20X20";
			
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				switch(_tipoDeImagen)
				{
					case "imgEngrane20X20":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  catalogoIconosGrid.getInstance().render_engraneBlanco20x20;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  catalogoIconosGrid.getInstance().render_engraneVerdeAzul20x20;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  catalogoIconosGrid.getInstance().render_engraneVerdeAzul20x20;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  catalogoIconosGrid.getInstance().render_engraneBlanco20x20;
						break;
					}
					case "imgEngrane29X29":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  catalogoIconosGrid.getInstance().render_engraneGrande;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  catalogoIconosGrid.getInstance().render_engraneGrande;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  catalogoIconosGrid.getInstance().render_engraneGrisGrande;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  catalogoIconosGrid.getInstance().render_engraneGrisGrande;
						break;
					}
					case "flechaGrande24x39":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  catalogoIconosBotoneras.getInstance().flechaGrandeIzquierdaupdown;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  catalogoIconosBotoneras.getInstance().flechaGrandeIzquierdaover;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  catalogoIconosBotoneras.getInstance().flechaGrandeIzquierdaupdown;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  catalogoIconosBotoneras.getInstance().flechaGrandeIzquierdaupdown;
						break;
					}
					case "imgSeleccionarGridHorario":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  imagenesComponenteHorario.getInstance().seleccionar;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  imagenesComponenteHorario.getInstance().seleccionar;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  imagenesComponenteHorario.getInstance().seleccionar;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  imagenesComponenteHorario.getInstance().seleccionar;
						break;
					}
					case "imgDesSeleccionarGridHorario":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  imagenesComponenteHorario.getInstance().desSeleccionar;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  imagenesComponenteHorario.getInstance().desSeleccionar;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  imagenesComponenteHorario.getInstance().desSeleccionar;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  imagenesComponenteHorario.getInstance().desSeleccionar;
						break;
					}
					case "seleccionarTodoGridHorario":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  imagenesComponenteHorario.getInstance().seleccionarTodo;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  imagenesComponenteHorario.getInstance().seleccionarTodo;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  imagenesComponenteHorario.getInstance().seleccionarTodo;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  imagenesComponenteHorario.getInstance().seleccionarTodo;
						break;
					}
					case "desSeleccionarTodoGridHorario":
					{
						buttonImagenSkinDefaultPQNet(skin).imagenUp =  imagenesComponenteHorario.getInstance().quitarSeleccion;
						buttonImagenSkinDefaultPQNet(skin).imagenOver =  imagenesComponenteHorario.getInstance().quitarSeleccion;
						buttonImagenSkinDefaultPQNet(skin).imagenDown =  imagenesComponenteHorario.getInstance().quitarSeleccionAzul;
						buttonImagenSkinDefaultPQNet(skin).imagenDisable =  imagenesComponenteHorario.getInstance().quitarSeleccionAzul;
						break;
					}
						
					default:
					{
						break;
					}
				}
			}
			
			[Inspectable(category="Styles",enumeration="imgEngrane20X20,imgEngrane29X29,flechaGrande24x39,imgSeleccionarGridHorario,seleccionarTodoGridHorario,desSeleccionarTodoGridHorario,imgDesSeleccionarGridHorario")]
			public function get tipoDeImagen():String
			{
				return _tipoDeImagen;
			}
			
			public function set tipoDeImagen(value:String):void
			{
				_tipoDeImagen = value;
			}
			
			
		]]>
	</fx:Script>
	
	
</s:Button>
