<?xml version="1.0" encoding="utf-8"?>
<s:ComboBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark" textAlign="center"
			styleName="cat_cli_comboBox_Negro_defaultPQNet" fontWeight="normal" 
			xmlns:mx="library://ns.adobe.com/flex/mx" labelField="valor" 
			selectionColor="0x909090" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.utils.StringUtil;
			/**
			 * Retorna el index de un valor en String pasado como parámetro, con el fin de poder seleccionar dicho valor.
			 * */
		
			public function seleccionarValor($value:String,$atributoParaBuscarValor1AValorN:String = null):int
			{
				var item:String;
				var i:int;
				
				if($atributoParaBuscarValor1AValorN == null)
				{
					if($value != null && StringUtil.trim($value).length)
					{
						item= null;
						if(this.dataProvider != null && this.dataProvider.length>0)
						{
							for (i = 0; i < this.dataProvider.length; i++) 
							{
								if(this.labelField.length>0)
									item = this.dataProvider[i][this.labelField];
								else
									item = this.dataProvider[i].valor;
								if(item == $value)
								{
									return i;
									break;
								}
							}
						}
					}
				}
				else
				{
					var currentAtributo:String = StringUtil.trim($atributoParaBuscarValor1AValorN);
					
					if($value != null && StringUtil.trim($value).length)
					{
						item = null;
						if(this.dataProvider != null && this.dataProvider.length>0)
						{
							for (i = 0; i < this.dataProvider.length; i++) 
							{
								
								if(dataProvider[i].hasOwnProperty(currentAtributo))
								{
									
									item = this.dataProvider[i][currentAtributo];
									if($value == item)
									{
										return i;
										break;
									}
								}
								else
								{
									trace("ADVERTENCIA: No se encuentra el atributo "+ currentAtributo + ", en el dataprovider del combo " + this.id);	
								}
							}
						}
					}
				}
				return 0;
			}
			
			
			/**
			 * Retorna el index de un valor en entero pasado como parámetro, con el fin de poder seleccionar dicho valor.
			 * */
			public function seleccionarValorPorNumero($value:Number,$atributoParaBuscarValor1AValorN:String = null):int
			{
				var item:Number;
				var i:int;
				
				if($atributoParaBuscarValor1AValorN != null)
				{
					var currentAtributo:String = StringUtil.trim($atributoParaBuscarValor1AValorN);
					
					if($value > 0 )
					{
						item = 0;
						if(this.dataProvider != null && this.dataProvider.length > 0)
						{
							for (i = 0; i < this.dataProvider.length; i++) 
							{
								
								if(dataProvider[i].hasOwnProperty(currentAtributo) && !isNaN(dataProvider[i][currentAtributo]))
								{
									item = this.dataProvider[i][currentAtributo];
									if($value == item)
									{
										return i;
										break;
									}
								}
								else
								{
									trace("ADVERTENCIA: No se encuentra el atributo o no es un número"+ currentAtributo + ", en el dataprovider del combo " + this.id);	
								}
							}
						}
					}
				}
				return 0;
			}
		]]>
	</fx:Script>
</s:ComboBox>
