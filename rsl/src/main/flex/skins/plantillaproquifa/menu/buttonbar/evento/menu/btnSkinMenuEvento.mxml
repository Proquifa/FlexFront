<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:label="skins.skin.label.*" width="100%" height="100%" currentStateChanging="skin1_currentStateChangingHandler(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("spark.components.ToggleButton")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.events.StateChangeEvent;
			
			import spark.filters.BevelFilter;
			
			private var _color:uint;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				
				var wtriangulo:Number; 
				
				var htriangulo:Number; 
				
				graphics.clear();
				
				if (currentState == 'upAndSelected' || currentState == 'up')
					graphics.beginFill(color);
				else if (currentState == 'over' || currentState == 'overAndSelected' )
					graphics.beginFill(color,0.8); 
				else if (currentState == 'down' || currentState == 'downAndSelected')
					graphics.beginFill(color,0.9); 
				
				graphics.drawRoundRect(0,0,unscaledWidth,unscaledHeight,0,0);
				graphics.endFill(); 
				
				var sha:spark.filters.BevelFilter = new spark.filters.BevelFilter; 
			}
			
			[Bindable]
			public function get color():uint
			{
				return _color;
			}
			
			public function set color(value:uint):void
			{
				_color = value;
			}
			
			protected function skin1_currentStateChangingHandler(event:StateChangeEvent):void
			{
				// TODO Auto-generated method stub
				invalidateDisplayList();
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" stateGroups="normalUp" />
		<s:State name="over" stateGroups="selected" />
		<s:State name="down" stateGroups="selected" />
		<s:State name="disabled" />
		<s:State name="disabledAndSelected" />
		<s:State name="downAndSelected" stateGroups="selected" />
		<s:State name="overAndSelected" stateGroups="selected" />
		<s:State name="upAndSelected" stateGroups="normalUp" />
	</s:states>
	
	
	
	<!--	<s:Rect width="100%" height="100%" depth="-90000">
	<s:fill>
	<s:SolidColor color="{color}" alpha="1"
	color.selected="{color}"
	alpha.selected="0.8"
	color.normalUp="{color}"
	alpha.normalUp="1"
	/>
	</s:fill>
	</s:Rect>-->
	
	<s:HGroup width="100%" height="100%" horizontalAlign="center" horizontalCenter="0" verticalAlign="middle">
		
		<s:Label textAlign="center" id="labelDisplay" width="100%" horizontalCenter="0" verticalCenter="0" fontFamily="MyriadProProqui" fontSize="18" fontStyle="normal" fontWeight="bold" paddingTop="3" maxDisplayedLines="3"
				 color="#FFFFFF" 
				 color.normalUp="#FFFFFF"
				 color.selected="#FFFFFF"  
				 alpha="0.9" alpha.disabled="0.5" alpha.disabledAndSelected="0.5" />
		
	</s:HGroup>
</s:Skin>
