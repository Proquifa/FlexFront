<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:otros="skins.otros.*"
				autoDrawBackground="true"
				width="100%" height="100%"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.ListaProductos_clase;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import flashx.textLayout.conversion.TextConverter;
			import flashx.textLayout.elements.SpanElement;
			
			import skins.catalogos.catalogoIconosBotoneras;
			
			
			[Bindable] private var _current:ListaProductos_clase;
			[Bindable] public var font21:Number;
			[Bindable] public var font18:Number;
			[Bindable] public var font14:Number;
			[Bindable] public var conceptoPartidasSuplemento:String;
			
			
			override public function set data(value:Object):void
			{
				super.data = value;
				
				if(value)
				{
					
					_current = new ListaProductos_clase();
					_current = (data as ListaProductos_clase);
					
					if(_current.trafico)
					{
						img.visible = img.includeInLayout = true;
						switch(_current.trafico.toLowerCase())
						{
							case "programado":
							{
								img.source = catalogoIconosBotoneras.getInstance().programado_mini;
								break;
							}
							case "regular":
							{
								img.source = catalogoIconosBotoneras.getInstance().regular_mini;
								break;
							}
							case "flete express":
							{
								img.source = catalogoIconosBotoneras.getInstance().flete_mini;
								break;
							}
							case "stock":
							{
								img.source = catalogoIconosBotoneras.getInstance().stock_mini;
								break;
							}
							default: { img.visible = img.includeInLayout = false; break; }
						}
					}
					else
					{
						img.visible = img.includeInLayout = false;
					}
				}
				
				var span:SpanElement= richTextID.textFlow.getElementByID("span1") as SpanElement;
				
				if(span)
				{
					
					richTextID.textFlow.getElementByID("span1").color = "0xfd9060";
					
					
				}
				
				conceptoPartidasSuplemento = "";
				if(_current.suplementos != null && _current.suplementos.length > 0 )
				{
					for (var i:int = 0; i < _current.suplementos.length  ; i++) 
					{
						if(i >= 1)
							conceptoPartidasSuplemento += ", "+ _current.suplementos[i].concepto;
						else
							conceptoPartidasSuplemento += _current.suplementos[i].concepto;
					}
					conceptosSuplementos.includeInLayout = conceptosSuplementos.visible = true;
					
					
				}
				else{
					conceptosSuplementos.includeInLayout = conceptosSuplementos.visible = false;
				}
				

			}
			
			override protected function updateDisplayList($width:Number, $height:Number):void
			{
				super.updateDisplayList($width,$height);
				
				font21 = (21 / 1015) * ($width);
				font18 = (18 / 1015) * ($width);
				font14 = (16 / 1015) * ($width);
				
				font21 = font21 > 21 ? 21:font21;
				font21 = font21 < 10 ? 10:font21;
				
				font18 = font18 > 18 ? 18:font18;
				font18 = font18 < 9 ? 9:font18;
				
				font14 = font14 > 16 ? 16:font14;
				font14 = font14 < 9 ? 9:font14;
			}
			
			protected function removerItem(event:MouseEvent):void
			{
				dispatchEvent(new Event("removerItem",true));
			}
			
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/> 
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#FFFFFF" />
		</s:fill>
	</s:Rect>
	
	<s:Group width="100%" height="100%" >
		
		<s:VGroup width="100%" height="100%" paddingTop="15" paddingLeft="30" paddingRight="10" paddingBottom="15" gap="15" verticalAlign="middle">
			
			<s:HGroup width="80%" height="100%" >
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="{_current.codigo} " fontWeight="bold" />
				<s:RichText id="richTextID" textFlow="{TextConverter.importToFlow(_current.nombre_prod, TextConverter.TEXT_FIELD_HTML_FORMAT)}" styleName="tab_texto_14_Helvetica" fontWeight="bold"
							width="100%"/>
				
			</s:HGroup>  
			
			<s:Label id="conceptosSuplementos" styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="Suplementos: {conceptoPartidasSuplemento}" width="100%" />
			
			<s:HGroup width="100%" height="100%" verticalAlign="middle" >
				<mx:Image id="img" />
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text=" · " />
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="{_current.totalPiezas} pzas" color="#008894"/>
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text=" · " />
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="CU: {_current.monedaSimbolo} {UtilsFormatosNumericos.precisionADosDecimalesConComas(_current.montoUnitario)}" color="#008894"/>
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text=" · " />
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="CT: {_current.monedaSimbolo} {UtilsFormatosNumericos.precisionADosDecimalesConComas(_current.montoTotal)}" color="#008894"/>
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text=" · " />
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="FEE: {UtilsFecha.formatoFechaDDMMMYYYY(_current.fee)}" color="#848387"/>
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text=" · " />
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="{_current.cpedido}" color="#008894"/>
				
			</s:HGroup> 
			<s:HGroup width="100%" height="100%" >
				<s:Label styleName="tab_texto_14_Helvetica" fontSize="{font14}"  text="{_current.cliente}" />
			</s:HGroup>
		</s:VGroup>
		<s:Group right="5" top="10" click="removerItem(event)" buttonMode="true">
			<mx:Image source="{catalogoIconosBotoneras.getInstance().cerrar_svg}" />
			<s:Spacer height="4"/>			
		</s:Group>
		  
		
	</s:Group>
	
	
</s:ItemRenderer>
