<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:ns="vista.vistas.ev_AtenderPoolDeVisitas.*" 
		 xmlns:ns1="vista.vistas.ev_AtenderPoolDeVisitas.Graficas.*"
		 xmlns:Graficas="vista.AsignarSprintGV.Graficas.*" 
		 xmlns:ns3="vista.vistas.ev_AsignarSprint.*" 
		 xmlns:AsignarSprintGV="vista.AsignarSprintGV.*" 
		 xmlns:vistas="vista.vistas.*"
		 xmlns:label="skins.skin.label.*"
		 xmlns:otros="skins.otros.*"
		 width="100%" height="100%"
		 creationComplete="init(event)"
		 resize="calc(event)" 
		 xmlns:plantilla="vista.plantilla.*" 
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import vista.AsignarSprintGV.Componentes.PopUpConfirmarAsignarSprint;
			import vista.AsignarSprintGV.Componentes.PopUpInformacionVisita;
			import vista.evento.EventoAsignarSprint;
			import vista.evento.EventoVentasGV;
			
			[Bindable] public var sizeFontAgente:Number;
			[Bindable] public var sizeFonTitulos:Number;
			[Bindable] public var sizeFont:Number;
			public var _sql:Query;
			public var universo:ArrayCollection;
			public var universoAgrupado:ArrayCollection;
			public var recargar:Boolean;
			/*public var universo:ArrayCollection;*/
			private var popUpConfirmar:PopUpConfirmarAsignarSprint;
			
			protected function vistaAnterior(event:EventoVentasGV):void
			{
				var evento:EventoAsignarSprint = new EventoAsignarSprint(EventoAsignarSprint.OBTENER_VISITAS_ASIGNAR_SPRINT);
				dispatchEvent(evento);
				resetAll();
				plantilla.indice = 0;
				cmpTitulo.isVisble = false;
				cmpTitulo.subTitulo2 = "";
				grpOperacion.listaVisitasEliminadas = new ArrayCollection;
			}
			
			protected function init(event:FlexEvent):void
			{
				plantilla.cargarEncabezado(cmpTitulo);
				plantilla.cargarLista(cmpGrid);
				plantilla.cargarGraficas(hgpGraficas);
				plantilla.cargarOperacion(grpOperacion);
				plantilla.cargarLeyenda(footer);
				plantilla.agregarComponenteVistaPrincipal(grpOperacionCompletar);
				
				cmpGrid.addEventListener("planificarSprint",entrarPlanificar);
				grpOperacion.addEventListener("completarSprint",cambiarVistaCompletar);
				grpOperacionCompletar.addEventListener("regresarAsignar",cambiarVistaAsignar);
				grpOperacionCompletar.addEventListener(EventoAsignarSprint.ENVIAR_VISITAS_COMPLEMENTARIAS,asignarVisitasComplementarias);
				grpOperacion.addEventListener("asignarSprintEV",crearPopUpExito);
				addEventListener(EventoAsignarSprint.MOSTRAR_INFORMACION_LIGHT,mostrarInformacion);
				
			}
			
			protected function calc(event:ResizeEvent):void
			{
				sizeFontAgente = (20 / 2005) * (unscaledWidth);
				sizeFontAgente = sizeFontAgente > 20 ? 20:sizeFontAgente;
				sizeFontAgente = sizeFontAgente < 15 ? 15:sizeFontAgente;	
				
				sizeFonTitulos = (30 / 2005) * (unscaledWidth);
				sizeFonTitulos = sizeFonTitulos > 20 ? 20:sizeFonTitulos;
				sizeFonTitulos = sizeFonTitulos < 15 ? 15:sizeFonTitulos;
				
				sizeFont = (15 / 2005) * (unscaledWidth);
				sizeFont = sizeFont > 15 ? 15:sizeFont;
				sizeFont = sizeFont < 12 ? 12:sizeFont;
			}
			
			private function entrarPlanificar(event:Event):void
			{
				plantilla.indice = 1;
				cmpTitulo.isVisble = true;
				grpOperacion.indiceSeleccionado = 0;
				if(universoAgrupado)
					grpOperacion.setInfoLista(universoAgrupado);
			}
			
			public function set recibirVisitasAgrupadasPorEV(visitasSolicitadas:ArrayCollection):void
			{
				cmpGrid.data(visitasSolicitadas);
				universoAgrupado = ObjectUtil.copy(visitasSolicitadas) as ArrayCollection;
			}
			public function set recibirGraficaEV(listaGraficas:ArrayCollection):void
			{
				grafEC.dataEjecutivosCuenta(listaGraficas);
			}
			public function set recibirUniversoVisitasSolicitadas(universo:ArrayCollection):void
			{
				_sql = new Query(universo,["usuarioEV"],false);
				this.universo = ObjectUtil.copy(universo) as ArrayCollection
				grpOperacion.setUniverso(_sql);
				if(recargar){
					grpOperacion.indiceSeleccionado = 0;
					universoAgrupado = agruparPorEV(ObjectUtil.copy(universo) as ArrayCollection);
					if(universoAgrupado)
						grpOperacion.setInfoLista(universoAgrupado);
					
					if(universo.length == 0){
						vistaAnterior(new EventoVentasGV(EventoVentasGV.VISTA_ANTERIOR));
					}
						
					
					recargar = false;
				}
			}
			/*
			public function set recibirGraficaClientesPoolVisitas(listaGraficas:ArrayCollection):void
			{
				grafClientes.dataClientes(listaGraficas);
			}*/
			
			public function set setRecibirRespuestaSolicituesAgruapdas(respuesta:Boolean):void
			{
				/*if(respuesta){
					alertaSingleton.show("Se agruparon las visitas con Ã©xito");
					
					var eventAP:EventoEVAtenderPoolVisitas = new EventoEVAtenderPoolVisitas(EventoEVAtenderPoolVisitas.OBTENER_VISITAS_SOLICITADAS);
					eventAP.usuario = DatosGlobales.getInstance()._usuario.idEmpleado; 
					dispatchEvent(eventAP);
					
					recargar = true;
				}*/
				/////AUN FALTARIA
				dispatchEvent( new Event("recargarPendientes",true));
			}
			
			public function cambiarVistaCompletar(event:Event):void
			{
				if(grpOperacion && grpOperacion.sprint)
					grpOperacionCompletar.setSprint(grpOperacion.sprint);
				
				if(grpOperacion && grpOperacion.currentEV)
					grpOperacionCompletar.setCurrentEV(grpOperacion.currentEV);
				
				if(grpOperacion && grpOperacion.listaVisitasEliminadas)
					grpOperacionCompletar.setListaEliminadas(grpOperacion.listaVisitasEliminadas);
				
				
				grpOperacionCompletar.obtenerTotales(grpOperacion.cargadasCRM,grpOperacion.cargadasSolicitudes,grpOperacion.creditoTotal);
				if(grpOperacion && grpOperacion.currentEV ){
					var eventoCompletar:EventoAsignarSprint = new EventoAsignarSprint(EventoAsignarSprint.OBTENER_VISITA_CLIENTE_POR_EMPLEADO);
					eventoCompletar.idUsuario = grpOperacion.currentEV.idEmpleado; 
					dispatchEvent(eventoCompletar);
				}
				plantilla.indice = 2;
				
				grpOperacion.indiceSeleccionado = grpOperacion.gridVisita.selectedIndex;
				
			}
			public function cambiarVistaAsignar(event:Event):void
			{
				plantilla.indice = 1;
			}
			
			public function set recibirVisitasParaCompletarSprint(value:ArrayCollection):void
			{
				grpOperacionCompletar.setUniversoEV(value);
			}
			
			private function asignarVisitasComplementarias(event:EventoAsignarSprint):void
			{
				var universoNuevo:ArrayCollection = new ArrayCollection;
				universoNuevo = ObjectUtil.copy( grpOperacion._sql.universo ) as ArrayCollection
				universoNuevo.addAll(event.visitasComplemento);
				
				if(grpOperacion && grpOperacion.listaVisitasEliminadas){
					var listaeliminadas:ArrayCollection = grpOperacion.listaVisitasEliminadas;
					
					//QUITAR LAS VISITAS QUE SE HABIA ELIMINADO ANTERIORMENTE
					/*for each (var obj:Object in listaeliminadas) 
					{
						for each (var visita:VisitaCliente in obj.lista) 
						{
							for each (var visitaCliente:VisitaCliente in universoNuevo) 
							{
								if(visitaCliente.idVisitaCliente == visita.idVisitaCliente)
									universoNuevo.removeItem(visitaCliente);
							}
						}
					}*/
					for each (var visitaU:VisitaCliente in event.visitasComplemento) 
					{
						for each (var obj:Object in listaeliminadas) 
						{
							for each (var visitaCliente:VisitaCliente in obj.lista) 
							{
								if(visitaU.idVisitaCliente == visitaCliente.idVisitaCliente)
									obj.lista.removeItem(visitaCliente);
							}
						}
					}
				}
				
				/*universo.addAll(event.visitasComplemento);*/
				
				/*_sql = new Query(universo,["usuarioEV"],false);*/
				_sql = new Query(universoNuevo,["usuarioEV"],false);
				grpOperacion.setUniverso(_sql);
				
				
				plantilla.indice = 1;
				cmpTitulo.isVisble = true;
				if(universoNuevo.length > 0)
					universoAgrupado = agruparPorEV(ObjectUtil.copy(universoNuevo) as ArrayCollection);
				else
					universoAgrupado = agruparPorEV(ObjectUtil.copy(universo) as ArrayCollection);
				
				if(universoAgrupado)
					grpOperacion.setInfoLista(universoAgrupado);
				
				
				/*cmpGrid.data(universo);
				universoAgrupado = ObjectUtil.copy(universo) as ArrayCollection;*/
			}
			
			private function agruparPorEV(value:ArrayCollection):ArrayCollection
			{
				var visitasAgrupadasEV:ArrayCollection = new ArrayCollection;
				
				var _sql:Query = new Query(value,["usuarioEV","tipo"],false);
				var arrayEV:Array = _sql.getPunteros(["usuarioEV"],"usuarioEV");
				for each (var ev:String in arrayEV) 
				{
					
					var array:Array = _sql.getPunteros([ev]);
					if(array.length > 0){
						var visitaCliente:VisitaCliente = ObjectUtil.copy(_sql.universo.getItemAt(array[0])) as VisitaCliente;
						visitaCliente.numVisitas = array.length;
						visitaCliente.numSolicitud = _sql.getPunteros([ev,"solicitud"]).length;
						visitaCliente.numCRM = _sql.getPunteros([ev,"crm"]).length;
						visitasAgrupadasEV.addItem(visitaCliente);
					}
				}
				return visitasAgrupadasEV;
			}
			
			public function set recibirExitoVisitasComplementarias(value:Boolean):void
			{
				if(value){
					
				}
			}
			
			public function set recibirExitoGuardadoVisitas(value:Boolean):void
			{
				if(value){
					alertaSingleton.show("Guardado Exitoso");
					grpOperacion.indiceSeleccionado = grpOperacion.gridVisita.selectedIndex;
					var uni:ArrayCollection = ObjectUtil.copy(grpOperacion._sql.universo) as ArrayCollection;
					universoAgrupado = agruparPorEV(uni);
					if(universoAgrupado)
						grpOperacion.setInfoLista(universoAgrupado);
				}
			}
			
			public function set recibirExitoAsignacionVisitas(value:Boolean):void
			{
				if(value){
					alertaSingleton.show("Asignacion Exitosa");
					var evento:EventoAsignarSprint = new EventoAsignarSprint(EventoAsignarSprint.OBTENER_VISITAS_ASIGNAR_SPRINT);
					dispatchEvent(evento);
					recargar = true;
					dispatchEvent(new Event("recargarPendientes",true));
				}
			}
			
			private function crearPopUpExito(event:Event):void
			{
				if( popUpConfirmar == null ){
					popUpConfirmar = PopUpConfirmarAsignarSprint(PopUpManager.createPopUp( this, PopUpConfirmarAsignarSprint, true ) );
					PopUpManager.centerPopUp( popUpConfirmar );
					popUpConfirmar.setValores(grpOperacion.sprint.numeroSprint.toString(),grpOperacion.currentEV.usuarioEV);
					popUpConfirmar.addEventListener("cancelar",cerrarPopUpRegistrar);
					popUpConfirmar.addEventListener("confirmar",aceptarPopUpRegistrar);
					/*popUpExito.addEventListener("registrarExito",registrarObtenerPartidas);*/
				}else{
					PopUpManager.addPopUp( popUpConfirmar , this, true );
				}
			}
			
			private function cerrarPopUpRegistrar(event:Event):void
			{
				PopUpManager.removePopUp( popUpConfirmar );
				popUpConfirmar = null;
			}
			
			private function aceptarPopUpRegistrar(event:Event):void
			{
				PopUpManager.removePopUp( popUpConfirmar );
				popUpConfirmar = null;
				grpOperacion.asignarVisitasSprint();
			}
			
			private var popUpInformacion:PopUpInformacionVisita;
			private function mostrarInformacion(event:EventoAsignarSprint):void
			{
				if( popUpInformacion == null ){
					popUpInformacion = PopUpInformacionVisita(PopUpManager.createPopUp( this, PopUpInformacionVisita, true ) );
					PopUpManager.centerPopUp( popUpInformacion );
					popUpInformacion.y -= popUpInformacion.y/2
					
					popUpInformacion.setVisitaCliente(event.visitaCliente);
					popUpInformacion.addEventListener("cerrarPopUp",cerrarLightBox);
					/*popUpInformacion.addEventListener("confirmar",aceptarPopUp);*/
				}else{
					PopUpManager.addPopUp( popUpInformacion , this, true );
				}
			}
			
			private function cerrarLightBox(event:Event):void
			{
				PopUpManager.removePopUp( popUpInformacion );
				popUpInformacion = null;
			}
			
			private function resetAll():void
			{
				grpOperacion.listaVisitasEliminadas = new ArrayCollection;
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" gap="0" visible="false" includeInLayout="false">
		<plantilla:HeaderVentasGV id="cmpTitulo" width="100%" titulo="ASIGNAR SPRINT" vistaAnterirorHeaderGV="vistaAnterior(event)" />
		<AsignarSprintGV:VistaInicialListaAsignarSprint width="100%" height="100%" id="cmpGrid"/>
		
		
		<s:VGroup id="hgpGraficas" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" gap="15" paddingBottom="20" paddingTop="20" paddingLeft="20" paddingRight="20">
			<label:Titulo_15_Helvetica fontWeight="bold" width="100%" text="EJECUTIVOS DE CUENTA" textAlign="center" fontSize="{sizeFonTitulos}" color="#404040"/>
			
			<Graficas:GraficaAsignarSprint id="grafEC" width="80%" height="80%" />
			
		</s:VGroup> 
		
		<s:VGroup width="100%" height="100%"  gap="0">
			<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" id="footer">
				<s:HGroup paddingLeft="-14" width="100%" >
					<otros:division width="100%" grueso="1" color="#404040"/>
				</s:HGroup>
				<s:HGroup width="60%" height="100%" gap="25" verticalAlign="middle" horizontalAlign="center">
					<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="right">
						<mx:Image smoothBitmapContent="true" source="{catalogoIconosEtiquetas.getInstance().crm_icono}" />
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" textAlign="center" text="CRM"/>
					</s:HGroup>
					<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="left">
						<mx:Image smoothBitmapContent="true" source="{catalogoIconosEtiquetas.getInstance().soluciones_icono}" />
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" textAlign="center" text="Solicitudes"/>
					</s:HGroup>  
				</s:HGroup>  
				
			</s:VGroup>  
		</s:VGroup>
		<AsignarSprintGV:VistaOperacionAsignarSprint id="grpOperacion" width="100%" height="100%" />
		
		<AsignarSprintGV:VistaOperacionAsignarSprint_Completar id="grpOperacionCompletar" width="100%" height="100%" />
	</s:VGroup>  
	
	<plantilla:PlantillaGV_VistaInicial id="plantilla" width="100%" height="100%" />
</s:Group>
