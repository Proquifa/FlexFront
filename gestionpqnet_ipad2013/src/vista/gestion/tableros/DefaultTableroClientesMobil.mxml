<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:comun="vista.componentes.comun.*" 
		xmlns:clientes="mapa.tableros.clientes.*" 
		xmlns:botones="vista.skin.botones.*" 
		backgroundColor="#0c0c0c" 
		actionBarVisible="false" 
		creationComplete="completeDefaultHandler(event)"
		
		>
	<fx:Declarations>
		<clientes:MapaTinyMobTableroClientes dispatcher="{this}"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ParametrosBusquedaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.comportamientoPagos.ComportamientoMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.entregas.EntregasMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.pedidos.PedidosMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.seguimientosTab.SeguimientosMobChart;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.transitions.SlideViewTransition;
			import spark.transitions.SlideViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			
			import skins.catalogos.catalogoInfoGraficas;
			
			import vista.vistas.tableros.clientes.ViewChartSelected;
			
			[Bindable]
			private var currentDPI:int = FlexGlobals.topLevelApplication.applicationDPI;
			
			protected function completeDefaultHandler(event:FlexEvent):void
			{
				btnCancelacion.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnComportamiento.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnCotDifPed.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnCotPed.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnEntregas.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnMixMarcas.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnMixProductos.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnPedidos.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnSeguimientos.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				btnVentasPeriodo.addEventListener( "localClickEvent", localClickHandler, false, 0, true );
				
				/* valido si hay datos de una consulta previa */
				if( data != null && data.hasOwnProperty('event') && data.event != null )
				{
					var evt:EventoTableroClientes = new EventoTableroClientes( EventoTableroClientes.MOB_LLENAR_GRAFICAS_MINI );
					evt.parametros = new ParametrosBusquedaCliente;
					evt.parametros.anio = data.event.parametros.anio;
					evt.parametros.cliente = data.event.parametros.cliente;
					evt.parametros.periodo = data.event.parametros.periodo;
					evt.parametros.tipoPeriodo = data.event.parametros.tipoPeriodo;
					evt.parametros.mes = data.event.parametros.mes;
					evt.parametros.esac = data.event.parametros.esac;
					evt.parametros.eventas = data.event.parametros.eventas;
					evt.parametros.lineal = data.event.parametros.lineal;
					evt.parametros.rangoMinMes = data.event.parametros.rangoMinMes;
					evt.parametros.rangoMaxMes = data.event.parametros.rangoMaxMes;
					evt.parametros.proveedor = data.event.parametros.proveedor;
					//dispatchEvent( evt );
					
					lblSubtitulo.text = data.event.mobLegend;
					
					btnCancelacion.esperandoService = true;
					btnComportamiento.esperandoService = true;
					btnCotDifPed.esperandoService = true;
					btnCotPed.esperandoService = true;
					btnEntregas.esperandoService = true;
					btnMixMarcas.esperandoService = true;
					btnMixProductos.esperandoService = true;
					btnPedidos.esperandoService = true;
					btnSeguimientos.esperandoService = true;
					btnVentasPeriodo.esperandoService = true;
				}
				else
				{
					var evtInicial:EventoTableroClientes = new EventoTableroClientes( EventoTableroClientes.MOB_LLENAR_GRAFICAS_MINI );
					var date:Date = new Date();
					evtInicial.parametros = new ParametrosBusquedaCliente;
					evtInicial.parametros.anio = date.fullYear;
					evtInicial.parametros.esac = "";
					evtInicial.parametros.cliente = 0;
					evtInicial.idColaborador = 0;
					evtInicial.parametros.eventas = 0;
					//evtInicial.keyConsulta = "0_" + evtInicial.anio.toString() + "_Anual_0_0__0_0_1_12";
					evtInicial.labelPeriodo1 = "unset";
					evtInicial.labelPeriodo2 = "unset";
					evtInicial.labelPeriodo3 = "unset";
					evtInicial.parametros.lineal = 0;
					evtInicial.parametros.mes = 0;
					evtInicial.mobComboSelectedIndex = 0;
					evtInicial.mobComboProveedorSelectedIndex = 0;
					evtInicial.mobIndexOrigen = 0;
					evtInicial.mobLegend = "";
					evtInicial.parametros.periodo = 'Anual';
					evtInicial.parametros.rangoMaxMes = 12;
					evtInicial.parametros.rangoMinMes = 1;
					evtInicial.parametros.tipoPeriodo = 0;
					evtInicial.parametros.tipo = 'todo';
					evtInicial.parametros.proveedor = 0;
					//dispatchEvent( evtInicial );
					
					var dataTransfer:Object = new Object();
					dataTransfer.event = evtInicial;
					this.data = new Object();
					this.data = dataTransfer;
					
					//lblSubtitulo.text = date.fullYear.toString();
					lblSubtitulo.text = 'GLOBAL Â· ' + date.fullYear.toString();
					btnCancelacion.esperandoService = true;
					btnComportamiento.esperandoService = true;
					btnCotDifPed.esperandoService = true;
					btnCotPed.esperandoService = true;
					btnEntregas.esperandoService = true;
					btnMixMarcas.esperandoService = true;
					btnMixProductos.esperandoService = true;
					btnPedidos.esperandoService = true;
					btnSeguimientos.esperandoService = true;
					btnVentasPeriodo.esperandoService = true;
				}
			}
			
			private var bPushingView:Boolean = false;
			/* PUSH VISTA  */
			protected function localClickHandler( event:Event ):void
			{
				if( !bPushingView )
				{
					bPushingView = true;
					var slideTrans:SlideViewTransition = new SlideViewTransition();
					
					if( event.currentTarget.positionButton == "top" )
						slideTrans.direction = ViewTransitionDirection.DOWN;
					else
						slideTrans.direction = ViewTransitionDirection.UP;
					
					var goData:Object = new Object();
					goData.returnDirection = slideTrans.direction;
					goData.returnInfo = event.currentTarget.informacionChart;
					goData.titulo = event.currentTarget.label;
					goData.selectedIndex = event.currentTarget.index;
					
					if( data != null && data.hasOwnProperty('event') )
						goData.event = data.event;
					
					slideTrans.duration = 600;
					slideTrans.mode = SlideViewTransitionMode.COVER;  //or COVER and PUSH modes
					navigator.popView();
					navigator.pushView( ViewChartSelected, goData, null, slideTrans ); 
				}
			}
			
			protected function backGestionHandler():void
			{
				/* Mandar a vistaGestion */
				navigator.popToFirstView();
			}
			/**
			 * CHARTS
			 */
			/*  pies */
			public function set recibeTinyMixProductos( value:ArrayCollection ):void
			{
				if( value == null ) 
					return;
				btnMixProductos.dataProvider = value;	
			}
			
			public function set recibeTinyMixMarcas( value:ArrayCollection ):void
			{
				if( value == null ) 
					return;
				btnMixMarcas.dataProvider = value;
			}
			
			public function set recibeTinyCotDifPed( value:ArrayCollection ):void
			{
				if( value == null ) 
					return;
				btnCotDifPed.dataProvider = value;
			}
			
			public function set recibeTinyCancelacion( value:ArrayCollection ):void
			{
				if( value == null ) 
					return;
				btnCancelacion.dataProvider = value;
			}
			/*  barras negro-verde_azul */
			public function set recibeTinyCotPedido( value:ArrayCollection ):void
			{
				btnCotPed.dataProvider = UtilsGrid.queryCampoX( value, "etiqueta", "COT=PED_0");
			}
			/*  barraS */
			public function set recibeTinyPedidos( value:ArrayCollection ):void
			{
				var data:ArrayCollection = UtilsGrid.queryCampoX( value, "etiqueta", "PEDIDOS_0" );
				data = PedidosMobChart.acoplarData( data );
				//convertir resumen a un formato standar ( Abierto, Cerrado, AbiertoET, AbiertoFT, CerradoET, CerradoFT )
				var arrComodado:ArrayCollection = new ArrayCollection();
				for( var f:int = 0; f < data.length; f++ )
				{
					var newItem:Object = new Object();
					newItem.abiertoET = data[ f ].montoPedidoMensual;
					newItem.abiertoFT = data[ f ].montoCanceladoMensual;
					arrComodado.addItem( newItem );
				}
				btnPedidos.dataProvider = arrComodado;
			}
			
			public function set recibeTinyComportamiento( value:ArrayCollection ):void
			{
				var data:ArrayCollection = UtilsGrid.queryCampoX( value, "etiqueta", "COMPORTAMIENTO_PAGOS_0" );
				data = ComportamientoMobChart.acoplarData( data );
				//convertir resumen a un formato standar ( Abierto, Cerrado, AbiertoET, AbiertoFT, CerradoET, CerradoFT )
				var arrComodado:ArrayCollection = new ArrayCollection();
				for( var f:int = 0; f < data.length; f++ )
				{
					var newItem:Object = new Object();
					newItem.abiertoET = data[ f ].montoCobrado;
					newItem.abiertoFT = data[ f ].montoPorCobrar;
					arrComodado.addItem( newItem );
				}
				btnComportamiento.dataProvider = arrComodado;
			}
			
			public function set recibeTinySeguimientos( value:ArrayCollection ):void
			{
				var data:ArrayCollection = UtilsGrid.queryCampoX( value, "etiqueta", "SEGUIMIENTO_0" );
				data = SeguimientosMobChart.acoplarData( data );
				//convertir resumen a un formato standar ( Abierto, Cerrado, AbiertoET, AbiertoFT, CerradoET, CerradoFT )
				var arrComodado:ArrayCollection = new ArrayCollection();
				for( var f:int = 0; f < data.length; f++ )
				{
					var newItem:Object = new Object();
					newItem.abiertoET = data[ f ].seguimientoAET;
					newItem.abiertoFT = data[ f ].seguimientoAFT;
					newItem.cerradoET = data[ f ].seguimientoCET;
					newItem.cerradoFT = data[ f ].seguimientoCFT;
					arrComodado.addItem( newItem );
				}
				btnSeguimientos.dataProvider = arrComodado;
			}
			
			public function set recibeTinyEntregas( value:ArrayCollection ):void
			{
				var data:ArrayCollection = UtilsGrid.queryCampoX( value, "etiqueta", "ENTREGAS_0" );
				data = EntregasMobChart.acoplarData( data );
				//convertir resumen a un formato standar ( Abierto, Cerrado, AbiertoET, AbiertoFT, CerradoET, CerradoFT )
				var arrComodado:ArrayCollection = new ArrayCollection();
				for( var f:int = 0; f < data.length; f++ )
				{
					var newItem:Object = new Object();
					newItem.abiertoET = data[ f ].entregaAET;
					newItem.abiertoFT = data[ f ].entregaAFT;
					newItem.cerradoET = data[ f ].entregaCET;
					newItem.cerradoFT = data[ f ].entregaCFT;
					arrComodado.addItem( newItem );
				}
				btnEntregas.dataProvider = arrComodado;
			}
			
			public function set recibeTinyVentasPeriodo( value:ArrayCollection ):void
			{
				if( value == null ) 
					return;
				/* generamos un arraycollection de Objects en el orden que vienen los meses  */
				var dataCollection:ArrayCollection = new ArrayCollection();
				var nObject:Object;
				var cuenta:int = 1;
				while( cuenta < 13 )
				{
					if( cuenta >= data.event.rangoMinMes && cuenta <= data.event.rangoMaxMes )
					{
						nObject = new Object();
						nObject.valor = 0;
						for( var m:int = 0; m < value.length; m++ )
						{
							var resumen:ResumenConsulta = value[m] as ResumenConsulta;
							if( cuenta == resumen.mes )
							{
								if( resumen.etiqueta == "VENTAS_0" || resumen.etiqueta == "NOTA_0" )
									nObject.valor += resumen.total;
							}
						}
						dataCollection.addItem( nObject );
					}
					cuenta++;
				}
				btnVentasPeriodo.dataProvider = dataCollection;
			}
			
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="55%" gap="{currentDPI == 160 ? 4:8}" top="{currentDPI == 160 ? 5:10}" depth="11" >
		<botones:botonMobMenuTablero id="btnMixProductos" 
									 label="MIX PRODUCTOS" positionButton="top" index="0" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_MIXPRODUCTOS }" />
		<botones:botonMobMenuTablero id="btnCotPed" 
									 label="COT = PED" positionButton="top" index="1" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_COTIZADO_PEDIDO }" />
		<botones:botonMobMenuTablero id="btnSeguimientos"  
									 label="SEGUIMIENTOS" positionButton="top" index="2" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_SEGUIMIENTOS }" />
		<botones:botonMobMenuTablero id="btnPedidos"
									 label="PEDIDOS" positionButton="top" index="3" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_PEDIDOS }" />
		<botones:botonMobMenuTablero id="btnVentasPeriodo" 
									 label="VENTAS DEL PERIODO" positionButton="top" index="4" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_VENTAS_PERIODO }" />
	</s:HGroup>
	<!-- TITULO -->
	
	<s:Group id="grpTituloVistaDefault" width="100%" verticalCenter="0" >
		<s:Label id="lblDecorativo" text="//" color="0x0b9991" left="{currentDPI == 160 ? 30:60}"  styleName="titulo_Novecento_30" />
		<s:Label left="{lblDecorativo.x +lblDecorativo.width + 10}" text="TABLERO DE CLIENTES" color="0xFFFFFF" letterSpacing="3" styleName="titulo_Novecento_30" />
		<s:Label id="lblSubtitulo" color="0x0b9991" left="{lblDecorativo.x +lblDecorativo.width + 10}" y="{lblDecorativo.y + lblDecorativo.height }" styleName="titulo_Novecento_22" />
	</s:Group>  
	
	<comun:LogoButton depth="20" right="{currentDPI == 160 ? 25:50}" verticalCenter="0" /><!--click="backGestionHandler()"-->
	
	<s:HGroup width="100%" height="55%" gap="{currentDPI == 160 ? 4:8}" bottom="{currentDPI == 160 ? 5:10}" depth="10" >
		<botones:botonMobMenuTablero id="btnMixMarcas"
									 label="MIX MARCAS" positionButton="bottom" index="5" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_MIXMARCAS }" />
		<botones:botonMobMenuTablero id="btnCotDifPed"
									 label="COT â¡ PED" positionButton="bottom" index="6" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_COTIZADO_NO_PEDIDO }" />
		<botones:botonMobMenuTablero  id="btnCancelacion"
									  label="CANCELACIÃN EN COTIZACIÃN" positionButton="bottom" index="7" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_CANCELACION_COTIZACION }" />
		<botones:botonMobMenuTablero id="btnEntregas"
									 label="ENTREGAS" positionButton="bottom" index="8" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_ENTREGAS }" />
		<botones:botonMobMenuTablero id="btnComportamiento"
									 label="COMPORTAMIENTO PAGOS" positionButton="bottom" index="9" tinyChart="images" informacionChart="{ catalogoInfoGraficas.TABLERO_CLIENTES_COMPORTAMIENTO_PAGOS }" />
	</s:HGroup>
</s:View>
