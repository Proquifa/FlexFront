<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:botonAtras="skin.botonAtras.*"
		backgroundColor="#252b2c"
		xmlns:botonCancelar="skin.botonCancelar.*"
		initialize="view1_initializeHandler(event)"
		
		>
	
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroEnCierre;
			
			import modelo.objetos.PendientesMensajero;
			import modelo.objetos.itemCatalogo;
			import modelo.singletons.enRealizacion.DatosGlobalesEnRealizacion;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			
			/* [Bindable]
			public var pendiente:PendientesMensajero = new PendientesMensajero(); */
			
			[Bindable]
			public var catalogo:ArrayCollection = new ArrayCollection([new itemCatalogo("Mensajero","No se ha realizado por carga de trabajo, tráfico, tiempo. etc...",false),
				new itemCatalogo("Solicitante","Las instrucciones del solicitante eran incorrectas",false),
				new itemCatalogo("Cliente","El cliente ha provocado la no realización del evento",false)])
			
			
/* 			public function set recibirPendienteNoVerificado(_pendiente:PendientesMensajero):void{
				this.pendiente = new PendientesMensajero();
				this.title = "";
				if(_pendiente.folioEvento != null && _pendiente.folioEvento != ""){
					this.title = _pendiente.empresa;
					this.pendiente = _pendiente;
				}
			} */
			
			
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				this.navigator.popView();
				
			}
			
			protected function seleccionCatalogo(event:IndexChangeEvent):void
			{
				for(var m:int = 0; m<this.catalogo.length; m++)
				{
					this.catalogo[m].seleccionado = false;
				}
				
				this.lista.selectedItem.seleccionado = true;
				
/* 				var evento:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.IR_A_VISTA_PENDIENTE_JUSTIFICACION);
				evento._pendientePorJustificar = ObjectUtil.copy(this.pendiente) as PendientesMensajero;
				evento._pendientePorJustificar.tipoJustificacion = this.catalogo[event.newIndex].titulo;
				this.dispatchEvent(evento);
				 */
				
				globales.currentPendienteNoVerificado.tipoJustificacion = this.catalogo[event.newIndex].titulo;
				
				this.navigator.pushView(pendienteJustificacionView);
			}
			
			private var globales:DatosGlobalesEnRealizacion = DatosGlobalesEnRealizacion.getInstance();
			protected function view1_initializeHandler(event:FlexEvent):void
			{
				title = globales.currentEmpresa;
				lblFolioEvento.text = globales.currentPendienteNoVerificado.folioEvento;
				
				if(globales.currentPendienteNoVerificado.evento.toLowerCase() == "revision")
				{
					lblEvento.text = "Revisión";
				}
				else
				{
					lblEvento.text = globales.currentPendienteNoVerificado.evento;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<botonCancelar:botonCancelarMovil click="vistaAnterior(event)"/>
	</s:navigationContent>
	
	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>
	
	<s:Group width="640" height="160">
		<s:Rect  width="640" height="160">
			<s:fill>
				<s:SolidColor color="#c20f0f"/>
			</s:fill>
			<s:filters>
				<s:BevelFilter angle="45.0" blurX="1" blurY="1" distance="3"
							   highlightAlpha="1.0" highlightColor="#999999" knockout="false"
							   quality="2" shadowAlpha="1.0" shadowColor="#666666" strength="1"
							   type="inner"/>
			</s:filters>
		</s:Rect>
		
		<s:Label id="lblFolioEvento" horizontalCenter="0" y="67" width="461.008" height="37.001" color="#FFFFFF" fontFamily="Helvetica Neue" fontSize="27" textAlign="center" ><!--text="{pendiente.folioEvento}"-->
		</s:Label>
		<s:Label  horizontalCenter="0" y="25" width="346.006" height="46.001" color="#FFFFFF" fontFamily="Helvetica Neue" fontSize="32" fontWeight="bold"  textAlign="center" text="NO REALIZADO"/>
		
		<s:Label id="lblEvento" horizontalCenter="0"  y="96" width="477.008" height="44.001" color="#FFFFFF" fontFamily="Helvetica Neue" fontSize="27" textAlign="center"/> <!--text="{pendiente.evento}"-->
	</s:Group>
	<s:List contentBackgroundColor="#252b2c" id="lista" width="100%" height="100%" dataProvider="{this.catalogo}" change="seleccionCatalogo(event)"
			itemRenderer="vistas.renders.renderEnCierre.itemCatalogoNoVerificado">
		
	</s:List>
</s:View>
