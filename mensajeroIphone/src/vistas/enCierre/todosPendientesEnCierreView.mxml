<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"  
		xmlns:botonAtras="skin.botonAtras.*"
		backgroundColor="#252b2c"
		title="EN CIERRE"
		>
	
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroEnCierre;
			
			import modelo.objetos.PendientesMensajero;
			import modelo.objetos.itemPendientes;
			import modelo.singletons.enRealizacion.DatosGlobalesEnRealizacion;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			public var pendientesMensajero:ArrayCollection = new ArrayCollection();
			
			public function set recibirPendientesEnCierreAgrupados($pendientes:ArrayCollection):void
			{
				if($pendientes.length > 0)
				{
					pendientesMensajero = ObjectUtil.copy($pendientes) as ArrayCollection;
					lstPendientesEnCierre.dataProvider = $pendientes;
					lstPendientesEnCierre.height = lstPendientesEnCierre.dataProvider.length * 191;
					calcularNumeroClientes($pendientes);
				}
				else
				{
					lstPendientesEnCierre.dataProvider = $pendientes;
					lstPendientesEnCierre.height = 0;
					txtTotalClientes.text = "0 Clientes";
				}
			}
			
			
			private function calcularNumeroClientes($pendientesEnCierre:ArrayCollection):void
			{
				var key:Object = new Object;
				var totalClientes:uint;
				
				for (var i:int = 0; i < $pendientesEnCierre.length; i++) 
				{
					var currentItem:itemPendientes = itemPendientes($pendientesEnCierre[i]);
					if(!key.hasOwnProperty(currentItem.empresa))
					{
						key[currentItem.empresa] = currentItem.empresa;
						totalClientes++;
					}
				}
				
				if(totalClientes == 1)
					txtTotalClientes.text = totalClientes + " Cliente";		
				else
					txtTotalClientes.text = totalClientes + " Clientes";		
			}
			
			private var globales:DatosGlobalesEnRealizacion = DatosGlobalesEnRealizacion.getInstance();
			protected function cambio(event:IndexChangeEvent):void
			{
				var evento:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.IR_A_LA_VISTA_DE_PENDIENTES_EN_CIERRE_AGRUPADOS_POR_EVENTO);
				
				/* 				evento._pendientesSeleccionados = pendientesMensajero[event.newIndex]; */
				//evento.indexPendientesEnCierre = event.newIndex;
				
				evento.pendienteSeleccionadoKey = itemPendientes(lstPendientesEnCierre.selectedItem).key;
				globales.currentEmpresa = itemPendientes(lstPendientesEnCierre.selectedItem).empresa;
				globales.currentIdEmpresa = itemPendientes(lstPendientesEnCierre.selectedItem).idEmpresa;
				
				globales.currentEvento = itemPendientes(lstPendientesEnCierre.selectedItem).evento; 
				
				//evento.indexPendientesEnCierre = event.newIndex;
				dispatchEvent(evento);
				navigator.pushView(pendientesEnCierreRealizacionView); 
			}
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				navigator.popView();
			}
			
			private var busqueda:String; 
			protected function txtFiltro_enterHandler(event:FlexEvent):void
			{
				busqueda = StringUtil.trim(txtFiltro.text); 
				if(busqueda.length > 0)
				{
					var resultado:Array = new Array;
					resultado = pendientesMensajero.source.filter(hacerLaBusqueda);
					lstPendientesEnCierre.dataProvider = new ArrayCollection(resultado);
					calcularNumeroClientes(new ArrayCollection(resultado));
				}
				else
				{
					lstPendientesEnCierre.dataProvider = pendientesMensajero;
					calcularNumeroClientes(pendientesMensajero);
				}
				lstPendientesEnCierre.height = lstPendientesEnCierre.dataProvider.length * 191;
			}
			
			private function hacerLaBusqueda($item:itemPendientes,$index:int,$array:Array):Boolean
			{
				if(String($item.empresa).toLowerCase().indexOf(busqueda) > -1 )
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<botonAtras:botonAtras click="vistaAnterior(event)"/>
	</s:navigationContent>
	
	<s:Scroller width="640" height="{this.height}">
		<s:VGroup  gap="15" verticalCenter="0" horizontalCenter="0" horizontalAlign="center" height="100%" width="100%">
			<s:TextInput width="100%" id="txtFiltro" enter="txtFiltro_enterHandler(event)"/>
			<s:List id="lstPendientesEnCierre" verticalScrollPolicy="off" contentBackgroundColor="#252b2c" itemRenderer="vistas.renders.renderPendientes.renderPendientes" 
					change="cambio(event)" width="100%" />
			<s:Label id="txtTotalClientes" fontSize="22.64" color="#ffffff" textAlign="center" />
			<s:Label fontSize="27.17" color="#ffffff" textAlign="center" text="TOTAL"/>
		</s:VGroup>
	</s:Scroller>
</s:View>
