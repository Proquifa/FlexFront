<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:botonAtras="skin.botonAtras.*"
		xmlns:botonDireccion="skin.botonDireccion.*"
		backgroundColor="#252b2c" >
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajero;
			
			import modelo.objetos.PendientesMensajero;
			import modelo.objetos.itemPendientes;
			import modelo.singletons.datosGlobales;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			
			import vistas.direccion.direccionView;
			
			protected function cambio(event:IndexChangeEvent):void
			{	
				if(lista.selectedItem.validarPosicion == false)
				{
					return;
				}
				
				this.navigator.pushView(tabViewPendientes);
				var evento:EventoMensajero = new EventoMensajero(EventoMensajero.SELECCIONAR_PENDIENTE_MENSAJERO);
				evento._pendienteSeleccionado = lista.selectedItem as PendientesMensajero;
				datosGlobales.getInstance().indexTabPendientes = 0;
				this.dispatchEvent(evento);
			}
			
			[Bindable]
			public var pendientesporRuta:ArrayCollection = new ArrayCollection();
			public function set recibirPendientesporRuta(pendienteAgrupado:itemPendientes):void
			{
				this.pendientesporRuta = new ArrayCollection();
				this.title = "";
				if(pendienteAgrupado.pendientes.length > 0)
				{
					this.title = pendienteAgrupado.empresa;
					this.pendientesporRuta = pendienteAgrupado.pendientes;
				}
			}
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				datosGlobales.getInstance().indexTabPendientes = 0;
				this.navigator.popView();
			}
			
			
			protected function iraDireccion(event:MouseEvent):void
			{
				this.navigator.pushView(direccionView);
			}
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<botonAtras:botonAtras click="vistaAnterior(event)"/>
	</s:navigationContent>
	<s:actionContent>
		<botonDireccion:btnDireccion right="50" click="iraDireccion(event)"/>
	</s:actionContent>
	
	<s:Scroller width="{this.width}" height="{this.height}">
		<s:VGroup id="contenedor" width="100%" gap="15" verticalCenter="0" horizontalCenter="0" horizontalAlign="center" height="100%">
			<s:List verticalScrollPolicy="off"  contentBackgroundColor="#252b2c" height="{this.pendientesporRuta.length * 158}"
					itemRenderer="vistas.renders.renderStatus.renderStatus"
					id="lista" dataProvider="{this.pendientesporRuta}" 
					change="cambio(event)" width="100%"/>
			<s:Label fontSize="22.64" color="0xffffff"  textAlign="center"  text="{this.pendientesporRuta.length + ' Pendientes'}"/>
			<s:Label fontSize="27.17" color="0xffffff"  textAlign="center" text="TOTAL"/>
		</s:VGroup>
	</s:Scroller>
	
</s:View>
