<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				width="640" height="191" contentBackgroundColor="#252b2c" chromeColor="#252b2c" accentColor="#252b2c" >
	<fx:Declarations>
		<!--<s:DropShadowFilter  alpha="0.5" angle="84.28940686250037" blurX="13.9" blurY="13.9" color="#000000"
							 distance="1" hideObject="false" inner="false" knockout="false"
							 quality="2" strength="1"/>
		<s:DropShadowFilter   alpha="0.5" angle="80.53767779197439" blurX="2" blurY="2"
							  color="#000000" distance="2" hideObject="false" inner="true"
							  knockout="false" quality="2" strength="1"
							  angle.normal="54.46232220802562"/>-->
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import spark.filters.BevelFilter;
			/*amarillo dbca09
			verde 67981a*/
			
			/*[Bindable]
			private var contador:Boolean = false;*/
			
			private var efectoFondo1:spark.filters.BevelFilter = new spark.filters.BevelFilter(3,-90,0x999999,1.0,0x000000,1.0,1,1,1,1,"inner",false);
			
			private var efectoElipse1:spark.filters.DropShadowFilter = new spark.filters.DropShadowFilter(1,84.28940686250037,0x000000,0.5,13.9,13.9,1.0,2,false,false,false);
			private var efectoElipse2:spark.filters.DropShadowFilter = new spark.filters.DropShadowFilter(2,54.46232220802562,0x000000,0.5,2,2,1,2,true,false,false);
			
			private var efectosFondo:Array = new Array(efectoFondo1);
			private var efectosElipse:Array = new Array(efectoElipse1,efectoElipse2);
			
			override public function set data(value:Object):void{
				super.data = value;
				if(value != null){ 
					if(value.status == "N"){
						this.circulo.color = 0x67981a;
					}
					if(value.status == "U"){
						this.circulo.color = 0xdbca09;
					}
					if(value.status == "I"){
						this.circulo.color =  0xC20F0F;
					}
					
					
					
					/*if(value.ultimo != "")
					{
						this.contador = true;
					this.fondoColor.color = 0x252b2c;
					this.fondo.filters = new Array();
					this.elipse.filters = new Array();
					this.elipse.visible = false;
						
					}*/
					//else{
						//this.contador = false;
						this.fondoColor.color = 0x333333;
						this.fondo.filters = efectosFondo;
						this.elipse.filters = this.efectosElipse;
						this.elipse.visible = true;
					//}
				}
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<s:Rect id="fondo" x="0" y="0" width="100%" height="100%">
		<s:fill>
			<s:SolidColor id="fondoColor" color="0x333333"/>
		</s:fill>
	</s:Rect>
	
	
	<s:Label  id="labelDisplay1" x="39" y="44" width="449" height="42" color="#ffffff"
				fontFamily="Helvetica Neue" fontSize="31.7" fontWeight="bold" lineHeight="171.45%"
				text="{this.data.empresa}" typographicCase="uppercase">
	</s:Label>
	<s:Label  id="labelDisplay" x="39" y="85" width="416" height="34" color="#ffffff"
				fontFamily="Helvetica Neue" fontSize="27.15" lineHeight="133.35%"
				text="{this.data.etiquetaEventos}" typographicCase="uppercase">
	</s:Label>
	<s:Label   x="39" y="115" width="416" height="34" color="#13618f" fontFamily="Helvetica Neue"
				fontSize="27.15" lineHeight="133.35%" text="{this.data.ruta}"
				typographicCase="uppercase" >
	</s:Label>
	
	<s:BitmapImage x="587" y="68" smooth="true" 
				   source="@Embed('vistas/renders/renderPendientes/assets/flecha.png')"/>
	
	<s:Ellipse id="elipse"  x="499.5" y="79.5" width="26" height="26">
		<s:fill>
			<s:SolidColor  id="circulo" color="0x333333"/>
		</s:fill>
		<s:stroke>
			<s:LinearGradientStroke caps="none" joints="miter" miterLimit="4" rotation="90"
									weight="1">
				<s:GradientEntry alpha="1.0" color="0x333333" ratio="0"/>
				<s:GradientEntry alpha="1.0" color="#666666" ratio="0.5176470588235295"/>
				<s:GradientEntry alpha="1.0" color="#666666" ratio="1"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Ellipse>
	
	<s:Rect  includeIn="selected" x="0" y="0" width="640" height="184" alpha="0.4">
		<s:fill>
			<s:SolidColor color="#000000"/>
		</s:fill>
	</s:Rect>
	
	<!--<s:VGroup verticalCenter="0" horizontalCenter="0" horizontalAlign="center">
		<s:Label includeInLayout="{this.contador}" fontSize="22.64" color="#ffffff" textAlign="center"  text="{data.ultimo + ' Clientes'}"/>
		<s:Label includeInLayout="{this.contador}" fontSize="27.17" color="#ffffff" textAlign="center" text="TOTAL"/>
	</s:VGroup>-->
		
	<!--<s:Label id="labelDisplay1" x="39" y="44" width="449" height="42" color="#ffffff"
	fontFamily="Helvetica Neue" fontSize="31.7" fontWeight="bold" lineHeight="171.45%"
	text="{this.data.empresa}" typographicCase="uppercase" whiteSpaceCollapse="preserve">
	</s:Label>
	<s:Label id="labelDisplay" x="39" y="85" width="416" height="34" color="#ffffff"
	fontFamily="Helvetica Neue" fontSize="27.15" lineHeight="133.35%"
	text="{this.data.etiquetaEventos}" typographicCase="uppercase"
	whiteSpaceCollapse="preserve">
	</s:Label>
	<s:Label x="39" y="115" width="416" height="34" color="#13618f" fontFamily="Helvetica Neue"
	fontSize="27.15" lineHeight="133.35%" text="{this.data.ruta}"
	typographicCase="uppercase" whiteSpaceCollapse="preserve">
	</s:Label>-->
	
	
</s:ItemRenderer>
