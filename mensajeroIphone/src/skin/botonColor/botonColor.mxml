<?xml version="1.0" encoding="utf-8"?>
<s:Button xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  skinClass="skin.botonColor.botonColorSkin"
		  >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			public var colorBase:String=""
			public var botonRedondo:Boolean= false;
			public var gradientePqnet:Boolean = false;
			
			private var rojoInicio:uint = new uint();
			private var verdeInicio:uint= new uint();
			private var azulInicio:uint = new uint();
			
			private var rojoFinal:String;
			private var verdeFinal:String;
			private var azulFinal:String;
			
			
			private var colorOver:String ="";
			private var colorGradiente:String ="";
			
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				if(this.colorBase != ""){
					if(colorBase.indexOf('#') != -1){
						colorBase = colorBase.substr(1,6);
					}else if(colorBase.indexOf('0x') != -1){
						colorBase = colorBase.substr(2,6);
					}
					rojoInicio = convertStringToUint( colorBase.substr(0,2) );
					verdeInicio = convertStringToUint( colorBase.substr(2,2) );
					azulInicio = convertStringToUint( colorBase.substr(4,2) );
					/**
					 * separo el color en 3 pares, luego convierto a decimal cada par y les resto 30, 
					 * si el resultado es menor de 0 los igualo a cero para evitar numeros negativos
					 */
					var quita:int = 30;
					rojoFinal = ((rojoInicio - quita < 0 ? rojoInicio = 0 : rojoInicio -= quita)).toString(16);
					rojoFinal.length < 2 ? rojoFinal = "0" + rojoFinal : rojoFinal;
					verdeFinal = ((verdeInicio - quita < 0 ? verdeInicio = 0 : verdeInicio -= quita)).toString(16);
					verdeFinal.length < 2 ? verdeFinal = "0" + verdeFinal : verdeFinal;
					azulFinal = ((azulInicio - quita < 0 ? azulInicio = 0 : azulInicio -= quita)).toString(16);
					azulFinal.length < 2 ? azulFinal = "0" + azulFinal : azulFinal;
					colorOver = "0x" + rojoFinal + verdeFinal + azulFinal;
					
					botonColorSkin(skin).colorNormal = uint("0x" + colorBase);
					botonColorSkin(skin).colorOver = uint(colorOver);
					
					///			GRADIENTE
					if(this.gradientePqnet == true)
					{
						rojoInicio = convertStringToUint( colorBase.substr(0,2) );
						verdeInicio = convertStringToUint( colorBase.substr(2,2) );
						azulInicio = convertStringToUint( colorBase.substr(4,2) );
						var cantQuitar:int = 75;// 95
						rojoFinal = ((rojoInicio - cantQuitar < 0 ? rojoInicio = 0 : rojoInicio -= cantQuitar)).toString(16);
						rojoFinal.length < 2 ? rojoFinal = "0" + rojoFinal : rojoFinal;
						verdeFinal = ((verdeInicio - cantQuitar < 0 ? verdeInicio = 0 : verdeInicio -= cantQuitar)).toString(16);
						verdeFinal.length < 2 ? verdeFinal = "0" + verdeFinal : verdeFinal;
						azulFinal = ((azulInicio - cantQuitar < 0 ? azulInicio = 0 : azulInicio -= cantQuitar)).toString(16);
						azulFinal.length < 2 ? azulFinal = "0" + azulFinal : azulFinal;
						colorGradiente = "0x" + rojoFinal + verdeFinal + azulFinal;
						botonColorSkin(skin).colorGradiente = uint(colorGradiente);
						botonColorSkin(skin).colorGradienteAbajo = uint(colorGradiente);
					}
					else
					{
						botonColorSkin(skin).colorGradiente = uint("0x" + colorBase);
						botonColorSkin(skin).colorGradienteAbajo = uint(colorOver);
					}
				}
				//				 	REDONDEAR
				if( this.botonRedondo)
				{
					/* this.height = 42; */
					botonColorSkin(skin).rectFondo.topLeftRadiusX = 5;
					botonColorSkin(skin).rectFondo.topRightRadiusX = 5;
					botonColorSkin(skin).rectFondo.bottomRightRadiusX = 5;
					botonColorSkin(skin).rectFondo.bottomLeftRadiusX = 5;
				}
			}
			
			public function convertStringToUint(value:String):uint  
			{  
				var colorString:String = "0x" + value;  
				var colorUint:uint = uint(colorString);
				return colorUint;
			}  
			
		]]>
	</fx:Script>
	
</s:Button>
