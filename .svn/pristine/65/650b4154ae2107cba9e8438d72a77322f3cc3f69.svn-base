<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorComparacionConsultas xmlns:fx="http://ns.adobe.com/mxml/2009"
									  xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									  xmlns:s="library://ns.adobe.com/flex/spark" 
									  xmlns:mx="library://ns.adobe.com/flex/mx" 
									  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
									  xmlns:otros="skins.otros.*"  
									  xmlns:linkButton="skins.skin.linkButton.*" 
									  xmlns:AdvancedDataGrid="skins.skin.AdvancedDataGrid.*" 
									  xmlns:consultas="skins.skin.comun.consultas.*"
									  xmlns:label="skins.skin.label.*"
									  creationComplete="initial()"
									  width="100%" height="100%" 
									  >
	
	<fx:Declarations>
		<s:Fade id="fadeOcultar" duration="200" alphaFrom="1.0" alphaTo="0.0"/>
		<s:Fade id="fadeMostrar" duration="500" alphaFrom="0.0" alphaTo="1.0"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.comun.documentosRecibidos.EventoDocumentosRecibidos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DocumentoRecibido;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.ContenedorGraficas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosAbietoVsCerrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosDestinatario;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosETVsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosIngreso;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosNI;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.GraficaDoctosRecibidosTipo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.graficosETvsFT.GraficaDoctosRAbiertaVsCerrada;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.graficosETvsFT.GraficaDoctosRClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.graficosETvsFT.GraficaDoctosRESAC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.graficosETvsFT.GraficaDoctosRTipo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.documentosRecibidos.componentesGraficos.graficosETvsFT.GraficaDoctosRecibidosETVsFT_Secundaria;
			import mx.core.IVisualElement;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoIconosBotoneras;
			
			[Bindable] private var _documentosRecibidos:ArrayCollection;
			private var urlreq:URLRequest;
			private var ruta:String;
			
			public var _graficos:ArrayCollection = new ArrayCollection();
			private var graficas1erNivel:ContenedorGraficas = new ContenedorGraficas();
						
			public function initial():void
			{
				headGrid.btnExportar.enabled = false;
				btnGraficaTabla.addEventListener(MouseEvent.CLICK,solicitarInfoGraficas,false,0,true);
				
				var graficaEncimada:ArrayCollection = new ArrayCollection();
				var graficas:ArrayCollection = new ArrayCollection();
				graficas.addItem(new GraficaDoctosRecibidosClientes());
				graficas.addItem(new GraficaDoctosRecibidosTipo());
				graficas.addItem(new GraficaDoctosRecibidosDestinatario());
				graficas.addItem(new GraficaDoctosRecibidosNI());
				graficas.addItem(new GraficaDoctosRecibidosAbietoVsCerrado()); 
				graficas.addItem(new GraficaDoctosRecibidosIngreso());
				
				graficaEncimada.addItem(new GraficaDoctosRecibidosETVsFT());
				
				this.graficas1erNivel.insertarGraficas(graficas,graficaEncimada);
				agregarEspacioTrabajo(graficas1erNivel);
				
				var graficas2doNivel:ContenedorGraficas = new ContenedorGraficas();
				graficas2doNivel.tipoDeBotonBack = "flecha";
				graficas2doNivel.addEventListener("btnRegresarConsultasGraficasPrincipal",buttonRegresar_clickEventListener,false,0,true);
				
				var arrGraficas:ArrayCollection = new ArrayCollection();
				
				arrGraficas.addItem(new GraficaDoctosRAbiertaVsCerrada());
				arrGraficas.addItem(new GraficaDoctosRESAC());
				arrGraficas.addItem(new GraficaDoctosRTipo());
				arrGraficas.addItem(new GraficaDoctosRClientes());
				arrGraficas.addItem(new GraficaDoctosRecibidosETVsFT_Secundaria());
				graficas2doNivel.insertarGraficasInverso( arrGraficas );
				espacioSelectedGrafica.addElement( graficas2doNivel );
				
				this.addEventListener(EventoDocumentosRecibidos.MOSTRAR_SELECTED_GRAFICA, muestraOcultaSelectedGafica);
			}
			
			[Bindable]
			public var actualizarVistaActual:Boolean;
			private function solicitarInfoGraficas(event:MouseEvent):void
			{
				if(imgTab.visible)
				{
					compararVistas();
					
					var seleccionarVista:EventoDocumentosRecibidos = new EventoDocumentosRecibidos(EventoDocumentosRecibidos.SETTEAR_CURRENT_VISTA_SELECTED);
					
					if( vistaSelected == _TABLA_GRID )
					{
						seleccionarVista.selectedVista = _GRAFICAS;
					}
					else
					{
						seleccionarVista.selectedVista = _TABLA_GRID;
					}
					dispatchEvent(seleccionarVista);
				}
			}
			public function muestraOcultaSelectedGafica(evt:EventoDocumentosRecibidos):void{
				conceptoPie.text = evt.tipo.toUpperCase();
				
				if(evt.valorAdicional =="grafETVsFT")
				{
					stack.selectedIndex=evt.seleccionarGraficas; 
					
					var eventoSetFiltro:EventoDocumentosRecibidos = new EventoDocumentosRecibidos(EventoDocumentosRecibidos.OBTENER_FILTRO_GRAFICO_SECUNDARIO);
					eventoSetFiltro.tipo = evt.tipo; 
					dispatchEvent(eventoSetFiltro);   
				}
			}
			
			public function validarFOrigenReferencia(item:Object, column:AdvancedDataGridColumn):String
			{
				var cadenaValidada:String = "";
				if(item[column.dataField] == 0 || item[column.dataField] == null || item[column.dataField] == "" )
				{
					cadenaValidada = "ND";
				}
				else
				{
					cadenaValidada = item[column.dataField].toString();
				}
				return cadenaValidada;
			} 
			
			public function limpiarGrid():void
			{
				gridDocumentosRecibidos.dataProvider = new ArrayCollection();
			}
			
			public function set recibirDocumentos(resultados:ArrayCollection):void
			{	
				if(resultados == null)
				{
					return;
				}
				this._documentosRecibidos = new ArrayCollection();
				this._documentosRecibidos = ObjectUtil.copy(resultados) as ArrayCollection;
				this.gridDocumentosRecibidos.dataProvider = this._documentosRecibidos;
				
				
				if (resultados.length > 0 ){
					headGrid.btnExportar.enabled = true;
				}
				else{
					headGrid.btnExportar.enabled = false;
				}
			}
			
			public function set mostrarOcultarTabGrafica(tabGrafica:Boolean):void
			{
				this.imgTab.visible = tabGrafica;
				
				if(vistaSelected == _GRAFICAS)
				{
					compararVistas();
				}
			}
			
			private function buttonRegresar_clickEventListener(event:Event):void
			{
				stack.selectedIndex=0;
			}
			
			public function agregarEspacioTrabajo(espacio:IVisualElement):void
			{
				if(espacio == null)
				{
					return;
				}
				
				this._graficos.addItem(espacio);
				if(_graficos.length == 1)
				{
					this.espacioGraficas.removeAllElements();
					this.espacioGraficas.addElement(espacio);
				}
			}
			
			protected function headerparagridconsultas1_clickExportarHandler(event:MouseEvent):void
			{
				var file:File = new File();
				var hoja:ArrayCollection = new ArrayCollection;
				var fila:Array = new Array;
				fila[0] = hoja.addItem("#");
				fila[1] = hoja.addItem("Folio");
				fila[2] = hoja.addItem("FO");
				fila[3] = hoja.addItem("Tipo");
				fila[4] = hoja.addItem("Empresa");
				fila[5] = hoja.addItem("Destinatario");
				fila[6] = hoja.addItem("Referencia");
				fila[7] = hoja.addItem("Ingres√≥");
				fila[8] = hoja.addItem("Inicio");
				fila[9] = hoja.addItem("Fin");
				fila[10] = hoja.addItem("Estado");
				
				for(var i:int = 0; i < gridDocumentosRecibidos.dataProvider.length; i++){
					fila = new Array();
					fila[0] = (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).numFila;
					fila[1] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).folio + '"';
					fila[2] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).FOrigen + '"';
					fila[3] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).tipo + '"';
					fila[4] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).nombreEmpresa + '"';
					fila[5] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).RPor + '"';
					fila[6] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).numero + '"';
					fila[7] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).ingreso + '"';
					fila[8] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).fechaFormato + '"';
					fila[9] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).fechaProcesoFormato + '"';
					fila[10] = '"' + (gridDocumentosRecibidos.dataProvider[i] as DocumentoRecibido).cerradoAbierto + '"';
					hoja.addItem('\r' + fila);
				}
				file.save(hoja,"ConsultaDocumentosRecibidos-" + UtilsFecha.formatoPAraGuardarFechaDDMMMYYYYHHMM(new Date()) + ".csv");
				
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);				
				gridDocumentosRecibidos.invalidateDisplayList();
			}
			
		]]>
	</fx:Script>
	<comun:espacioA>
		<s:VGroup width="100%" height="100%" id="gridConsultaDoctosR" paddingTop="20" paddingLeft="20" paddingRight="20" gap="10">
			<consultas:HeaderParaGridConsultas id="headGrid" mostrarBtnExportar="true" clickExportar="headerparagridconsultas1_clickExportarHandler(event)"/>
			<otros:divisionGruesa width="100%"/>
			<AdvancedDataGrid:PQNetAdvanceDataGridFooter width="100%" height="100%" id="gridDocumentosRecibidos" anchoColumnas="{['45','70','70','80','30%','=','=','=','=','=','=','=']}" tipoDeConsulta="Documentos recibidos"
														 disableDragableColumns="{[0]}" disableResizableColumns="{[0]}">
				<AdvancedDataGrid:columns>
					<mx:AdvancedDataGridColumn headerText="#" dataField="numFila"/>
					<mx:AdvancedDataGridColumn headerText="Folio" dataField="folio">
						<mx:itemRenderer >
							<fx:Component>
								<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false"  >
									<fx:Script>
										<![CDATA[
											import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.popUpCorreo; 
											import mx.managers.PopUpManager;
											import flash.net.navigateToURL;
											
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
											
											private var popCorreo:popUpCorreo;
											
											protected function verDoctoR_EventHandler(event:Event):void
											{
												var ruta:String; 
												var urlreq:URLRequest;
												
												ruta = RutasPdF.GENERAL_RUTA + RutasPdF.DOCTOSR_RUTA + event.currentTarget.label +".pdf";
												urlreq = new URLRequest( ruta );
												navigateToURL(urlreq);
											}
											
											
										
											private function abrirPopUpComentarios(event:Event):void
											{
												if( popCorreo == null ){
													popCorreo = popUpCorreo(PopUpManager.createPopUp( this, popUpCorreo, true ) );
													popCorreo.setCuerpoCorreo(data.asunto, data.contenido, data.html, data.sender, data.fecha, data.totalAdj, data.nombreEmpresa);
														
													PopUpManager.centerPopUp( popCorreo );
													
													popCorreo.addEventListener("cerrarPopUp",cerrarPopCorreo);
												}else{
													PopUpManager.addPopUp( popCorreo , this, true );
												}
											}
											
											private function cerrarPopCorreo(event:Event):void
											{
												PopUpManager.removePopUp( popCorreo );
												popCorreo = null;
											}
											
											private function mostrarInfo(event:Event){
												//if( data.asunto != null && data.asunto != "" && data.contenido != null && data.contenido  != ""   && data.html != null && data.html != "" && data.sender != null && data.sender != "")
												if( data.asunto != null && data.asunto != "" && data.contenido != null && data.contenido  != "" )

													this.abrirPopUpComentarios(event);
												else
													this.verDoctoR_EventHandler(event);
												
											}
											
											
										]]>
									</fx:Script>
									<s:states>
										<s:State name="normal"/>
										<s:State name="hovered"/>
										<s:State name="selected"/>
									</s:states>
									<linkButton:LinkButtonPQNetParaGrid label="{data.folio}" click="mostrarInfo(event)" toolTip="Ver docto"/>
								</s:MXAdvancedDataGridItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="FO" dataField="FOrigen" labelFunction="validarFOrigenReferencia" />
					<mx:AdvancedDataGridColumn headerText="Tipo" dataField="tipo"/>
					<mx:AdvancedDataGridColumn headerText="Empresa" dataField="nombreEmpresa"/>
					<mx:AdvancedDataGridColumn headerText="Destinatario" dataField="RPor"/>
					<mx:AdvancedDataGridColumn headerText="Referencia" dataField="numero"/>
					<mx:AdvancedDataGridColumn headerText="Ingres√≥" dataField="ingreso"/>
					<mx:AdvancedDataGridColumn headerText="Inicio" dataField="fechaFormato" />
					<mx:AdvancedDataGridColumn headerText="Fin" dataField="fechaProcesoFormato"/>
					<mx:AdvancedDataGridColumn headerText="C. Pago" dataField="cPago"/>
					<mx:AdvancedDataGridColumn headerText="Estado" dataField="cerradoAbierto" id="DocumentoCierre">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXAdvancedDataGridItemRenderer  autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import flash.net.navigateToURL;
											
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
											import mx.utils.StringUtil;
											
											import skins.skin.AdvancedDataGrid.PQNetWhitCSS;
											private var currentLink:Object;
											
											override public function set data(data:Object):void{
												super.data = data;
												
												lnkCerradoAbierto.visible = lnkCerradoAbierto.includeInLayout = false;
												lblCerradoAbierto.visible = lblCerradoAbierto.includeInLayout = false;
												
												if(data.docto == "Requisici√≥n" || (data.docto == "Pedido" && data.cerradoAbierto != 'Abierto'))
												{
													if(data.documentoCierre == 'Ninguna' || data.documentoCierre == 'Ninguno')
													{
														
														lblCerradoAbierto.setStyle("fontFamily",(automationOwner as PQNetWhitCSS).fontFamily);
														lblCerradoAbierto.setStyle("fontSize", (automationOwner as PQNetWhitCSS).fontSize);
														lblCerradoAbierto.setStyle("fontStyle",(automationOwner as PQNetWhitCSS).styleFont);
														
														lblCerradoAbierto.visible = lblCerradoAbierto.includeInLayout = true;
													}
													else
													{
														lnkCerradoAbierto.visible = lnkCerradoAbierto.includeInLayout = true;
														lnkCerradoAbierto.label = data.cerradoAbierto;
														lnkCerradoAbierto.addEventListener(MouseEvent.CLICK,verDocumentoRecibido);
														lnkCerradoAbierto.id = data.documentoCierre;
														currentLink = new Object();
														if(data.docto == "Requisici√≥n"){
															currentLink['Requisicion'] = data.documentoCierre;
														}
														else
														{
															currentLink['Pedido'] = data.documentoCierre;
														}
													}
												}
												else
												{
													lblCerradoAbierto.setStyle("fontFamily",(automationOwner as PQNetWhitCSS).fontFamily);
													lblCerradoAbierto.setStyle("fontSize", (automationOwner as PQNetWhitCSS).fontSize);
													lblCerradoAbierto.setStyle("fontStyle",(automationOwner as PQNetWhitCSS).styleFont);
													
													lblCerradoAbierto.visible = lblCerradoAbierto.includeInLayout = true;
												} 
											}
											
											private function verDocumentoRecibido(e:MouseEvent):void
											{
												var ruta:String;
												var urlreq:URLRequest;
												
												if(currentLink.hasOwnProperty('Requisicion'))
												{
													¬†¬†ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COTIZACIONES_RUTA + currentLink.Requisicion + ".pdf";
													¬†¬†urlreq = new URLRequest( ruta );
													navigateToURL( urlreq );
												}
												else
												{
													ruta = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + currentLink.Pedido +".pdf";
													¬† urlreq = new URLRequest ( ruta );
													navigateToURL( urlreq );
												}
											} 
											
										]]>
									</fx:Script>
									<s:states>
										<s:State name="normal"/>
										<s:State name="hovered"/>
										<s:State name="selected"/>
									</s:states>
									<linkButton:LinkButtonPQNetParaGrid id="lnkCerradoAbierto" toolTip="Ver docto" visible="false" includeInLayout="false"/>
									<s:Label id="lblCerradoAbierto" text="{data.cerradoAbierto}" visible="false" includeInLayout="false" horizontalCenter="0"/>
								</s:MXAdvancedDataGridItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn>
				</AdvancedDataGrid:columns>
			</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
		</s:VGroup>
	</comun:espacioA>
	<comun:espacioB>
		<pq:MobViewStack id="stack" width="100%" height="100%">
			<s:VGroup id="grpGraficas" height="100%" gap="0" showEffect="{fadeMostrar}" hideEffect="{fadeOcultar}">
				<s:HGroup width="100%" height="100%" gap="0">			
					<s:HGroup width="100%" height="100%" id="espacioGraficas"/>
				</s:HGroup>
			</s:VGroup>
			<s:VGroup id="grpSelectedGrafica" height="100%" width="100%" showEffect="{fadeMostrar}" hideEffect="{fadeOcultar}" gap="0" paddingTop="28" paddingLeft="10" paddingRight="20">
				<label:Titulo fontWeight="bold" id="conceptoPie" maxWidth="{this.width}" paddingTop="0" paddingBottom="6"/>
				<otros:divisionGruesa width="100%"/>
				<s:HGroup width="100%" height="100%" id="espacioSelectedGrafica"/>
			</s:VGroup>
		</pq:MobViewStack>
	</comun:espacioB>						
</comun:ContenedorComparacionConsultas>