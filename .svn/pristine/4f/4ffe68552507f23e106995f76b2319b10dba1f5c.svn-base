<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:botonAgregar="skin.botonAgregar.*" 
		xmlns:botonAtras="skin.botonAtras.*"
		creationComplete="view1_creationCompleteHandler(event)"
		
		backgroundColor="#252b2c"
		title="" xmlns:contactoReceptor="vistas.contactoReceptor.*" 
		
		>
	
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroEnCierre;
			
			import modelo.singletons.enRealizacion.DatosGlobalesEnRealizacion;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.mensajero.PersonalAlmacenCliente;
			import mx.events.FlexEvent;
			
			
			private var globales:DatosGlobalesEnRealizacion = DatosGlobalesEnRealizacion.getInstance();
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				lstEditarContactos.addEventListener("elimiarContactoReceptor",eliminarContactoEnVista,false,0,true);
				lstEditarContactos.addEventListener("agregarUnNuevoContacto",irALaVistaParaAgregarUnContacto,false,0,true);
				
				lstEditarContactos.dataProvider = new ArrayCollection(globales.contactosParaEdicionVista);
				lstEditarContactos.height = lstEditarContactos.dataProvider.length * 158;
			}
			
			private var contactoEliminado:PersonalAlmacenCliente;
			private function eliminarContactoEnVista($event:Event):void
			{
				$event.stopImmediatePropagation();
				$event.stopPropagation();
				
				contactoEliminado = PersonalAlmacenCliente(lstEditarContactos.selectedItem);
				if(!contactoEliminado.isNuevo)
					marcarComoEliminadoAlContacto(contactoEliminado.nombre.toLowerCase());
				
				var temp:Array =  globales.contactosParaEdicionVista.filter(eliminarDeLaVistaAlContacto);
				globales.contactosParaEdicionVista = temp;
				
				lstEditarContactos.dataProvider = new ArrayCollection(globales.contactosParaEdicionVista);
				lstEditarContactos.height=lstEditarContactos.dataProvider.length * 158;
			}
			
			private function irALaVistaParaAgregarUnContacto($event:Event):void
			{
				$event.stopImmediatePropagation();
				$event.stopPropagation();
				
				this.navigator.pushView(agregarNuevoContactoReceptor);				
			}
			
			
			private function marcarComoEliminadoAlContacto($nombreCliente:String):void
			{
				for (var i:int = 0; i < globales.contactosParaEdicionServicio.length; i++) 
				{
					var item:PersonalAlmacenCliente = globales.contactosParaEdicionServicio[i] as PersonalAlmacenCliente;
					if(item.nombre.toLowerCase() == $nombreCliente)
					{
						item.borrar = true;
						break;
					}
				}
			}
			
			private function eliminarDeLaVistaAlContacto($item:PersonalAlmacenCliente,$id:int,$array:Array):Boolean
			{
				if($item.isContacto)
				{
					if($item.nombre.toLowerCase() == contactoEliminado.nombre.toLowerCase())
						return false;
					else
						return true;
				}
				else
				{
					return true;
				}
			}
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				lstEditarContactos.removeEventListener("elimiarContactoReceptor",eliminarContactoEnVista);
				lstEditarContactos.removeEventListener("agregarUnNuevoContacto",irALaVistaParaAgregarUnContacto);
				
				globales.restablecerContactosOriginales();
				
				this.navigator.popView();
			}
			
			protected function botonagregarmovil1_clickHandler(event:MouseEvent):void
			{
				for (var i:int = 0; i < globales.contactosParaEdicionVista.length; i++) 
				{
					var item:PersonalAlmacenCliente = 	globales.contactosParaEdicionVista[i]  as PersonalAlmacenCliente;
					if(item.isNuevo)
					{
						if(!globales.contactosParaEdicionServicio)
						{
							globales.contactosParaEdicionServicio = new ArrayCollection;
						}
						globales.contactosParaEdicionServicio.addItem(item);
					}
				}
				
/* 				globales.accionVistaObject = new Object;
				globales.accionVistaObject["vista"] = "listaEdicionDeContactosView";
				globales.accionVistaObject["accion"] = "quitar"; */
				
				var actualizarPersonalCliente:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.ACTUALIZAR_CONTACTOS_PERSONAL_ALMACEN);
				actualizarPersonalCliente.contactos = globales.contactosParaEdicionServicio;
				dispatchEvent(actualizarPersonalCliente);
			}
			
/* 			public function set quitarEstaVista($vista:String):void
			{
				if(!$vista)
					return;
				
				if($vista == "listaEdicionDeContactosView" && $vista == this.navigator.activeView.className)
				{
					this.navigator.popView();
				}
			} */
			
/* 			public function set recibeRespuestaDeActualizarContactos($respuesta:Boolean):void
			{
				if($respuesta)
				{
					var solicitarContactosDesdeVistaEdicion:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.SOLICITAR_CONTACTOS_DESDE_VISTA_EDICION);
					solicitarContactosDesdeVistaEdicion.idEmpresa = globales.currentIdEmpresa;
					dispatchEvent(solicitarContactosDesdeVistaEdicion);
				}
			} */
			
			/* public function set recibeLosContactosActualizados($listaContactos:ArrayCollection):void
			{
				if($listaContactos && $listaContactos.length > 0)
				{
					globales.contactosOriginales = $listaContactos;
				}
				this.navigator.popView();
			} */
			
			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<botonAtras:botonAtras click="vistaAnterior(event)"/>
	</s:navigationContent>
	
	<s:actionContent>
		<botonAgregar:botonAgregarMovil label="    OK  " click="botonagregarmovil1_clickHandler(event)"/>
	</s:actionContent>
	
	
	<s:Scroller width="640" height="{this.height}">
		
		<s:VGroup id="contenedor" width="100%" gap="15" verticalCenter="0" horizontalCenter="0" horizontalAlign="center" height="100%" paddingBottom="20">
			
			<contactoReceptor:listaQueLlevaElControlDeLaEdicionContacto verticalScrollPolicy="off" contentBackgroundColor="#252b2c" id="lstEditarContactos" width="100%" 
																		itemRenderer="vistas.renders.contactoReceptor.itemEditarContactoReceptor"/>
			
		</s:VGroup>
	</s:Scroller>
	
</s:View>
