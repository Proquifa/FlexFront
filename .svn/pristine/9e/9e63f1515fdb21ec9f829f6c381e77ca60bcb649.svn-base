<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/"
			   xmlns:debug="com.asfusion.mate.utils.debug.*">
	
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.evento.EventoEventoProquifa;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.evento.ModeloEventoProquifa;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.popup.ModeloPopUp;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.PlantillaEventoProquifa;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.CuestionarioExpoEventos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.VendedorBusquedaClienteEvento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.VendedorCRMClienteEvento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.VendedorRequisitarEvento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.cuestionarios.CuestionarioExpoFarma2013;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.graficas.ExpoEventoGraficoChartRegistro;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.graficas.ExpoEventoGraficoPieClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.graficas.ExpoEventoGraficoPieContactos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.popup.VendedorContactoPopUpEvento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.evento.expoEventos.popup.VendedorRutasContactosPopUpEvento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.sorteoEvento.SorteoAnimadoEventoProquifa;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.sorteoEvento.SorteoEventoProquifa;
			
			import skins.plantillaproquifa.barratituloevento.tituloEvento;
			
		]]>
	</mx:Script>
	<!--Consulta Participantes-->
	<mate:EventHandlers type="{EventoEventoProquifa.OBTENER_PARTICIPANTES_REGISTRO_EVENTO}">
		<mate:RemoteObjectInvoker destination="{Destinos.EVENTO_PROQUIFA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerParticipantesXEvento"
								  arguments="{event.origen}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setObtenerParticipantes"
									arguments="{[resultObject]}" />
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="listaParticipantes"
							   targetKey="obtenerListaParticipantes"/>
	</mate:Injectors>
	
	<!--Escuchar POP UP Registrar-->
	<mate:EventHandlers type="{ EventoEventoProquifa.PULSO_REGISTRAR_POPUP_EVENTO}">
		<mate:MethodInvoker arguments="{event}"
							generator="{ModeloEventoProquifa}"
							method="setPulsoRegistrar"/>
	</mate:EventHandlers>
	
	<mate:Injectors targets="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="enviarRespuesta"
							   targetKey="recibirRespuesta"/>
	</mate:Injectors>
	
	
	<!--Escuchar POP UP Eliminar-->
	<mate:EventHandlers type="{ EventoEventoProquifa.PULSO_ELIMINAR_POPUP_EVENTO}">
		<mate:MethodInvoker arguments="{event}"
							generator="{ModeloEventoProquifa}"
							method="setPulsoEliminar"/>
	</mate:EventHandlers>
	
	<mate:Injectors targets="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="enviarRespuestaEliminar"
							   targetKey="recibirRespuestaEliminar"/>
	</mate:Injectors>
	
	<!--Guardar a Registro, o Eliminar de Registro-->
	<mate:EventHandlers type="{EventoEventoProquifa.GUARDAR_A_REGISTRADO_EVENTO}">
		<mate:RemoteObjectInvoker destination="{Destinos.EVENTO_PROQUIFA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="guardarARegistrado"
								  arguments="{[event.idRegistro,event.registrar]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardo"
									arguments="{[resultObject]}" />
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="guardoRegistroEvento"
							   targetKey="seGuardoRegistro"/>
	</mate:Injectors>
	
	<!--Eliminar de PreRegistro-->
	
	<mate:EventHandlers type="{EventoEventoProquifa.ELIMINAR_A_PREREGISTRADO_EVENTO}">
		<mate:RemoteObjectInvoker destination="{Destinos.EVENTO_PROQUIFA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="eliminarPreRegistrado"
								  arguments="{[event.idRegistro]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setElimino"
									arguments="{[resultObject]}" />
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="eliminoRegistroEvento"
							   targetKey="seEliminoRegistro"/>
	</mate:Injectors>
	
	<mate:EventHandlers type="{EventoEventoProquifa.GUARDA_CAMBIOS_DATAGRID_EVENTO}">
		<mate:RemoteObjectInvoker destination="{Destinos.EVENTO_PROQUIFA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="guardarRegistro"
								  arguments="{[event.participante]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardoGrid"
									arguments="{[resultObject]}" />
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="guardoGridRegistroEvento"
							   targetKey="seGuardoGridRegistro"/>
	</mate:Injectors>
	
	
	<mate:EventHandlers type="{EventoEventoProquifa.OBTENER_GANADOR_EVENTO_PROQUIFA}">
		<mate:RemoteObjectInvoker destination="{Destinos.EVENTO_PROQUIFA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerParticipantesRandom"
								  arguments="{[event.origen]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setSorteoGanador"
									arguments="{[resultObject]}" />
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{SorteoEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="sorteoGanador"
							   targetKey="ganadorEventoProquifa"/>
	</mate:Injectors>
	
	
	<mate:EventHandlers type="{EventoEventoProquifa.OBTENER_LISTA_EVENTOS_PROQUIFA}">
		<mate:RemoteObjectInvoker destination="{Destinos.EVENTO_PROQUIFA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerEventosProximosYPasados"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setObtenrListaEventos"
									arguments="{[resultObject]}" />
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{PlantillaEventoProquifa}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}" 
							   sourceKey="obtenrListaEventos"
							   targetKey="recibirListaEventos"/>
	</mate:Injectors>
	
	
	<!--EventoExpo-->
	
	<!-- //////////// Evento para cargar las direcciones del Cliente seleccionado //////////////-->
	<mate:EventHandlers type="{ EventoEventoProquifa.CARGAR_DIRECCIONES_CLIENTE }">
		<mate:RemoteObjectInvoker destination="{ Destinos.DIRECCIONES_CLIENTE_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="findDireccionesCliente"
								  arguments="{[event.idCliente]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setDireccionesCliente"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorRutasContactosPopUpEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="DireccionesCliente"
							   targetKey="recibeDirecciones"/>
	</mate:Injectors>
	
	<!-- //////// Evento para guardar Contacto nuevo desde desde BusquedaCliente(popUp) y desde CRM despues de agregar Cliente -->
	<mate:EventHandlers type="{ EventoEventoProquifa.GUARDA_CONTACTO_NUEVO}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="insertarNuevoContacto"
								  arguments="{[event.nuevoContacto,event.tipo]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setConfirmaContactoNuevo"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorCRMClienteEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ConfirmaContactoNuevoCRM"
							   targetKey="confirmaClienteYContactoNuevo"/>
	</mate:Injectors>
	<mate:Injectors			   target="{ VendedorContactoPopUpEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ConfirmaContactoNuevo"
							   targetKey="recibeContacto"/>
	</mate:Injectors>
	
	<!-- //// Evento para editar Contacto -->
	<mate:EventHandlers type="{ EventoEventoProquifa.EDITAR_CONTACTO_EXPO_MED }">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="editarContactoExpo"
								  arguments="{[event.nuevoContacto,event.tipo]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setConfirmaContactoNuevoExpoMed"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors			   target="{ VendedorCRMClienteEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ConfirmaContactoNuevoCRMExpoMed"
							   targetKey="confirmaClienteYContactoNuevo"/>
	</mate:Injectors>
	<mate:Injectors			   target="{ VendedorContactoPopUpEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ConfirmaContactoNuevoExpoMed"
							   targetKey="recibeContacto"/>
	</mate:Injectors>
	
	<!-- /////// Evento para editar Contacto -->
	<mate:EventHandlers type="{ EventoEventoProquifa.EDITA_CONTACTO }">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="editarContacto"
								  arguments="{[event.nuevoContacto,event.tipo]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setConfirmaContactoNuevo"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<!-- ///////////	Obtener todos los contactos ////////// -->
	<mate:EventHandlers type="{ EventoEventoProquifa.CARGAR_TODOS_LOS_CONTACTOS_HABILITADOS}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="obtenerContactosExpoMed"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setObtenerContactosParaExpoMed"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors	targets="{ [VendedorBusquedaClienteEvento,VendedorCRMClienteEvento,VendedorContactoPopUpEvento]}"> <!--,VendedorCRMCliente,VendedorContactosPopUp-->
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="regresarTodosLosContactos"
							   targetKey="recibirContactosParaExpoMed"/>
	</mate:Injectors>
	
	
	<!-- /////// Evento para obtener las empresas por contactos  ////////-->
	<mate:EventHandlers type="{ EventoEventoProquifa.CARAGAR_CONTACTOS}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  arguments="{[event.idEmpleado]}"
								  method="findContactosPorIdEmpleado"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<!--method="obtenerContactos"-->
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setObtenContactos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   targets="{ [VendedorBusquedaClienteEvento,VendedorCRMClienteEvento,VendedorContactoPopUpEvento]}">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ObtenContactos"
							   targetKey="recibirContactos"/>
	</mate:Injectors>
	
	<!-- //// LIMPIA ID CLIENTE -->
	<mate:EventHandlers type="{ EventoEventoProquifa.LIMPIA_ID_CONTACTO}">
		<mate:MethodInvoker generator="{ModeloEventoProquifa}" method="limpiaIDContacto"/>
	</mate:EventHandlers>
	
	<!-- ////////// LIMPIA ID CLIENTE -->
	<mate:EventHandlers type="{ EventoEventoProquifa.LIMPIA_ID_CLIENTE}">
		<mate:MethodInvoker generator="{ModeloEventoProquifa}" method="limpiaID"/>
	</mate:EventHandlers>
	
	<!--GRAFICAS-->
	<mate:EventHandlers type="{ EventoEventoProquifa.OBTENER_INFO_GRAFICOS_EXPO_MED }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="graficaExpoFarma2014"
								  arguments="{[event.origen]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setInfoGraficoExpoMed"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="errorExpoFarma"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   targets="{[ExpoEventoGraficoChartRegistro,ExpoEventoGraficoPieContactos,ExpoEventoGraficoPieClientes]}"> <!--,ExpoFarmaGraficoPieContactos,ExpoFarmaGraficoPieClientes-->
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="infoGraficoExpoMed"
							   targetKey="recibeInfoGraficos"/>
	</mate:Injectors>
	
	<!--=======================GUARDAR CUESTIONARIO EXPO MED ===========================-->
	<mate:EventHandlers type="{ EventoEventoProquifa.MANDAR_CUESTIONARIO_EXPO_MED }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_MED_SERVICE}"
								  endpoint="{ Destinos.END_POINT }"
								  method="registrarEncuestaMed"
								  arguments="{[event.idRegistro,event.respuesta1,event.respuesta2,event.otros2,event.respuesta3,event.respuesta4,event.otros4,event.respuesta5,event.otros5, event.tiempo]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardaCuestionarioExpoMed"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors	target="{ CuestionarioExpoEventos }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="GuardaCuestionarioExpoMed"
							   targetKey="confirmaCuestionarioExpo"/>
	</mate:Injectors>
	
	<!-- ////////// Evento para guardar cargar un ESAC aleatoriamente /////////////////////-->
	<mate:EventHandlers type="{ EventoEventoProquifa.CARGA_ESAC_ALEATORIAMENTE }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EMPLEADO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="obtenerEsacParaNuevoCliente"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setObtenEmpleado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorCRMClienteEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ObtenEmpleado"
							   targetKey="obtenEmpleadoAleatorio"/>
	</mate:Injectors>
	
	<!-- ///////// Evento para guardar Cliente_Empresa -->
	<mate:EventHandlers type="{ EventoEventoProquifa.GUARDA_CLIENTE_NUEVO}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CLIENTE_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="insertarCliente"
								  arguments="{[event.cliente]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardaCliente"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorCRMClienteEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="GuardaCliente"
							   targetKey="confirmaRegistroCliente"/>
	</mate:Injectors>
	
	<!-- /////// Evento para graficos de Expo Farma -->
<!--	<mate:EventHandlers type="{ EventoEventoProquifa.OBTENER_INFO_GRAFICOS_EXPOFARMA }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="graficaExpoFarma2014"
								  
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setInfoGraficoExpoFarma"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="errorExpoFarma"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   targets="{[ExpoFarmaColumnChartRegistro,ExpoFarmaGraficoPieContactos,ExpoFarmaGraficoPieClientes]}">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="infoGraficoExpoFarma"
							   targetKey="recibeInfoGraficos"/>
	</mate:Injectors>-->
	
	<!-- ////// Evento para generar un registro en la expo -->
	<mate:EventHandlers type="{ EventoEventoProquifa.REGISTRO_EXPO_FARMA }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="insertarRegistroExpoFarma"
								  arguments="{[event.registroExpo]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setRegistroExpo"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorBusquedaClienteEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="RegistroExpo"
							   targetKey="confirmaRegistoExpo"/>
	</mate:Injectors>
	
	<!--RegistroExpoMed-->
	<mate:EventHandlers type="{ EventoEventoProquifa.REGISTRO_EXPO_MED }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_MED_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="insertarRegistroExpoMed"
								  arguments="{[event.registroExpoMed]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setRegistroExpo"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorBusquedaClienteEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="RegistroExpo"
							   targetKey="confirmaRegistoExpo"/>
	</mate:Injectors>
	
	<!-- ////// Evento para generar una requisicion -->
	<mate:EventHandlers type="{ EventoEventoProquifa.GENERA_REQUISICION }">
		<mate:RemoteObjectInvoker destination="{ Destinos.REQUISICION_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="insertarRequisicionMovil"
								  arguments="{[event.requisicion,event.listaPRequisicion,event.nuevoContacto]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setConfirmaRequisicion"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ VendedorRequisitarEvento }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="ConfirmaRequisicion"
							   targetKey="confirmaRequisicion"/>
	</mate:Injectors>
	
	
	<!-- //// Evento para obtener la respuesta del popUp  -->
	
	<mate:EventHandlers type="{EventoAlertaPqNet.RESPUESTA_ALERTA}">
		<mate:MethodInvoker generator="{ModeloPopUp}"
							method="setRegresaBotonSeleccion"
							arguments="{event.respuesta}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[VendedorCRMClienteEvento,VendedorRequisitarEvento]}">
		<mate:PropertyInjector source="{ModeloPopUp}"
							   sourceKey="regresaSeleccion"
							   targetKey="recibeDelAlert"/>	
	</mate:Injectors>
	
	<!-- /////// Evento para guardar cuestionario en la expo Farma -->
	<mate:EventHandlers type="{ EventoEventoProquifa.GUARDA_EXPORFARMA }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="registrarEncuestaFarma"
								  arguments="{[event.idRegistroExpoFarma,event.tipo,event.respuesta1,event.otros1,event.otros2,event.publicaciones,event.otrosPublicaciones,event.iso,event.respuesta0, event.time]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardaCuestionario"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<!-- /////////// Evento para guardar cuestionario en la expo Clinicos -->
	<mate:EventHandlers type="{ EventoEventoProquifa.GUARDA_EXPORFARMA_CLINICA }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="registrarEncuestaClinicos"
								  arguments="{[event.idRegistroExpoFarma,event.tipo,event.respuesta1,event.respuesta2,event.respuesta3,event.respuesta4,event.respuesta5,event.respuesta6,event.respuesta7, event.respuesta0,event.time]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardaCuestionario"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<!-- //////// Evento para guardar cuestionario en la expo Alimentos -->
	<mate:EventHandlers type="{ EventoEventoProquifa.GUARDA_EXPORFARMA_ALIMENTOS }">
		<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="registrarEncuestaAlimentos"
								  arguments="{[event.idRegistroExpoFarma,event.tipo,event.respuesta1,event.iso,event.respuesta2,event.respuesta3,event.respuesta4,event.respuesta5,event.respuesta6,event.publicaciones,event.respuesta0,event.time]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="setGuardaCuestionario"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloEventoProquifa}"
									method="error"
									arguments="{fault}"/>	
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<!-- /////Injector para confirmar el guardado de todos los Cuestionarios -->
	<mate:Injectors			   target="{ CuestionarioExpoFarma2013 }">
		<mate:PropertyInjector source="{ ModeloEventoProquifa }" 
							   sourceKey="GuardaCuestionario"
							   targetKey="confirmaCuestionarioExpo"/>
	</mate:Injectors>
	
	
	
	<mate:EventHandlers type="{EventoEventoProquifa.LIMPIAR_TEXTO_BUSQUEDA_EXPO_EVENTO}">
		<mate:MethodInvoker generator="{ModeloEventoProquifa}"
							method="setLimpiarTexto"
							/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[PlantillaEventoProquifa]}">
		<mate:PropertyInjector source="{ModeloEventoProquifa}"
							   sourceKey="LimpiarTexto"
							   targetKey="limpiarTexto"/>	
	</mate:Injectors>
	
</mate:EventMap>
