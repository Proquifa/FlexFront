<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"  
		  xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
		  xmlns:ladoB ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.*" 
		  xmlns:analisis ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.compras.analisisCompras.*" 
		  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		  xmlns:pqNet="skins.botones.pqNet.*" 
		  xmlns:pqNet1="skins.skin.datagrid.pqNet.*" 
		  xmlns:grafica="skins.botones.grafica.*"
		  xmlns:graficas="skins.skin.graficas.*"
		  xmlns:label="skins.skin.label.*"
		  xmlns:otros="skins.otros.*"
		  width="100%" height="100%" 
		  >
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.PeriodoToolTip;
			
			import skins.catalogos.catalogoColores;
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600"/>
		<mx:SolidColorStroke id = "sA" color="0x3b98af" weight="2"/>
		<mx:SolidColorStroke id = "s1" color="0x3b98af" weight="6"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
		
		<s:LinearGradient id="sc1" rotation="90">
			<s:GradientEntry alpha="1.0" color="#b4c871" ratio="0"/>
			<s:GradientEntry alpha="1.0" color="#8da741" ratio="1"/> 
		</s:LinearGradient>
		<s:LinearGradient id="sc2" rotation="90">
			<s:GradientEntry alpha="1.0" color="#990429" ratio="0"/>
			<s:GradientEntry alpha="1.0" color="#910824" ratio="1"/> 
		</s:LinearGradient>
		
		
		<mx:SolidColorStroke id = "s2" color="0xdd9c12" weight="2"/>
		<mx:SolidColor id="sc3" color="0x{catalogoColores.LABEL_NARANJA}" alpha="1"/>
		<s:SolidColorStroke id="stroke2" color="0x{catalogoColores.LABEL_NARANJA}" weight="5"/>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import spark.collections.Sort;
			import spark.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.events.ListEvent;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.collections.ArrayCollection;
			import mx.charts.chartClasses.Series;
			import mx.charts.ChartItem;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTabProveedores;
			import flash.filesystem.File;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			
			private var _ocComprasGrafica:ArrayCollection;
			[Bindable]
			private var _ocComprasTab:ArrayCollection;
			private var totalLegend:Number = 0;
			
			private var _montoObjetivo:Number = 0;
			private var _diferencial:Number = 0;
			private var _porcentaje:String = '';
			private var _signo:String = '';
			private var _hoy:Date = new Date();
			
			private var _listaMontoObjetivo:ArrayCollection = new ArrayCollection();
			private var yallegaronlosMontosObjetivos:Boolean = false;
			private var yallegaronLasCompras:Boolean = false;
			
			private function maxConfirmacionCanceladas():void
			{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			/* private function gridItemClickEvent(event:ListEvent):void
			{	 	        	
			var tipoDocumento:String;
			var folioDocumento:String;
			var urlreq:URLRequest;
			var ruta:String;
			
			if (event.columnIndex == 1 )
			{
			ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COMPRAS_RUTA + this.gridCompras.selectedItem.ordenDeCompra +"-P.pdf";
			urlreq = new URLRequest ( ruta );	
			navigateToURL( urlreq );
			}	     
			}  */  
			
			/* 
			public function set vista(tipoVista:String):void
			{
			if (tipoVista == "tabla")
			{
			_currentVistaSelected = "vistaTabla";
			this.stackGeneral.selectedChild = vistaTabla;
			grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
			}
			else
			{
			_currentVistaSelected = "vistaGrafico";
			this.stackGeneral.selectedChild = vistaGrafico;
			grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = true;
			}
			} */
			
			public function set resumenComparativaCompra(comparativa:ArrayCollection):void
			{
				if(comparativa == null) return;
				
				this._ocComprasGrafica = new ArrayCollection();
				this._ocComprasGrafica = comparativa;
				/* this.myChart.dataProvider = iniciarGrafica(_ocComprasGrafica); */
				yallegaronLasCompras = true;
			}
			
			
			private function llamarAIniciarGrafica():void
			{
				if(yallegaronlosMontosObjetivos && yallegaronLasCompras)
				{
					yallegaronlosMontosObjetivos = false;
					yallegaronLasCompras = false;
					myChart.dataProvider = iniciarGrafica( _ocComprasGrafica );
				}
				else
				{
					setTimeout(llamarAIniciarGrafica,300);
				}
			}
			
			public function set recibeMontosObjetivoCompras($montos:ArrayCollection):void
			{
				if($montos == null) 
					return;
				_listaMontoObjetivo = new ArrayCollection();
				_listaMontoObjetivo = $montos;
				yallegaronlosMontosObjetivos = true;
				
				/**********************************Ordenar de menor a mayor arrayCollection***************************/
				var ordenar:SortField = new SortField();
				ordenar.name = "mes";
				ordenar.numeric = true;
				var tipo:Sort = new Sort();
				tipo.fields = [ordenar];
				_listaMontoObjetivo.sort = tipo;
				_listaMontoObjetivo.refresh();
				/**************************************************/
			} 
			
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				totalLegend = 0;
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				arrReturn.addItem(new Object());
				var objeto:Object ;
				var cuenta:int = 1;
				var contador:int = 0;
				var contadorPromedio:int = 0;
				var _anio:Number = ($lista[0] as ResumenConsulta).periodo;
				
				_montoObjetivo = 0;
				_diferencial = 0;
				_porcentaje = '';
				_signo = '';
				
				
				while( cuenta < 13)
				{
					if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
					{
						objeto = new Object();
						objeto.numeroMes = cuenta;
						objeto.mes = _listaMensual[cuenta -1];
						objeto.montoUSD_0 = 0;
						objeto.montoUSD_1 = 0;
						objeto.montoUSD_2 = 0;
						objeto.totalPeriodo = 0;
						objeto.montoObjetivo = 0; 
						
						for( m = 0; m < $lista.length;m++ ){
							var resumen:ResumenConsulta = $lista[m] as ResumenConsulta;
							if(cuenta == resumen.mes){
								if( resumen.etiqueta == "OC_COMPRAS_0" && resumen.conceptoResultado == 'Confirmada')
								{
									totalLegend += resumen.total;
									objeto.montoUSD_0 += resumen.total;
									contadorPromedio++;
								}
								else if( resumen.etiqueta == "OC_COMPRAS_1" && resumen.conceptoResultado == 'Confirmada')
								{
									objeto.montoUSD_1 += resumen.total;
								}
								else if( resumen.etiqueta == "OC_COMPRAS_2" && resumen.conceptoResultado == 'Confirmada' )
								{
									objeto.montoUSD_2 += resumen.total;
								}
							}
						}
						
						if((_listaMontoObjetivo.length != 0) && (_listaMontoObjetivo.length != _maximoMeses - 1) )
						{
							objeto.montoObjetivo = _listaMontoObjetivo[contador].monto;
							_montoObjetivo += objeto.montoObjetivo;
							contador++;
						}	
						
						arrReturn.addItem(objeto);
					}
					cuenta++;
				}
				
				if(totalLegend > _montoObjetivo)
				{
					_signo = '+';
					_diferencial = totalLegend - _montoObjetivo;
					if(_montoObjetivo == 0)
					{
						_porcentaje = '100';
					}
					else
					{
						_porcentaje = UtilsFormatosNumericos.precisionADosDecimales(  ((totalLegend - _montoObjetivo) / (_montoObjetivo)) * (100)  );	
					}
					lblDiferencial.text = 'DIFERENCIA: ' ;
					etqDiferencial.setStyle('color','0x'+ catalogoColores.LABEL_VERDE_AZUL);
					etqDiferencial.text = _signo + ' $' + UtilsFormatosNumericos.precisionADosDecimalesConComas(_diferencial) + '\n ' + ' (' + _signo + _porcentaje + '%' +')';
				}
				else
				{
					_signo = '-';
					_diferencial = (totalLegend - _montoObjetivo) * (-1);
					if(_montoObjetivo == 0)
					{
						_porcentaje = '100';
					}
					else
					{
						_porcentaje = UtilsFormatosNumericos.precisionADosDecimales(  ((totalLegend - _montoObjetivo) / (_montoObjetivo)) * (-100)  );	
					}
					lblDiferencial.text = 'DIFERENCIA: ';
					etqDiferencial.setStyle('color','0x'+ catalogoColores.LABEL_ROJO);
					etqDiferencial.text = _signo + ' $' + UtilsFormatosNumericos.precisionADosDecimalesConComas(_diferencial) + '\n ' + ' (' + _signo + _porcentaje + '%' +')';
				}
				
				if(_hoy.fullYear == _anio)
				{
					contador = _hoy.month + 1;
				}
				
				lblMontoObjetivo.text ='OBJETIVO: ';
				etqMontoObjetivo.text = '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas(_montoObjetivo);
				lblMontoActual.text = 'DESEMPEÃ‘O: '; 
				etqMontoActual.text = '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas(totalLegend);
				lblPromedio.text = 'PROMEDIO: '; 
				etqPromedio.text = '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas(totalLegend/contadorPromedio);
				
				arrReturn.addItem( new Object() );
				lblPer1.text = _event.labelPeriodo1;
				
				return arrReturn;	
			}
			
			/* private function generaArchivo():void
			{ 
			var file2:File = new File();
			
			var dato0:Number = new Number;
			var dato1:String = new String;
			var dato2:String = new String;
			var dato3:String = new String;
			var dato4:String = new String;
			var dato5:String = new String;
			var dato6:String = new String;
			var dato7:String = new String;
			var dato8:String = new String;
			
			var hoja:ArrayCollection = new ArrayCollection();
			var fila1:Array = null;
			var longitud:int =  new int ;
			longitud = this._ocComprasTab.length;
			fila1 = new Array();
			fila1[0] = hoja.addItem("#");
			fila1[1] = hoja.addItem("Compra");
			fila1[2] = hoja.addItem("Piezas");
			fila1[3] = hoja.addItem("Empresa");
			fila1[4] = hoja.addItem("Monto");
			fila1[5] = hoja.addItem("Moneda");
			fila1[6] = hoja.addItem("Tipo de cambio");
			fila1[7] = hoja.addItem("Monto USD");
			fila1[8] = hoja.addItem("Estatus");
			
			for(var i:int = 0 ; i<longitud ; i++ )
			{
			fila1 = new Array();	
			
			dato0 = (this.gridCompras.dataProvider[i] ).numFila;
			dato1 = '"'+ (this.gridCompras.dataProvider[i] ).ordenDeCompra +'"';
			dato2 = '"'+ (this.gridCompras.dataProvider[i] ).cantidad +'"';
			dato3 = '"'+ (this.gridCompras.dataProvider[i] ).empresa +'"';
			dato4 = '"'+ (this.gridCompras.dataProvider[i] ).montoString +'"'; 
			dato5 = '"'+ (this.gridCompras.dataProvider[i] ).moneda +'"';
			dato6 = '"'+ (this.gridCompras.dataProvider[i] ).tipoCambioString +'"';
			dato7 = '"'+ (this.gridCompras.dataProvider[i] ).montoDolaresString +'"';
			dato8 = '"'+ (this.gridCompras.dataProvider[i] ).estado +'"'; 
			
			fila1[0] = dato0;
			fila1[1] = dato1;
			fila1[2] = dato2;
			fila1[3] = dato3;
			fila1[4] = dato4;
			fila1[5] = dato5;
			fila1[6] = dato6;
			fila1[7] = dato7;
			fila1[8] = dato8;
			
			hoja.addItem('\r' + fila1 );
			fila1 = null;
			}
			file2.save( hoja, "MaxOCconfirmadasCanceladas.csv");
			} */
			
			/* protected function tablaGrid_resizeHandler():void
			{
			(this.gridCompras.columns[0] as DataGridColumn).width = (this.gridCompras.width * 0.05);//#
			(this.gridCompras.columns[1] as DataGridColumn).width = (this.gridCompras.width * 0.15);//compra
			(this.gridCompras.columns[2] as DataGridColumn).width = (this.gridCompras.width * 0.8);//piezas
			(this.gridCompras.columns[3] as DataGridColumn).width = (this.gridCompras.width * 0.8);//empresa
			(this.gridCompras.columns[4] as DataGridColumn).width = (this.gridCompras.width * 0.15);//monto
			(this.gridCompras.columns[5] as DataGridColumn).width = (this.gridCompras.width * 0.8);//moneda
			(this.gridCompras.columns[6] as DataGridColumn).width = (this.gridCompras.width * 0.8);//Tipo cambio
			(this.gridCompras.columns[7] as DataGridColumn).width = (this.gridCompras.width * 0.8);//monto USD
			(this.gridCompras.columns[8] as DataGridColumn).width = (this.gridCompras.width * 0.8);//estatus
			} */
			
			public function seleccionaTabla():void
			{
				_currentVistaSelected = "vistaTabla";
				stackGeneral.paddingRight = 20;
				this.stackGeneral.selectedChild = vistaTabla;
				grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
			}
			
			public function seleccionarGrafica():void
			{
				_currentVistaSelected = "vistaGrafico";
				stackGeneral.paddingRight = 0;
				this.stackGeneral.selectedChild = vistaGrafico;
				
				if(_currentFiltroBusqueda == "PROVEEDOR")
				{
					grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
				}
				else
				{
					grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = true;
				}
			}
			
			private var _listaMensual:ArrayCollection = new ArrayCollection([
				"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
			]);
			
			/**
			 * Metodo que recibe del mapa  Compras Grid
			 */
			public function set obtenerOCCompras(compras:ArrayCollection):void
			{
				if (compras==null)
				{
					return ;
				}
				this._ocComprasTab = compras;
			}
			
			private var _event:EventoTabProveedores;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			private var _keyAnterior:String = "";
			
			public function set recibirFiltrosTableroProveedores(etiqueta:EventoTabProveedores):void
			{
				if(etiqueta == null) return;
				
				_event = etiqueta;
				_minimoMeses = _event.parametros.mesInicio;
				_maximoMeses = _event.parametros.mesFin;
				
				llamarAIniciarGrafica();
				//myChart.dataProvider = iniciarGrafica( _ocComprasGrafica );
			}
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			private function formatoCantidadCancelada(dato:ChartItem,serie:Series):String
			{
				return dato.item.cantidadesFT;
			}
			
			private function formatoCantidadConfirmada(dato:ChartItem,serie:Series):String
			{
				return dato.item.cantidadesT;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String
			{
				return _listaMensual[ int($etiqueta) -1 ].toUpperCase();
			}
			
			
			private var _currentVistaSelected:String;
			private function cambiarVistaTablaGrafica($vistaSelected:String):void
			{
				_currentVistaSelected = $vistaSelected;
				if($vistaSelected == 'vistaTabla')
				{
					stackGeneral.selectedChild = vistaTabla;
					stackGeneral.paddingRight = 20;
					grpVentasPeriodoLabels.visible = grpVentasPeriodoLabels.includeInLayout = false;
					grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
				}
				else
				{
					grpVentasPeriodoLabels.visible = grpVentasPeriodoLabels.includeInLayout = true;
					stackGeneral.selectedChild = vistaGrafico;
					
					if(_currentFiltroBusqueda == "PROVEEDOR")
					{
						grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
					}
					else
					{
						grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = true;
					}
					stackGeneral.paddingRight = 0;
				}
			}
			private var _currentFiltroBusqueda:String = "PROVEEDOR";
			public function set recibeFiltroDeMenu($filtro:String):void
			{
				if($filtro == null) return;
				
				_currentFiltroBusqueda = $filtro;
				
				if(_currentVistaSelected == 'vistaTabla')
				{
					grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
				}
				else
				{
					if(_currentFiltroBusqueda == "GLOBAL" ||_currentFiltroBusqueda == "ESTRATEGICOS")
					{
						grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = false;
					}
					else
					{
						grpGraficasDonas.includeInLayout = grpGraficasDonas.visible = true;
					}
				}
			}
			
			protected function Regresar_VistaDefaultAnalisisCompraHandler(event:Event):void
			{
				if(AnalisisCompras_Default(event.currentTarget).vistaARegresar == "grafica_VistaDefaultAnalisisCompras")
				{
					cambiarVistaTablaGrafica('vistaGrafico');
					
				}
				else if(AnalisisCompras_Default(event.currentTarget).vistaARegresar == "incio_VistaDefaultAnalisisCompras")
				{
					minimiza();
				} 
			}
			
			private function minimiza():void
			{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
		]]>
	</fx:Script>
	
	<pq:MobViewStack id="stackGeneral" width="100%" height="100%">
		
		<s:NavigatorContent id="vistaTabla" width="100%" height="100%">
			<analisis:AnalisisCompras_Default id="grpVistaDefaultAnalisisVentas" width="100%" height="100%" Regresar_VistaDefaultAnalisisCompras="Regresar_VistaDefaultAnalisisCompraHandler(event)"/>
		</s:NavigatorContent>
		
		
		
		<s:NavigatorContent id="vistaGrafico" width="100%" height="100%">
			<s:VGroup width="100%" height="100%" paddingLeft="20" paddingTop="25" paddingBottom="15">
				<s:HGroup width="100%">
					<componentes:TituloChartMaxTablero width="100%" text="COMPRAS"/>
					<componentes:TituloChartMaxTablero id="lblPer1" paddingRight="20" textAlign="center"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="0">
					<s:VGroup width="100%" height="100%" gap="0" paddingRight="20" >
						<otros:divisionGruesa width="100%" />
						<s:HGroup width="100%" id="grpVentasPeriodoLabels" paddingLeft="10" paddingTop="15" >
							<s:VGroup width="100%">
								<!--<s:Label id="etqNiAnual" fontSize="14" width="100%" textAlign="left" paddingRight="15" verticalAlign="middle" verticalCenter="0" horizontalCenter="0" fontStyle="normal" fontWeight="bold" fontFamily="Helvetica" paddingBottom="5"/>-->
								<componentes:TituloChartMaxTablero width="100%" id="lblMontoObjetivo" paddingRight="15" textAlign="right"/>
								<label:Titulo_14_Helvetica_VerdeAzul id="etqMontoObjetivo" width="100%" textAlign="right" paddingRight="15"/>
								
								<componentes:TituloChartMaxTablero id="lblMontoActual" width="100%" paddingRight="15" textAlign="right"/>
								<label:Titulo_14_Helvetica_VerdeAzul id="etqMontoActual" width="100%" textAlign="right" paddingRight="15"/>
								
								<componentes:TituloChartMaxTablero id="lblDiferencial" width="100%" paddingRight="15" textAlign="right"/>
								<label:Titulo_14_Helvetica_VerdeAzul id="etqDiferencial" width="100%" textAlign="right" paddingRight="15"/>
								
								<componentes:TituloChartMaxTablero id="lblPromedio" width="100%" paddingRight="15" textAlign="right"/>
								<label:Titulo_14_Helvetica_VerdeAzul id="etqPromedio" width="100%" textAlign="right" paddingRight="15"/>
							</s:VGroup>
						</s:HGroup>
						<mx:LineChart height="100%" width="100%" id="myChart"
									  mouseSensitivity="5" 
									  dataTipRenderer="{PeriodoToolTip}" 
									  showDataTips="true" 
									  showDataTipTargets="false"  
									  dataTipMode="single" 
									  paddingRight="30" paddingLeft="20" paddingTop="40"
									  paddingBottom="40"
									  seriesFilters="[]">
							<mx:series>
								
								<mx:LineSeries  yField="montoObjetivo" xField="numeroMes" form="step"  lineStroke="{s2}" showDataEffect="{fxInterpolateIn}" />
								<mx:PlotSeries id="montoObjetivo" yField="montoObjetivo" xField="numeroMes" displayName="Compras" showDataEffect="{fxInterpolateIn}" 
											   stroke="{stroke2}" fill="{sc3}" itemRenderer="mx.charts.renderers.TriangleItemRenderer"/>
								<mx:LineSeries yField="montoUSD_0" xField="numeroMes" form="segment"  lineStroke="{s1}" showDataEffect="{fxInterpolateIn}" />
								<mx:PlotSeries yField="montoUSD_0" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
									<mx:itemRenderer>
										<fx:Component>
											<s:MXItemRenderer>
												<fx:Script>
													<![CDATA[
														import skins.catalogos.catalogoColores;
													]]>
												</fx:Script>
												<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
													<s:fill>
														<mx:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
													</s:fill>		
												</s:Ellipse>
											</s:MXItemRenderer>
										</fx:Component>
									</mx:itemRenderer>
								</mx:PlotSeries>
							</mx:series>
							<mx:horizontalAxis>
								<mx:CategoryAxis id="vMes" categoryField="numeroMes"  />
							</mx:horizontalAxis>
							<mx:verticalAxis>
								<mx:LinearAxis id="vCantidad" labelFunction="formateoEje" autoAdjust="false" padding="1"  minimum="0"/>
							</mx:verticalAxis>
							<mx:verticalAxisRenderers>
								<mx:AxisRenderer axis="{vCantidad}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels"/>
							</mx:verticalAxisRenderers>
							<mx:horizontalAxisRenderers>
								<mx:AxisRenderer axis="{vMes}" axisStroke="{trazoGruezo}" tickPlacement="none" showLine="true" showLabels="true" 
												 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction" />
							</mx:horizontalAxisRenderers>
						</mx:LineChart>
						<s:Label width="100%" paddingBottom="10" styleName="axisVerticalLabels">
							<s:text>Los montos se refieren  a costo de Compra</s:text>
						</s:Label>
						<otros:divisionHueca width="100%" />
						<s:HGroup width="100%" height="40" verticalAlign="middle" paddingBottom="5" paddingTop="10">
							<grafica:botonPopUp icono="tabla" click="cambiarVistaTablaGrafica('vistaTabla')"/>
							<pqNet:botonPqNetLargo label="Inicio" click="maxConfirmacionCanceladas()" />
						</s:HGroup>	
					</s:VGroup>
				</s:HGroup>	
			</s:VGroup>
		</s:NavigatorContent>	
		
	</pq:MobViewStack>
	<ladoB:MaxCompras_Graficas width="40%" height="100%" id="grpGraficasDonas" />
	
	
</s:HGroup>