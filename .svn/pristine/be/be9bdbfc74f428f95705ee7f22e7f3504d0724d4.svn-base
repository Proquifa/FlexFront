<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:pqNet="skins.botones.pqNet.*"
		 xmlns:input="skins.skin.textinput.*"
		 creationComplete="init(event)"
		 >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.OrdenDespacho;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.DocumentoOrdenDespacho;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.vista.eventos.EventoGestorCompras;
			import mx.com.proquifa.vista.vistas.skin.boton.skinTxtInputBlancoBordeNegro;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			import skins.skin.textarea.TextArea2D_azulSkin;
			import skins.skin.textinput.skinTextInput2D;
			
			[Bindable]
			public var widModificado:int = 845;
			[Bindable]
			public var heiModificado:int = 632;
			
			[Bindable] private var tipoDocumento:String;
			[Bindable] private var numeroActual:Number;
			[Bindable] private var arregloImagenes:ArrayCollection;
			private var numeroMax:Number;
			
 			private var _currectDocumentoOrden:DocumentoOrdenDespacho;
			
			public var variacionW:int = 142.5;
			public var variacionH:int = 158.75;
			
			protected function cargarArchivos(event:MouseEvent):void
			{
				var docFilter:FileFilter;
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				file.addEventListener(Event.COMPLETE,completeHandler);
				docFilter = new FileFilter("Documents", "*.pdf");
				file.browse([docFilter])
			}
			private function selectHandler(event:Event):void
			{
				var file:FileReference = FileReference(event.target);
				file.load();
			}
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				trace("ioErrorHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void
			{
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			
			private function completeHandler(event:Event):void
			{
				trace("ARCHIVO CARGADO: " + event);
				
				var tmpAdicional:DocumentoOrdenDespacho = new DocumentoOrdenDespacho();
				try
				{
					/*tmpAdicional = ObjectUtil.copy(currectDocumentoOrden) as DocumentoOrdenDespacho;*/
					currectDocumentoOrden.archivo = event.target.data;
					
					dispatchEvent(new Event("EnviarDocumentosConArchivosCargados",true));
				}
				catch (error:*){
					alertaSingleton.show("No se encontro archivo");
				}
				
			}
			private function enviarAdicional($adicional:DocumentoOrdenDespacho):void
			{
				/*var ert:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.ENVIAR_ARCHIVO_ADICIONAL);
				ert.documentoDespacho = $adicional;
				dispatchEvent(ert);
				
				dispatchEvent(new Event("EnviarDocumentosConArchivosCargados",true));*/
				
			}

			public function definirtipoDocumento(value:String):void
			{
				tipoDocumento = value;
				if(value.toLowerCase() == "certificado"){
					grupoCertificado.visible = grupoCertificado.includeInLayout = true;
					grupoCartaUso.visible = grupoCartaUso.includeInLayout = false;
					grupoAdicionales.visible = grupoAdicionales.includeInLayout = false;
				}
				else if(value.toLowerCase() == "cartauso"){
					grupoCertificado.visible = grupoCertificado.includeInLayout = false;
					grupoCartaUso.visible = grupoCartaUso.includeInLayout = true;
					grupoAdicionales.visible = grupoAdicionales.includeInLayout = false;
				}
				else if(value.toLowerCase() == "adicional"){
					grupoCertificado.visible = grupoCertificado.includeInLayout = false;
					grupoCartaUso.visible = grupoCartaUso.includeInLayout = false;
					grupoAdicionales.visible = grupoAdicionales.includeInLayout = true;
				}
			}
			
			public function decrementaZoom():void
			{
				if(widModificado > 300 && heiModificado > 300){
					heiModificado = heiModificado - variacionH;
					widModificado = widModificado - variacionW;
				}
			}
			public function incrementaZoom():void
			{
				if(widModificado <= 1160 && heiModificado <= 1280 ){
					widModificado = widModificado + variacionW;
					heiModificado = heiModificado + variacionH;
				}
			}
			protected function scrollId_mouseWheelHandler(event:MouseEvent):void
			{
				event.delta = event.delta > 0 ? .5 : -1;
			}
			
			private var file:File;
			protected function recargarImagen(event:MouseEvent):void
			{
				/*var docFilter:FileFilter;
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				file.addEventListener(Event.COMPLETE,completeHandler);
				docFilter = new FileFilter("Documents", "*.pdf");
				file.browse([docFilter]);*/
			}
			
			protected function aumentarHoja():void
			{
				if(numeroActual < numeroMax - 1)
				{
					numeroActual++;
					var url:URLRequest = new URLRequest("http://" + Destinos.ipUsandose + arregloImagenes[numeroActual]);
					var img:Loader = new Loader();
					
					img.load(url);				
					img.contentLoaderInfo.addEventListener(Event.COMPLETE,loaded);	
				}
			}
			protected function restarHoja():void
			{
				if(numeroActual > 0)
				{
					numeroActual--;
					var url:URLRequest = new URLRequest("http://" + Destinos.ipUsandose + arregloImagenes[numeroActual]);
					var img:Loader = new Loader();
					
					img.load(url);				
					img.contentLoaderInfo.addEventListener(Event.COMPLETE,loaded);	
				}
			}

			[Bindable]
			public function get currectDocumentoOrden():DocumentoOrdenDespacho
			{
				return _currectDocumentoOrden;
			}

			public function set currectDocumentoOrden(value:DocumentoOrdenDespacho):void
			{
				if(value != null){
					_currectDocumentoOrden = value;
					definirtipoDocumento(_currectDocumentoOrden.tipo);
					currentState = "normal";
					/*if(_currectDocumentoOrden.rutaAcceso != null){
						var url:URLRequest = new URLRequest("http://" + Destinos.ipUsandose + currectDocumentoOrden.rutaAcceso);
						var img:Loader = new Loader();
						img.load(url);
						img.contentLoaderInfo.addEventListener(Event.COMPLETE,loaded);
					}
					else{
						grupCargar.visible= grupCargar.includeInLayout = false;
					}*/
					cargarImagen();
				}
			}
			
			public function loaded(e:Event):void
			{
				var bitmap:Bitmap = e.target.content;
				imagenVisualizaId.source = bitmap;
				e.target.removeEventListener(Event.COMPLETE,loaded);
				grupCargar.visible= grupCargar.includeInLayout = false;
				grupImagen.visible= grupImagen.includeInLayout = true;
			}

			
			public function changeState($tipo:String,$accion:String=""):void
			{
				if($tipo == 'edit'){
					currentState = "edit"
				}
				else if($tipo == 'normal'){
					currentState = "normal"
				}
				
				if($accion == "aceptar"){
					currectDocumentoOrden.notas = txtNotas.text;
				}
				else if($accion == "cancelar"){
					txtNotas.text = currectDocumentoOrden.notas;
				}
			}
			
			protected function init(event:FlexEvent):void
			{
				currentState = "unselected";
			}
			
			public function set recibeDatosVisualizadorPDF($rutaImagen:ArrayCollection):void
			{
				if ($rutaImagen == null || $rutaImagen.length == 0) 
				{
					grupCargar.visible= grupCargar.includeInLayout = true;
					grupImagen.visible= grupImagen.includeInLayout = false;
					return;
				}
				
				numeroActual = 0; 
				arregloImagenes = new ArrayCollection();
				
				if($rutaImagen.length > 0)
				{
					if($rutaImagen.length > 1)
					{
						imgHojaMas.visible = imgHojaMas.includeInLayout = true;
						imgHojaMenos.visible = imgHojaMenos.includeInLayout = true;
					}
					else
					{
						imgHojaMas.visible = imgHojaMas.includeInLayout = false;
						imgHojaMenos.visible = imgHojaMenos.includeInLayout = false;
					}
					
					numeroMax = $rutaImagen.length;
					arregloImagenes = ObjectUtil.copy($rutaImagen) as ArrayCollection;
				}
				else
				{
					imgHojaMas.visible = imgHojaMas.includeInLayout = false;
					imgHojaMenos.visible = imgHojaMenos.includeInLayout = false;
				}
				
				
				var url:URLRequest = new URLRequest("http://" + Destinos.ipUsandose + $rutaImagen[0]);
				var img:Loader = new Loader();
				
				img.load(url);				
				img.contentLoaderInfo.addEventListener(Event.COMPLETE,loaded);			
			}
			public function recibeDocumentosCargados(value:ArrayCollection):void
			{
				if(value.length > 0){
					return ;
				}
				var evnt:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.OBTIENE_IMAGEN);
				evnt.documentoDespacho = currectDocumentoOrden;
				evnt.paraImprimir = false;
				dispatchEvent(evnt);
			}
			public function cargarImagen():void
			{
				var evnt:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.OBTIENE_IMAGEN_CARGAR_FALTANTE);
				evnt.documentoDespacho = _currectDocumentoOrden;
				evnt.paraImprimir = false;
				dispatchEvent(evnt);
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="edit" />
		<s:State name="unselected" />
	</s:states>
	
	<s:HGroup width="100%" height="75%" horizontalAlign="center" verticalAlign="middle">
		<s:Group width="100%" height="100%" >
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#f3f3f4" />
				</s:fill>
			</s:Rect>
			<s:VGroup id="grupCargar" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="true" includeInLayout="true">
				<mx:Image source="{catalogoIconosBotones.getInstance().cargar_faltante_cruz}" horizontalCenter="0" verticalCenter="0" 
						  click="cargarArchivos(event)" buttonMode="true"/>
				<s:Label styleName="tab_texto_14_Helvetica" text="Cargar Documento" color="#404040" fontSize="25"/>
			</s:VGroup>
			<s:VGroup id="grupImagen" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="false" includeInLayout="false">
				<!--<mx:Image verticalAlign="middle" horizontalAlign="center" width="100%" height="100%" id="imagenVisualizaId"/>-->
				
				<s:Scroller width="100%" height="100%" maxWidth="845" maxHeight="700" id="scrollId" mouseWheel="scrollId_mouseWheelHandler(event)">
					<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >						
						<s:Image id="imagenVisualizaId" width="{widModificado}" height="{heiModificado}" horizontalAlign="center" verticalAlign="middle"/>
					</s:VGroup>  					
				</s:Scroller>
				
				<s:Group width="100%" height="5%">
					<s:VGroup width="100%" height="100%" paddingBottom="10">
						<s:HGroup gap="0" width="100%" horizontalAlign="center" verticalAlign="middle">
							<s:Group click="restarHoja()">
								<mx:Image id="imgHojaMenos" source="{catalogoIconosBotones.getInstance().pagina_anterior}"  smoothBitmapContent="true" visible="false"/>
							</s:Group>
							<s:Spacer width="10" />
							<s:Label styleName="Texto_12" text="{' '+(numeroActual + 1).toString() + ' / ' + arregloImagenes.length.toString()+' '}" paddingTop="0"/>
							<s:Spacer width="10" />
							<s:Group click="aumentarHoja()">
								<mx:Image id="imgHojaMas" source="{catalogoIconosBotones.getInstance().pagina_siguiente}"  smoothBitmapContent="true" visible="false"/>
							</s:Group>
						</s:HGroup>
						
						<s:HGroup gap="5" width="100%" horizontalAlign="center">
							<s:Group click="decrementaZoom()">
								<mx:Image id="imgZoomMenos" source="{catalogoIconosBotones.getInstance().zoom_menos}"  smoothBitmapContent="true" />
							</s:Group>
							<s:Group click="incrementaZoom()">
								<mx:Image id="imgZoomMas" source="{catalogoIconosBotones.getInstance().zoom_mas}"  smoothBitmapContent="true"/>
							</s:Group>
						</s:HGroup>
					</s:VGroup>  
					
					<pqNet:botonPqNetLargo  id="btnRecargar"  width="35" right="20" icono="recargarImg" 
											colorBase="0x{catalogoColores.BTN_VERDE_AZUL}" click="cargarArchivos(event)"/>
				</s:Group>
			</s:VGroup>
			
		</s:Group>
		
	</s:HGroup>
	<s:Spacer height="30" />
	<s:HGroup width="100%" height="25%" >
		<s:VGroup id="grupoCertificado" width="50%" height="100%" verticalAlign="top" horizontalAlign="center" gap="20" 
				  visible="true" includeInLayout="true">
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Producto" styleName="tab_texto_14_Helvetica" width="100%"/>
				<!--<input:TxtInputBlanco id="lblTitu" width="100%" styleName="tab_texto_14_HelveticaLight" fontWeight="bold"/>-->
				<s:Label id="lblProducto" text="{currectDocumentoOrden.nombreProducto}" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Catálogo" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblCatalogo" text="{currectDocumentoOrden.codigoProducto}" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>  
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Marca" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblMarca" text="{currectDocumentoOrden.fabricaProducto}" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>
		</s:VGroup> 
		<s:VGroup id="grupoCartaUso" width="50%" height="100%" verticalAlign="top" horizontalAlign="center" gap="20" 
				  visible="false" includeInLayout="false">
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Proveedor" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblProveedor" text="{currectDocumentoOrden.fabricaProducto}" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Facturas" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblFacturas" text="Prodcuto" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>  
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Nombre químico/técnico" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblNombre" text="Prodcuto" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>  
		</s:VGroup>
		<s:VGroup id="grupoAdicionales" width="50%" height="100%" verticalAlign="top" horizontalAlign="center" gap="20"
				  visible="false" includeInLayout="false">
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Titulo del archivo" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:TextInput width="100%" height="100%" fontFamily="Helvetica" text=""  maxWidth="242" maxHeight="34" 
							 skinClass="skins.skin.textinput.skinTextInput2D"/>
			</s:VGroup>
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Usuario que sube archivo" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblUsuario" text="Prodcuto" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>  
			<s:VGroup width="100%" height="100%" verticalAlign="middle">
				<s:Label text="Fecha" styleName="tab_texto_14_Helvetica" width="100%"/>
				<s:Label id="lblFecha" text="Prodcuto" styleName="tab_texto_14_Helvetica" fontWeight="bold" width="100%" fontSize="18"/>
			</s:VGroup>  
		</s:VGroup>
		<s:VGroup width="50%" height="100%" gap="20">
			<s:Label text="Notas" styleName="tab_texto_14_Helvetica" />
			<s:Label styleName="tab_texto_14_Helvetica" height="100%" id="lblNotas" width="100%" maxDisplayedLines="10"  color="#424242" text="{currectDocumentoOrden.notas}"
					 fontWeight="bold" includeIn="normal"/>
			<s:TextArea id="txtNotas" width="100%" height="100%" fontFamily="Helvetica" fontWeight="bold" includeIn="edit" text="{currectDocumentoOrden.notas}"
						skinClass="skins.skin.textarea.TextArea2D_azulSkin" styleName="tab_texto_14_Helvetica"/>
		<!--	<s:Group width="100%" height="100%" >
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#f3f3f4" />
					</s:fill>
				</s:Rect>
			</s:Group>-->
		</s:VGroup>  
	</s:HGroup>
	<s:HGroup width="100%" height="10%" maxHeight="80" paddingBottom="10" verticalAlign="bottom" horizontalAlign="left">
		<s:HGroup width="100%" height="100%" verticalAlign="bottom" includeIn="edit">
			<pqNet:botonPqNetLargo  id="cancelar"  width="170" height="30" label="CANCELAR"
									colorBase="0x{catalogoColores.BTN_VERDE_AZUL}" includeIn="edit" click="changeState('normal','cancelar')"/>
		</s:HGroup>  
		<s:HGroup width="100%" height="100%" verticalAlign="bottom" includeIn="normal" horizontalAlign="right">
			<pqNet:botonPqNetLargo  id="editar"  width="170" height="30" label="EDITAR"
									colorBase="0x{catalogoColores.BTN_VERDE_AZUL}" includeIn="normal" click="changeState('edit')"/>
		</s:HGroup>  
		
		<s:HGroup width="100%" height="100%" verticalAlign="bottom" includeIn="edit" horizontalAlign="right">
			<pqNet:botonPqNetLargo  id="guardar"  width="170" height="30" label="ACEPTAR"
									colorBase="0x{catalogoColores.BTN_VERDE_AZUL}" includeIn="edit" click="changeState('normal','aceptar')"/>
		</s:HGroup>  
		
	</s:HGroup>  
	
</s:VGroup>
