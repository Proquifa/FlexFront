<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:label="skins.skin.label.*" 
		 xmlns:graficas="skins.skin.graficas.*"
		 width="100%" height="100%" xmlns:otros="skins.otros.*" xmlns:shaders="skins.skin.shaders.*" 
		 >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			
			private var currentRazon:String = null;
			private var currentMarcas:String = null;
			private var _sql:Query;
			private var _respaldo:ArrayCollection;
			private var total:int; 
			private var totales:int; 
			private var resptotales:Boolean;
			private var totalMarcas:int; 
			
			public function set recibeSeguimientoCotizacionCancelacion($arreglo:ArrayCollection):void
			{
				if(!$arreglo || !$arreglo.length>0)
					return;
				
				resptotales =  false;
				currentRazon = null;
				currentMarcas = null;
				_respaldo = new ArrayCollection();
				_respaldo = ObjectUtil.copy($arreglo) as ArrayCollection;
				_sql = new Query($arreglo,["razon","fabrica","nombreCliente"]);
				setCompletoGraficas();
			}
			
			private function hacerCalculosVistaEsac():void	
			{
				total = 0;
				if(_sql.universo && _sql.universo.length > 0)
				{
					var providerChartClientesAAplus:ArrayCollection = new ArrayCollection;
					total = ObjectUtil.copy(_sql.getPunteros([currentRazon,null,"nombreCliente"],"nombreCliente").length) as int;
					providerChartClientesAAplus = generateChartReporte("fabrica",null,[currentRazon,"fabrica"],total);
					piechartTodosClientesPorClientes.dataProvider = piechartTodosClientesPorClientes.aplicarFormatoCancelacionesCotiza(providerChartClientesAAplus,"MARCAS",total);
				}
				else
				{
					piechartTodosClientesPorEsac.dataProvider = new ArrayCollection;
					piechartTodosClientesPorClientes.dataProvider = new ArrayCollection;
				}
			}
			
			private function setCompletoGraficas():void
			{
				if(_sql.universo && _sql.universo.length > 0)
				{
					total = 0;
					totalMarcas = 0;
					var providerChartClientesPorEsac:ArrayCollection = new ArrayCollection;
					
					if(!resptotales)
					{
						totales = ObjectUtil.copy(_sql.getPunteros([null,null,"nombreCliente"],"nombreCliente").length) as int;
						resptotales = true;
					}
					
					providerChartClientesPorEsac = generateChartReporte("razon",null,["razon",null],total);
					piechartTodosClientesPorEsac.dataProvider = piechartTodosClientesPorEsac.aplicarFormatoCancelacionesCotiza(providerChartClientesPorEsac,"RAZON",totales);
					
					var providerChartClientesAAplus:ArrayCollection = new ArrayCollection;
					providerChartClientesAAplus = generateChartReporte("fabrica",null,[currentRazon,"fabrica"],totalMarcas);
					piechartTodosClientesPorClientes.dataProvider = piechartTodosClientesPorClientes.aplicarFormatoCancelacionesCotiza(providerChartClientesAAplus,"MARCAS",totales);
				}
			}
			
			private var totalCliente:Boolean;
			private function generateChartReporte( $propiedad:String, $filtro:String, $consulta:Array,$total:Number=0 ):ArrayCollection
			{
				var arrayProvider:ArrayCollection = new ArrayCollection();
				if( _sql.indexObject[ $propiedad ] != null )
				{
					// determino si el filtro aplica por campo o por propiedad en campo
					var posIdx:int = $consulta.indexOf( $propiedad );
					var clitotal:Number=0;
					var cont:Number=0;
					for( var key:String in _sql.indexObject[ $propiedad ] )
					{
						var consultaReformulada:Array = ObjectUtil.copy( $consulta ) as Array; 
						if( posIdx != -1 )
							consultaReformulada[ posIdx ] = key;
						if( $filtro != null )
							consultaReformulada[ posIdx ] = $filtro;
						if( posIdx != -1 && $filtro == null || key == $filtro )
						{
							var cachoPie:ResumenConsulta = new ResumenConsulta();
							cachoPie.etiqueta = key;
							var punterosClientes:Array = _sql.getPunteros( consultaReformulada,"nombreCliente" );
							var punterosFiltro:Array = _sql.getPunteros( consultaReformulada );
							cachoPie.clientes = punterosClientes.length; 
							//cachoPie.totalClientes = punterosClientes.length; 
							cachoPie.total = _sql.getSumarCampo( "montoPartida", punterosFiltro);
							var punterosEsac:Array = _sql.getPunteros([currentRazon]);
							var totalXEsac:Number = _sql.getSumarCampo( "montoPartida", punterosEsac);
							cachoPie.porcentajeDistribucion = UtilsFormatosNumericos.truncarDecimalesCeil((cachoPie.total * 100)/totalXEsac,2);
							
							if(totalCliente)
							{
								//cachoPie.totalClientes = $total;
								totalCliente = false;
							}
							arrayProvider.addItem( cachoPie );
						}
					}
				}
				var dataSortField:SortField = new SortField();
				dataSortField.name = "total";
				dataSortField.descending = true;
				var numericDataSort:Sort = new Sort();
				numericDataSort.fields = [dataSortField];
				arrayProvider.sort = numericDataSort;
				arrayProvider.refresh();
				for (var r:int = 1; r <= arrayProvider.length; r++)
				{
					(arrayProvider[r-1] as ResumenConsulta).rankingCliente = r;
				}
				return arrayProvider;
			}
			
			
			protected function selectRazon(event:ChartItemEvent):void
			{
				currentRazon = (event.hitData.item as ResumenConsulta).etiqueta;
				currentMarcas = null;
				
				total = 0;
				var providerChartClientesAAplus:ArrayCollection = new ArrayCollection;
				total = ObjectUtil.copy(_sql.getPunteros([currentRazon,null,"nombreCliente"],"nombreCliente").length) as int;
				providerChartClientesAAplus = generateChartReporte("fabrica",null,[currentRazon,"fabrica"],total);
				piechartTodosClientesPorClientes.dataProvider = piechartTodosClientesPorClientes.aplicarFormatoCancelacionesCotiza(providerChartClientesAAplus,"MARCAS",total);
				enviarArreglo("busqueda");
			}
			
			protected function selectMarca(event:ChartItemEvent):void
			{
				currentMarcas = (event.hitData.item as ResumenConsulta).etiqueta;
				enviarArreglo("busqueda");
			}
			
			
			private function enviarArreglo(vieneDe:String):void
			{
				var arregloResul:ArrayCollection = new ArrayCollection();
				arregloResul = _sql.armarLista( _sql.getPunteros([currentRazon,currentMarcas]));
				
				if(vieneDe == "busqueda")
				{
					var evt:EventoTableroClientes = new EventoTableroClientes(EventoTableroClientes.ENVIAR_ARREGLO_CANCELACION);
					evt.arregloCancelacion = arregloResul;
					dispatchEvent(evt);
				}
				
				if(vieneDe == "reinicia")
				{
					var evto:EventoTableroClientes = new EventoTableroClientes(EventoTableroClientes.ENVIAR_ARREGLO_CANCELACION);
					evto.arregloCancelacion = _respaldo;
					dispatchEvent(evto);
				}
			}
			
			protected function contenido_clickHandler(event:MouseEvent):void
			{
				currentRazon = null;
				currentMarcas = null;
				setCompletoGraficas();
				enviarArreglo("reinicia");
			}
			
			protected function piechartTodosClientesPorClientes_clickImagenHandler(event:MouseEvent):void
			{
				if(currentRazon)
				{
					currentMarcas = null;
					hacerCalculosVistaEsac();
					enviarArreglo("busqueda");
				}
				else
				{
					currentRazon = null;
					currentMarcas = null;
					setCompletoGraficas();
					enviarArreglo("reinicia");
				}
			}
			
			
		]]>
	</fx:Script>
	
	<s:Rect width="100%" height="100%">
		<s:filters>
			<shaders:sombraBevelFilter direccion="left"/>
		</s:filters>
		<s:fill>	
			<s:SolidColor color="#eaeaea"/>	
		</s:fill>
	</s:Rect>
	
	<s:VGroup width="100%" height="100%" paddingTop="20" paddingBottom="20" paddingRight="20" paddingLeft="20" gap="0">
		<s:VGroup width="100%" height="100%" horizontalAlign="center">
			<label:Titulo_14_pTop10 id="lblTituloNIPorEsacs" text="RAZONES"/>
			<graficas:PieChartPqGris width="100%" height="100%" id="piechartTodosClientesPorEsac" showDataTips="false" innerRadius=".5" itemClick="selectRazon(event)"
									 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true" esConRealse="true" 
									 icono="analisis_distribuidores" clickImagen="contenido_clickHandler(event)" sinOver="true">
				<graficas:series>
					<graficas:pieSeriesPqNet field="total" /> 
				</graficas:series>
			</graficas:PieChartPqGris>
		</s:VGroup>
		<s:VGroup width="100%" horizontalAlign="center" gap="0">
			<otros:division width="80%" grueso=".4" />
		</s:VGroup>
		
		
		<s:VGroup width="100%" height="100%" horizontalAlign="center">
			<label:Titulo_14_pTop10 id="lblTituloCliente" text="MARCAS"/>
			<graficas:PieChartPqGris width="100%" height="100%" id="piechartTodosClientesPorClientes" showDataTips="false" innerRadius=".5" itemClick="selectMarca(event)"
									 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true" esConRealse="true" 
									 icono="analisis_distribuidores" clickImagen="piechartTodosClientesPorClientes_clickImagenHandler(event)" sinOver="true">
				<graficas:series>
					<graficas:pieSeriesPqNet field="total" /> 
				</graficas:series>
			</graficas:PieChartPqGris>
		</s:VGroup>
		
	</s:VGroup>
</s:Group>
