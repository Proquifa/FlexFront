<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:componentes="mx.com.proquifa.vista.vistas.tramitarCompra.componentes.*"
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:otros="skins.otros.*"
				xmlns:consultas="skins.skin.comun.consultas.*"
				autoDrawBackground="false"
				height="{heightRow}"
				width="100%">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.BolsaParaEmbalar;
			import mx.events.EffectEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			
			[Bindable] public var heightRow:Number;
			[Bindable] private var fontColor:uint;
			[Bindable] private var bolsa:BolsaParaEmbalar = new BolsaParaEmbalar;
			override public function set data(value:Object):void{
				
				bolsa = value as BolsaParaEmbalar;
				
				lstProductosEmbalados.dataProvider = bolsa.arrayProductos;
				if(lstProductosEmbalados.dataProvider.length > 0)
					encabezados.visible = encabezados.includeInLayout = true;
				
				if(bolsa){
					
					if(bolsa.arrayProductos.length > 0){
						if(bolsa.mostrar){
							if(bolsa.arrayProductos.getItemAt(0).manejo == 'Congelación')
								imgManejo.source = catalogoIconosBotones.getInstance().congelacion;
							else if(bolsa.arrayProductos.getItemAt(0).manejo == 'Refrigeración')
								imgManejo.source = catalogoIconosBotones.getInstance().refrigeracion;
							if(bolsa.arrayProductos.getItemAt(0).manejo == 'Ambiente')
								imgManejo.source = catalogoIconosBotones.getInstance().ambiente;
						}else{
							if(bolsa.arrayProductos.getItemAt(0).manejo == 'Congelación')
								imgManejo.source = catalogoIconosBotones.getInstance().congelacionGris;
							else if(bolsa.arrayProductos.getItemAt(0).manejo == 'Refrigeración')
								imgManejo.source = catalogoIconosBotones.getInstance().refrigeracionGris;
							if(bolsa.arrayProductos.getItemAt(0).manejo == 'Ambiente')
								imgManejo.source = catalogoIconosBotones.getInstance().ambienteGris;
						}
					}
					
					if(bolsa.mostrar){
						fontColor = 0x008895;
					}else{
						fontColor = 0x808080;							
					}
					
				}	
				
				
				arrancaAnimacion();
				
			}
			
			[Bindable] public var tamanioLetra14:Number;
			[Bindable] public var tamanioLetra16:Number;
			[Bindable] public var tamanioLetra20:Number;
			[Bindable] public var tamanioLetra23:Number;
			/*[Bindable] public static var heightCalculado:Number;*/
			[Bindable] public var gapCalculado:Number;
			[Bindable] public var widthImgManejo:Number;
			[Bindable] public var unscaledWidthAnt:Number;
			[Bindable] public var tamanioRowsListas:Number;
			[Bindable] public var tamanioEncabezado:Number;
			[Bindable] public var paddingIzq:Number;
			[Bindable] public var ySerial:Number;
			[Bindable] public var espaciadoEntreTexto:Number;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				trace(unscaledWidth);
				if(unscaledWidth != unscaledWidthAnt){
					
					widthImgManejo = (unscaledWidth / 531.5) * 20;
					widthImgManejo = widthImgManejo > 20 ? 20: widthImgManejo;
					
					if(widthImgManejo < 10)
						widthImgManejo = 6;
					
					tamanioLetra14 = (unscaledWidth / 531.5) * 14;
					tamanioLetra14 = tamanioLetra14 > 14 ? 14: tamanioLetra14;
					
					if(tamanioLetra14 < 6)
						tamanioLetra14 = 6;
					
					tamanioLetra16 = (unscaledWidth / 531.5) * 16;
					tamanioLetra16 = tamanioLetra16 > 16 ? 16 : tamanioLetra16;
					
					if(tamanioLetra16 < 5)
						tamanioLetra16 = 5;
					
					tamanioLetra20 = (unscaledWidth / 531.5) * 20;
					tamanioLetra20 = tamanioLetra20 > 20 ? 20 : tamanioLetra20;
					
					if(tamanioLetra20 < 5)
						tamanioLetra20 = 4;
					
					tamanioLetra23 = (unscaledWidth / 531.5) * 23;
					tamanioLetra23 = tamanioLetra23 > 23 ? 23 : tamanioLetra23;
					
					if(tamanioLetra23 < 16)
						tamanioLetra23 = 16;
					
					paddingIzq = (unscaledWidth / 531.5) * 17;
					paddingIzq = paddingIzq > 17 ? 17 : paddingIzq;
					
					if(paddingIzq < 2)
						paddingIzq = 1;
					
					espaciadoEntreTexto = (unscaledWidth / 531.5) * 6;
					espaciadoEntreTexto = espaciadoEntreTexto > 6 ? 6 : espaciadoEntreTexto;
					
					if(espaciadoEntreTexto < 2)
						espaciadoEntreTexto = 1;
					
					/*heightCalculado = (unscaledHeight / 104) * 108;
					heightCalculado = heightCalculado < 2.5 ? 32 : heightCalculado;
					
					if(heightCalculado > 108)
						heightCalculado = 108;
					
					if(lstProductosEmbalados.dataProvider.length == 0 && heightCalculado > 69)
						heightCalculado = 69;*/

					gapCalculado = (unscaledHeight / 88) * 6;
					gapCalculado = gapCalculado < 3 ? 0 : gapCalculado;
					
					if(gapCalculado > 6)
						gapCalculado = 6;
					
					if(gapCalculado == 0 && lstProductosEmbalados.dataProvider.length > 0){
						ySerial = -7;
					}else
						ySerial = 0;
					
					tamanioRowsListas = (heightRow / 69) * 60;
					tamanioRowsListas = tamanioRowsListas < 32 ? 32 : tamanioRowsListas;
					
					if(tamanioRowsListas > 60)
						tamanioRowsListas = 60;
					
					tamanioEncabezado = (tamanioRowsListas / 60) * 39;
					tamanioEncabezado = tamanioEncabezado < 22 ? 22 : tamanioEncabezado;
					
					if(tamanioEncabezado > 39)
						tamanioEncabezado = 39;
					
					var array:ArrayCollection = lstProductosEmbalados.dataProvider as ArrayCollection;
					lstProductosEmbalados.dataProvider = new ArrayCollection;
					lstProductosEmbalados.dataProvider = array;
					
					vgAnimacion.height = tamanioEncabezado;
					
					lstProductosEmbalados.height = lstProductosEmbalados.dataProvider.length * tamanioRowsListas;
					this.height = heightRow +  lstProductosEmbalados.dataProvider.length * tamanioRowsListas + (encabezados.visible ? tamanioEncabezado : 0) + 10;
				}
				
				unscaledWidthAnt = unscaledWidth;
				
			}
			
			protected function vgroup1_clickHandler(event:MouseEvent):void
			{
				bolsa.mostrar = !bolsa.mostrar;
				arrancaAnimacion();				
			}
			
			protected function arrancaAnimacion():void
			{
				if (!fxResize.isPlaying) {
					if (!bolsa.mostrar) {
						fxFade.duration = 100;
						fxFade.alphaTo = 0;
						fxResize.heightTo = 0;
						fxResize.duration = 100;
						fxFade.play();
						fxResize.play();
					} else {
						fxFade.duration = 600;
						fxFade.alphaTo = 1;
						fxResize.duration = 400;
						fxResize.heightTo = (lstProductosEmbalados.dataProvider.length * 60) + 39;
						encabezados.visible = true;
						lstProductosEmbalados.visible = true;
						fxResize.play();
						fxFade.play();
					}
				}
				
				dispatchEvent( new Event("enfocaALector",true));
				
			}
			
			
			protected function fxResize_effectStopHandler(event:EffectEvent):void
			{
				if (bolsa.mostrar) {
					vgAnimacion.percentHeight = 100;
					vgAnimacion.percentWidth = 100;
					vgAnimacion.visible = vgAnimacion.includeInLayout = true;
					encabezados.height = tamanioEncabezado;
					encabezados.percentWidth = 100;
					lstProductosEmbalados.visible = lstProductosEmbalados.includeInLayout = true;
					lstProductosEmbalados.height = lstProductosEmbalados.dataProvider.length * tamanioRowsListas;
					this.height = heightRow +  lstProductosEmbalados.dataProvider.length * tamanioRowsListas + (encabezados.visible ? tamanioEncabezado : 0) + 10;
					lstProductosEmbalados.percentWidth = 100;
					vgAnimacion.height = tamanioEncabezado;
					
					if(gapCalculado == 0 && lstProductosEmbalados.dataProvider.length > 0){
						ySerial = -7;
					}else
						ySerial = 0;
				} 
				else {
					vgAnimacion.visible = vgAnimacion.includeInLayout = false;
					this.height = heightRow;
				}
				
				/*dispatchEvent( new Event("enfocaALector",true));*/
			}
			
			protected function fxFade_effectStartHandler(event:EffectEvent):void
			{
				vgAnimacion.visible = vgAnimacion.includeInLayout = true;
			}
			
			private function selectRenderer(item:Object):ClassFactory
			{
				var classFactory:ClassFactory = new ClassFactory(ListaProductosEmbalados_IR);
				classFactory.properties = {heightRow: tamanioRowsListas};
				
				return classFactory;
			}
			
		]]>
		
	</fx:Script>	
	
	<fx:Declarations>
		<!--<s:Resize id="fxResize" target="{lstProductosEmbalados}" duration="400" effectStop="fxResize_effectStopHandler(event)" />  
		<s:Resize id="fxResize1" target="{encabezados}" duration="400" effectStop="fxResize_effectStopHandler(event)"/>-->
		<s:Resize id="fxResize" target="{vgAnimacion}" duration="400" effectEnd="fxResize_effectStopHandler(event)" /> 
		<s:Fade id="fxFade" target="{vgAnimacion}" duration="400" effectStart="fxFade_effectStartHandler(event)" />
	</fx:Declarations>
	
	<s:VGroup width="100%" height="100%" paddingBottom="11">
		<!--<s:BorderContainer width="100%" height="100%" borderColor="0xCCCCCC" alpha="0.8">-->
		<s:Group width="100%" height="100%" >
			<s:VGroup width="100%" height="100%" gap="0" >
				<s:Group width="100%" height="{heightRow}" >
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="#ffffff" />
						</s:fill>
					</s:Rect>
					
					
					<s:VGroup width="100%" height="100%">
						<s:VGroup width="100%" height="100%" paddingTop="8" gap="{gapCalculado}" paddingLeft="{paddingIzq}">
							<s:HGroup width="100%" gap="0">
								<s:Label text="Paquete {itemIndex + 1}" fontSize="{tamanioLetra20}" fontWeight="bold" color="{fontColor}" fontFamily="Helvetica" />						
								<s:Label text="· {bolsa.noPartidas}" fontSize="{tamanioLetra20}" fontWeight="bold" color="{fontColor}" visible="{bolsa.noPartidas > 0}" fontFamily="Helvetica" paddingLeft="{espaciadoEntreTexto}"/>						
								<s:Label text="{bolsa.noPartidas == 1 ? 'Partida,' : 'Partidas,'}" fontSize="{tamanioLetra20}" fontWeight="bold" color="{fontColor}" visible="{bolsa.noPartidas > 0}" fontFamily="Helvetica" paddingLeft="{espaciadoEntreTexto}"/>						
								<s:Label text="{bolsa.noPiezas}" fontSize="{tamanioLetra20}" fontWeight="bold" color="{fontColor}" visible="{bolsa.noPiezas > 0}" fontFamily="Helvetica" paddingLeft="{espaciadoEntreTexto}"/>					
								<s:Label text="{bolsa.noPiezas == 1 ? 'Pieza' : 'Piezas'}" fontSize="{tamanioLetra20}" fontWeight="bold" color="{fontColor}" visible="{bolsa.noPiezas > 0}" fontFamily="Helvetica" paddingLeft="6" paddingRight="{espaciadoEntreTexto}"/>		
								
								<mx:Image id="imgManejo" width="{widthImgManejo}" />
								<s:Label text="{bolsa.arrayProductos.getItemAt(0).manejo}" fontWeight="bold" color="{fontColor}" fontSize="{tamanioLetra20}" fontFamily="Helvetica" textAlign="left" paddingRight="{espaciadoEntreTexto}" paddingLeft="{espaciadoEntreTexto}"/>
								
								<s:Spacer width="100%"/>
								
								<s:Group height="100%" width="100%" >
									<s:Label text="···" fontWeight="bold" color="{fontColor}" fontSize="{tamanioLetra23}" textAlign="right" id="btnMenu" height="100%" click="vgroup1_clickHandler(event)" buttonMode="true" visible="{bolsa.noPartidas > 0}" verticalAlign="top"  y="-4" maxDisplayedLines="1"/>
								</s:Group>  
								
							</s:HGroup>  
							<!--<s:Label text="Serial: 0896948 · ID Pack: 0896948" fontSize="{tamanioLetra16}"/>-->
							<s:Group height="100%" width="98%" >
								<s:Label text="Serial: 0896948 · ID Pack: 0896948" fontSize="{tamanioLetra16}" y="{ySerial}" left="0"/>
							</s:Group>
						</s:VGroup>    
					</s:VGroup>
				</s:Group>  
				
				
				<s:Group width="100%" height="100%"  id="vgAnimacion" visible="false" includeInLayout="false">
					
					<s:VGroup id="encabezados"  width="100%" height="100%" >
						<s:HGroup width="100%" height="100%" gap="0">
							<s:Label width="3%" text="#" color="#999999" textAlign="center" fontSize="{tamanioLetra14}"/>
							<s:Label width="10%" text="Cant." color="#999999" textAlign="center" fontSize="{tamanioLetra14}"/>
							<s:Label width="64%" text="Producto" color="#999999" fontSize="{tamanioLetra14}"/>
							<s:Label width="23%" text="Referencia de Inspección" color="#999999" fontSize="{tamanioLetra14}"/>
						</s:HGroup>  
						
						<!--LISTA DE Productos Embalados-->
						<s:List width="100%" borderVisible="false" horizontalScrollPolicy="off" verticalScrollPolicy="off"
								id="lstProductosEmbalados" contentBackgroundAlpha="0" itemRendererFunction="selectRenderer" />
					</s:VGroup>  
				</s:Group> 
			</s:VGroup>
			
			<s:Rect width="100%" height="100%">
				<s:stroke>
					<s:SolidColorStroke color="#CCCCCC" weight="1" alpha="0.8"/>
				</s:stroke>
			</s:Rect>
			
		</s:Group>  
		
		<!--</s:BorderContainer> -->
		
	</s:VGroup>  
	
</s:ItemRenderer>
