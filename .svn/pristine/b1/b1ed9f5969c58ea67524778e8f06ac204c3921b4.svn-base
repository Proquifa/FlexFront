<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:consultas="skins.skin.comun.consultas.*"
				xmlns:label="skins.skin.label.*"  
				xmlns:otros="skins.otros.*" 
				width="100%" 
				>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Cobros;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			
			override public function set data(value:Object):void{
				super.data = value;
				this.autoDrawBackground= true;
				
				this.vgp1.includeInLayout = this.vgp1.visible = false; 
				this.vgp0.includeInLayout = this.vgp0.visible = true;
				
				if((data as Cobros).estado == 'ultimo'){
					
					this.vgp1.includeInLayout = this.vgp1.visible = true; 
					this.vgp0.includeInLayout = this.vgp0.visible = false;
					
					this.autoDrawBackground= false;
				}
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:VGroup width="100%" height="100%" id="vgp0" gap="0">
		<s:HGroup height="100%" width="100%" >		
			<consultas:LineaItemSeleccionado visible.selected="true"/>
			<s:VGroup width="100%" paddingRight="10" paddingTop="10" paddingBottom="10">
				<s:VGroup id="columnaizq" width="100%" >
					<s:HGroup width="100%" horizontalAlign="left" >
						<s:HGroup width="100%">
							<label:Titulo paddingTop="0" id="lbcantidad" text="#{( data as Cobros).numFila +' · ' +  (data as Cobros).totalFacturas + ((data as Cobros).totalFacturas == 1 ? ' factura' : ' facturas') +' · ' + (data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' pza' : ' pzas')  }" />
						</s:HGroup>
						<s:HGroup width="100%" horizontalAlign="right">
							<label:Titulo paddingTop="0" text="FEP: " />
							<label:Fecha id="lblFEP" fecha="{(data as Cobros).fechaEsperadaPago}"  /> 
						</s:HGroup>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<label:Titulo id="lblCliente" width="100%" text="{(data as Cobros).nombreCliente} " />
					</s:HGroup>
					<s:HGroup  width="100%" horizontalAlign="left" > <!--paddingTop="5" paddingBottom="5"-->
						<s:HGroup width="100%">
							<label:Titulo paddingTop="0" text="Monto: " />
							<label:TextoGris id="lblMonto" width="100%" text="${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares)} "  />
						</s:HGroup>
					</s:HGroup>
					<s:HGroup  width="100%" horizontalAlign="left" > <!--paddingTop="5" paddingBottom="5"-->
						<s:HGroup width="100%">
							<label:Titulo paddingTop="0" text="ESAC: " />
							<label:TituloUpperCaseVerdeAzul paddingTop="0" id="lblEsac" width="100%" text="{(data as Cobros).esac} " /> 
						</s:HGroup>
						<s:HGroup width="100%" textAlign="right">
							<label:Titulo paddingTop="0" width="100%" textAlign="right" text="EV: " />
							<label:TituloUpperCaseVerdeAzul paddingTop="0" id="lblEv"  text="{(data as Cobros).ev == null ? 'ND' : (data as Cobros).ev} " />
						</s:HGroup>
					</s:HGroup>
					<s:HGroup  width="100%" horizontalAlign="left" > <!--paddingTop="5" paddingBottom="5"-->
						<label:Titulo paddingTop="0" text="Cobrador: " />
						<label:TituloUpperCaseVerdeAzul paddingTop="0" id="lblCobrador" text="{(data as Cobros).cobrador} " /> 
					</s:HGroup>
				</s:VGroup>
			</s:VGroup>
		</s:HGroup>
		<otros:division id="LineaFinal" width="100%"/>
	</s:VGroup>
	
	<s:VGroup  width="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="25" paddingBottom="25" id="vgp1" height="100%">
		<label:TextoGrisCasiNegro id="lblTClientes" text="{(data as Cobros).nombreCliente + ((data as Cobros).nombreCliente == '1' ? ' Cliente': ' Clientes') } · ${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares)} USD"/>
		<label:TextoGrisCasiNegro text="{(data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' Pieza' : ' Piezas')} "/>
		<label:TextoGris text="TOTAL"/>
	</s:VGroup>
</s:ItemRenderer>
