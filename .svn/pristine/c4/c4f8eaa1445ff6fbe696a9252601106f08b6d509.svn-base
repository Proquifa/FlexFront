<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		  xmlns:largosinicono="skins.botones.largosinicono.*" 
		  xmlns:graficas="skins.skin.graficas.*" 
		  xmlns:pqNet="skins.skin.datagrid.pqNet.*" 
		  xmlns:tabla="skins.botones.tabla.*" 
		  xmlns:grafica="skins.botones.grafica.*"
		  xmlns:otros="skins.otros.*" 
		  xmlns:pqNet1="skins.botones.pqNet.*"
		  xmlns:botonesToggle="skins.botonesToggle.*"
		  xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		  paddingRight="20" paddingLeft="20" paddingTop="25" paddingBottom="15"
		  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		  creationComplete="validarLlenarGrid()"
		  >
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.items.PieSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ProductosCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import skins.catalogos.catalogoInfoGraficas;
			
			public function seleccionaTabla():void{			
			/* 	stackGeneral.selectedChild = vistaTabla;
				validarLlenarGrid(); */
			}
			public function seleccionarGrafica():void{
				stackGeneral.selectedChild = vistaGrafico;
			}
			
			private function minimiza():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			[Bindable]	private var _arregloCincoBotones:ArrayCollection = new ArrayCollection([
				{label:"Estándares",bandera:false},
				{label:"Biológicos",bandera:false},
				{label:"Reactivos",bandera:false},
				{label:"Publicaciones",bandera:false},
				{label:"Labware",bandera:false}]);
			
			[Bindable]	private var _listadoProductosClienteTrabajo:ArrayCollection = new ArrayCollection();
			
			public function set recibeListaProductosCliente($lista:ArrayCollection):void{
				if($lista == null ) return;
				_sql = new Query( $lista, ["tipo"] );
				btnBarra_click();
			}
			
			private var _sql:Query;
			private var _arrTipos:Array = [ "Estandares", "Biológicos", "Reactivos", "Publicaciones", "Labware" ];
			
			
			protected function btnBarra_click():void
			{
				 /* if( btnBarra.selectedIndex == -1 )
					return;  */
				
			 	/* var indice:int = btnBarra.selectedIndex; 
 */				for( var v:int = 0; v < _arrTipos.length; v++ ){
					_arregloCincoBotones[ v ].bandera = _sql.getPunteros([ _arrTipos[v] ]).length > 0; // ? true: false;
				}
				_arregloCincoBotones.refresh();
			/* 	var strTipo:String = _arrTipos[ indice ]; */
				//_listadoProductosClienteTrabajo = _sql.ensamblarLista( [ strTipo ] );// strTipo = "Estandares", "Biológicos", "Reactivos",  etc etc
				//btnExportar.enabled =  _listadoProductosClienteTrabajo.length < 1 ? false : true;
				setearNumFila( _listadoProductosClienteTrabajo );
				/* btnBarra.selectedIndex = indice; */
			}
			
			private function setearNumFila( $lista:ArrayCollection ):ArrayCollection{
				for( var g:int = 0; g < $lista.length; g++ ){
					var cItem:* = $lista[ g ];
					if( cItem.hasOwnProperty("numFila") )
						cItem.numFila = g + 1;
				}
				return $lista;
			}
			
			private function generaArchivo():void{
				var ArchivoFinal:File = new File();
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Descripción");
				fila1[2] = hoja.addItem("Cantidad");
				fila1[3] = hoja.addItem("Monto");
				fila1[4] = hoja.addItem("Marca");
				for(var i:int = 0 ; i< _listadoProductosClienteTrabajo.length; i++ ){
					fila1 = new Array();
					fila1[0] = (_listadoProductosClienteTrabajo[i] as ProductosCliente ).numFila;
					fila1[1] = '"'+(_listadoProductosClienteTrabajo[i] as ProductosCliente ).descripcion+'"';
					fila1[2] = (_listadoProductosClienteTrabajo[i] as ProductosCliente ).cant;
					fila1[3] = '"'+(_listadoProductosClienteTrabajo[i] as ProductosCliente ).costoString+'"';
					fila1[4] = '"'+(_listadoProductosClienteTrabajo[i] as ProductosCliente ).fabrica+'"';
					hoja.addItem('\r' + fila1 );
				}
				/* if( btnBarra.selectedIndex > -1){
					if( btnBarra.selectedIndex == 0 ) ArchivoFinal.save( hoja, "Productos_Estandar.csv");
					if( btnBarra.selectedIndex == 1 ) ArchivoFinal.save( hoja, "Productos_Biologicos.csv");
					if( btnBarra.selectedIndex == 2 ) ArchivoFinal.save( hoja, "Productos_Reactivos.csv");
					if( btnBarra.selectedIndex == 3 ) ArchivoFinal.save( hoja, "Publicaciones.csv");
					if( btnBarra.selectedIndex == 4 ) ArchivoFinal.save( hoja, "labware.csv");
				} */
			}
			
			public function set recibeLinealMixProductos( $lista:ArrayCollection ):void{
				if( $lista == null )
					return;
				myChart.dataProvider = myChart.aplicarFormatoTableroClientes( UtilsGrid.queryCampoX( $lista, "etiqueta", "MIX_PRODUCTOS_0" ) );
			}
			
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			
			public function set recibirFiltros( $event:EventoTableroClientes ):void{
				if( $event == null )
					return;
				if( _keyAnterior != $event.keyConsulta ){
					_event = $event;
					_minimoMeses = _event.rangoMinMes;
					_maximoMeses = _event.rangoMaxMes;
					validarLlenarGrid();
				}
			}
			
			private var _keyAnterior:String = "";
			
			protected function validarLlenarGrid():void
			{
				/* if( stackGeneral.selectedChild == vistaTabla ){
					if( _event != null && _event.keyConsulta != _keyAnterior ){
						var evet:EventoTableroClientes = new EventoTableroClientes( EventoTableroClientes.CONSULTA_GRID_MIX_PRODUCTOS );
						evet.anio = _event.anio;
						evet.idCliente = _event.idCliente;
						evet.periodo = _event.periodo;
						evet.tipoPeriodo = _event.tipoPeriodo;
						evet.mes = _event.mes;
						evet.esacString = _event.esacString;
						evet.idVentas = _event.idVentas;
						evet.lineal = _event.lineal;
						evet.rangoMinMes = _event.rangoMinMes;
						evet.rangoMaxMes = _event.rangoMaxMes;
						dispatchEvent( evet );
						_keyAnterior = _event.keyConsulta;
					}
				} */
			}
			
		]]>
	</fx:Script>
	<componentes:TituloChartMaxTablero width="100%" text="MIX PRODUCTOS" />
	<pq:MobViewStack id="stackGeneral" width="100%" height="100%" creationPolicy="all" change="validarLlenarGrid()">
		<!--<s:NavigatorContent id="vistaTabla" width="100%" height="100%">
			<s:VGroup width="100%" height="100%" gap="0" horizontalAlign="center">
				<otros:divisionGruesa width="100%" />
				<s:HGroup width="100%" paddingBottom="10" paddingTop="10" horizontalAlign="right" >
					<s:ButtonBar width="70%" height="30" id="btnBarra" selectedIndex="0" 
								 dataProvider="{ this._arregloCincoBotones}" click="btnBarra_click()" 
								 skinClass="skins.botoneras.botoneraBandera.skinBotoneraBandera" />
				</s:HGroup>
				<otros:divisionGruesa width="100%" />
				<pqNet:dataGridPqNet id="tablaProductos" rowHeight="40" width="100%" height="100%" 
									 dataProvider="{this._listadoProductosClienteTrabajo}" porcentajesColumnasPq="[8,44,15,15,15]">
					<pqNet:columns>
						<mx:DataGridColumn headerText="#" dataField="numFila"/>
						<mx:DataGridColumn headerText="Descripción" dataField="descripcion"/>
						<mx:DataGridColumn headerText="Cantidad" dataField="cant"/>
						<mx:DataGridColumn headerText="Monto" dataField="costoString">
							<mx:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer autoDrawBackground="false">
										<fx:Script>
											<![CDATA[
												import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ProductosCliente;
											]]>
										</fx:Script>
										<s:states>
											<s:State name="normal"/>
											<s:State name="hovered"/>
											<s:State name="selected"/>
										</s:states>
										<s:Label text="{(data as ProductosCliente).costoString}" horizontalCenter="0"/>
									</s:MXItemRenderer>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="Marca" dataField="fabrica"/>
					</pqNet:columns>
				</pqNet:dataGridPqNet>
				<otros:divisionHueca width="100%" />
				<s:HGroup width="100%" height="40" verticalAlign="middle" paddingBottom="5" paddingTop="10">
					<grafica:botonPopUp icono="chart" click="stackGeneral.selectedChild = vistaGrafico"/>
					<pqNet1:botonPqNetLargo label="Inicio" click="minimiza()" />
					<s:Spacer width="100%" />
					<pqNet1:botonPqNetLargo id="btnExportar" icono="exportar" label="Exportar" click="generaArchivo()" />
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>-->
		<s:NavigatorContent id="vistaGrafico" width="100%" height="100%">
			<s:HGroup width="100%" height="100%" gap="0" paddingRight="-20">
				<s:VGroup width="100%" height="100%" gap="0" paddingRight="20" >
					<otros:divisionGruesa width="100%" />
					<graficas:PieChartPqGris id="myChart" width="100%" height="100%" paddingTop="100" paddingBottom="100" dataProvider="{null}" showDataTips="false" innerRadius=".5"
											 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true" >
						<graficas:series>
							<graficas:pieSeriesPqNet field="total" />
						</graficas:series>
					</graficas:PieChartPqGris>
					<otros:divisionHueca width="100%" />
					<!--<s:HGroup width="100%" height="40" verticalAlign="middle" paddingTop="10" paddingBottom="5">
						<grafica:botonPopUp icono="tabla" click="seleccionaTabla()"/>
						<pqNet1:botonPqNetLargo label="Inicio" click="minimiza()" />
					</s:HGroup>-->
				</s:VGroup>
				<!--<componentes:PanelInfoMax textoHTML="{catalogoInfoGraficas.TABLERO_CLIENTES_MIXPRODUCTOS}" />-->
			</s:HGroup>
		</s:NavigatorContent>
	</pq:MobViewStack>
</s:VGroup>
