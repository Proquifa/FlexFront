<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*" creationComplete="init()"
		 xmlns:label="skins.skin.label.*"  xmlns:otros="skins.otros.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SolidColor id="sc1" color="#0099FF" alpha=".5"/>
		<s:SolidColor id="scPorCobrar" color="red" alpha=".5"/>
		<s:SolidColor id="scVerdeEnTiempo" color="#32CD32" alpha=".5"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.CategoryAxis;
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.chartClasses.CartesianTransform;
			import mx.charts.chartClasses.DataTransform;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.interlocutor.AvisoDeCambios;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.GridEvent;
			
			[Bindable]
			private var _ocTransito: ArrayCollection;
			[Bindable]
			private var _ocTransitoGraf:ArrayCollection;
			[Bindable]
			private var _datos:ObjetoTabla;
			
			private function init():void{
				/* 	this.srvPedidos.send();
				this.srvGraficoPedidos.send(); */
			}
			
			private function maxTransito():void{	
				//var evt:Event = new Event("maxTransito",true,false);
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			public function actualizar():void{
				/* 				this.srvPedidos.send();
				this.srvGraficoPedidos.send(); */
			}
			
			
			private function gridItemClickEvent(event:ListEvent):void{	 	        	
				var tipoDocumento:String;
				var folioDocumento:String;
				var urlreq:URLRequest;
				var ruta:String;
				
				if (event.columnIndex == 1 ){
					var path:Object = Util.rutaNueva(this.gridPedidos.selectedItem.pedido);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + path.ruta + this.gridPedidos.selectedItem.pedido +".pdf";
					urlreq = new URLRequest ( ruta );	
					navigateToURL( urlreq );
				}	     
			}   
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaTabla;
				}else{
					this.navegador.selectedChild = vistaGrafico;
				}
			}
			
			private function generaArchivo():void{ 
				var file2:File = new File();
				
				var dato0:Number = new Number;
				var dato1:String = new String;
				var dato2:String = new String;
				var dato3:String = new String;
				var dato4:String = new String;
				var dato5:String = new String;
				var dato6:String = new String;
				var dato7:String = new String;
				
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				//hoja = this.tablaVentasPeriodo.dataProvider as ArrayCollection;
				var longitud:int =  new int ;
				longitud = this._ocTransito.length;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("P. Interno");
				fila1[2] = hoja.addItem("Cliente");
				fila1[3] = hoja.addItem("Concepto");
				fila1[4] = hoja.addItem("FPharmaUE");
				fila1[5] = hoja.addItem("FPharmaUSA");
				fila1[6] = hoja.addItem("FProquifa");
				fila1[7] = hoja.addItem("Tiempo de respuesta");
				
				for(var i:int = 0 ; i<longitud ; i++ ){
					fila1 = new Array();	
					gridPedidos.selectedIndex = i;
					trace(gridPedidos.selectedItem);
					dato0 = (this.gridPedidos.dataProvider[i] ).numeroDeFila;
					dato1 = (this.gridPedidos.dataProvider[i] ).pedido;
					dato2 = (this.gridPedidos.dataProvider[i] ).nombreCliente;
					dato3 = '"'+ (this.gridPedidos.dataProvider[i] ).descripcionProducto +'"';
					dato4 = (this.gridPedidos.dataProvider[i] ).fechaPharmaUEFormato;
					dato5 = (this.gridPedidos.dataProvider[i] ).fechaPharmaFormato;
					dato6 = (this.gridPedidos.dataProvider[i] ).fechaProquifaFormato;
					dato7 = (this.gridPedidos.dataProvider[i] ).tiempoRespuesta;
						
					fila1[0] = dato0;
					fila1[1] = dato1;
					fila1[2] = dato2;
					fila1[3] = dato3;
					fila1[4] = dato4;
					fila1[5] = dato5;
					fila1[6] = dato6;
					fila1[7] = dato7;
					
					hoja.addItem('\r' + fila1 );
					fila1 = null;
					
				}
				
				file2.save( hoja, "MaxOCenTransito.csv");
				
			}
			
			public function seleccionaTabla():void{
				this.navegador.selectedChild = this.vistaTabla;
			}
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}
			
			public function set cargaDatosTransito(datosTransito:ObjetoTabla):void{
				if(datosTransito == null){
					return ;
				}
				this._datos = datosTransito;
				var evento:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.CARGA_DATOS_TRANSITO);
				evento.idProveedor = datosTransito.idProveedor;
				evento.anioInt = datosTransito.anioInt;
				evento.periodo = datosTransito.periodo;
				evento.tipoPeriodo = datosTransito.tipoPeriodo;
				evento.mes = datosTransito.mes;
				dispatchEvent(evento);	
			}
			
			public function set obtenerOCEnTransito(transito:ArrayCollection):void{
				if(transito == null){
					return;
				}
					this._ocTransito = transito;
			}
				
			/**
			 * Metodo que recibe del mapa las oCTransito  
			 */
			public function set obtenerOCEnTransitoGraf(transitoGraf:ArrayCollection):void{
				if (transitoGraf==null){
					return ;
				}
				this._ocTransitoGraf = transitoGraf;
			}
			
		]]>
	</fx:Script>
	<!--<s:Panel width="100%" height="100%" title="OC EN TRANSITO" dropShadowVisible="false">-->
	<!--	<mx:CurrencyFormatter id="formateoMoneda" precision="2"/>
		<mx:DateFormatter id="validadorfecha" formatString="DD-MMM-YYYY"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<label:labelSubtitulo text="oc en transito" />
				<mx:Legend id="idLegend" dataProvider="{myChart}" direction="vertical"/>
				<mx:ColumnChart width="100%" height="100%" id="myChart" dataProvider="{this._ocTransitoGraf}"			
								mouseSensitivity="5" showDataTips="true" dataTipMode="multiple"> <!--dataTipFunction="dtFunc"-->
					<mx:series>
						<mx:ColumnSeries 						
							id="serieAET"
							xField="etiquetaMes" 
							yField="cantidadesT" 
							displayName="Cantidad En tiempo"
							fills="{[scVerdeEnTiempo]}" 
							/>
						<mx:ColumnSeries 	                	
							id="serieAFT"
							xField="etiquetaMes" 
							yField="cantidadesFT" 
							displayName="Cantidad Fuera de tiempo"
							fills="{[scPorCobrar]}" 
							/>	                
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="vMes" categoryField="etiquetaMes" title="Meses"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="vCantidad" baseAtZero="true" title="Cantidad de partidas"/>
					</mx:verticalAxis>			
				</mx:ColumnChart>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTransito()" width="60"/>
				</mx:HBox>
			</mx:VBox>		
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<label:labelSubtitulo text="oc en transito" />
				<mx:DataGrid id="gridPedidos" dataProvider="{this._ocTransito}" width="100%" height="100%"  itemClick="gridItemClickEvent(event)" variableRowHeight="true" textAlign="center">
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numeroDeFila"/>
						<mx:DataGridColumn >
							<mx:itemRenderer>
								<fx:Component>
									<mx:LinkButton label="{data.pedido}" color="blue" toolTip="{data.pedido}"/>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="Cliente" dataField="nombreCliente" /> 
						<mx:DataGridColumn headerText="Concepto" dataField="descripcionProducto" width="600"  /> 
						<mx:DataGridColumn  headerText="FPharmaUE" dataField="fechaPharmaUEFormato" width="100"/>
						<mx:DataGridColumn headerText="FPharmaUSA" dataField="fechaPharmaFormato" width="100"/>
						<mx:DataGridColumn headerText="FProquifa" dataField="fechaProquifaFormato" width="100"/>
						<mx:DataGridColumn headerText="Tiempo de respuesta" dataField="tiempoRespuesta" width="150"/> 
					</mx:columns>
				</mx:DataGrid>
				<!--<s:DataGrid id="gridPedidos" dataProvider="{this._ocTransito}" 
							 width="100%" height="100%"  gridClick="gridItemClickEvent(event)" variableRowHeight="true" >
					<s:columns>
						<s:ArrayList>						
							<formato:GridColumnFormato formato="numfila" headerText="#" guardarFormato="numeroDeFila"  width="60"/>
							<s:GridColumn headerText="P. Interno" dataField="pedido" width="150" >
								<s:itemRenderer>
									<fx:Component>
											<s:GridItemRenderer>
												<mx:LinkButton label="{data.pedido}" color="blue" toolTip="{data.pedido}"/>
											</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>	
							</s:GridColumn>
							<s:GridColumn headerText="Cliente" dataField="nombreCliente"  /> 
							<s:GridColumn headerText="Concepto" dataField="descripcionProducto" width="600"  /> 
							<formato:GridColumnFormato formato="fecha" headerText="FPharmaUE" dataField="fechaPharmaUE" guardarFormato="fechaformatoUE" width="100"/> 
							<formato:GridColumnFormato formato="fecha" headerText="FPharmaUSA" dataField="fechaPharma"  guardarFormato="fechaFormatoPharma" width="100"/> 
							<formato:GridColumnFormato formato="fecha" headerText="FProquifa" dataField="fechaProquifa" guardarFormato="fechaFormatoProquifa" width="100"/>
							<s:GridColumn headerText="Tiempo de respuesta" dataField="tiempoRespuesta" width="150"/> 
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>-->
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTransito()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" click="generaArchivo()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	<!--</s:Panel>--> 
	
</s:Group>
