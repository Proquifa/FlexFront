<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" width="100%" height="100%" 
		 xmlns:graficas="skins.skin.graficas.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			[Bindable] private var _infoEstados:ArrayCollection;
			private var _totCli: int;
			private var _totPedidos: int;
			private var keys:Object;
			private var keysPedidos: Object;
			public function set obtenerInformacionGrafica($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) return;
				_infoEstados = new ArrayCollection();
				myChart.dataProvider = new ArrayCollection();
				keys = new Object();
				var datosGrafica: ArrayCollection = new ArrayCollection();
				_totCli = 0;
				var keysC: Object = new Object();
				var currentItem:ResumenConsulta;
				/*for(var d:int = 0; d<$infoGrafica.length ; d++){
					currentItem = ($infoGrafica[d] as ResumenConsulta);
					if(!keysC.hasOwnProperty(currentItem.clientes_proveedores)){
						keysC[currentItem.clientes_proveedores] = currentItem.clientes_proveedores;
						_totCli++;
					}
					if(currentItem.etiqueta == "ESTADOS"){
						currentItem.totalPedidos = currentItem.totalFolios;
						currentItem.totalClientes = currentItem.clientes_proveedores;
						_infoEstados.addItem(currentItem);
					}
				}*/
				for(var d:int = 0; d<$infoGrafica.length ; d++){
					currentItem = ($infoGrafica[d] as ResumenConsulta);
					if(currentItem.etiqueta == "ESTADOS"){
						datosGrafica.addItem(currentItem);
					}
				}
				var arrayTemp:Array = new Array();
				arrayTemp = (ObjectUtil.copy(datosGrafica) as ArrayCollection).source;
				arrayTemp.sortOn("conceptoResultado");
				var arrayTotalTipos:Array = new Array();
				arrayTotalTipos = arrayTemp.filter(quitaDuplicados);
				FormarLosTipos(arrayTotalTipos,arrayTemp);
				myChart.dataProvider = myChart.aplicarFormatoConsultas(_infoEstados,null,null, false, 0, _totCli, _totPedidos);
			}
			private function FormarLosTipos(TotalTiposMarcas:Array,tiposPagosInfo:Array):void
			{
				var itemResumenConsulta:ResumenConsulta;
				var totalClientes: int;
				var j: int;
				var keysC: Object = new Object();
				var keysP: Object = new Object();
				var currentItem:ResumenConsulta;
				var totPedido: int;
				var monto: Number;
				_totCli = 0;
				_totPedidos = 0;
				var totPartidas: int;
				var totPiezas: int;
				keysP = new Object();
				for(var i:int =0; i<TotalTiposMarcas.length; i++){
					j=0;
					totalClientes = 0;
					keys = new Object();
					keysPedidos = new Object();
					monto = 0;
					totPartidas = 0;
					totPedido = 0;
					totPiezas = 0;
					currentItem = (tiposPagosInfo[j] as ResumenConsulta);
					
					while( (TotalTiposMarcas[i] as ResumenConsulta).conceptoResultado == currentItem.conceptoResultado ){
						
						if(!keysC.hasOwnProperty(currentItem.nombreCliente)){
							keysC[currentItem.nombreCliente] = currentItem.nombreCliente;
							_totCli++;
						}
						if(!keys.hasOwnProperty(currentItem.nombreCliente)){
							keys[currentItem.nombreCliente] = currentItem.nombreCliente;
							totalClientes++;
						}
						if(!keysPedidos.hasOwnProperty(currentItem.tipo)){
							keysPedidos[currentItem.tipo] = currentItem.tipo;
							totPedido += currentItem.totalFolios;
						}
						if(!keysP.hasOwnProperty(currentItem.tipo)){
							keysP[currentItem.tipo] = currentItem.tipo;
							_totPedidos += currentItem.totalFolios;
						}
						monto += currentItem.total;
						totPartidas += currentItem.partidas;
						totPiezas += currentItem.piezasTotal;
						tiposPagosInfo.shift();
						if(tiposPagosInfo.length >0)
							currentItem = tiposPagosInfo[j] as ResumenConsulta;
						else
							currentItem =new ResumenConsulta();
					}
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta = (ObjectUtil.copy(currentItem) as ResumenConsulta);
					itemResumenConsulta.totalClientes = totalClientes;
					itemResumenConsulta.etiqueta = (TotalTiposMarcas[i] as ResumenConsulta).conceptoResultado;
					itemResumenConsulta.total = monto;
					itemResumenConsulta.partidas = totPartidas;
					itemResumenConsulta.totalPedidos = totPedido;
					itemResumenConsulta.piezasTotal = totPiezas;
					_infoEstados.addItem(ObjectUtil.copy(itemResumenConsulta));
				}
			}
			public function quitaDuplicados(item:ResumenConsulta, idx:uint, tipoPagos:Array):Boolean{
				var temp:String = item.conceptoResultado.toLocaleUpperCase();
				item.conceptoResultado = temp;
				if (keys.hasOwnProperty(temp)) {
					return false;
				} else {
					keys[temp] = temp;
					return true;
				}
			}
		]]>
	</fx:Script>
<!--	totalFolios-->
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" gap="0">
		<s:Spacer width="100%" height="30%"/>
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%" 
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5">   
			<graficas:series>
				<graficas:pieSeriesPqNet field="piezasTotal"/> <!--piezasTotal-->
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="10%"/>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" height="8%" verticalAlign="middle">
			<componentes:tituloChartTablero width="100%" text="ESTADO" textAlign="center" />
		</s:VGroup>
		<s:Spacer width="100%" height="2%"/>
	</s:VGroup>
</s:Group>