<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:mate="http://mate.asfusion.com/"
				xmlns:servicios="mx.com.proquifa.proquifanet.admonComunicacion.vistas.servicios.*" 
				xmlns:events="com.asfusion.mate.events.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoPendientesPorEnviar;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.modelo.ModeloParaRecepcionDocumentoService;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.modelo.ModeloPendientesPorEnviar;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.DocEntraNew;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.DocRecibTabla;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.stageEditDoc;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.popUpAutorizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoGenerico;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaCatalogoService;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoBusquedasCR;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.admoncomunicacion.ModeloEnviaCorreoAdmonComunicacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.documentosRecibidos.ModeloBuscarDoctosR;
		]]>
	</mx:Script>
	
<!--	<servicios:ServicioPendientesPorEnviar id="servicios"/>-->
	
	<!--Evento para obtener los dcumentos recibidos por folio-->
	<mate:EventHandlers type="{EventoBusquedasCR.BUSCAR_DOCUMENTOS_POR_FOLIO_TODOS}">
		<mate:RemoteObjectInvoker destination="{Destinos.SERVICIO_DE_DOCUMENTACION}"
								  endpoint="{Destinos.END_POINT}"
								  method="buscarDocumentosRecibidosPorFolio"
								  arguments="{[event.folio]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR}"
									method="DocumentoReferencia"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR}"
									method="faultDocumentoRecibido"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{DocRecibTabla}">
		<mate:PropertyInjector source="{ModeloBuscarDoctosR}" 
							   sourceKey="regresarDocumentoR"
							   targetKey="recibirDocumentos"/>
	</mate:Injectors>
	
	<!--Evento para obtener los dcumentos recibidos por folio-->
	<mate:EventHandlers type="{EventoBusquedasCR.BUSCAR_DOCUMENTOS_POR_FOLIO}">
		<mate:RemoteObjectInvoker destination="{Destinos.SERVICIO_DE_DOCUMENTACION}"
								  endpoint="{Destinos.END_POINT}"
								  method="buscarDocumentosRecibidosPorFolio"
								  arguments="{[event.folio]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR}"
									method="DocumentoResultante"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR}"
									method="faultDocumentoRecibido"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{DocRecibTabla}">
		<mate:PropertyInjector source="{ModeloBuscarDoctosR}" 
							   sourceKey="regresarDocumentoR"
							   targetKey="recibirDocumentos"/>
	</mate:Injectors>
	
	<!--Evento para obtener los dcumentos recibidos por referencia-->
	<mate:EventHandlers type="{EventoBusquedasCR.BUSCAR_DOCUMENTOS_POR_REF}">
		<mate:RemoteObjectInvoker destination="{Destinos.SERVICIO_DE_DOCUMENTACION}"
								  endpoint="{Destinos.END_POINT}"
								  method="buscarDocumentosRecibidosPorReferencia"
								  arguments="{[event.referencia]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR}"
									method="DocumentoReferencia"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR}"
									method="faultDocumentoRecibido"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{DocRecibTabla}">
		<mate:PropertyInjector source="{ModeloBuscarDoctosR}" 
							   sourceKey="regresarDocumentoR"
							   targetKey="recibirDocumentos"/>
	</mate:Injectors>
	
	
	<!--Evento para cargar al vendedor de la empresa-->
	<mate:EventHandlers type="{EventoParaCatalogoService.OBTENER_EMPLEADOS_POR_EMPRESA}">
		<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_SERVICE}" 
								  endpoint="{Destinos.END_POINT}"
								  method = "obtenerVendedorPorNombreEmpresa"   
								  arguments="{[event.nombreEmpresa]}" 
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setVendedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviarEmpresa"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors targets="{[DocEntraNew,stageEditDoc]}">
		<mate:PropertyInjector source="{ModeloParaRecepcionDocumentoService}"
							   sourceKey="Vendedor"
							   targetKey="recibeVendedorDeLaEmpresa"/>
	</mate:Injectors>	
	
	
	<!--Evento para buscar a los Usuarios-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.OBTNER_USUARIOS}">
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerEmpleadosPorTipo"  
									arguments="{[event.tipo,event.valorAdicional]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setUsuarios"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{DocEntraNew}">
		<mate:PropertyInjector source="{ModeloParaRecepcionDocumentoService}"
							   sourceKey="Usuarios"
							   targetKey="usuariosParaCombo"/>
	</mate:Injectors>
	
	
	<!--Evento para obtener a los Empleados para el Destino-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.OBTENER_EMPLEADOS_DESTINOS_DOCUMENTOS }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerEmpleados"  	
									arguments="{[event.valorAdicional]}"						  	
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setEmpleado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors targets="{[DocEntraNew,stageEditDoc]}">
		<mate:PropertyInjector source="{ModeloParaRecepcionDocumentoService}"
							   sourceKey="Empleado"
							   targetKey="empleadosParaCombo"/>
	</mate:Injectors>
	
	<!--Evento para guardar la Documentacion-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.GUARDAR_DOCUMENTACION}">
		<!--<mate:RemoteObjectInvoker  instance="{servicios.servicioObtenerDatos}"
		method="obtenerEmpleados"
		showBusyCursor="true">	-->
		<mate:RemoteObjectInvoker destination="{Destinos.SERVICIO_DE_DOCUMENTACION}" 
								  endpoint="{Destinos.END_POINT}"
								  method="registrarDocumentoRecibido"  
								  arguments="{[event.documentoRecibido]}"  
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setDocumentoG"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar2"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{DocEntraNew}">
		<mate:PropertyInjector source="{ModeloParaRecepcionDocumentoService}"
							   sourceKey="DocumentoG"
							   targetKey="recibeDocumentosGuardadas"/>
	</mate:Injectors>
	
									<!--Evento para subir el DocumentoPdF-->
									<mate:EventHandlers type="{EventoGenerico.SUBIR_DOCUMENTO_PDF}">
										<mate:RemoteObjectInvoker destination="{Destinos.SUBIR_ARCHIVO_AL_SERVIDOR}" 
																  endpoint="{Destinos.END_POINT}"
																  method = "update"   
																  arguments="{[event.bytes,event.folioDocumento, event.tipoArchivo]}" 
																  showBusyCursor="true">
											<mate:resultHandlers>
												<mate:MethodInvoker generator="{ModeloPendientesPorEnviar}"
																	method="setDocumentoUP"
																	arguments="{true}"/>
											</mate:resultHandlers>
											<mate:faultHandlers>
												<mate:MethodInvoker generator="{ModeloPendientesPorEnviar}"
																	method="faultCotizacionesPorEnviar"
																	arguments="{fault}"/>
											</mate:faultHandlers>
										</mate:RemoteObjectInvoker>				
									</mate:EventHandlers>
									<mate:Injectors target="{DocEntraNew}">
										<mate:PropertyInjector source="{ModeloPendientesPorEnviar}"
															   sourceKey="DocumentoUP"
															   targetKey="recibeDocumentosGuardadasUP"/>
									</mate:Injectors>	
									
	<!--Evento para obtener los dcumentos recibidos por folio-->
	<!--<mate:EventHandlers type="{EventoBusquedasCR2.BUSCAR_DOCUMENTOS_POR_BUSQUEDA_AVANZADA}">
		<mate:RemoteObjectInvoker destination="{Destinos.SERVICIO_DE_DOCUMENTACION}"
								  endpoint="{Destinos.END_POINT}"
								  method="buscarDocumentosXBA"
								  arguments="{[event.finicio,event.ffin,event.empresa,event.referencia,event.destinatario,event.tipo,event.abiertoCerrado]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR2}"
									method="DocumentosResultantes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloBuscarDoctosR2}"
									method="faultDocumentoRecibido"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{DocRecibTabla}">
		<mate:PropertyInjector source="{ModeloBuscarDoctosR2}" 
							   sourceKey="regresarDocumentosR"
							   targetKey="recibirDocumentos"/>
	</mate:Injectors>-->
	
	<!--Evento para validar la Autorizacion-->
	<mate:EventHandlers type="{EventoGenerico.VALIDAR_AUTORIZACION}">
		<mate:RemoteObjectInvoker destination="{Destinos.EMPLEADO_SERVICE}" 
								  endpoint="{Destinos.END_POINT}"
								  method="validarContrasena"  
								  arguments="{[event.empleado]}"
								  showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setValidaEmpleado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{popUpAutorizacion}">
		<mate:PropertyInjector source="{ModeloParaRecepcionDocumentoService}"
							   sourceKey="ValidaEmpleado"
							   targetKey="contrasenaValidaAutorizacion"/>
	</mate:Injectors>	
	<!--Evento para modificar la Documentacion-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.MODIFICAR_DOCUMENTACION_EXISTENTE}">
		<mate:RemoteObjectInvoker destination="{Destinos.SERVICIO_DE_DOCUMENTACION}" 
								  endpoint="{Destinos.END_POINT}"
								  method = "actualizarDocumentoRecibido"   
								  arguments="{[event.documentoNuevo]}" 
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setDocumentoMod"
									arguments="{true}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{stageEditDoc}">
		<mate:PropertyInjector source="{ModeloParaRecepcionDocumentoService}"
							   sourceKey="DocumentoMod"
							   targetKey="recibeDocumentosModificado"/>
	</mate:Injectors>	
	
	<!--Evento crear el Pendiente de HabilitarCliente-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.CREAR_PENDIENTE_HABILITAR_CLIENTE }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.SERVICIO_DE_DOCUMENTACION}" 
									endpoint="{Destinos.END_POINT}"
									method="generarPendienteClienteDeshabilitado"  	
									arguments="{[event.folio]}"						  	
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setPendienteHabilitaCliente"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors 			targets="{[DocEntraNew, stageEditDoc]}">
		<mate:PropertyInjector 	source="{ModeloParaRecepcionDocumentoService}"
							   	sourceKey="PendienteHabilitaCliente"
							   	targetKey="pendienteHabilitando"/>
	</mate:Injectors>
	
	
	
	
	<mate:EventHandlers type="{EventoPendientesPorEnviar.VALIDAR_CUPON }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.SERVICIO_DE_DOCUMENTACION}" 
									endpoint="{Destinos.END_POINT}"
									method="validarFolioCampana"  	
									arguments="{[event.tipo, event.folio]}"						  	
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="setValidarCupon"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaRecepcionDocumentoService}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	
	<mate:Injectors 			targets="{[DocEntraNew]}">
		<mate:PropertyInjector 	source="{ModeloParaRecepcionDocumentoService}"
								sourceKey="ValidarCupon"
								targetKey="resultadoCupon"/>
	</mate:Injectors>
	
</mate:EventMap>