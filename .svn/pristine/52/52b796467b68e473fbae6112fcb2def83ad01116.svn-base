<?xml version="1.0" encoding="utf-8"?>
<comun:contenedorCatalogosTableroMiniChart
	xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.comun.*"
	xmlns:componentes = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	titulo="LÍNEA DE CRÉDITO"
	width="100%" height="100%"  
	
	>
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="500"/>
		<mx:SolidColorStroke id = "s1" color="0x3b98af" weight="2"/>
		<mx:SolidColorStroke id = "s2" color="0x{catalogoColores.LABEL_AMARILLO}" weight="2"/>
		<mx:SolidColorStroke id = "s3" color="0x{catalogoColores.LABEL_ROJO}" weight="2"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTabProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.proveedor.BalanceDeCredito;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.lineaDeCredito.DataToolTipLineaDeCredito;
			
			import skins.catalogos.catalogoColores;
			
			private const _tamanioMinimo:int = 170;
			private var tipoConsulta:String;
			
			[Bindable] public var _etiquetaPeriodo:String = "";	
			[Bindable] private var _ocComprasGrafica:ArrayCollection;
			
			private var _listaMensual:ArrayCollection = new ArrayCollection
				([
					"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
				]);
			
			/* 			public function set recibeFiltros(datos:Object):void
			{
			
			tipoConsulta = datos.estado;
			_ocComprasGrafica = new ArrayCollection();
			
			if (tipoConsulta == 'COLABORADOR' || tipoConsulta == 'UNIVERSO'  )
			{
			this.montoLimite.visible = this.montoLinea.visible = false;
			}else{
			this.montoLimite.visible = this.montoLinea.visible = true;
			}
			} */
			
			public function set recibeInfoLineaDeCredito($info:ArrayCollection):void
			{
				
				if($info == null) 
					return;
				
				this._ocComprasGrafica = new ArrayCollection();
				this._ocComprasGrafica = $info;
				this.myChart.dataProvider = iniciarGrafica(_ocComprasGrafica);
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				var monto:Number = 0;
				
				arrReturn.addItem(new Object());
				
				for( m = 0; m < $lista.length;m++ )
				{
					objeto = new Object();
					objeto.montoUSDMAX = 0;
					objeto.montoLimite_0 = 0;
					objeto.montoLinea_0 = 0;
					objeto.dia = '';
					objeto.fecha = null;
					
					if((($lista[m] as BalanceDeCredito).etiqueta == "COMPRA_0") || (($lista[m] as BalanceDeCredito).etiqueta == "PAGO_0") )
					{
						monto = monto + ($lista[m] as BalanceDeCredito).monto ;
						objeto.montoUSDMAX = monto;	
						objeto.montoLimite_0 = ($lista[m] as BalanceDeCredito).limiteCredito ;
						objeto.montoLinea_0 = ($lista[m] as BalanceDeCredito).lineaCredito ;
						objeto.dia = UtilsFecha.formatoFechaDDMMMYY(($lista[m] as BalanceDeCredito).fecha);
						objeto.fecha = ($lista[m] as BalanceDeCredito).fecha;
						arrReturn.addItem(objeto);
					}
				}
				arrReturn.addItem(new Object());
				return arrReturn;	
			}
			
			public function set recibeEtiquetaPeriodo(etiqueta:String):void
			{
				this._etiquetaPeriodo = etiqueta;
			}
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			private var _event:EventoTabProveedores;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			private var _keyAnterior:String = "";
			
			public function set recibirFiltrosTableroProveedores(etiqueta:EventoTabProveedores):void
			{
				if(etiqueta == null) return;
				
				_event = etiqueta;
				_minimoMeses = _event.mesInicio;
				_maximoMeses = _event.mesFin;
				
				myChart.dataProvider = iniciarGrafica( _ocComprasGrafica );
			}
		]]>
	</fx:Script>
	
	<comun:contenido>
		
		<s:VGroup width="100%" height="100%" horizontalAlign="right" paddingTop="50" paddingBottom="10" >
			
			<mx:LineChart height="100%" width="100%" id="myChart"
						  mouseSensitivity="5" 
						  dataTipRenderer="{DataToolTipLineaDeCredito}" 
						  showDataTips="true" 
						  showDataTipTargets="false"  
						  dataTipMode="single" 
						  paddingRight="{ width > _tamanioMinimo ? 30 : 5}"
						  paddingLeft="{ width > _tamanioMinimo ? 20 : 5}"
						  seriesFilters="[]"
						  >
				
				<mx:series>
					<mx:LineSeries yField="montoUSDMAX" xField="dia" form="segment"  lineStroke="{s1}" showDataEffect="{fxInterpolateIn}" />
					<mx:PlotSeries yField="montoUSDMAX" xField="dia" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
										<s:fill>
											<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
					<!--linea de credito-->
					<mx:PlotSeries id="montoLimite" yField="montoLimite_0" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer>
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									<s:Ellipse width="8" height="2" horizontalCenter="0" verticalCenter="0">
										<s:fill>
											<s:SolidColor color="0x{catalogoColores.LABEL_AMARILLO}"/>
										</s:fill>		
									</s:Ellipse>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:PlotSeries>
					<!--Limite de credito-->
					<mx:LineSeries id="montoLinea"  yField="montoLinea_0"  form="segment"  lineStroke="{s3}" showDataEffect="{fxInterpolateIn}" />
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vDia" categoryField="dia"/> <!--categoryField="dia"-->
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad" labelFunction="formateoEje" />
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad}" showLine="false" showLabels="{ width > _tamanioMinimo ? true : false}" tickPlacement="none" styleName="axisVerticalLabels"/>
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vDia}" showLabels="false" showLine="false" />
				</mx:horizontalAxisRenderers>
				<mx:backgroundElements>
					<mx:GridLines visible="{ width > _tamanioMinimo ? true: false}">
						<mx:horizontalStroke>
							<s:SolidColorStroke weight="0.5" color="0xeeeeee" />
						</mx:horizontalStroke>
					</mx:GridLines>
				</mx:backgroundElements>
			</mx:LineChart>
			<componentes:horizontalAxisChartPq text="CANTIDAD CONFIRMADA" horizontalCenter="0" width="100%" paddingRight="{ width > _tamanioMinimo ? 30 : 5}" paddingLeft="{ width > _tamanioMinimo ? 70 : 5}"/>
		</s:VGroup>			
		
	</comun:contenido>
	
</comun:contenedorCatalogosTableroMiniChart>
