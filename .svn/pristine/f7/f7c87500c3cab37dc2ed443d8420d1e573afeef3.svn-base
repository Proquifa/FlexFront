<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas creationPolicy="all" creationComplete="init()" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:ns1="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.admon.gridsubprocesos.*" xmlns:acordeon="skins.skin.acordeon.*" xmlns:label="skins.skin.label.*" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:otros="skins.otros.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.admon.EventoVistaCatalogo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.admon.popup.estructura.ChildAcordeon;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.admon.popup.estructura.PopUpEstructura;
			
			import mx.controls.List;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var Titulo:String;
			private var Procesos:ArrayCollection;
			
			
			public function init():void{
				var event:EventoVistaCatalogo = new EventoVistaCatalogo(EventoVistaCatalogo.TRAER_USUARIOS);
				this.dispatchEvent(event);
			}
			/*public function set recibirProcesos(_Procesos:ArrayCollection):void{
				if(_Procesos.length>0){
					this.Procesos = new ArrayCollection();
					this.Procesos = _Procesos;
					this.formarAcordeon();
				}
			}*/
			//public var visor:visorprueba = new visorprueba();
			
			/*public function init():void{
				visor = PopUpManager.createPopUp(this,visorprueba,false) as visorprueba;
				visor.visible = false;
			}*/
			
			private var accion:String = "";
			
			public function set recibirProcesos(objeto:Object):void{
				if(objeto.Procesos.length>0){
					this.detallesubproceso.limpiar();
					this.Procesos = new ArrayCollection();
					this.Procesos = objeto.Procesos;
					this.Titulo = objeto.Titulo;
					this.accion = objeto.accion;
					this.formarAcordeon();
				}
			}
			
			private function formarAcordeon():void{
				this.ACestructura.removeAllChildren();
				for(var m:int=0;m<this.Procesos.length;m++){
					var lista:ChildAcordeon = new ChildAcordeon();
					lista.set_Proceso(this.Procesos[m]);
					this.ACestructura.addChild(lista as DisplayObject);
					
				}
				if(this.accion == "actualizar"){
						crearPopUpEditarEstructura();
				}
			}
			
			private function crearPopUpEditarEstructura():void{
				var popup:PopUpEstructura = new PopUpEstructura();
				popup = PopUpEstructura(PopUpManager.createPopUp(this,PopUpEstructura,true));
				popup._dataProviderEstructura = new ArrayCollection();
				popup._dataProviderEstructura = this.Procesos;
				popup.addEventListener(CloseEvent.CLOSE,cerrarpopup,false,0,true);
			}
			
			private function cerrarpopup(event:CloseEvent):void{
				for(var m:int = 0; m<this.Procesos.length;m++){
					this.Procesos[m].borrarSubProcesosVacios();
				}
			}
			
			/*private function crearPopUpEditarEstructura():void{
				this.visor.visible = true;
				/*var popup:PopUpEstructura = new PopUpEstructura();
				this.vscontenedor.addChild(popup);
				popup._dataProviderEstructura = new ArrayCollection();
				popup._dataProviderEstructura = this.Procesos;
				popup.addEventListener(CloseEvent.CLOSE,cerro,false,0,true);
				this.vscontenedor.selectedIndex = 1;
			}*/
			
			private function cerro(event:CloseEvent):void{
				this.vscontenedor.removeChildAt(1);
				Alert.show("eliminado");
				this.vscontenedor.selectedIndex = 0;
			}
			
			import mx.core.Window;
			/*private function crear():void{
				new visorprueba().open();
			}*/
			
			/*			public function crearPopUp():void{
				var popup:VistaDetalleCatalogo = new VistaDetalleCatalogo();
				popup = VistaDetalleCatalogo(PopUpManager.createPopUp(this,VistaDetalleCatalogo,true));
				//PopUpManager.createPopUp(this.stage,popup);
			}*/
			
			public function actualizarEstructura():void{
				var event:EventoVistaCatalogo = new EventoVistaCatalogo(EventoVistaCatalogo.ACTUALIZAR_ESTRUCTURA);
				this.dispatchEvent(event);
			}
			
		]]>
	</mx:Script>
	
	
	<mx:ViewStack id="vscontenedor" height="100%" width="100%">
		
	<mx:Canvas height="100%" width="100%">
	<label:labelTitulo_Otros paddingLeft="15" width="100%" y="10" text="{this.Titulo}"/>
	<!--<mx:Label paddingLeft="15" fontSize="30" fontWeight="bold" fontFamily="Verdana" width="100%" y="10" text="{this.Titulo}"/>-->
	
	<s:Button styleName="botonNegroOld"  id="btnmenu" x="{this.width - (this.btnmenu.width + 15)}" y="14" label="MenÃº"/>
	<otros:division width="100%" right="15" left="15" y="54"/>
		<mx:HBox right="15" left="15" paddingBottom="15"  y="74" width="100%" height="100%">
		<mx:VBox x="15" y="74" width="240" height="100%">
			<acordeon:acordeonPqNet id="ACestructura" width="100%" height="100%" >
			</acordeon:acordeonPqNet>
			<s:Button styleName="botonNegroOld" width="100%" click="actualizarEstructura()" label="Editar Estructura"/>
		</mx:VBox>
			<ns1:DetalleSubprocesos id="detallesubproceso" borderColor="#C4CCCC">
		</ns1:DetalleSubprocesos>
	</mx:HBox>
	</mx:Canvas>
	</mx:ViewStack>
</mx:Canvas>
