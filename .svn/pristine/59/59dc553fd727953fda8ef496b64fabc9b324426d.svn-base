<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 xmlns:vistas="vista.vistas.*" 
		 xmlns:ns="vista.vistas.ev_AtenderPoolDeVisitas.*" 
		 xmlns:ns1="vista.vistas.ev_PlanificarSprint.*" 
		 xmlns:ns2="vista.vistas.ev_AtenderPoolDeVisitas.Graficas.*"
		 xmlns:label="skins.skin.label.*"
		 xmlns:otros="skins.otros.*"
		 creationComplete="init(event)"
		 >
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import vista.evento.EventoEVGeneral;
			import vista.evento.EventoEVPlanificarSprint;
			[Bindable] public var sizeFontAgente:Number;
			[Bindable] public var sizeFonTitulos:Number;
			[Bindable] public var sizeFont:Number;
			
			protected function vistaAnterior(event:EventoEVGeneral):void
			{
				plantilla.indice = 0;
				cmpTitulo.isVisble = false;
				
			}		
			
			protected function init(event:FlexEvent):void
			{
				plantilla.cargarEncabezado(cmpTitulo);
				plantilla.cargarLista(cmpGrid);
				plantilla.cargarGraficas(hgpGraficas);
				plantilla.cargarOperacion(vistaOperacion);
				plantilla.cargarLeyenda(footer);
				addEventListener("planificarPoolVisita",seleccionarPlanificar);
				
			}
			
			private function seleccionarPlanificar(event:Event):void
			{
				plantilla.indice = 1;
				cmpTitulo.isVisble = true;
			
				
				var evento:EventoEVPlanificarSprint = new EventoEVPlanificarSprint(EventoEVPlanificarSprint.OBTENER_VISITA_CLIENTE_POR_EMPLEADO);
				evento.usuario = DatosGlobales.getInstance()._usuario.clave;
				dispatchEvent(evento);
				
				var eventoSprint:EventoEVPlanificarSprint = new EventoEVPlanificarSprint(EventoEVPlanificarSprint.OBTENER_SPRINST_EN_CURSO);
				eventoSprint.usuario = DatosGlobales.getInstance()._usuario.clave;
				dispatchEvent(eventoSprint);
				
				
				var eventoSprint:EventoEVPlanificarSprint = new EventoEVPlanificarSprint(EventoEVPlanificarSprint.OBTENER_SPRINST_SIN_CERRAR);
				eventoSprint.usuario = DatosGlobales.getInstance()._usuario.clave;
				dispatchEvent(eventoSprint);
				
			}
			
			public function set recibirVisitaClienteAgrupadas(value:ArrayCollection):void
			{
				cmpGrid.setData(value);
			}
			public function set recibirListaGraficaCliente(value:ArrayCollection):void
			{
				grafClientes.dataClientes( ObjectUtil.copy(value) as ArrayCollection );
			}
			public function set recibirListaGraficaTipoVisita(value:ArrayCollection):void
			{
				grafVisitas.dataVisitas( value );
			}
			public function set recibirListaVisitaClientePorEmpleado(value:ArrayCollection):void
			{
				setTimeout(vistaOperacion.setListaVisitaCliente,500,value);
				
			}
			
			public function set recibirListaSprintSinCerrar(value:ArrayCollection):void
			{
				var fechaHoy:Date = new Date();
				var numeroSprint:Number = 0;
				for (var i:int = 0; i < value.length; i++ )
				{
					if( fechaHoy >=value[i].fechaInicio &&  fechaHoy <= value[i].fechaFin)
					{
						numeroSprint = value[i].numeroSprint;
						break;
					}
					
				}
				
				
				vistaOperacion.SprintParaPlanificar = numeroSprint +1;
				vistaOperacion.verificarBotonPlanificar();
				
				
			}
			
			public function set recibirListaSprints(value:ArrayCollection):void
			{
				vistaOperacion.recibirSprint(value);
				vistaOperacion.reset();
				if(value.length > 0){
					var fecha:Date = sumarMedioDiaAFecha(new Date);
					var diferencia:int = UtilsFecha.regresaDiferenciaEntreFechasEnDias(fecha,value[0].fechaInicio);
					vistaOperacion.acabo = false;
					vistaOperacion.setFechaLimite(diferencia,24-fecha.getHours(),60-fecha.getMinutes(),60-fecha.getSeconds());
					vistaOperacion.contadorTiempo(true);
				}
			}
			
			public function set recibirRespuestaGuardado(value:Boolean):void
			{
				if(value)
				{
					vistaOperacion.modificaciones = true;
					alertaSingleton.show("Se guardo con éxito");
				}
				
			}
			public function set recibirRespuestaPlanificar(value:Boolean):void
			{
				if(value){
					
					var evento:EventoEVPlanificarSprint = new EventoEVPlanificarSprint(EventoEVPlanificarSprint.OBTENER_VISITA_CLIENTE_POR_EMPLEADO);
					evento.usuario = DatosGlobales.getInstance()._usuario.clave;
					dispatchEvent(evento);
					
					var eventoSprint:EventoEVPlanificarSprint = new EventoEVPlanificarSprint(EventoEVPlanificarSprint.OBTENER_SPRINST_EN_CURSO);
					eventoSprint.usuario = DatosGlobales.getInstance()._usuario.clave;
					dispatchEvent(eventoSprint);
					
					alertaSingleton.show("Se planificó con éxito el sprint");
				}
			}
			
			public function sumarMedioDiaAFecha(fecha:Date):Date
			{
				var fechaSumada:Date = new Date();
				if(fecha){
					var hora:int = fecha.getHours();
					hora += 12
					var dia:int = fecha.getDate();
					var mes:int = fecha.getMonth();
					var anio:int = fecha.getFullYear();
					var minuto:int = fecha.getMinutes();
					var segundo:int = fecha.getSeconds();
					
					if(hora > 24){
						dia += 1;
						hora -= 24
					}
				     hora++;
					 dia--;	 
					fechaSumada = new Date(anio,mes,dia,hora,minuto,segundo);
				}
				return fechaSumada;
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" gap="0" visible="false" includeInLayout="false">
		<ns:HeaderVentasEV id="cmpTitulo" width="100%" titulo="PLANIFICAR SPRINT" vistaAnterior="vistaAnterior(event)" />
		<ns1:VistaInicialPlanificarSprint width="100%" height="100%" id="cmpGrid"/>
		
		<s:VGroup id="hgpGraficas" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" gap="15" paddingBottom="20" paddingTop="20" paddingLeft="20" paddingRight="20">
			<label:Titulo_15_Helvetica fontWeight="bold" width="100%" text="CLIENTES" textAlign="center" fontSize="{sizeFonTitulos}" color="#404040"/>
			<ns2:GraficasPoolVisitas id="grafClientes" width="100%" height="100%" maxHeight="583" maxWidth="583"/>
			<s:Spacer height="5%" />
			<label:Titulo_15_Helvetica fontWeight="bold" width="100%" text="TIPO DE VISITAS" textAlign="center" fontSize="{sizeFonTitulos}" color="#404040"/>
			<ns2:GraficasPoolVisitas id="grafVisitas" width="100%" height="100%" maxHeight="583" maxWidth="583"/>
		</s:VGroup> 
		
		<s:VGroup width="100%" height="100%"  gap="0">
			<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" id="footer">
				<s:HGroup paddingLeft="-14" width="100%" >
					<otros:division width="100%" grueso="1" color="#404040"/>
				</s:HGroup>
				<s:HGroup width="60%" height="100%" gap="25" verticalAlign="middle" horizontalAlign="center">
					<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="right">
						<mx:Image smoothBitmapContent="true" source="{catalogoIconosEtiquetas.getInstance().crm_icono}" />
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" textAlign="center" text="CRM"/>
					</s:HGroup>
					<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="left">
						<mx:Image smoothBitmapContent="true" source="{catalogoIconosEtiquetas.getInstance().soluciones_icono}" />
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" textAlign="center" text="Solicitudes"/>
					</s:HGroup>  
				</s:HGroup>  
				
			</s:VGroup>  
		</s:VGroup>
		
		<ns1:VistaOperacionPlanificarSprint width="100%" height="100%" id="vistaOperacion" />
	</s:VGroup>
	
	<vistas:Plantilla_VistaInicial id="plantilla" width="100%" height="100%" />
</s:Group>
