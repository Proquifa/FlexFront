<?xml version="1.0" encoding="utf-8"?>
<graficaPie:ContenedorComparacionTableroClientes xmlns:fx="http://ns.adobe.com/mxml/2009" 
									xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									xmlns:s="library://ns.adobe.com/flex/spark"
									xmlns:mx="library://ns.adobe.com/flex/mx" 
									xmlns:otros="skins.otros.*" 
									xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
									xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*" 
									titulo="ENTREGAS Â· ABIERTAS / CERRADAS" 
									width="100%" height="100%" 
									>
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="300"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import skins.catalogos.catalogoColores;
			
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			
			private var _listaMensual:ArrayCollection = new ArrayCollection(["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"]);
			
			private var _listaQuincenal:ArrayCollection = new ArrayCollection([{11:"11",valor:"1ra. Enero"},{12:"12",valor:"2da. Enero"},{21:"21",valor:"1ra. Febrero"},{22:"22",valor:"2da. Febrero"},{31:"31",valor:"1ra. Marzo"},{32:"32",valor:"2da. Marzo"},{41:"41",valor:"1ra. Abril"},
				{42:"42",valor:"2da. Abril"},{51:"51",valor:"1ra. Mayo"},{52:"52",valor:"2da. Mayo"},{61:"61",valor:"1ra. Junio"},{62:"62",valor:"2da. Junio"},{71:"71",valor:"1ra. Julio"},{72:"72",valor:"2da. Julio"},{81:"81",valor:"1ra. Agosto"},{82:"82",valor:"2da. Agosto"},
				{91:"91",valor:"1ra. Septiembre"},{92:"92",valor:"2da. Septiembre"},{101:"101",valor:"1ra. Octubre"},{102:"102",valor:"2da. Octubre"},{111:"111",valor:"1ra. Noviembre"},{112:"112",valor:"2da. Noviembre"},{121:"121",valor:"1ra. Diciembre"},{122:"122",valor:"2da. Diciembre"}]);
			
			public function set recibeLinealEntregas( $lista:ArrayCollection ):void
			{
				if( $lista == null ) 
					return;
				
				_linealArrGrafica = $lista;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "ENTREGAS_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
				myChart2.dataProvider = arrMinisChart;
			}
			
			private function filtrarPeriodos( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objetoPeriodo1:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "ENTREGAS_0") );
				var objetoPeriodo2:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "ENTREGAS_1") );
				var objetoPeriodo3:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "ENTREGAS_2") );
				var objetoPeriodo4:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "ENTREGAS_3") );
				var objetoPeriodo5:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "ENTREGAS_4") );
				objetoPeriodo1.etiquetaX = _event.labelPeriodo1;
				objetoPeriodo2.etiquetaX = _event.labelPeriodo2;
				objetoPeriodo3.etiquetaX = _event.labelPeriodo3;
				objetoPeriodo4.etiquetaX = _event.labelPeriodo4;
				objetoPeriodo5.etiquetaX = _event.labelPeriodo5;
				arrReturn.addItem( objetoPeriodo5 );
				arrReturn.addItem( objetoPeriodo4 );
				arrReturn.addItem( objetoPeriodo3 );
				arrReturn.addItem( objetoPeriodo2 );
				arrReturn.addItem( objetoPeriodo1 );
				return arrReturn;
			}
			
			private function generateObjectItemBarChart( $lista:ArrayCollection ):Object
			{
				var objetoReturn:Object = new Object();
				objetoReturn.entregaAET = 0;
				objetoReturn.entregaAFT = 0;
				objetoReturn.entregaCET = 0;
				objetoReturn.entregaCFT = 0;
				objetoReturn.montoTotalA = 0;
				objetoReturn.montoTotalC = 0;
				objetoReturn.montoTotalAET = 0;
				objetoReturn.montoTotalAFT = 0;
				objetoReturn.montoTotalCET = 0;
				objetoReturn.montoTotalCFT = 0;
				
				for( var m:int = 0; m < $lista.length;m++ )
				{
					var resumen:ResumenConsulta = $lista[m] as ResumenConsulta;
					if( resumen.conceptoResultado == "FUERA DE TIEMPO ABIERTA" )
					{
						objetoReturn.entregaAFT += resumen.piezasTotal;
						objetoReturn.montoTotalA += resumen.total;
						objetoReturn.montoTotalAFT += resumen.total;
					}
					else if( resumen.conceptoResultado == "EN TIEMPO ABIERTA" )
					{
						objetoReturn.entregaAET += resumen.piezasTotal;
						objetoReturn.montoTotalA += resumen.total;
						objetoReturn.montoTotalAET += resumen.total;
					}
					else if( resumen.conceptoResultado == "FUERA DE TIEMPO CERRADA" )
					{
						objetoReturn.entregaCFT += resumen.piezasTotal;
						objetoReturn.montoTotalC += resumen.total;
						objetoReturn.montoTotalCFT += resumen.total;
					}
					else if( resumen.conceptoResultado == "EN TIEMPO CERRADA" )
					{
						objetoReturn.entregaCET += resumen.piezasTotal;
						objetoReturn.montoTotalC += resumen.total;
						objetoReturn.montoTotalCET += resumen.total;
					}
				}
				
				objetoReturn.totalA = objetoReturn.entregaAET + objetoReturn.entregaAFT;
				objetoReturn.totalC = objetoReturn.entregaCET + objetoReturn.entregaCFT;
				objetoReturn.entregaAETLabel = objetoReturn.entregaAET + "ET";
				objetoReturn.entregaAFTLabel = objetoReturn.entregaAFT+ "FT";
				objetoReturn.entregaCETLabel = objetoReturn.entregaCET + "ET";
				objetoReturn.entregaCFTLabel = objetoReturn.entregaCFT+ "FT";
				return objetoReturn;
			}
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				var cuenta:int = 1;
				var resumen:ResumenConsulta;
				var m:int;
				
				if(_event != null && _event.parametros.periodo.toLowerCase() == "quincenal")
				{
					
					objeto = new Object();
					objeto.mes = _listaQuincenal[_event.parametros.rangoMinMes].valor;
					objeto.entregaAET = 0;
					objeto.entregaAFT = 0;
					objeto.entregaCET = 0;
					objeto.entregaCFT = 0;
					objeto.montoTotalA = 0;
					objeto.montoTotalC = 0;
					objeto.montoTotalAET = 0;
					objeto.montoTotalAFT = 0;
					objeto.montoTotalCET = 0;
					objeto.montoTotalCFT = 0;
					
					for( m = 0; m < $lista.length;m++ )
					{
						resumen = $lista[m] as ResumenConsulta;
						if( resumen.conceptoResultado == "FUERA DE TIEMPO ABIERTA" )
						{
							objeto.entregaAFT += resumen.piezasTotal;
							objeto.montoTotalA += resumen.total;
							objeto.montoTotalAFT += resumen.total;
						}
						else if( resumen.conceptoResultado == "EN TIEMPO ABIERTA" )
						{
							objeto.entregaAET += resumen.piezasTotal;
							objeto.montoTotalA += resumen.total;
							objeto.montoTotalAET += resumen.total;
						}
						else if( resumen.conceptoResultado == "FUERA DE TIEMPO CERRADA" )
						{
							objeto.entregaCFT += resumen.piezasTotal;
							objeto.montoTotalC += resumen.total;
							objeto.montoTotalCFT += resumen.total;
						}
						else if( resumen.conceptoResultado == "EN TIEMPO CERRADA" )
						{
							objeto.entregaCET += resumen.piezasTotal;
							objeto.montoTotalC += resumen.total;
							objeto.montoTotalCET += resumen.total;
						}
					}
					
					objeto.totalA = objeto.entregaAET + objeto.entregaAFT;
					objeto.totalC = objeto.entregaCET + objeto.entregaCFT;
					objeto.entregaAETLabel = objeto.entregaAET + "ET";
					objeto.entregaAFTLabel = objeto.entregaAFT+ "FT";
					objeto.entregaCETLabel = objeto.entregaCET + "ET";
					objeto.entregaCFTLabel = objeto.entregaCFT+ "FT";
					arrReturn.addItem(objeto);
				}
				else
				{
					while( cuenta < 13)
					{
						if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
						{
							objeto = new Object();
							objeto.mes = _listaMensual[cuenta -1];
							objeto.entregaAET = 0;
							objeto.entregaAFT = 0;
							objeto.entregaCET = 0;
							objeto.entregaCFT = 0;
							objeto.montoTotalA = 0;
							objeto.montoTotalC = 0;
							objeto.montoTotalAET = 0;
							objeto.montoTotalAFT = 0;
							objeto.montoTotalCET = 0;
							objeto.montoTotalCFT = 0;
							
							for( m = 0; m < $lista.length;m++ )
							{
								resumen = $lista[m] as ResumenConsulta;
								if(cuenta == resumen.mes)
								{
									if( resumen.conceptoResultado == "FUERA DE TIEMPO ABIERTA" )
									{
										objeto.entregaAFT += resumen.piezasTotal;
										objeto.montoTotalA += resumen.total;
										objeto.montoTotalAFT += resumen.total;
									}
									else if( resumen.conceptoResultado == "EN TIEMPO ABIERTA" )
									{
										objeto.entregaAET += resumen.piezasTotal;
										objeto.montoTotalA += resumen.total;
										objeto.montoTotalAET += resumen.total;
									}
									else if( resumen.conceptoResultado == "FUERA DE TIEMPO CERRADA" )
									{
										objeto.entregaCFT += resumen.piezasTotal;
										objeto.montoTotalC += resumen.total;
										objeto.montoTotalCFT += resumen.total;
									}
									else if( resumen.conceptoResultado == "EN TIEMPO CERRADA" )
									{
										objeto.entregaCET += resumen.piezasTotal;
										objeto.montoTotalC += resumen.total;
										objeto.montoTotalCET += resumen.total;
									}
								}
							}
							objeto.totalA = objeto.entregaAET + objeto.entregaAFT;
							objeto.totalC = objeto.entregaCET + objeto.entregaCFT;
							objeto.entregaAETLabel = objeto.entregaAET + "ET";
							objeto.entregaAFTLabel = objeto.entregaAFT+ "FT";
							objeto.entregaCETLabel = objeto.entregaCET + "ET";
							objeto.entregaCFTLabel = objeto.entregaCFT+ "FT";
							arrReturn.addItem(objeto);
						}
						cuenta++;
					}
				}
				return arrReturn;
			}
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			
			public function set recibirFiltros( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "ENTREGAS_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
				myChart2.dataProvider = arrMinisChart;
			}
			
			public function set recibirFiltrosIndividual( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "ENTREGAS_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
				myChart2.dataProvider = arrMinisChart;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String
			{
				return $etiqueta.toString().toUpperCase();
			}
			
			private function formateoEje( $valor:Number, $valorPrevio:Object, $eje:Object ):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = String( $valor );
				return strRegreso;
			}
			
		]]>
	</fx:Script>
	<graficaPie:contenido>
		<s:HGroup width="100%" height="100%">
			<!-- CHART TODO -->
			<mx:ColumnChart width="100%" height="100%" id="myChart"
							showDataTips="true" 
							showDataTipTargets="false"
							dataTipRenderer="{EntregasToolTip}"
							mouseSensitivity="5" 
							dataTipMode="single"  
							columnWidthRatio=".5"
							seriesFilters="[]"
							paddingRight="40" paddingLeft="20" paddingTop="20"
							>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieAFT"
										 yField="entregaAFT" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieAET"
										 yField="entregaAET" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieCFT"
										 yField="entregaCFT"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieCET" 
										 yField="entregaCET"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vMes" categoryField="mes" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad" baseAtZero="true" title="Cantidad de partidas" labelFunction="formateoEje"/>
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vMes}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
				</mx:horizontalAxisRenderers>
			</mx:ColumnChart>
		</s:HGroup>
	</graficaPie:contenido>
	<comun:espacioB>
		<s:VGroup width="50%" height="100%" horizontalAlign="center" paddingBottom="70" >
			<!-- CHART 1 -->
			<pq:TituloChartMaxTablero width="100%" text="POR ENTREGAR" />
			<mx:ColumnChart width="100%" height="100%" id="myChart1"
							showDataTips="true" 
							showDataTipTargets="false"
							dataTipRenderer="{EntregasToolTip}"
							mouseSensitivity="5" 
							dataTipMode="single"  
							columnWidthRatio=".5"
							seriesFilters="[]"
							paddingRight="40" paddingLeft="20" paddingTop="20"
							>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieAFT1"
										 yField="entregaAFT" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieAET1"
										 yField="entregaAET" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vMes1" categoryField="etiquetaX" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad1" baseAtZero="true" title="Cantidad de partidas" labelFunction="formateoEje"/>
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad1}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vMes1}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
				</mx:horizontalAxisRenderers>
			</mx:ColumnChart>
			
			<otros:division width="80%" />
			<!-- CHART 2 -->
			<pq:TituloChartMaxTablero width="100%" text="ENTREGADAS" />
			<mx:ColumnChart width="100%" height="100%" id="myChart2"
							showDataTips="true" 
							showDataTipTargets="false"
							dataTipRenderer="{EntregasToolTip}"
							mouseSensitivity="5" 
							dataTipMode="single"  
							columnWidthRatio=".5"
							seriesFilters="[]"
							paddingRight="40" paddingLeft="20" paddingTop="20"
							>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieCFT2"
										 yField="entregaCFT"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieCET2" 
										 yField="entregaCET"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
				</mx:series>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="vMes2" categoryField="etiquetaX" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="vCantidad2" baseAtZero="true" title="Cantidad de partidas" labelFunction="formateoEje"/>
				</mx:verticalAxis>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{vCantidad2}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
				</mx:verticalAxisRenderers>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{vMes2}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
									 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
				</mx:horizontalAxisRenderers>
			</mx:ColumnChart>
		</s:VGroup>
	</comun:espacioB>
</graficaPie:ContenedorComparacionTableroClientes>
