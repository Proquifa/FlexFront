<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:altos="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisVentas.altos.*"
		  xmlns:todos="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisVentas.todos.*"
		  xmlns:hd="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisVentas.*"
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:label="skins.skin.label.*"
		  xmlns:chekbox="skins.skin.chekbox.*" 
		  xmlns:otros="skins.otros.*"
		  width="100%" height="100%" 
		  >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.utils.ObjectUtil;
			
			
			
			[Bindable]
			private var vistaCliente:Boolean = true;
			
			private var updateCalculosVCliente:Boolean = false;
			private var updateCalculosVEsac:Boolean = false;
			private var currentClientes:ArrayCollection;
			private var _event:EventoTableroClientes;
			private var _filtros:EventoTableroClientes;
			private var altoRequerido:Number;
			private var _sql:Query;
			public var _nivelSeleccionado:String = "TODOS";
			
			//GRID
			private var todosProvider:ArrayCollection = new ArrayCollection();
			private var clientes:ArrayCollection = new ArrayCollection();
			private var aaplusProvider:ArrayCollection = new ArrayCollection();
			private var aaProvider:ArrayCollection = new ArrayCollection();
			private var amProvider:ArrayCollection = new ArrayCollection();
			private var abProvider:ArrayCollection = new ArrayCollection();
			private var maProvider:ArrayCollection  = new ArrayCollection();
			private var mmProvider:ArrayCollection  = new ArrayCollection();
			private var mbProvider:ArrayCollection  = new ArrayCollection();
			private var bajosProvider:ArrayCollection = new ArrayCollection();
			private var nuevosProvider:ArrayCollection = new ArrayCollection();
			private var distProvider:ArrayCollection = new ArrayCollection();
			
			
			public function get filtros():EventoTableroClientes
			{
				return _filtros;
			}
			
			public function set filtros(value:EventoTableroClientes):void
			{
				if (!value)
					return;
				
				_filtros = value;
				totalesClientes.filtros = _filtros;
			}
			
			public function set recibeListaResumenVentasTodosClientes($clientes:ArrayCollection):void
			{
				if(!$clientes)
					return;
				
				clientes = new ArrayCollection();
				_sql = new Query($clientes,["nivelIVista"]);
				
				for (var i:int = 0; i < $clientes.length; i++) 
				{
					clientes.addItem(i);
					
				}
				var puntero:Array = clientes.toArray();
				var punterosAAplus:Array = _sql.getPunteros(["AA+"]);
				var punterosAA:Array = _sql.getPunteros(["AA"]);
				var punterosAM:Array = _sql.getPunteros(["AM"]);
				var punterosAB:Array = _sql.getPunteros(["AB"]);
				var punterosMA:Array = _sql.getPunteros(["MA"]);
				var punterosMM:Array = _sql.getPunteros(["MM"]);
				var punterosMB:Array = _sql.getPunteros(["MB"]);
				var punterosBajos:Array = _sql.getPunteros(["BAJO"]);
				var punterosNuevos:Array = _sql.getPunteros(["NUEVOS"]);
				var punterosDis:Array = _sql.getPunteros(["DISTRIBUIDOR"]);
				
				todosProvider = setEvento($clientes,puntero);
				aaplusProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosAAplus)) as ArrayCollection,punterosAAplus);
				aaProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosAA)) as ArrayCollection,punterosAA);
				amProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosAM)) as ArrayCollection,punterosAM);
				abProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosAB)) as ArrayCollection,punterosAB);
				maProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosMA)) as ArrayCollection,punterosMA);
				mmProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosMM)) as ArrayCollection,punterosMM);
				mbProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosMB)) as ArrayCollection,punterosMB);
				bajosProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosBajos)) as ArrayCollection,punterosBajos);
				nuevosProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosNuevos)) as ArrayCollection,punterosNuevos);
				distProvider = setEvento(ObjectUtil.copy(_sql.armarLista(punterosDis)) as ArrayCollection,punterosDis);
				settearGrid();
			}
			
			
			public function setEvento($arreglo:ArrayCollection,$punteros:Array):ArrayCollection
			{
				if(_filtros)
				{
					var granTotal:Number = _sql.getSumarCampo("total",$punteros);
					var granTotalAnterior:Number = _sql.getSumarCampo("montoAnterior",$punteros);	
					Util.sortArray($arreglo,"total",true);
					
					for (var u:int=0; u < $arreglo.length; u++)
					{
						var temp:ResumenConsulta = $arreglo[u];
						if(u == ($arreglo.length-1))
							temp.nivelI = "ultimo";
						temp.eventoTabClientes = _filtros;
						temp.numFila = (u+1);
						temp.porcentaje = ((temp.total * 100)/granTotal);
						temp.porcentaje2 = ((temp.montoAnterior * 100)/granTotalAnterior);
					}
				}
				return $arreglo;
			}
			
			public function settearGrid():void
			{
				switch(_nivelSeleccionado)
				{
					case "TODOS":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = todosProvider;
						totalesClientes.calcularTotales(todosProvider);		
						break;
					}
					case "AA+":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = aaplusProvider;
						totalesClientes.calcularTotales(aaplusProvider);
						break;
					}
					case "AA":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = aaProvider;
						totalesClientes.calcularTotales(aaProvider);
						break;
					}
					case "AM":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = amProvider;
						totalesClientes.calcularTotales(amProvider);
						break;
					}
					case "AB":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = abProvider;
						totalesClientes.calcularTotales(abProvider); 
						break;
					}
					case "MA":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = maProvider;
						totalesClientes.calcularTotales(maProvider); 
						break;
					}
					case "MM":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = mmProvider;
						totalesClientes.calcularTotales(mmProvider); 
						break;
					}
					case "MB":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = mbProvider;
						totalesClientes.calcularTotales(mbProvider); 
						break;
					}
					case "BAJO":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = bajosProvider;
						totalesClientes.calcularTotales(bajosProvider); 
						break;
					}
					case "NUEVOS":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = nuevosProvider;
						totalesClientes.calcularTotales(nuevosProvider); 
						break;
					}
					case "DISTRIBUIDOR":
					{
						((this.parent as VGroup).parent as AnalisisVenta_areaTodos).lblTitulo.text = _nivelSeleccionado; 
						listClientes.dataProvider = distProvider;
						totalesClientes.calcularTotales(distProvider); 
						break;
					}
				}
			}
			
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" gap="0">
		<hd:AV_Header_Clientes width="100%" />
		<s:List id="listClientes" borderVisible="false" width="100%" height="100%" 
				itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.analisisVentas.todos.IR_AnalisisVentas_Todos_Clientes" />
		<todos:Totales_Todos_Clientes id="totalesClientes" width="100%" />
		
	</s:VGroup>
	
</s:VGroup>
