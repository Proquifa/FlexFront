package mx.com.proquifa.proquifanet.rsl.vista.modelo.compras
{
	import flash.utils.ByteArray;
	
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Pedido;
	import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
	import mx.utils.ObjectUtil;
	
	[RemoteClass(alias="mx.com.proquifa.proquifanet.modelo.compras.RegistroConfirmacion")]
	[Bindable]
	public class RegistroConfirmacion extends PartidaCompra
	{
		private var _idProveedor:int;
		private var _totalOC:int;
		private var _piezas:int; 
		private var _monto:Number;
		private var _totalRegular:int;
		private var _totalProgramado:int;
		private var _totalFlete:int;
		private var _urgente:int;
		private var _enTiempo:int;
		private var _fueraTiempo:int;
		private var _dia1:int;
		private var _dia2:int;
		private var _dia3:int;
		private var _dia4:int; //Mayor a 3 dias
		private var _totalPPedidos:int;
		private var _fee:Date;
		private var _fechaTransitoDate:Date;
		private var _fechaAlmacen:Date;
		private var _fechaProveedor:Date;
		private var _fechaMonitoreo:Date;
		private var _fechaNueva:Date;
		private var _motivo:String;
		private var _pedidos:Pedido;
		private var _documento:ByteArray;
		private var _nombreVendedor:String;
		private var _ext:String;
		
		private var _todos:Boolean;
		private var _regular:TipoPPedido;
		private var _programado:TipoPPedido;
		private var _flete:TipoPPedido;
		
		private var _confirma:String;
		private var _referencia:String;
		private var _gestionar:int;
		private var _gestionarBool:int;
		
		///VISTA
		private var _bloqueoRestablecer:String;
		private var _indicePadre:int;
		private var _fechaAlmacenString:String;
		private var _nombreDocumento:String;
		private var _segundaVista:Boolean;
		private var _estadoVistaSecundaria:String;
		private var _segundaVistaTipo:String;
		
		private var _estadoDisponible:String;
		private var _estadoCancelar:String;
		private var _estadoCambio:String;
		private var _estadoBackOrder:String;
		
		private var _entregaUnicaCompuesto:TipoPPedido
		private var _fleteNormalCompuesto:TipoPPedido
		private var _totalEntregaUnica:int;
		private var _totalFleteNormal:int;
		
		private var _montoDolar:Number;
		private var _estadoCliente:String;
		private var _estadoPedido:String;
		
		private var _diasFiltrados:String;
		private var _medioPagoProveedor:String;
		private var _CPagoProveedor:String;
		
		
		///////SIN USO EN ESPECIAL, SOLO DUMMY
		private var _dummy:Boolean;
		
		public function RegistroConfirmacion()
		{
			_estadoDisponible = "normal";
			_estadoCancelar = "normal";
			_estadoCambio = "normal";
			_estadoBackOrder = "normal";
			_fechaAlmacenString = "ND"
		}
		
		
		
		
		public function get medioPagoProveedor():String
		{
			return _medioPagoProveedor;
		}

		public function set medioPagoProveedor(value:String):void
		{
			_medioPagoProveedor = value;
		}

		public function get CPagoProveedor():String
		{
			return _CPagoProveedor;
		}

		public function set CPagoProveedor(value:String):void
		{
			_CPagoProveedor = value;
		}

		

		public function get estadoPedido():String
		{
			return _estadoPedido;
		}
		
		public function set estadoPedido(value:String):void
		{
			_estadoPedido = value;
		}
		
		public function get estadoCliente():String
		{
			return _estadoCliente;
		}
		
		public function set estadoCliente(value:String):void
		{
			_estadoCliente = value;
		}
		
		public function get montoDolar():Number
		{
			return _montoDolar;
		}
		
		public function set montoDolar(value:Number):void
		{
			_montoDolar = value;
		}
		
		public function get estadoVistaSecundaria():String
		{
			return _estadoVistaSecundaria;
		}
		
		public function set estadoVistaSecundaria(value:String):void
		{
			_estadoVistaSecundaria = value;
		}
		
		public function get totalFleteNormal():int
		{
			return _totalFleteNormal;
		}
		
		public function set totalFleteNormal(value:int):void
		{
			_totalFleteNormal = value;
		}
		
		public function get totalEntregaUnica():int
		{
			return _totalEntregaUnica;
		}
		
		public function set totalEntregaUnica(value:int):void
		{
			_totalEntregaUnica = value;
		}
		
		public function get fleteNormalCompuesto():TipoPPedido
		{
			var temp:TipoPPedido = new TipoPPedido();
			if(regular && programado){
				temp.monto += programado.monto + regular.monto;
				temp.piezas += programado.piezas + regular.piezas;
				temp.totalTipo += programado.totalTipo + regular.totalTipo;
			}else if(regular && !programado)
				temp = ObjectUtil.copy(regular) as TipoPPedido;
			else if(programado && !regular)
				temp = ObjectUtil.copy(programado) as TipoPPedido;
			
			_fleteNormalCompuesto = temp;
			
			return _fleteNormalCompuesto;
		}
		
		public function set fleteNormalCompuesto(value:TipoPPedido):void
		{
			_fleteNormalCompuesto = value;
		}
		
		public function get entregaUnicaCompuesto():TipoPPedido
		{
			var temp:TipoPPedido = new TipoPPedido();
			if(regular && flete){
				temp.monto += flete.monto + regular.monto;
				temp.piezas += flete.piezas + regular.piezas;
				temp.totalTipo += flete.totalTipo + regular.totalTipo;
			}else if(regular && !flete)
				temp = ObjectUtil.copy(regular) as TipoPPedido;
			else if(flete && !regular)
				temp = ObjectUtil.copy(flete) as TipoPPedido;
			
			_entregaUnicaCompuesto = temp;
			return _entregaUnicaCompuesto;
		}
		
		public function set entregaUnicaCompuesto(value:TipoPPedido):void
		{
			_entregaUnicaCompuesto = value;
		}
		
		public function get segundaVistaTipo():String
		{
			return _segundaVistaTipo;
		}
		
		public function set segundaVistaTipo(value:String):void
		{
			_segundaVistaTipo = value;
		}
		
		public function get segundaVista():Boolean
		{
			return _segundaVista;
		}
		
		public function set segundaVista(value:Boolean):void
		{
			_segundaVista = value;
		}
		
		public function get nombreDocumento():String
		{
			return _nombreDocumento;
		}
		
		public function set nombreDocumento(value:String):void
		{
			_nombreDocumento = value;
		}
		
		public function get ext():String
		{
			return _ext;
		}
		
		public function set ext(value:String):void
		{
			_ext = value;
		}
		
		public function get nombreVendedor():String
		{
			return _nombreVendedor;
		}
		
		public function set nombreVendedor(value:String):void
		{
			_nombreVendedor = value;
		}
		
		public function get documento():ByteArray
		{
			return _documento;
		}
		
		public function set documento(value:ByteArray):void
		{
			_documento = value;
		}
		
		public function get gestionarBool():int
		{
			return _gestionarBool;
		}
		
		public function set gestionarBool(value:int):void
		{
			_gestionarBool = value;
		}
		
		public function get fechaNueva():Date
		{
			return _fechaNueva;
		}
		
		public function set fechaNueva(value:Date):void
		{
			_fechaNueva = value;
		}
		
		public function get gestionar():int
		{
			return _gestionar;
		}
		
		public function set gestionar(value:int):void
		{
			_gestionar = value;
			if(value > 0)
				gestionarBool = 1;
			else
				gestionarBool = 0;
		}
		
		public function get referencia():String
		{
			return _referencia;
		}
		
		public function set referencia(value:String):void
		{
			_referencia = value;
		}
		
		public function get confirma():String
		{
			return _confirma;
		}
		
		public function set confirma(value:String):void
		{
			_confirma = value;
		}
		
		public function get fechaAlmacenString():String
		{
			return _fechaAlmacenString;
		}
		
		public function set fechaAlmacenString(value:String):void
		{
			if(value.toLowerCase() == "pendiente")
				_fechaAlmacenString = "ND";
			else
				_fechaAlmacenString = value;
		}
		
		public function get pedidos():Pedido
		{
			return _pedidos;
		}
		
		public function set pedidos(value:Pedido):void
		{
			_pedidos = value;
		}
		
		public function get estadoBackOrder():String
		{
			return _estadoBackOrder;
		}
		
		public function set estadoBackOrder(value:String):void
		{
			_estadoBackOrder = value;
		}
		
		public function get estadoCambio():String
		{
			return _estadoCambio;
		}
		
		public function set estadoCambio(value:String):void
		{
			_estadoCambio = value;
		}
		
		public function get estadoCancelar():String
		{
			return _estadoCancelar;
		}
		
		public function set estadoCancelar(value:String):void
		{
			_estadoCancelar = value;
		}
		
		public function get estadoDisponible():String
		{
			return _estadoDisponible;
		}
		
		public function set estadoDisponible(value:String):void
		{
			_estadoDisponible = value;
		}
		
		public function get bloqueoRestablecer():String
		{
			return _bloqueoRestablecer;
		}
		
		public function set bloqueoRestablecer(value:String):void
		{
			_bloqueoRestablecer = value;
		}
		
		public function get indicePadre():int
		{
			return _indicePadre;
		}
		
		public function set indicePadre(value:int):void
		{
			_indicePadre = value;
		}
		
		public function get dummy():Boolean
		{
			return _dummy;
		}
		
		public function set dummy(value:Boolean):void
		{
			_dummy = value;
		}
		
		public function get motivo():String
		{
			return _motivo;
		}
		
		public function set motivo(value:String):void
		{
			_motivo = value;
		}
		
		public function get fechaMonitoreo():Date
		{
			return _fechaMonitoreo;
		}
		
		public function set fechaMonitoreo(value:Date):void
		{
			_fechaMonitoreo = value;
		}
		
		public function get fechaProveedor():Date
		{
			return _fechaProveedor;
		}
		
		public function set fechaProveedor(value:Date):void
		{
			_fechaProveedor = value;
		}
		
		public function get fechaAlmacen():Date
		{
			return _fechaAlmacen;
		}
		
		public function set fechaAlmacen(value:Date):void
		{
			fechaAlmacenString = UtilsFecha.formatoFechaDDMMMYYYY(value);
			_fechaAlmacen = value;
		}
		
		public function get fechaTransitoDate():Date
		{
			return _fechaTransitoDate;
		}
		
		public function set fechaTransitoDate(value:Date):void
		{
			_fechaTransitoDate = value;
		}
		
		public function get flete():TipoPPedido
		{
			return _flete;
		}
		
		public function set flete(value:TipoPPedido):void
		{
			_flete = value;
		}
		
		public function get programado():TipoPPedido
		{
			return _programado;
		}
		
		public function set programado(value:TipoPPedido):void
		{
			_programado = value;
		}
		
		public function get regular():TipoPPedido
		{
			return _regular;
		}
		
		public function set regular(value:TipoPPedido):void
		{
			_regular = value;
		}
		
		public function get todos():Boolean
		{
			return _todos;
		}
		
		public function set todos(value:Boolean):void
		{
			_todos = value;
		}
		
		public function get fee():Date
		{
			return _fee;
		}
		
		public function set fee(value:Date):void
		{
			_fee = value;
		}
		
		public function get totalPPedidos():int
		{
			return _totalPPedidos;
		}
		
		public function set totalPPedidos(value:int):void
		{
			_totalPPedidos = value;
		}
		
		public function get dia4():int
		{
			return _dia4;
		}
		
		public function set dia4(value:int):void
		{
			_dia4 = value;
		}
		
		public function get dia3():int
		{
			return _dia3;
		}
		
		public function set dia3(value:int):void
		{
			_dia3 = value;
		}
		
		public function get dia2():int
		{
			return _dia2;
		}
		
		public function set dia2(value:int):void
		{
			_dia2 = value;
		}
		
		public function get dia1():int
		{
			return _dia1;
		}
		
		public function set dia1(value:int):void
		{
			_dia1 = value;
		}
		
		public function get fueraTiempo():int
		{
			return _fueraTiempo;
		}
		
		public function set fueraTiempo(value:int):void
		{
			_fueraTiempo = value;
		}
		
		public function get enTiempo():int
		{
			return _enTiempo;
		}
		
		public function set enTiempo(value:int):void
		{
			_enTiempo = value;
		}
		
		public function get urgente():int
		{
			return _urgente;
		}
		
		public function set urgente(value:int):void
		{
			_urgente = value;
		}
		
		public function get totalFlete():int
		{
			return _totalFlete;
		}
		
		public function set totalFlete(value:int):void
		{
			_totalFlete = value;
		}
		
		public function get totalProgramado():int
		{
			return _totalProgramado;
		}
		
		public function set totalProgramado(value:int):void
		{
			_totalProgramado = value;
		}
		
		public function get totalRegular():int
		{
			return _totalRegular;
		}
		
		public function set totalRegular(value:int):void
		{
			_totalRegular = value;
		}
		
		public function get monto():Number
		{
			return _monto;
		}
		
		public function set monto(value:Number):void
		{
			_monto = value;
		}
		
		public function get piezas():int
		{
			return _piezas;
		}
		
		public function set piezas(value:int):void
		{
			_piezas = value;
		}
		
		public function get totalOC():int
		{
			return _totalOC;
		}
		
		public function set totalOC(value:int):void
		{
			_totalOC = value;
		}
		
		public function get idProveedor():int
		{
			return _idProveedor;
		}
		
		public function set idProveedor(value:int):void
		{
			_idProveedor = value;
		}
		
		
		public function get diasFiltrados():String
		{
			/*redeclaro las fechas con horas, minutos y segundos en 0 para una comparacion en bruto*/
			var fechaLejana:Date = fechaEstimadaEntrega;
			//trace( 'FechaCOTIZACION: ' + fechaCotizacion.toString() );
			var actual:Date = new Date();
			if( fechaLejana != null )	fechaLejana = new Date(fechaLejana.fullYear, fechaLejana.month, fechaLejana.date, 0, 0, 0);
			actual = new Date(actual.fullYear, actual.month, actual.date, 0, 0, 0);
			var valor:int = UtilsFecha.regresaDiferenciaEntreFechasEnDias( actual, fechaLejana);
			if( valor  > 3 ){
				_diasFiltrados = "FUTURO";
			}else if( valor  < -3 ){
				_diasFiltrados = "PASADO";
			}else{
				_diasFiltrados = 'DIA' + valor.toString();//DIA-2, DIA-1, DIA0, DIA1, DIA2
				
				if (_diasFiltrados == "DIA-2")
					_diasFiltrados = "ANTIER";
					
				else if (_diasFiltrados == "ADIA-1")
					_diasFiltrados = "AYER";
				
			}
			return _diasFiltrados;
		}
		
		public function set diasFiltrados(value:String):void
		{
			_diasFiltrados = value;
		}
		
		
		
	}
}