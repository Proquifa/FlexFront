<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default wireframe skin class for the Spark TitleWindow component. 
Skin classes in the wireframe package are useful for using as a simple base for a custom skin.

@see spark.components.TitleWindow

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		alpha.disabled="0.5" minWidth="76" minHeight="76" creationComplete="init(event)" xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Metadata>
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.TitleWindow")]
	</fx:Metadata> 
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			private var _backgroundColor:uint = 0x148591;
			
			[Bindable]
			public function get backgroundColor():uint
			{
				return _backgroundColor;
			}
			
			public function set backgroundColor(value:uint):void
			{
				_backgroundColor = value;
				reloadBackGround(value);
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
			}
			
			protected function init(event:FlexEvent):void
			{
				/*grpTituloBorde.graphics.clear();
				grpTituloBorde.graphics.beginFill(backgroundColor,1);
				grpTituloBorde.graphics.lineStyle(1.5,backgroundColor,1);
				grpTituloBorde.graphics.moveTo(0,30);
				grpTituloBorde.graphics.lineTo(this.width,30);
				grpTituloBorde.graphics.lineTo(this.width,20);
				grpTituloBorde.graphics.curveTo(this.width,0,this.width -20,0);
				grpTituloBorde.graphics.lineTo(20,0);
				grpTituloBorde.graphics.curveTo(0,0,0,20);
				grpTituloBorde.graphics.lineTo(0,30);
				grpTituloBorde.graphics.endFill();*/
			}
			private function reloadBackGround(value:uint):void
			{
				/*grpTituloBorde.graphics.clear();
				grpTituloBorde.graphics.beginFill(value,1);
				grpTituloBorde.graphics.lineStyle(1.5,value,1);
				grpTituloBorde.graphics.moveTo(0,50);
				grpTituloBorde.graphics.lineTo(this.width,50);
				grpTituloBorde.graphics.lineTo(this.width,40);
				grpTituloBorde.graphics.curveTo(this.width,0,this.width -40,0);
				grpTituloBorde.graphics.lineTo(40,0);
				grpTituloBorde.graphics.curveTo(0,0,0,40);
				grpTituloBorde.graphics.lineTo(0,50);
				grpTituloBorde.graphics.endFill();*/
			}
			
			
			
		]]>
	</fx:Script>
	
	
	<s:states>
		<s:State name="normal" />
		<s:State name="inactive" stateGroups="inactiveGroup" />
		<s:State name="disabled" />
		<s:State name="normalWithControlBar" stateGroups="withControls" />
		<s:State name="inactiveWithControlBar" stateGroups="withControls, inactiveGroup" />
		<s:State name="disabledWithControlBar" stateGroups="withControls" />
	</s:states>
	
	<s:Rect   left="0" right="0" top="0" bottom="0"  radiusX="18" topLeftRadiusX="30" topRightRadiusX="30">
		<s:fill>
			<s:SolidColor color="{this.getStyle('backgroundColor')}"/>
		</s:fill>
	</s:Rect>
	
	<!--<s:Rect top="0" width="100%" height="60" topLeftRadiusX="30" topRightRadiusX="30">
	<s:fill>
	<s:SolidColor color="{backgroundColor}"/>
	</s:fill>
	</s:Rect>-->
	
	<s:Group width="100%" id="grpTituloBorde" >
		<s:Rect top="0" width="100%" height="60" topLeftRadiusX="30" topRightRadiusX="30">
			<s:fill>
				<s:SolidColor color="{backgroundColor}"/>
			</s:fill>
		</s:Rect>
		
		<s:Label horizontalCenter="0" text="DETALLE DE VISITA" fontSize="22" styleName="tituloAlerta2" paddingTop="6" id="label" height="100%" verticalAlign="middle">
		</s:Label>
	</s:Group>  
	
	<s:Group left="1" right="1" top="1" bottom="1" y="{grpTituloBorde.y}">
		<s:layout>
			<s:VerticalLayout gap="0" horizontalAlign="justify" />
		</s:layout>
		
		<s:Group>
			
			<s:Label id="titleDisplay" maxDisplayedLines="1"
					 left="9" right="24" top="1" minHeight="23"
					 verticalAlign="middle" fontWeight="bold" visible="false">
			</s:Label>
			
			<!-- layer 4: moveArea -->
			<!--- @copy spark.components.TitleWindow#moveArea -->
			<s:Group id="moveArea" left="0" right="0" top="0" bottom="0" />
			
			<!-- close button -->
			<!--- @copy spark.components.TitleWindow#closeButton -->
			<s:Button id="closeButton"
					  width="15" height="15" right="2" top="3" visible="false" />
		</s:Group>
		
		<!--- @copy spark.components.SkinnableContainer#contentGroup -->
		<s:Group id="contentGroup" width="100%" height="100%" minWidth="0" minHeight="0">
		</s:Group>
		
		<!--- @private -->
		<s:Group id="bottomGroup" minWidth="0" minHeight="0"
				 includeIn="withControls" >
			
			<!--- @copy spark.components.Panel#controlBarGroup -->
			<s:Group id="controlBarGroup" left="0" right="0" top="1" bottom="1" minWidth="0" minHeight="0">
				<s:layout>
					<s:HorizontalLayout paddingLeft="10" paddingRight="10" paddingTop="7" paddingBottom="7" gap="10" />
				</s:layout>
			</s:Group>
		</s:Group>
	</s:Group>
</s:Skin>
