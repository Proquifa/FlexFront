<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
					xmlns:mate="http://mate.asfusion.com/"
					xmlns:events="com.asfusion.mate.events.*"
					xmlns:debug="com.asfusion.mate.utils.debug.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoPopUpContactos;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.modelo.MedeloPopUpContactos;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AIESC_1ListaContacto_PopUpListaContactos;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AIESC_2BusquedaContacto_PopUpListaContactos;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AIESC_3DatosContacto_PopUpListaContacto;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AIESC_AgregaContactoNuevo_PopUp;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AIESC_CRM_PopUP;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AIESC_PopUpListaContactos;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.AiescContactos;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.DocEntraNew;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.LLamNew;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.stageEditDoc;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaContactoService;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Llamada;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.popup.ModeloPopUp;
			
		]]>
	</mx:Script>

	<mate:EventHandlers type="{EventoParaContactoService.SELECCIONAR_CONTACTO}">
		<mate:MethodInvoker generator="{ModeloPopUp}"
							method="setContactoSeleccionado"
							arguments="{[event.contactoSeleccionado, event.vieneD]}"/>
	</mate:EventHandlers>
	<mate:Injectors targets="{[LLamNew,DocEntraNew,stageEditDoc]}">
		<mate:PropertyInjector source="{ModeloPopUp}"
							   sourceKey="contactoSeleccionado"
							   targetKey="contactoSeleccionado"/>	
	</mate:Injectors>	
	
	
	<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para obtener las empresas por contactos  ////////////////////////////-->
	<mate:EventHandlers type="{ EventoPopUpContactos.CARAGAR_CONTACTOS}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CLIENTE_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="listarNumeroDeCliente"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="setObtenContactos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   targets="{ [AIESC_PopUpListaContactos,AIESC_AgregaContactoNuevo_PopUp,AIESC_CRM_PopUP, AIESC_1ListaContacto_PopUpListaContactos,AiescContactos] }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="ObtenContactos"
							   targetKey="recibirContactos"/>
	</mate:Injectors>
	
	<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para obtener los contactos por el id de mepresa ////////////////////////////-->
	<mate:EventHandlers type="{ EventoPopUpContactos.CARAGAR_CONTACTOS_ID_CLIENTE }">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="obtenerContactosXidCliente"
								  arguments="{[event.idCliente]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="setObtenContactosXId"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   targets="{ [AIESC_PopUpListaContactos] }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="ObtenContactosXId"
							   targetKey="recibirContactosXIdCliente"/>
	</mate:Injectors>
	
	
	<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para obtener los contactos por el id de mepresa ////////////////////////////-->
	
	<mate:EventHandlers type="{ EventoPopUpContactos.ENVIO_DE_OBJETO_SELECCIONADO }">
		<mate:MethodInvoker generator="{ MedeloPopUpContactos }"
							method="setObtenerContactoSeleccionado"
							arguments="{event.lista}">
		</mate:MethodInvoker>
		
	</mate:EventHandlers>
	<mate:Injectors			   target="{ AIESC_2BusquedaContacto_PopUpListaContactos }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="ObtenerContactoSeleccionado"
							   targetKey="recibirContactosBusqueda"/>
	</mate:Injectors>
	
	
	
	<!-- ////////////////////////////////////////////////////////////////// Evento para mandar el contacto seleccionado  ////////////////////////////-->
	
	<mate:EventHandlers type="{ EventoPopUpContactos.ENVIO_DE_CONTACTO_SELECCIONADO }">
		<mate:MethodInvoker generator="{ MedeloPopUpContactos }"
							method="setObtenerContactoDatos"
							arguments="{event.objeto}">
		</mate:MethodInvoker>
		
	</mate:EventHandlers>
	<mate:Injectors			   target="{ AIESC_3DatosContacto_PopUpListaContacto }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="ObtenerContactoDatos"
							   targetKey="recibirContactoSeleccionado"/>
	</mate:Injectors>
	
	
	<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para asociarContacto  ////////////////////////////-->
	<mate:EventHandlers type="{ EventoPopUpContactos.ENVIA_CONTACTO_ASOCIADO }">
		<mate:MethodInvoker generator="{ MedeloPopUpContactos }"
							method="setAsociarContactos"
							arguments="{event}">
		</mate:MethodInvoker>
			
	</mate:EventHandlers>
	<mate:Injectors			   target="{ DocEntraNew }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="AsociarContactosDocEntreNew"
							   targetKey="contactoSeleccionado"/>
	</mate:Injectors>
	<mate:Injectors			   target="{ stageEditDoc }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="AsociarContactosstageEditDoc"
							   targetKey="contactoSeleccionado"/>
	</mate:Injectors>
	
	<mate:Injectors			   target="{ LLamNew }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="AsociarContactosstageLlamNew"
							   targetKey="contactoSeleccionado"/>
	</mate:Injectors>
	<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para asociarC cliente y contacto nuevo ////////////////////////////-->
	<mate:EventHandlers type="{ EventoPopUpContactos.ASOCIA_CLIENTE_CONTACTO_NUEVO }">
		<mate:MethodInvoker generator="{ MedeloPopUpContactos }"
							method="setAsociarClienteYContacto"
							arguments="{event}">
		</mate:MethodInvoker>
		
	</mate:EventHandlers>
	<mate:Injectors			   target="{ DocEntraNew }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="AsociarClienteYContacto"
							   targetKey="contactoSeleccionadoConCLiente"/>
	</mate:Injectors>
	<mate:Injectors			   target="{ LLamNew }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="AsociarClienteYContactoLlamNew"
							   targetKey="contactoSeleccionadoConCliente"/>
	</mate:Injectors>
	<mate:Injectors			   target="{ stageEditDoc }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="AsociarClienteYContacto"
							   targetKey="contactoSeleccionadoConCLiente"/>
	</mate:Injectors>
	
	<!-- ////////////////////////////////// Evento para guardar Contacto nuevo desde desde BusquedaCliente(popUp) y desde CRM despues de agregar Cliente -->
	<mate:EventHandlers type="{ EventoPopUpContactos.GUARDA_CONTACTO_NUEVO}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="insertarNuevoContacto"
								  arguments="{[event.nombre,event.correo,event.empresa]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="setConfirmaContactoNuevo"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<!--<mate:Injectors			   target="{ VendedorCRMCliente }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="ConfirmaContactoNuevoCRM"
							   targetKey="confirmaClienteYContactoNuevo"/>
	</mate:Injectors>-->
	<mate:Injectors			   target="{ AIESC_AgregaContactoNuevo_PopUp }">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="ConfirmaContactoNuevo"
							   targetKey="recibeContacto"/>
	</mate:Injectors>

	
	
	<!-- ////////////////////////////////// Evento para guardar Contacto nuevo desde desde BusquedaCliente(popUp) y desde CRM despues de agregar Cliente -->
	<!--Evento para obtener los Contactos -->
	<mate:EventHandlers type="{ EventoPopUpContactos.OBTENER_CONTACTOS_GLOBALES}">
		<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
								  endpoint="{ Destinos.END_POINT }"
								  method="consultarContactosPorString"
								  arguments="{[event.busca,event.tipoBusca,event.buscarEn]}" 
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="setBusquedaContactos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{MedeloPopUpContactos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			  targets="{AiescContactos}">
		<mate:PropertyInjector source="{ MedeloPopUpContactos }" 
							   sourceKey="busquedaContactos"
							   targetKey="recibirTodosContactos"/>
	</mate:Injectors>
	
	
	
	<!-- ////////////////////////////////////////////////////////////////////////////////////// LIMPIA ID CLIENTE -->
	<mate:EventHandlers type="{ EventoPopUpContactos.LIMPIA_ID_CONTACTO}">
		<mate:MethodInvoker generator="{MedeloPopUpContactos}" method="limpiaIDContacto"/>
	</mate:EventHandlers>
	
</mate:EventMap>
