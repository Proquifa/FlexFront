<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SolidColor id="sc1" color="#0099FF" alpha=".5"/>
		<s:SolidColor id="scPorCobrar" color="red" alpha=".5"/>
		<s:SolidColor id="scVerdeEnTiempo" color="#32CD32" alpha=".5"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.charts.CategoryAxis;
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.chartClasses.CartesianTransform;
			import mx.charts.chartClasses.DataTransform;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridEvent;
			
			[Bindable]
			private var _ocTransito: ArrayCollection;
			[Bindable]
			private var _ocTransitoGraf:ArrayCollection;
			[Bindable]
			private var _datos:ObjetoTabla;
			
			private function maxTransito():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaTabla;
				}else{
					this.navegador.selectedChild = vistaGrafico;
				}
			}
			
			
			public function seleccionaTabla():void{
				this.navegador.selectedChild = this.vistaTabla;
			}
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}
			
			
			[Bindable]
			private var _eficaciaGerente:ArrayCollection = new ArrayCollection();
			
			
			public function set obtenerEficaciaGerentes(datos:ArrayCollection):void{
				this._eficaciaGerente = new ArrayCollection();
				if(datos.length > 0){
					
					this._eficaciaGerente = ObjectUtil.copy(datos) as ArrayCollection;
					transformar(ObjectUtil.copy(datos) as ArrayCollection);
				}
			}
			
			[Bindable]
			private var gerentes:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var meses:ArrayCollection = new ArrayCollection();
			
			
			public function transformar(datos:ArrayCollection):void{
				gerentes = new ArrayCollection();
				meses = new ArrayCollection();
				var datos2:ArrayCollection = ObjectUtil.copy(datos) as ArrayCollection;
				var m:int = 0;
				while(datos.length > 0){
					gerentes.addItem(datos[0].nombre_Empleado);
					for(m = 1; m<datos.length;m++){
						if(datos[0].nombre_Empleado == datos[m].nombre_Empleado){
							datos.removeItemAt(m);
							m = m-1;
						}
					}
					datos.removeItemAt(0);
				}
				
				while(datos2.length > 0){
					meses.addItem(datos2[0].mes);
					for(m=1; m<datos2.length; m++){
						if(datos2[0].mes == datos2[m].mes){
							datos2.removeItemAt(m);
							m = m-1;
						}
					}
					datos2.removeItemAt(0);
				}
				for(var p:int = 0; p<this._eficaciaGerente.length; p++){
					if(this._eficaciaGerente[p].eficiencia == 0){
						this._eficaciaGerente.removeItemAt(p);
						p = p-1;
					}				
				}
				for(var t:int = 0; t<_eficaciaGerente.length; t++){
					_eficaciaGerente[t].numFila = t +1;
				}
				
				this._eficaciaGerente.refresh();
				
				//Alert.show("hola");
			}
			
			protected function exportar(event:MouseEvent):void
			{
				var archivo:File = new File();
				var encabezados:String = "#,Gerente,Periodo,Eficiencía";
				var datos:ArrayCollection = new ArrayCollection();
				datos.addItem(encabezados);
				var renglon:String = "";
				for(var m:int = 0; m<this._eficaciaGerente.length; m++){
					renglon = this._eficaciaGerente[m].numFila + "," +
						'"'+this._eficaciaGerente[m].nombre_Empleado + '"' + "," +
						'"'+this._eficaciaGerente[m].mes + '"' + "," +
						'"'+this._eficaciaGerente[m].eficienciaFormato + '"';
					datos.addItem("\r" + renglon);
				}
				archivo.save(datos,"Eficiencia_Gerentes.csv");
				
				
			}
			
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" dropShadowVisible="false" title="Eficacia Gerente">
		<!--	<mx:CurrencyFormatter id="formateoMoneda" precision="2"/>
		<mx:DateFormatter id="validadorfecha" formatString="DD-MMM-YYYY"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<mx:BubbleChart id="graficaEficacia" height="100%" width="100%" paddingRight="5" paddingLeft="5" paddingTop="5" paddingBottom="5" showDataTips="true">
					
					<mx:horizontalAxis>
						<mx:CategoryAxis  dataProvider="{this.gerentes}"/>
					</mx:horizontalAxis>
					
					<mx:verticalAxis>
						<mx:CategoryAxis  dataProvider="{this.meses}"/>
					</mx:verticalAxis>
					
					
					<mx:series>
						<mx:BubbleSeries xField="nombre_Empleado" yField="mes" radiusField="eficiencia" dataProvider="{this._eficaciaGerente}">
							
						</mx:BubbleSeries>
					</mx:series>
				</mx:BubbleChart>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTransito()" width="60"/>
				</mx:HBox>
			</mx:VBox>		
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<mx:DataGrid width="100%" height="100%" dataProvider="{_eficaciaGerente}">
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numFila"/>
						<mx:DataGridColumn headerText="Gerente" dataField="nombre_Empleado"/>
						<mx:DataGridColumn headerText="Mes" dataField="mes"/>
						<mx:DataGridColumn headerText="Eficacia" dataField="eficienciaFormato"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTransito()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" click="exportar(event)" />
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	</s:Panel> 
</s:Group>
