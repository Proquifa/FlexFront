<?xml version="1.0" encoding="utf-8"?>
<popUp:PopUpDefaultPQNet xmlns:fx="http://ns.adobe.com/mxml/2009" 
						 xmlns:vistas="mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.popUpContactos.*"
						 xmlns:s="library://ns.adobe.com/flex/spark" 
						 xmlns:mx="library://ns.adobe.com/flex/mx" 
						 xmlns:label="skins.skin.label.*" 
						 xmlns:otros="skins.otros.*" 
						 xmlns:pqNet="skins.botones.pqNet.*" 
						 xmlns:popUp="skins.popUp.*" 
						 xmlns:botonesToggle="skins.botonesToggle.*"
						 colorPopUp="blanco"
						 width="900" height="600" 
						 creationComplete="group1_creationCompleteHandler(event)" 
						 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoPopUpContactos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.managers.ISystemManager;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoColores;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			public var _procedencia:String;
			private var _listaFiltradaDeClientes:ArrayCollection;
			private var _sql:Query;
			private var _universoRespaldo:ArrayCollection;
			private var _busquedaEfectiva:String;
			
			private var _arrButton:ArrayCollection = new ArrayCollection( [ 
				{ valor:'', colorBase: catalogoColores.LABEL_CASI_NEGRO, icono:'lupa' },
				{ valor:'', colorBase: catalogoColores.LABEL_CASI_NEGRO, icono:'clienteBar' }, 
				{ valor:'', colorBase: catalogoColores.LABEL_CASI_NEGRO, icono:'todoBar' }] );
			
			
			/* public function get defaultButton():IFlexDisplayObject{
			// TODO Auto Generated method stub
			return btnBarraPrecio; // <-- PLACE THE REFERENCE FOR SOME DEFAULT FOCUSABLE COMPONENT HERE (DEFAULT BUTTON OR WHATEVER)
			}
			public function set defaultButton(value:IFlexDisplayObject):void{
			// TODO Auto Generated method stub
			
			} */
			override public function get systemManager():ISystemManager{
				return super.systemManager;
				// TODO Auto Generated method stub
				//return null;
			}
			
			[Bindable]
			private var _datosBarra:ArrayCollection = new ArrayCollection( [{ valor:'',llave:'_compBusquedaCliente',icono:'lupa' }, 
				{ valor:'CRM',llave:'_compCRMCliente'} ] );
			
			[Bindable]
			private var _datosBarraSinCRM:ArrayCollection = new ArrayCollection( [ { valor:'',llave:'_compBusquedaCliente',icono:'lupa' } ] );
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener( EventoPopUpContactos.ENVIA_CONTACTO_ASOCIADO, cierraPopUpEvento );
				addEventListener( EventoPopUpContactos.CAMBIA_CRM, cambiaCRM );
				btnBarraPrecio.dataProvider = _datosBarra;
				btnBarraPrecio.selectedIndex = 0;
				
			}
			
			private function cierraPopUpEvento( evt:EventoPopUpContactos):void{
				PopUpManager.removePopUp( this );
			}
			
			public function validaProcedencia( $evt:EventoPopUpContactos ):void{
				_procedencia = $evt.vieneDE_PopUp;
				btnBarraPrecio.width = 267;
				_compBusquedaCliente.estableceProcedencia( $evt );
				_compCRMCliente.estableceProcedencia( $evt );
				btnBarraPrecio.dataProvider = _datosBarra;
				if( btnBarraPrecio.selectedIndex == 0 ){
					//	AIESC3.estatusContacto( $evt );		
				}
				//|| $evt.vieneDE_PopUp == 'LlamNew'
				if($evt.vieneDE_PopUp == 'stageEditDoc' ||  $evt.vieneDE_PopUp == 'DocumentosSalientesInspectorMail' || $evt.vieneDE_PopUp == 'DocumentosSalientesInspectorFax' ){
					_compBusquedaCliente.visible = false;
					_compCRMCliente.visible = false;
					_compBusquedaCliente.visible = true ;
					btnBarraPrecio.dataProvider = _datosBarraSinCRM;
					btnBarraPrecio.width = 130;
				}
				if ($evt.canalizado){
					_compBusquedaCliente.limpiar($evt);
				}
			}
			
			protected function btnBarraPrecio_changeHandler(event:IndexChangeEvent):void{
				if(btnBarraPrecio.selectedIndex ==0)
					txtBusquedaContacto2.visible = true;
				else
					txtBusquedaContacto2.visible = false;
				
				if (btnBarraPrecio.selectedItem != undefined){
					_compBusquedaCliente.visible = false;
					_compCRMCliente.visible = false;
					this[btnBarraPrecio.selectedItem.llave].visible = true ;
					if( btnBarraPrecio.selectedItem.llave == '_compCRMCliente' ){
						/* var evt:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.CARGA_ESAC_ALEATORIAMENTE );
						dispatchEvent( evt );  */
					}
				}
			}
			
			private function cambiaCRM( $evt:EventoPopUpContactos ):void{
				_compBusquedaCliente.visible = false
				_compCRMCliente.visible = false;
				_compBusquedaCliente.visible = true ;
				btnBarraPrecio.selectedIndex = 0;
			}
			
			[Bindable] private var _universoTodosContactos:ArrayCollection = new ArrayCollection();
			public function set recibirTodosContactos( $lista:ArrayCollection ):void{
				if($lista == null){
					return;
				}
				_universoRespaldo = new ArrayCollection();
				_universoRespaldo = ObjectUtil.copy( $lista ) as ArrayCollection;
				var _lst:ArrayCollection = ObjectUtil.copy( $lista ) as ArrayCollection;
				_sql = new Query($lista,["empresa","nombre","EMail"],true);
				
				_compBusquedaCliente.listaContactos($lista);
			}
			
			
			[Bindable] private var _universoContactos:ArrayCollection = new ArrayCollection();
			public function set recibirContactos( $lista:ArrayCollection ):void{
				if($lista == null){
					return;
				}
				_universoContactos = $lista;
			}
			
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			
			private	var temporizador2:Timer;
			protected function txtBusquedaContacto2_changeHandler(event:TextOperationEvent):void
			{
				if (StringUtil.trim( txtBusquedaContacto2.text).length > 0 )
				{
					
					if(temporizador2 == null)
					{
						temporizador2 = new Timer(400,0);
						temporizador2.addEventListener(TimerEvent.TIMER,filtraClientes2,false,0,true);
					}
					
					if(temporizador2)
					{
						if(temporizador2.running)
						{
							temporizador2.reset();
							temporizador2.start();
						}
						else
						{
							temporizador2.start();
						}
					}
				}
				else
				{
					if (_busquedaEfectiva != "TODOS")
					{
						_busquedaEfectiva = "TODOS";
						_compBusquedaCliente.listaContactos(_universoRespaldo);
					}
				}
			}
			
			
			private function filtraClientes2( event:TimerEvent ):void
			{
				temporizador2.stop();
				if (StringUtil.trim( txtBusquedaContacto2.text).length > 0)
				{
					var busqueda:String = StringUtil.trim(txtBusquedaContacto2.text);
					var punteroCliente:Array =  new Array();
					var pru:Array = new Array();
					var i:int;
					_busquedaEfectiva = busqueda;
					
					
					//  +++++++++++++++++++++++++++++++++++++++ BUSCA EN EMPRESA  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					pru = new Array();
					pru = _sql.getCampoLikeLowerCase("empresa",busqueda);
					pru.sort();
					
					if (pru.length > 0)
					{
						for ( i=0; i<pru.length; i++)
						{
							punteroCliente.push(_sql.getPunteros([pru[i],null,null]));
						}
					}
					
					//  ++++++++++++++++++++++++++++++++++++  BUSCA EN CONTACTO +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					pru = new Array();
					pru = _sql.getCampoLikeLowerCase("nombre",busqueda);
					pru.sort();
					
					if (pru.length > 0)
					{
						for ( i=0; i<pru.length; i++)
						{
							punteroCliente.push( _sql.getPunteros([null,pru[i],null]));
						}
					}
					
					//  +++++++++++++++++++++++++++++++++++++++  BUSCA EN EMAIL  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					pru = new Array();
					var pru1:Array = _sql.getCampoLikeLowerCase("EMail",busqueda);
					pru1.sort();
					
					if (pru1.length > 0)
					{
						for ( i=0; i<pru1.length; i++)
						{
							punteroCliente.push( _sql.getPunteros([null,null,pru1[i]]));
						}
					}
					
					//  +++++++++++++++++++++++++++++++++++++++  ORDENA Y ELIMINA REPETIDOS  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
					var arreTemp:Array = new Array()
					for ( i=0;i<punteroCliente.length;i++)
					{
						if (punteroCliente[i].length > 1)
						{
							for(var j:int=0; j<punteroCliente[i].length; j++)
							{
								arreTemp.push(punteroCliente[i][j]);
							}
						}
						else
							arreTemp.push(punteroCliente[i][0]);
					}
					
					var arregloTe:ArrayCollection = _sql.armarLista(removerDuplicados(arreTemp));
					if(arregloTe.length > 0)
						_compBusquedaCliente.listaContactos(arregloTe);
					else
						_compBusquedaCliente.listaContactos(_universoRespaldo);
				}
					
				else
				{
					_compBusquedaCliente.listaContactos(_universoRespaldo);
					
				}
			}
			
			
			private function removerDuplicados($array:Array):Array
			{
				var i:int = 0;
				$array.sort();
				while(i < $array.length) 
				{
					while(i < $array.length+1 && $array[i] == $array[i+1]) 
					{
						$array.splice(i, 1);
					}
					i++;
				}
				return $array;
			}
			
			public function removeDuplicates(inArray:Array):Array
			{
				return inArray.filter(removeDuplicatesFilter);
			}
			
			public function removeDuplicatesFilter(e:*, i:int, inArray:Array):Boolean
			{
				return (i == 0) ? true : inArray.lastIndexOf(e, i - 1) == -1;
			}
			
			
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" id="grpPrincipal" gap="20" horizontalAlign="center">
		<s:ButtonBar  id="btnBarraPrecio" labelField="valor"  width="285" height="35" change="btnBarraPrecio_changeHandler(event)"/>
		<otros:division width="100%"/>
		<s:TextInput id="txtBusquedaContacto2" width="100%" skinClass="skins.textinput.busqueda.skinTextInputBusqueda" fontStyle="normal" change="txtBusquedaContacto2_changeHandler(event)" />
		<s:Group width="100%" height="100%">
			<vistas:AIESC_Contenedor_PopUpListaContactos width="100%" height="463" id="_compBusquedaCliente" />
			<vistas:AIESC_CRM_PopUP  width="100%" height="100%" id="_compCRMCliente" visible="false"/>
		</s:Group>
	</s:VGroup>
</popUp:PopUpDefaultPQNet>
