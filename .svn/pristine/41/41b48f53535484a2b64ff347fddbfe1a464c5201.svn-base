<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:otros="skins.otros.*"
				resize="calcular(event)" 
				width="100%"
				autoDrawBackground="false" xmlns:check="skins.check.*" xmlns:componentes="mx.com.proquifa.vista.vistas.componentes.*"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.vista.eventos.EventoInterlocutor;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			
			
			
			[Bindable] public var sizeFont:Number;
			[Bindable] public var sizeFont13:Number;
			[Bindable] public var sizeFont12:Number;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				lblAnterior.setStyle("color",0xbe0016);//ROJO
				lblNuevo.setStyle("color",0x72a641);//VERDE
			}
			
			protected function calcular(event:ResizeEvent):void
			{
				sizeFont = (17 / 682) * (unscaledWidth);
				sizeFont = sizeFont > 17 ? 17 : sizeFont;
				sizeFont = sizeFont < 12 ? 12 : sizeFont;
				
				sizeFont13 = (13 / 682) * (unscaledWidth);
				sizeFont13 = sizeFont13 > 13 ? 13 : sizeFont13;
				sizeFont13 = sizeFont13 < 9 ? 9 : sizeFont13;
				
				sizeFont12 = (12 / 682) * (unscaledWidth);
				sizeFont12 = sizeFont12 > 12 ? 12 : sizeFont12;
				sizeFont12 = sizeFont12 < 8 ? 8 : sizeFont12;
			}
			
			protected function checkdefault1_selectedHandler(event:String):void
			{
				chkContinuar.selected = false;
				chkNo.selected = false;
				chkSi.selected = false;
				
				this[event].selected = true;
				
				if (chkSi.selected)
					data.espera = 1;
				if (chkNo.selected)
					data.espera = 0;
				if (chkContinuar.selected)
					data.espera = 2;
				
				data.selecionDato = true;
				dispatchEvent(new EventoInterlocutor(EventoInterlocutor.VERIFICAR_TODOS_DATOS));
			}
			
			protected function dtContinuar_selectedDateHandler(event:Event):void
			{
				data.fechaContinuar = dtContinuar.selectedDate;
			}
			
			protected function image1_clickHandler(event:MouseEvent):void
			{
				var evento:EventoInterlocutor = new EventoInterlocutor(EventoInterlocutor.PHISTORIAL);
				evento.current = data.idPCompra; //DEBE DE IR IDPCOMPRA PERO NO ME LLEGA
				evento.cuerpo = txtProducto.text;
				dispatchEvent(evento);
			}
			
		]]>
	</fx:Script>
	
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<otros:LineaDivision id="linea" width="100%" height="2" color="#f4f4f4" top="0" left="1" right="1" />
	
	
	<s:VGroup width="100%" height="100%" paddingTop="20" paddingBottom="20" paddingLeft="15" paddingRight="15">
		<s:HGroup width="100%" verticalAlign="middle" gap="0">
			<s:VGroup width="35%" >
				<s:Label width="100%" maxDisplayedLines="3" styleName="tab_texto_14_Helvetica" fontSize="{sizeFont12}" id="txtProducto"
						 text="#{itemIndex+1} · {data.codigo} {data.concepto} {data.cantidad} {data.unidad} Marca {data.fabrica}"/>
				<s:HGroup width="100%" verticalAlign="middle">
					<mx:Image smoothBitmapContent="true" source="{catalogoIconosBotones.getInstance().regular_azul}" />
					<s:Label width="100%" maxDisplayedLines="1" styleName="tab_texto_14_Helvetica" fontSize="{sizeFont12}" color="#008894"
							 text="{data.piezas} {data.piezas == 1 ? 'pza' : 'pzas' } · PU: {UtilsFormatosNumericos.precisionADosDecimalesConComas(data.pu)} · PT: {UtilsFormatosNumericos.precisionADosDecimalesConComas(data.pt)}" />
				</s:HGroup>
			</s:VGroup>
			<s:VGroup width="17%" verticalAlign="middle" horizontalAlign="center" >
				<s:Label width="100%" maxDisplayedLines="1" styleName="tab_texto_14_Helvetica" fontSize="{sizeFont13}" 
						 color="#000000" text="{UtilsFecha.formatoFechaDDMMMYY(data.fdp)}" textAlign="center" />
				<s:Label width="100%" maxDisplayedLines="1" styleName="tab_texto_14_Helvetica" fontSize="{sizeFont12}" 
						 color="#000000" text="(actualizado hace 2 días)" textAlign="center" />
			</s:VGroup>
			<s:VGroup width="17%" verticalAlign="middle" horizontalAlign="center" >
				<s:Label width="100%" maxDisplayedLines="1" styleName="tab_texto_14_Helvetica" fontSize="{sizeFont13}" 
						 color="#008894" text="Anterior: {UtilsFecha.formatoFechaDDMMMYY(data.fee)}" id="lblAnterior" textAlign="center" />
				<s:Label width="100%" maxDisplayedLines="1" styleName="tab_texto_14_Helvetica" fontSize="{sizeFont12}" 
						 color="#008894" text="Nueva: {UtilsFecha.formatoFechaDDMMMYY(data.fnueva)}" id="lblNuevo" textAlign="center" />
			</s:VGroup>
			<s:VGroup width="13%" horizontalAlign="center" enabled="{data.idPCompra ? true: false}">
				<mx:Image source="{catalogoIconosBotones.getInstance().icono_historial}" click="image1_clickHandler(event)" />
			</s:VGroup>
			<s:VGroup width="18%" verticalAlign="middle" horizontalAlign="center" >
				<s:HGroup width="100%" >
					<check:CheckDefault width="15" height="15" selected="checkdefault1_selectedHandler('chkSi')" id="chkSi" />
					<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont13}" text="Si" width="100%" maxDisplayedLines="1" />
				</s:HGroup>
				<s:HGroup width="100%" >
					<check:CheckDefault width="15" height="15" selected="checkdefault1_selectedHandler('chkNo')" id="chkNo" />
					<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont13}" text="No" width="100%" maxDisplayedLines="1" />
				</s:HGroup>
				<s:HGroup width="100%" >
					<check:CheckDefault width="15" height="15" selected="checkdefault1_selectedHandler('chkContinuar')" id="chkContinuar" />
					<s:VGroup width="100%" >
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont13}" text="Continuar Gestión" width="100%" maxDisplayedLines="1" />
						<s:HGroup width="100%"  visible="{chkContinuar.selected}" includeInLayout="{chkContinuar.selected}" >
							<componentes:DatePickerInterlocutor bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dtContinuar" verticalAlignTextInput="middle"
																source="{catalogoIconosBotones.getInstance().datepicker_Azul}" selectedDate="dtContinuar_selectedDateHandler(event)" />
						</s:HGroup>
					</s:VGroup>  
				</s:HGroup>
				
			</s:VGroup>
		</s:HGroup>
		
	</s:VGroup>  
	
	
	
	
</s:ItemRenderer>
