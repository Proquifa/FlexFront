<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:botonColor="skin.botonColor.*"
		xmlns:botonAtras="skin.botonAtras.*"
		backgroundColor="#252b2c"
		initialize="view1_initializeHandler(event)"
		title=""
		
		>
	
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroEnCierre;
			
			import modelo.objetos.PendientesMensajero;
			import modelo.singletons.enRealizacion.DatosGlobalesEnRealizacion;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			
			import vistas.contactoReceptor.listaTodosLosContactosReceptoresView;
			
			private var globales:DatosGlobalesEnRealizacion = DatosGlobalesEnRealizacion.getInstance();
			
			/* private var currentPendientes:Array; */
			/* 			public function set recibePendientesARealizar($pendientes:Array):void
			{
			if(!$pendientes)
			return;
			
			currentPendientes = $pendientes;
			this.title = PendientesMensajero($pendientes[0]).empresa;
			lstPendientesPorRealizar.height = $pendientes.length * 158;
			lstPendientesPorRealizar.dataProvider = new ArrayCollection($pendientes);
			
			
			} */
			
			protected function vistaAnterior(event:MouseEvent):void
			{
				this.navigator.popView();
			}
			
			protected function btnMismoContacto_clickHandler(event:MouseEvent):void
			{
				var solicitarContactos:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.SOLICITAR_CONTACTOS_PARA_REALIZACION_DE_PENDIENTES);
				
				/* solicitarContactos.pendientesARealizar = new RealizarPendientesObject;
				
				solicitarContactos.pendientesARealizar.pendientes = globales.currentPendientes;  */
				
				/* 				solicitarContactos.pendientesARealizar.idEmpresa = currentPendientes[0].idCliente;
				
				solicitarContactos.pendientesARealizar.empresa = currentPendientes[0].empresa;
				solicitarContactos.pendientesARealizar.evento = currentPendientes[0].evento; */
				
				globales.currentPendientesParaRealizacion  = ObjectUtil.copy(globales.currentPendientes) as Array;
				
				solicitarContactos.idEmpresa = globales.currentIdEmpresa;
				
				dispatchEvent(solicitarContactos);
				
			}
			
/* 			public function set recibeAvisoDeQueLLegaronLosContactos($contactos:ArrayCollection):void
			{
				if(!$contactos)
				{
					return;
				}
				
				navigator.pushView(listaTodosLosContactosReceptoresView); 
			}
			 */
			
			protected function lstPendientesPorRealizar_changeHandler(event:IndexChangeEvent):void
			{
				var solicitarContactos:EventoMensajeroEnCierre = new EventoMensajeroEnCierre(EventoMensajeroEnCierre.SOLICITAR_CONTACTOS_PARA_REALIZACION_DE_PENDIENTES);
				
				/* 					solicitarContactos.pendientesARealizar = new RealizarPendientesObject;
				
				solicitarContactos.pendientesARealizar.pendientes = [lstPendientesPorRealizar.selectedItem];
				
				solicitarContactos.pendientesARealizar.idEmpresa = currentPendientes[0].idCliente;
				solicitarContactos.pendientesARealizar.empresa = currentPendientes[0].empresa;
				solicitarContactos.pendientesARealizar.evento = currentPendientes[0].evento; */
				
				var selectArray:Array = new Array; 
				selectArray.push(ObjectUtil.copy(lstPendientesPorRealizar.selectedItem) as PendientesMensajero);
				globales.currentPendientesParaRealizacion  = selectArray;
				
				solicitarContactos.idEmpresa = globales.currentIdEmpresa;
				
				dispatchEvent(solicitarContactos);
				
			}
			
			protected function view1_initializeHandler(event:FlexEvent):void
			{
				this.title = globales.currentEmpresa;
				
				lstPendientesPorRealizar.height = globales.currentPendientes.length * 158;
				lstPendientesPorRealizar.dataProvider = new ArrayCollection(globales.currentPendientes);
			}
			
		]]>
	</fx:Script>
	
	
	
	<s:navigationContent>
		<botonAtras:botonAtras click="vistaAnterior(event)"/>
	</s:navigationContent>
	
	
	<s:Scroller width="640" height="{this.height}">
		<s:VGroup id="contenedor" width="100%" gap="25" verticalCenter="0" horizontalCenter="0" horizontalAlign="center" height="100%" paddingBottom="25">
			
			<s:List verticalScrollPolicy="off" contentBackgroundColor="#252b2c" id="lstPendientesPorRealizar" width="100%" 
					itemRenderer="vistas.renders.renderRealizacion.itemPendienteParaRalizacion" change="lstPendientesPorRealizar_changeHandler(event)" />
			
			<botonColor:botonColor id="btnMismoContacto" label="MISMO CONTACTO" colorBase="#257d92" botonRedondo="true" click="btnMismoContacto_clickHandler(event)" />
		</s:VGroup>
	</s:Scroller>
	
</s:View>
