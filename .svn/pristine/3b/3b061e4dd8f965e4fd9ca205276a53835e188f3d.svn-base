<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:evento="skins.botones.evento.*"
		 xmlns:label="skins.skin.label.*" 
		 width="100%" xmlns:chekbox="skins.skin.chekbox.*" 
		 >
	
	<fx:Metadata>
		[Event(name="clickExportar", type="flash.events.MouseEvent")]
		[Event(name="clickDescargarHeaderConsultas", type="flash.events.MouseEvent")]
		[Event(name="clickCheckCombo", type="flash.events.MouseEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotoneras;
			
			private var _textIzqquierdo:String;
			private var _textDerecho:String;
			private var _conCheckbox:Boolean = false;
			
			[Bindable]
			public var mostrarBtnExportar:Boolean;
			
			[Bindable]
			public var mostrarBtnDescargar:Boolean;
			
			
			public function get conCheckbox():Boolean
			{
				return _conCheckbox;
			}

			public function set conCheckbox(value:Boolean):void
			{
				if(value){
					hgComboSwitch.visible = true;
				}else{
					hgComboSwitch.visible = false;
				}
				_conCheckbox = value;
			}

			[Bindable]
			[Inspectable(category="Text",defaultValue="",enumeration="Fecha Facturacion,De Sistema")]
			public function get textIzqquierdo():String
			{
				
				return _textIzqquierdo;
			}

			public function set textIzqquierdo(value:String):void
			{
				_textIzqquierdo = value;
			}
			[Bindable]
			[Inspectable(category="Text", defaultValue="", enumeration="Fecha Cobro,Fuera de Sistema")]
			public function get textDerecho():String
			{
				return _textDerecho;
			}

			public function set textDerecho(value:String):void
			{
				_textDerecho = value;
			}

			protected function btnDescargar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new MouseEvent("clickDescargarHeaderConsultas"));
			}
			
			protected function btnExportar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new MouseEvent("clickExportar"));
			}
			
			protected function checkCombo_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				dispatchEvent(new MouseEvent("clickCheckCombo"));
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		
	</fx:Declarations>
	<label:Titulo text="RESULTADOS" bottom="-3"/>
	<s:Image id="btnGridToDetalle" source="{catalogoIconosBotoneras.getInstance().gridgris}" visible="false" includeInLayout="false"/>
	<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="false" id="hgComboSwitch">
		<chekbox:CheckBoxPq id="checkCombo" labelLeft="{textIzqquierdo}" click="checkCombo_clickHandler(event)"  labelRight="{textDerecho}" />
	</s:HGroup>
	<s:HGroup right="0">
		<evento:botonColoresConImagenEventoDefault id="btnDescargar" icono="descargarArchivos" color="0x{catalogoColores.BTN_VERDE_AZUL}" visible="{mostrarBtnDescargar}" width="30" height="30" click="btnDescargar_clickHandler(event)" toolTip="Descargar"/>
		<evento:botonColoresConImagenEventoDefault id="btnExportar" icono="exportarEvento" color="0x{catalogoColores.BTN_VERDE_AZUL}" visible="{mostrarBtnExportar}" width="30" height="30" click="btnExportar_clickHandler(event)" toolTip="Exportar"/>
	</s:HGroup>
</s:Group>