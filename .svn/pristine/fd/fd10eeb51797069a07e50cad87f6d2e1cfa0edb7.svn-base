<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mate="http://mate.asfusion.com/" >
	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.ActionListEvent;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.EventoCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoAuxiliarEnLaActualizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProOferta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ModeloCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.comerciales.ModeloCatProOferta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Modificacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.popup.ModeloPopUp;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.marca.CatProMarca;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.CatProOferta_zonTrabajo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.CatPro_Barra_tipoControl;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.CatPro_OfertaContenedor;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.CatPro_OfertaDefaultAnimacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.catProOfertaPopUp.CatProOferta_PopUp_ModificacionPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.grpVerInfoFormulaEnCatProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.generales.CatProveedoresEmpresa;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.tecnicos.CatProClasificacion;
			
			
			[Bindable] private var modifi:Modificacion;
			
			protected function guardarValores(event:ActionListEvent):void
			{
				modifi = new Modificacion();
				modifi.idEmpleado = DatosGlobales.getInstance()._usuario.idEmpleado;
				modifi.metodo =  (event.originalEvent as EventoCatProOferta).metodo;
				modifi.servicio =  (event.originalEvent as EventoCatProOferta).servicio;
				modifi.ventana = (event.originalEvent as EventoCatProOferta).ventana;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!--<mate:Debugger level="{Debugger.ALL}"/>-->
		
		
		
		<!--++++++++++++++++++++++++++++++++++++++++++ INSERTAR LA MODIFICACION DATOS ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		
		<mate:EventHandlers start="guardarValores(event)" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
			
			<mate:RemoteObjectInvoker destination="{Destinos.EMPLEADO_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="guardarModificacion"
									  arguments="{modifi}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProGeneral}"
										method="setUpdateModificaiones"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProGeneral}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors				targets="{[CatProveedoresEmpresa]}">
			<mate:PropertyInjector 	source="{ModeloCatProGeneral}" 
									sourceKey="updateModificaciones"
									targetKey="confirmaModificacion"/>
		</mate:Injectors>
		
		
		<!-- /////////////////////////////////////////////////////////////////// Consultar lista de consfiguraciones NIVEL COSTO /////////////////////////////////////////////////////////////////// -->
		
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_CONFIGURACIONES_PRECIO_COSTO }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerConfiguracionesPrecioCosto"
									  arguments="{[ event.idConfiguracion]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeConfiguracionesPrecioCosto"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors	targets="{[CatPro_OfertaDefaultAnimacion,CatPro_OfertaContenedor]}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="enviaConfiguracionesPrecioCosto"
								   targetKey="recibeConfiguracionesPrecioCosto"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// Consultar lista de consfiguraciones NIVEL PRODUCTO/////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_CONFIGURACIONES_PRECIO_PRODUCTO }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="listarConfiguracionOferta"
									  arguments="{[ event.idConfiguracion]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeConfiguracionesProducto"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors	targets="{[CatPro_OfertaDefaultAnimacion,CatPro_OfertaContenedor]}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="enviaConfiguracionesProducto"
								   targetKey="recibeConfiguracionesProducto"/>
		</mate:Injectors>

		<!-- /////////////////////////////////////////////////////////////////// Consultar lista de consfiguraciones NIVEL CLASIFICACION/////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_CONFIGURACIONES_CLASIFICACION }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerConfiguracionesPrecioClasificacion"
									  arguments="{[ event.idConfiguracion]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeConfiguracionesClasificacion"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors	targets="{[CatPro_OfertaDefaultAnimacion,CatPro_OfertaContenedor]}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="enviaConfiguracionesClasificacion"
								   targetKey="recibeConfiguracionesClasificacion"/>
		</mate:Injectors>
		
		
		<!-- /////////////////////////////////////////////////////////////////// Obtener todas las familias de un proveedor /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_TODAS_LAS_FAMILIAS_DEL_PROVEEDOR }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="listarConfiguracionPrecioProveedor"
									  arguments="{[ event.idProveedor]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeFamiliasDelProveedor"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				targets="{[CatPro_OfertaDefaultAnimacion,CatPro_OfertaContenedor]}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="RegresaFamiliasDelProveedor"
								   targetKey="recibeLasFamiliasDelProveedorSeleccionado"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// Cargar Configuracion ainivel Familia /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_CONFIGURACION_FAMILIA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="cargarConfiguracionFamilia"
									  arguments="{[ event.idConfigFamilia ]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeConfiguracionFamilia"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_OfertaContenedor}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="RecibeConfiguracionFamilia"
								   targetKey="recibeConfiguracionFamilia"/>
		</mate:Injectors>
		<!-- /////////////////////////////////////////////////////////////////// Cargar Configuracion ainivel Precio Lista/////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_CONFIGURACION_PRECIO_LISTA}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="getConfiguracionPrecio"
									  arguments="{[event.idCurrentSolicitud,event.idCategoriaPrecioLista,event.licencia]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeConfiguracionPrecioLista"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_OfertaContenedor}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="regresaConfiguracionPrecioLista"
								   targetKey="recibirConfiguracionPLista"/>
		</mate:Injectors>

		<!-- /////////////////////////////////////////////////////////////////// Cargar Configuracion A NIVEL CLASIFICACION/////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_CONFIGURACION_CLASIFICACION}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerConfiguracionPrecioClasificacion"
									  arguments="{[event.idCurrentSolicitud,event.idClasificacion]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeConfiguracionClasificacion"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_OfertaContenedor}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="regresaConfiguracionClasificacion"
								   targetKey="recibirConfiguracionPrecioClasificacion"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// Cargar Costos relacionados con la clasificacion /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.OBTENER_LOS_COSTOS_RELACIONADOS_CON_LA_CLASIFICACION}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerClasificacionPrecioProductoPorCatPrecio"
									  arguments="{[event.idClasificacion]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibeLosCostosRelacionadosConClasificacion"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_OfertaDefaultAnimacion}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="regresaCostosRelacionadosConLaClasificacion"
								   targetKey="recibeCostosRelacionadosConLaClasificacion"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// GUARDAR  COSTO /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.GUARDA_COSTO_FACTOR_FAMILIA }">
			
			<mate:EventAnnouncer  generator="{EventoCatProOferta}" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
				<mate:Properties metodo = "asignarCostoFactorAConfiguracionPrecio"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="asignarCostoFactorAConfiguracionPrecio"
									  arguments="{[ event.configuracionPrecioProducto ]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setGuardaCosto"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_OfertaDefaultAnimacion}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="GuardaCosto"
								   targetKey="confirmaCostoFactor"/>
		</mate:Injectors>
		<!-- /////////////////////////////////////////////////////////////////// GUARDAR  CONFIGURACION DE LISTA, CLASIFICACIÓN Y PRODUCTO /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.GUARDA_CONFIGURACION_LSITA }">
			
			<mate:EventAnnouncer  generator="{EventoCatProOferta}" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
				<mate:Properties metodo = "guardarConfiguracionOferta"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="guardarConfiguracionOferta"
									  arguments="{event.configuracionPrecioProducto}"
									  
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setGuardaConfiguracionLista"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_OfertaDefaultAnimacion}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="GuardaConfiguracionLista"
								   targetKey="confirmaCostoFactor"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////////////////////// GUARDAR PRECIO PORCENTAJE /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.GUARDA_PRECIO_PORCENTAJE }">
			
			<mate:EventAnnouncer  generator="{EventoCatProOferta}" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
				<mate:Properties metodo = "actualizarCostoPorcentajeNivel"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="actualizarCostoPorcentajeNivel"
									  arguments="{[ event.configuracionPrecioProducto, event.modificaPrecio, event.monto,event.cambioCosto,event.cambioTransito]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setGuardaPrecio"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"	
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_Barra_tipoControl}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="GuardaPrecio"
								   targetKey="confirmaCambioPrecio"/>
		</mate:Injectors>
		<!-- /////////////////////////////////////////////////////////////////// Restablece Configuracion /////////////////////////////////////////////////////////////////// -->
		<mate:EventHandlers type="{ EventoCatProOferta.RESTABLECER }">
			
			<mate:EventAnnouncer  generator="{EventoCatProOferta}" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
				<mate:Properties metodo = "reintegrarConfiguracion"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="reintegrarConfiguracion"
									  arguments="{[ event.idConfiguracion,event.nivel]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRestablecer"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatPro_Barra_tipoControl}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="Restablecer"
								   targetKey="confirmaRestableceConfiguracion"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para obtener la respuesta del popUp Alerta Singleton  -->
		<mate:EventHandlers type="{EventoAlertaPqNet.RESPUESTA_ALERTA}">
			<mate:MethodInvoker generator="{ModeloPopUp}"
								method="setRegresaBotonSeleccion"
								arguments="{event.respuesta}"/>  
		</mate:EventHandlers>
		<mate:Injectors targets="{[CatProOferta_PopUp_ModificacionPrecio]}">
			<mate:PropertyInjector source="{ModeloPopUp}"
								   sourceKey="regresaSeleccion"
								   targetKey="recibeDelAlert"/>	
		</mate:Injectors>
		
		<!-- //////////////////////////////////////////////////////////////// Se envia el id Proveedor desde productos para actualizar los datos  -->
		
		<mate:EventHandlers type="{ EventoCatProGeneral.OBTENER_PRODUCTOS_DESDE_PRODUCTOS }">
			<mate:MethodInvoker generator="{ModeloCatProOferta}"
								method="setEnviaProveedor"
								arguments="{[event]}"/>
		</mate:EventHandlers>
		<mate:Injectors				targets="{[CatPro_OfertaDefaultAnimacion,CatProMarca,CatPro_OfertaContenedor]}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="enviaProveedor"
								   targetKey="recibeProveedorSeleccionadoDesdeProductos"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para Obtener el costo de compra de un producto  -->
		
		<mate:EventHandlers type="{EventoCatProOferta.OBTENER_EL_COSTO_DEL_PRODUCTO_COMPRA}">
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerCostoProductoCompra"
									  arguments="{[event.idProducto]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRecibirElCosoDelProductoCompra"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors  target="{CatProOferta_PopUp_ModificacionPrecio}">
			<mate:PropertyInjector source="{ModeloCatProOferta}"
								   sourceKey="regresaCostoDelProductoCompra"
								   targetKey="recibeCostoProductoCompra"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para actualizar monto mínimo de OC  -->
		
		<mate:EventHandlers type="{EventoCatProOferta.ENVIAR_EL_MONTO_MINIMO_DE_COMPRA}">
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="actualizarMontoMinimoOCMV"
									  arguments="{[event.idConfiguracion,event.valorEnAduana, event.flete,event.descuento]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRespuestaActualizarMontoMinOC"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors  target="{CatPro_OfertaDefaultAnimacion}">
			<mate:PropertyInjector source="{ModeloCatProOferta}"
								   sourceKey="regresaConfirmacionDeActualizarMontoMinOC"
								   targetKey="confirmaActualizacionMontoMinOC"/>
		</mate:Injectors>
		
		
		<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para actualizar la fecha de vigencia y Restringir Stock, FExpress, Distribuidor  -->
		
		<mate:EventHandlers type="{EventoCatProOferta.ACTUALIZAR_PROPIEDADES_DE_LA_CONFIGURACION}">
			
			<mate:EventAnnouncer  generator="{EventoCatProOferta}" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
				<mate:Properties metodo = "actualizarPropiedadesConfiguracionPrecio"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="actualizarPropiedadesConfiguracionPrecio"
									  arguments="{[event.configuracionPrecio]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRespuestaActualizarVigenciaYRestringido"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors  target="{/* CatPro_OfertaDefaultAnimacion */ CatPro_OfertaContenedor}">
			<mate:PropertyInjector source="{ModeloCatProOferta}"
								   sourceKey="regresaConfirmacionDeActualizarVigenciaYRestringido"
								   targetKey="confirmaActualizacionVigenciaYRestringido"/>
		</mate:Injectors>
		
		
		<!-- //////////////////////////////////////////////////////////////// Se envia la configuracion seleccionada desde la vista para leer sus propiedades -->
		
		<mate:EventHandlers type="{ EventoCatProOferta.ENVIAR_CONFIGURACION_SELECCIONADA_PARA_LEER_SUS_PROPIEDADES}">
			<mate:MethodInvoker generator="{ModeloCatProOferta}"
								method="setRecibeConfiguracionSeleccionada"
								arguments="{[event.configuracionPrecio]}"/>
		</mate:EventHandlers>
		<mate:Injectors targets="{[CatPro_Barra_tipoControl,grpVerInfoFormulaEnCatProveedores,CatProOferta_zonTrabajo]}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="enviaConfiguracionSeleccionada"
								   targetKey="recibeConfiguracionSeleccionada"/>
		</mate:Injectors>		
		<!-- //////////////////////////////////////////////////////////////// Se envia la configuracion seleccionada desde la vista para leer sus propiedades -->
		
		<!-- //////////////////////////////////////////////////////////////// Se envian las familias ordenanas para que lo puedan utilizar otras vistas -->
		<mate:EventHandlers type="{ EventoCatProOferta.ENVIAR_FAMILIAS_ORDENADAS_PARA_CINTURON_EN_OTRAS_VISTAS}">
			<mate:MethodInvoker generator="{ModeloCatProOferta}"
								method="setTodasLasFamiliasOrdenadas"
								arguments="{[event.todasLasFamilias]}"/>
		</mate:EventHandlers>
		<mate:Injectors target="{CatProClasificacion}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="enviaTodasLasFamiliasOrdenadas"
								   targetKey="recibeTodasLasFamiliasOrdenadas"/>
		</mate:Injectors>			
		<!-- //////////////////////////////////////////////////////////////// Se envian las familias ordenanas para que lo puedan utilizar otras vistas -->
		
		
		<mate:EventHandlers type="{EventoCatProOferta.OBTENER_INFORMACION_DE_LA_FORMULA_PRECIO}">
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerInformacionFormulaPrecio"
									  arguments="{[event.idProveedor,event.idProducto,event.nivel,event.idConfigFamilia]}"
									  showBusyCursor="true">
				
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}" 
										method="setRecibeInfoDeFormulaPrecio"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
				
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors target="{grpVerInfoFormulaEnCatProveedores}">
			<mate:PropertyInjector source="{ModeloCatProOferta}"
								   sourceKey="regresaInfoDeFormulaPrecio"
								   targetKey="recibeInfoFormulaPrecio"/>
		</mate:Injectors>

		<mate:EventHandlers type="{EventoCatProOferta.OBTENER_INFORMACION_DE_LA_FORMULA_PRECIO_CLASIFICACION}">
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerInformacionFormulaPrecioClasificacion"
									  arguments="{[event.idProveedor,event.idProducto,event.nivel,event.idConfigClasificacion]}"
									  showBusyCursor="true">
				
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}" 
										method="setRecibeInfoDeFormulaPrecioClasificacion"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
				
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors target="{grpVerInfoFormulaEnCatProveedores}">
			<mate:PropertyInjector source="{ModeloCatProOferta}"
								   sourceKey="regresaInfoDeFormulaPrecioClasificacion"
								   targetKey="recibeInfoFormulaPrecio"/>
		</mate:Injectors>
		
		
		<!--//////////////////////////////////////////////////////////////// Se envia la SOLICITUD PARA ACTUALIZAR CONFIGURACIONES-->
		
		<mate:EventHandlers type="{EventoAuxiliarEnLaActualizacion.SOLICITAR_ACTUALIZACION_DE_LAS_CONFIGURACIONES}">
			<mate:MethodInvoker generator="{ModeloCatProOferta}"
								method="setRecibeSolicitudActualizarConfiguraciones"
								arguments="{event}"/>
		</mate:EventHandlers>
		<mate:Injectors target="{CatPro_OfertaContenedor}">
			<mate:PropertyInjector source="{ModeloCatProOferta}"
								   sourceKey="setEnviaSolicitudActualizarConfiguraciones"
								   targetKey="escucharPeticionDeActualizarConfiguraciones"/>
		</mate:Injectors>
		
		<!--Restablecer Todas las Configuraciones Por nivel-->
		
		<mate:EventHandlers type="{ EventoCatProOferta.RESTABLECER_TODAS_CONFIGURACIONES_POR_NIVEL }">
			
			<mate:EventAnnouncer  generator="{EventoCatProOferta}" type="{EventoCatProOferta.INSERTAR_MODIFICACION_OFERTA_PROVEEDOR}">
				<mate:Properties metodo = "restablecerTodasConfiguracionesPorNivel"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{ Destinos.CATALOGO_PROVEEDOR_SERVICE }"
									  endpoint="{Destinos.END_POINT}"
									  method="restableceTodasConfiguracionesPorNivel"
									  arguments="{[ event.nivel, event.idConfigFamilia]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="setRestablecerTodoPorNivel"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProOferta}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors				target="{CatProOferta_zonTrabajo}">
			<mate:PropertyInjector source="{ModeloCatProOferta}" 
								   sourceKey="RestablecerTodoPorNivel"
								   targetKey="confirmarRestablecerTodasConfiguraciones"/>
		</mate:Injectors>
		
	</fx:Declarations>
</mate:EventMap>