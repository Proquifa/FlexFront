<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="init(event)"
		 width="100%" height="100%"
		 xmlns:graficas="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.graficaPie.*"
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoGraficaPiePqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.SeguimientoCotizacionAgrupada;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import skins.skin.graficas.pieSeriesPqNet;
			import skins.skin.graficas.pieSeriesVS;
			
			[Bindable]
			public var datos:ArrayCollection = new ArrayCollection();
			
			private var totales:SeguimientoCotizacionAgrupada = new SeguimientoCotizacionAgrupada();
			
			protected function init(event:FlexEvent):void{
				var series:Array = new Array();
				var serie:pieSeriesPqNet = new pieSeriesPqNet();
				serie.field = "monto";
				series.push(serie);
				this.grafica.series = series;
				this.grafica.addEventListener(EventoGraficaPiePqNet.CAMBIO_INFORMACION_GRAFICA,grafica_listener);
				this.grafica.addEventListener(EventoGraficaPiePqNet.MUESTRA_INFORMACION_GENERAL_GRAFICA,graficaGeneral_listener);
			}
			
			protected function grafica_listener(event:EventoGraficaPiePqNet):void
			{
				if(event.data != null && event.item != null){
					var data:Object = event.data;
					grafica.lbTitulo.text = data.nombreESAC.toUpperCase() + " (" + event.item.percentValue.toFixed(2) + "%)";
					grafica.lbDescripcion.text = "No. Cotizaciones: " + data.totalCotizaciones + 
						"\nNo. Partidas: " + data.totalPartidas +
						"\nNo. Clientes: " + data.numClientes +
						"\nNo. Piezas: " + data.piezas + "\nMonto: " + data.montoString;
					
				}
				else{
					grafica.lbTitulo.text = "";
					grafica.lbDescripcion.text = "";
				}
			}
			
			/* public function set recibirCotSeguimientos($datos:ArrayCollection):void{
				datos = new ArrayCollection();
				totales = new SeguimientoCotizacionAgrupada();
				if($datos.length > 1){
						var tempDatos:ArrayCollection = ObjectUtil.copy( $datos ) as ArrayCollection;
						tempDatos.removeItemAt( tempDatos.length-1);
						datos = formarGrafica(tempDatos);
						var sortField:SortField = new SortField();
						sortField.name = "monto";
						sortField.numeric = true;
						var sort:Sort = new Sort();
						sort.fields = [sortField];
						sort.reverse();
						datos.sort = sort;
						datos.refresh();
						for(var m:int = 0; m<datos.length; m++){
							totales.totalCotizaciones = totales.totalCotizaciones + datos[m].totalCotizaciones;
							totales.totalPartidas = totales.totalPartidas + datos[m].totalPartidas;
							totales.piezas = totales.piezas + datos[m].piezas;
							totales.monto = totales.monto + datos[m].monto;
						}
						grafica.includeInLayout = grafica.visible = true;
				}else{
						grafica.includeInLayout = grafica.visible = false;
				}
				grafica.lbTitulo.text = "";
				grafica.lbDescripcion.text = "";
				mostrarTotales();
				this.grafica.dataProvider = datos;
			} */
			
			public function formarGrafica($datos:ArrayCollection):ArrayCollection{
				var seguimientosAgrupados:ArrayCollection = new ArrayCollection();
				var seguimientos:ArrayCollection = new ArrayCollection();
				var m:int = 0;
				for(m = 0; m<$datos.length; m++){       
					for(var p:int = 0; p<$datos[m].cotizaciones.length; p++){
						if($datos[m].cotizaciones[p].ultimo == ""){
							seguimientos.addItem($datos[m].cotizaciones[p]);
						}
					}
				}
				
				while(seguimientos.length > 0){
					var arreglo:ArrayCollection = new ArrayCollection();
					arreglo.addItem(seguimientos[0]);
					for(m = 1; m<seguimientos.length; m++){
						if(seguimientos[m].nombreVendedor == arreglo[0].nombreVendedor){
							arreglo.addItem(seguimientos[m]);
							seguimientos.removeItemAt(m);
							m = m -1;
						}
					}
					
					seguimientos.removeItemAt(0);
					var agrupador:SeguimientoCotizacionAgrupada = new SeguimientoCotizacionAgrupada();
					agrupador.cotizaciones = arreglo;
					seguimientosAgrupados.addItem(agrupador);
				}
				return seguimientosAgrupados;
			}
			
			
			public function graficaGeneral_listener(event:EventoGraficaPiePqNet):void{
				mostrarTotales();	
			}
			
			private function mostrarTotales():void{
				grafica.lbTitulo.text = "Totales";
				grafica.lbDescripcion.text = "No. Cotizaciones: " + totales.totalCotizaciones + 
					"\nNo. Partidas: " + totales.totalPartidas +
					"\nNo. Piezas: " + totales.piezas + "\nMonto: " + totales.montoString;
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout gap="10"/>
	</s:layout>
	
	<componentes:tituloChartTablero width="100%" text="EJECUTIVOS DE SERVICIO A CLIENTES" textAlign="center" paddingTop="20"/>
	<graficas:GraficaPiePqNet id="grafica"
							  height="100%" width="100%"/>
</s:Group>
