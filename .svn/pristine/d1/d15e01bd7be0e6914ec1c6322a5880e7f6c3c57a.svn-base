<?xml version="1.0" encoding="utf-8"?>
<chekbox:CheckBoxPq xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:chekbox="skins.skin.chekbox.*"
					
					selected="false" labelLeft="PERIODICOS" labelRight="LINEALES" >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ParametrosBusquedaCliente;
			
			//	CLIENTES
			private var _event:EventoTableroClientes;
			public function set recibirFiltros( $event:EventoTableroClientes ):void
			{
					if( $event == null )
						return;
					selected = $event.lineal == 1 ? true: false;
					_event = $event;
					addEventListener( Event.CHANGE, changeHandlerClientes, false, 0, true );
			}
			
			protected function changeHandlerClientes(event:Event):void
			{
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				
				var evt:EventoTableroClientes;
					switch(this.parentDocument.className)
					{
						case "MixProductosComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_MIX_PRODUCTOS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_MIX_PRODUCTOS");
							break;
						}
						case "CotPedComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_COTIZACION_PEDIDO);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_COTIZACION_PEDIDO");
							break;
						}
						case "SeguimientosComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_SEGUIMIENTOS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_SEGUIMIENTOS");
							break;
						}
						case "PedidosComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_PEDIDOS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_PEDIDOS");
							break;
						}
						case "PeriodoTabComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_VENTAS_PERIODO);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_VENTAS_PERIODO");
							break;
						}
						case "MixMarcasComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_MIX_MARCAS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_MIX_MARCAS");
							break;
						}
						case "CotNoPedComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_COT_DIF_PEDIDOS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_COT_DIF_PEDIDOS");
							break;
						}
						case "CancelacionCotizacionComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_CANCELACION_COTIZACION);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_CANCELACION_COTIZACION");
							break;
						}
						case "EntregasTabComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_ENTREGAS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_ENTREGAS");
							break;
						}
						case "ComportaPagosComparacion":
						{
							evt = new EventoTableroClientes( EventoTableroClientes.CONSULTA_LINEAL_COMPORTAMIENTO_PAGOS);
							eventEspera.tipoEventos.push("CONSULTA_LINEAL_COMPORTAMIENTO_PAGOS");
							break;
						}
						default:
						{
							break;
						}
					}
					dispatchEvent(eventEspera);
					
					var parametros:ParametrosBusquedaCliente = new ParametrosBusquedaCliente();
					evt.isIndividual = true;
					parametros.anio = evt.anio = _event.parametros.anio;
					parametros.cliente = evt.idCliente = _event.parametros.cliente;
					parametros.periodo = evt.periodo = _event.parametros.periodo;
					parametros.tipoPeriodo = evt.tipoPeriodo = _event.parametros.tipoPeriodo;
					parametros.mes = evt.mes = _event.parametros.mes;
					parametros.esac = evt.esacString = _event.parametros.esac;
					parametros.eventas = evt.idVentas = _event.parametros.eventas;
					parametros.lineal = evt.lineal = selected == true ? 1: 0;
					evt.rangoMinMes = _event.rangoMinMes;
					evt.rangoMaxMes = _event.rangoMaxMes;
					parametros.corporativo = evt.corporativo = _event.parametros.corporativo;
					parametros.proveedor = evt.idProveedor = _event.parametros.proveedor;
					evt.parametros = parametros;
					dispatchEvent( evt );
			}
			
			//	CLIENTES MOBIL
			public function set recibirFiltrosClientesMobil( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				selected = $event.lineal == 1 ? true: false;
				_event = $event;
			}
			
			// PROVEEDORES
			/*private var _eventProveedores:EventoTabProveedores;
			public function set recibirFiltrosTableroProveedores( $event:EventoTabProveedores ):void{
					if( $event == null )
						return;
					selected = $event.lineal == 1 ? true: false;
					_eventProveedores = $event;
					addEventListener( Event.CHANGE, changeHandlerProveedores, false, 0, true );
			}
			protected function changeHandlerProveedores(event:Event):void
			{
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				
				var evento:EventoTabProveedores;
				switch(this.parentDocument.className)
				{
					case "ProveedorTop10ProductosComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_TOP_10_PRODUCTOS);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_TOP_10_PRODUCTOS");
						break;
					}
					case "ProveedorOCTransitoComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_OC_TRANSITO);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_TRANSITO");
						break;
					}
 					case "ProveedorRechazosComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_OC_RECHAZADA);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_RECHAZADA");
						break;
					}
					case "ProveedorComprasComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_OC_COMPRAS);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_COMPRAS");
						break;
					}
					case "CondicionesDePagoComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_CONDICIONES_DE_PAGO);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_CONDICIONES_DE_PAGO");
						break;
					}
					case "ProveedorTop10ClientesComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_TOP_10_CLIENTES);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_TOP_10_CLIENTES");
						break;
					}
					case "ProveedorOCRecibidasComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_OC_RECIBIDAS);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_RECIBIDAS");
						break;
					}
					case "ProveedorAvisoDeCambiosComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_OC_AVISO_CAMBIOS);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_AVISO_CAMBIOS");
						break;
					}
					case "ProveedorPagosComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_OC_PAGOS);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_OC_PAGOS");
						break;
					}
					case "LineaDeCreditoComparacion":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_LINEA_CREDITO);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_LINEA_CREDITO");
						break;
					} 
					case "LineaDeProductosMax":
					{
						evento = new EventoTabProveedores( EventoTabProveedores.BUSCA_COMPARATIVA_LINEA_PRODUCTOS);
						eventEspera.tipoEventos.push("BUSCA_COMPARATIVA_LINEA_PRODUCTOS");
						break;
					} 
					default:
					{
						break;
					}
				}
				dispatchEvent(eventEspera);
				var par:ParametrosBusquedaProveedor = _eventProveedores.parametros;
				evento.isIndividual = true;
				evento.idProveedor = par.idProveedor;
				evento.anioInt = par.anio;
				evento.periodo = par.periodo;
				evento.tipoPeriodo = par.tipoPeriodo;
				evento.mes = par.mes;
				evento.idUsuario = par.idUsuario;
				evento.lineal = par.lineal = selected == true ? 1: 0;
				evento.mesInicio = par.mesInicio;
				evento.mesFin = par.mesFin;
				evento.parametros = par;
				dispatchEvent(evento);
			}
			*/
		]]>
	</fx:Script>
</chekbox:CheckBoxPq>
