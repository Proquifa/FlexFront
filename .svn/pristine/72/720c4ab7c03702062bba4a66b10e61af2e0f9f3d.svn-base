<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:otros="skins.otros.*"
				xmlns:label="skins.skin.label.*"
				dragOver="cambiarDMarcador(event)"
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="66">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoAnalisisincidente;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoGestionIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Incidente;
			import mx.events.DragEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			import skins.skin.datagrid.pqNet.dataGridPqNet;
			
			[Bindable]
			private var icono:String;
			[Bindable]
			private var iconoNormal:Class;
			[Bindable]
			private var marcadorSeleccionado:String;
			[Bindable]
			private var _listaMarcadorDragDrop:ArrayCollection = new ArrayCollection();
			
			override public function set data(value:Object):void{
				super.data = value;
				if(value.ultimo == ""){
					this.viewsMarcadores.selectedIndex = 0;
					
					if((data as Incidente).marcador == "REFORMULACIÓN" )  iconoNormal = catalogoIconosGrid.getInstance().render_reformulacion;
						
					else if((data as Incidente).marcador == "PROGRAMACIÓN" )  iconoNormal = catalogoIconosGrid.getInstance().render_programaciondecision;
						
					else if((data as Incidente).marcador == "CAMBIO DE ORIGEN" )  iconoNormal = catalogoIconosGrid.getInstance().render_cambioorigen;
						
					else if((data as Incidente).marcador == "CORTO PLAZO" )  iconoNormal = catalogoIconosGrid.getInstance().render_marcadorverde;
						
					else if((data as Incidente).marcador == "MEDIANO PLAZO" )  iconoNormal = catalogoIconosGrid.getInstance().render_marcadorverde;
						
					else if((data as Incidente).marcador == "LARGO PLAZO" )  iconoNormal = catalogoIconosGrid.getInstance().render_marcadorverde;
						
					else  iconoNormal = catalogoIconosGrid.getInstance().render_marcadorazul;
					
				}else{
					this.viewsMarcadores.selectedIndex = 1;
					value.ultimo == 1 ? this.totalproducto.text = value.ultimo +" Marcador" : this.totalproducto.text = value.ultimo +" Marcadores" ;
				}
			}
			
			private function cambiarDMarcador(evt:DragEvent):void{
				
				var evento:EventoGestionIncidente = new EventoGestionIncidente(EventoGestionIncidente.OBTENER_UBICACION_DROP);
				evento.itemDrop = (this.data as Incidente).marcador;
				dispatchEvent(evento);
				
			} 
			
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<mx:ViewStack id="viewsMarcadores" width="100%" creationPolicy="all">
		<s:NavigatorContent >
			<s:HGroup width="100%" height="100%">
				<s:BorderContainer id="barraDeColor" width="5" height="66" visible="false" visible.selected="true" verticalCenter="0"
								   backgroundColor="0x{catalogoColores.LABEL_VERDE_AZUL}" borderColor="0x{catalogoColores.LABEL_VERDE_AZUL}" />
				<s:VGroup height="100%" width="100%" paddingRight="10">
					<s:FormItem width="100%" height="100%">
						<s:HGroup width="100%" >
							<s:Label id="producto"  height="100%" width="100%" textAlign="left" fontFamily="Helvetica" fontSize="12" fontWeight="bold" maxDisplayedLines="1" text="{this.data.marcador}" />
							<s:HGroup width="100%">
								<s:Spacer width="100%"/>
								<s:Image source="{this.iconoNormal}" />
							</s:HGroup>
						</s:HGroup>
						
						<s:Label id="justificacion"  color="#999999" height="100%" width="100%" textAlign="left" fontFamily="Helvetica" fontSize="12" 
								 maxDisplayedLines="1" text="{(this.data as Incidente).numIncidentes} {(this.data as Incidente).numIncidentes == 1 ? 'Incidente' : 'Incidentes' }  :  {(this.data as Incidente).numMarcadoresET} ET  :  {(this.data as Incidente).numMarcadoresFT} FT"/>
					</s:FormItem>
					
					<otros:division id="linea1"/>
				</s:VGroup>
			</s:HGroup>	
			
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%">
			<s:BorderContainer width="100%" height="100%" borderColor="#FFFFFF" backgroundColor="#FFFFFF">
				<s:VGroup id="lista" width="100%" height="100%" paddingRight="10" verticalAlign="middle" >
					<s:Label id="totalproducto" width="100%" fontFamily="Bank Gothic" fontSize="12" textAlign="center" color="#999999"/>
					<s:Label text="Total" color="#8D8B8B" fontFamily="Bank Gothic" fontSize="12" width="100%" textAlign="center"/>
				</s:VGroup>
			</s:BorderContainer>
		</s:NavigatorContent>
	</mx:ViewStack>
	
</s:ItemRenderer>
