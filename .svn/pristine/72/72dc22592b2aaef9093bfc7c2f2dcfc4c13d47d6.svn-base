<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.compras.reporteDePermisos.EventoReporteDePermisos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.reportes.compras.reporteDePermisos.ReporteDePermisosItemTiposDeSolicitud;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.compras.reporteDePermisos.renders.itemRenderPanelTiposSolicitudPorProveedor;
			
			import skins.catalogos.catalogoColores;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			public var tituloPanel:String;
			[Bindable]
			public var filtrarProductos:Boolean;
			
			public function set infoSolicitudesPorProveedor($SolicitudesXProveedor:ArrayCollection):void
			{
				if($SolicitudesXProveedor == null)
					return;
				if($SolicitudesXProveedor.length >0){
					listaSoliOLotesPorProveedor.dataProvider = $SolicitudesXProveedor;
					listaSoliOLotesPorProveedor.selectedIndex = 0;
					selectionarPrimerItem();
				}
			}
			public function set infoLotesPorProveedor($lotesXProveedor:ArrayCollection):void
			{
				if($lotesXProveedor == null)
					return;
				if($lotesXProveedor.length >0){
					listaSoliOLotesPorProveedor.dataProvider = $lotesXProveedor;
					listaSoliOLotesPorProveedor.selectedIndex = 0;
					selectionarPrimerItem();
				}
			}
			
			protected function llamarAProductosPorSolicitudPermiso($event:IndexChangeEvent):void
			{
				var currentItem:ReporteDePermisosItemTiposDeSolicitud =  $event.currentTarget.selectedItem;
				if(currentItem!=null){	
					if( currentItem.isUltimo)
					{
						$event.preventDefault();
					}else{
						var obtProductos:EventoReporteDePermisos;
						if(currentItem.etiqueta == "A Tramitar"){
							obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_PRODUCTOS_POR_TIPO_DE_SOLICITUD_PERMISO);
							obtProductos._tipoSolicitudPermiso = currentItem.tipoSolicitudFiltro;
							obtProductos._proveedor = currentItem.proveedor;
						}
						else{
							obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_PRODUCTOS_POR_LOTE_PERMISO);
							obtProductos.lotePermiso = currentItem.folioLote;
							obtProductos.filtrarPorEnfoque = filtrarProductos;
						}
						dispatchEvent(obtProductos);
					}
				}else{
					$event.preventDefault();
				}
			}
			
			private function selectionarPrimerItem():void
			{
				if(listaSoliOLotesPorProveedor.dataProvider!= null && listaSoliOLotesPorProveedor.dataProvider.length>0){
					var obtProductos:EventoReporteDePermisos;
					if((listaSoliOLotesPorProveedor.selectedItem as ReporteDePermisosItemTiposDeSolicitud).etiqueta == "A Tramitar"){
						obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_PRODUCTOS_POR_TIPO_DE_SOLICITUD_PERMISO);
						obtProductos._tipoSolicitudPermiso = (listaSoliOLotesPorProveedor.selectedItem as ReporteDePermisosItemTiposDeSolicitud).isUltimo ? null:(listaSoliOLotesPorProveedor.selectedItem as ReporteDePermisosItemTiposDeSolicitud).tipoSolicitudFiltro;
						obtProductos._proveedor = (listaSoliOLotesPorProveedor.selectedItem as ReporteDePermisosItemTiposDeSolicitud).isUltimo ? null:(listaSoliOLotesPorProveedor.selectedItem as ReporteDePermisosItemTiposDeSolicitud).proveedor;
					}else{
						obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_PRODUCTOS_POR_LOTE_PERMISO);
						obtProductos.lotePermiso =  (listaSoliOLotesPorProveedor.selectedItem as ReporteDePermisosItemTiposDeSolicitud).folioLote;
						obtProductos.filtrarPorEnfoque = filtrarProductos;
					}
					dispatchEvent(obtProductos);  
				}
			}
		]]>
	</fx:Script>
	<s:Group  width="100%" height="100%">
		<s:BorderContainer borderVisible="false" backgroundColor="0xeaeaea" width="100%" height="100%"/>
		<s:VGroup width="100%" height="100%" gap="0" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:HGroup width="100%" height="50" verticalAlign="middle"  paddingBottom="5">
				<s:Label text="{this.tituloPanel}" textAlign="center" color="0x{catalogoColores.TITULO_PANEL_GRIS_CLARO}" width="100%"  fontSize="20"  maxDisplayedLines="2"/>
			</s:HGroup>
			<s:List id="listaSoliOLotesPorProveedor" contentBackgroundColor="0xeaeaea" height="100%" width="100%" borderVisible="false"
					   itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.compras.reporteDePermisos.renders.itemRenderPanelTiposSolicitudPorProveedor"
					   changing="llamarAProductosPorSolicitudPermiso(event)"/>
		</s:VGroup>
	</s:Group>
</s:VGroup>
