<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 xmlns:registarGastos="mx.com.proquifa.proquifanet.gestorCostos.vistas.vista.componentes.registarGastos.*"
		 creationComplete="ini(event)"
		 resize="calc(event)"
		 >
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.gestorCostos.vistas.eventos.EventoRegistrarGastos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.Gastos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PartidaPedido;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			[Bindable]private var fontSize:Number = 16;
			[Bindable]public var cambio:Number = 16;
			[Bindable]private var heighHead:Number = 50;
			[Bindable]private var gapTabla:Number = 20;
			[Bindable]private var totalMonto:Number = 100.989929;
			[Bindable]private var gastosCompleta:Boolean;
			private var _currentPedido:PartidaPedido;
			
			[Bindable]
			public function get currentPedido():PartidaPedido
			{
				return _currentPedido;
			}

			public function set currentPedido(value:PartidaPedido):void
			{
				_currentPedido = value;
				/*_currentPedido.nombreCliente = "Nuevo Laredo"*/ //QUITAR SOLO ES PRUEBA
				if(_currentPedido.nombreCliente == "TOLUCA, TOLUCA, ESTADO DE MEXICO" || _currentPedido.nombreCliente == "AEROPUERTO INTERNACIONAL DE LA CIUDAD DE MEXICO"){
					grpAlmacenaje.enabled = true;
					grpAlmacenaje.visible = grpAlmacenaje.includeInLayout = true;
					grpCuentaAme.enabled = false;
					grpCuentaAme.visible = grpCuentaAme.includeInLayout = false;
				}else if(_currentPedido.nombreCliente == "NUEVO LAREDO, NUEVO LAREDO, TAMAULIPAS" ){
					grpCuentaAme.enabled = true;
					grpCuentaAme.visible = grpCuentaAme.includeInLayout = true;
					grpCuentaAme.txtFacturaXML.enabled = false;
					grpCuentaAme.cargarXML.enabled = false;
					
					grpAlmacenaje.enabled = false;
					grpAlmacenaje.visible = grpAlmacenaje.includeInLayout = false;
				}
				else{
					grpCuentaAme.enabled = false;
					grpCuentaAme.visible = grpCuentaAme.includeInLayout = false;
					grpAlmacenaje.enabled = false;
					grpAlmacenaje.visible = grpAlmacenaje.includeInLayout = false;
				}
				
				
			}

			protected function ini(event:FlexEvent):void
			{
				
			}
			
			protected function verificarGastosCompletosHandler(event:EventoRegistrarGastos):void
			{
				sumarTotales();
				dispatchEvent(new Event("verificarGastos"));
			}
			private function sumarTotales():void
			{
				var tempSum:Number = 0;
				tempSum += grpAlmacenaje.getMonto();
				tempSum += grpHonorarioAA.getMonto();
				tempSum += grpCuentaAme.getMonto();
				tempSum += grpFlete.getMonto();3
				tempSum += grpOtros.getMonto();
				
				totalMonto = tempSum;
			}
			public function verificarCompleta():Boolean
			{
				/*var tempComp:Boolean;
				if(!grpAlmacenaje.estaCompleta())
					tempComp = false;
				else if(!grpHonorarioAA.estaCompleta())
					tempComp = false;
				else if(!grpCuentaAme.estaCompleta())
					tempComp = false;
				else if(!grpFlete.estaCompleta())
					tempComp = false;
					else if(!grpOtros.estaCompleta())
					tempComp = false;
				else 
					tempComp = true;
				
				return tempComp;*/
				
				
				if(_currentPedido.agenteAduanal == "Toluca" || _currentPedido.agenteAduanal == "Aeropuerto"){
					if(!grpAlmacenaje.estaCompleta())
						tempComp = false;
					else if(!grpHonorarioAA.estaCompleta())
						tempComp = false;
					else if(!grpFlete.estaCompleta())
						tempComp = true;
					else 
						tempComp = true;
					
					return tempComp;
				}
				
				else if(_currentPedido.agenteAduanal == "Nuevo Laredo" ){
					if(!grpHonorarioAA.estaCompleta())
						tempComp = false;
					else if(!grpCuentaAme.estaCompleta(true))
						tempComp = false;
					else if(!grpFlete.estaCompleta())
						tempComp = true; /// flete sera opcional para cualquier situacion 
					else 
						tempComp = true;
					
					return tempComp;
				}
				
				
				else {
					var tempComp:Boolean;
					if(!grpHonorarioAA.estaCompleta())
						tempComp = false;
					else if(!grpFlete.estaCompleta())
						tempComp = true;
					else 
						tempComp = true;
					
					return tempComp;
				}
			}
			public function reset():void
			{
				grpAlmacenaje.reset();
				grpHonorarioAA.reset();
				grpCuentaAme.reset();
				grpFlete.reset();
				grpOtros.reset();
				
				totalMonto = 0;
			}
			public function extraerDatosGastos():Gastos
			{
				var gasto:Gastos = new Gastos();
				gasto.gastosAlmacenaje = grpAlmacenaje.obtenerRubros();
				gasto.honorariosAgenteAduanal = grpHonorarioAA.obtenerRubros();
				gasto.cuentaAmericana = grpCuentaAme.obtenerRubros();
				gasto.fletePostDespacho = grpFlete.obtenerRubros();
				gasto.otros = grpOtros.obtenerRubros();
				return gasto;
			}
			
			protected function calc(event:ResizeEvent):void
			{
				fontSize = (16/1484) * (unscaledWidth); 
				fontSize = fontSize > 16 ? 16:fontSize;
				fontSize = fontSize < 10 ? 10:fontSize;
				
				heighHead = (50/1070) * (unscaledHeight); 
				heighHead = heighHead > 50 ? 50:heighHead;
				heighHead = heighHead < 30 ? 30:heighHead;
				
				gapTabla = (20/1070) * (unscaledHeight); 
				gapTabla = gapTabla > 20 ? 20:gapTabla;
				gapTabla = gapTabla < 10 ? 10:gapTabla;
			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" horizontalAlign="center">
		<s:VGroup width="100%" height="100%" gap="{gapTabla}" horizontalAlign="center">
			<s:HGroup width="90%" height="{heighHead}" maxHeight="50" horizontalAlign="center" gap="0">
				<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="5" horizontalAlign="center">
					<s:Label text="GASTOS" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="bold" textAlign="center" color="#424242"/>
					<s:Label text="($)" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="normal" textAlign="center" color="#424242"/>
				</s:VGroup>  
				<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="5" horizontalAlign="center">
					<s:Label text="FECHA" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="bold" textAlign="center" color="#424242"/>
					<s:Label text="" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="bold" textAlign="center" color="#424242" visible="false"/>
				</s:VGroup>  
				<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="5" horizontalAlign="center">
					<s:Label text="FACTURA" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="bold" textAlign="center" color="#424242"/>
					<s:Label text="(.PDF)" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="normal" textAlign="center" color="#424242"/>
				</s:VGroup>  
				<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="5" horizontalAlign="center">
					<s:Label text="FACTURA" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="bold" textAlign="center" color="#424242"/>
					<s:Label text="(.XML)" fontFamily="Novecento" fontSize="{fontSize}" width="100%" height="100%" verticalAlign="middle" fontWeight="normal" textAlign="center" color="#424242"/>
				</s:VGroup>  
			</s:HGroup>  
			
			<registarGastos:FormatoLineaGastos_RegistrarGastos id="grpAlmacenaje" width="100%" height="100%" titulo="Gastos de almacenaje (M.N.)" cambio="{UtilsFormatosNumericos.precisionADosDecimales(cambio)}" 
															   verificarGastosCompletos="verificarGastosCompletosHandler(event)"/>
			<registarGastos:FormatoLineaGastos_RegistrarGastos id="grpHonorarioAA" width="100%" height="100%" titulo="Honorarios del Agente Aduanal" cambio="{UtilsFormatosNumericos.precisionADosDecimales(cambio)}" 
															   verificarGastosCompletos="verificarGastosCompletosHandler(event)"/>
			<registarGastos:FormatoLineaGastos_RegistrarGastos id="grpCuentaAme" width="100%" height="100%" titulo="Cuenta Americana (USD)" cambio="{UtilsFormatosNumericos.precisionADosDecimales(cambio)}" 
															   verificarGastosCompletos="verificarGastosCompletosHandler(event)"/>
			<registarGastos:FormatoLineaGastos_RegistrarGastos id="grpFlete" width="100%" height="100%" titulo="Flete post-despacho (M.N.)" cambio="{UtilsFormatosNumericos.precisionADosDecimales(cambio)}" 
															   verificarGastosCompletos="verificarGastosCompletosHandler(event)"/>
			<registarGastos:FormatoLineaGastos_RegistrarGastos id="grpOtros" width="100%" height="100%" titulo="Otros" cambio="{UtilsFormatosNumericos.precisionADosDecimales(cambio)}" 
															   verificarGastosCompletos="verificarGastosCompletosHandler(event)"/>
		</s:VGroup>
		<s:HGroup width="100%" paddingTop="20" paddingLeft="20">
			<s:Label text="Total:" fontFamily="Novecento" fontSize="{fontSize}" fontWeight="bold"/>
			<s:Label text="$ {UtilsFormatosNumericos.precisionADosDecimales(totalMonto)}" fontFamily="Novecento" fontSize="{fontSize}" />
		</s:HGroup>  
	</s:VGroup>  
</s:Group>
