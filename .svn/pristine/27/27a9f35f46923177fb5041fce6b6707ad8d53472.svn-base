<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:agregarDocumento="mx.com.proquifa.vista.vistas.skin.agregarDocumento.*"
		 xmlns:dateField="skins.skin.dateField.*" 
		 xmlns:boton="skins.skin.botones.boton.*"
		 xmlns:input="skins.skin.textinput.*"
		 xmlns:otros="skins.otros.*"
		 xmlns:combo="skin.combo.*"
		 width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)" xmlns:boton1="skin.boton.*" 
		 >
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoComun;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.CatalogoItem;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.DocumentoSolicitudVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.HallazgosAcciones;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			import skins.skin.textarea.TextAreaBlancoSkin;
			
			import vista.vistas.reporte.visita.VistaInicialReportarVisita;
			import vista.vistas.reporte.visita.VistaOperacionReportarVisita;
			
			
			private var visitaCliente:VisitaCliente;
			[Bindable] private var currentPendiente:HallazgosAcciones;
			[Bindable] public static var maxLength:int = 0;
			private var vieneDe:String = "";
			
			public function iniciaVista(data:ArrayCollection, visita:VisitaCliente):void {
				visitaCliente = visita;
				limpiarComponentes();
				lstPendientes.dataProvider = data ? data : new ArrayCollection;
				lstPendientes.selectedIndex = 0;
				maxLength = lstPendientes.dataProvider.length - 1;
				
				if (data && data.length > 0 ){
					currentPendiente = data[0];
				} else {
					currentPendiente = new HallazgosAcciones;
				}
				
				lstPendientes.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				(txtRespuesta.skin as TextAreaBlancoSkin).borderStroke.color = 0xD0D0D6;
				(txtRespuesta.skin as TextAreaBlancoSkin).color = 0xD0D0D6;
				
				cmbTipoHallazgo.cargarTipoHallazgo();
				cmbTipoHallazgo.selectedIndex = 2;
				cmbTipoHallazgo.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
				cmbMarca.dataProvider = ObjectUtil.copy(VistaInicialReportarVisita.proveedores) as ArrayCollection;
			}
			
			private function limpiarComponentes():void {
				documento = new DocumentoSolicitudVisita();
				txtRespuesta.text = "";
				vieneDe = "";
				cadenaMarcas = "";
				txtCompetencia.text = "";
				cmbMarca.dataProvider = ObjectUtil.copy(VistaInicialReportarVisita.proveedores) as ArrayCollection;
				cmbTipoHallazgo.selectedIndex = 2;
				if (cmbTipoHallazgo.selectedItem)
					cmbTipoHallazgo.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
			}
			
			[Bindable] private var cadenaMarcas:String = "";
			protected function lstRequisitos_changingHandler(event:IndexChangeEvent):void
			{
				vgMostrar.visible = vgMostrar.includeInLayout = false;
				if (lstPendientes.dataProvider.length > 0) 
					vgMostrar.visible = vgMostrar.includeInLayout = true;
				vgEditar.visible = vgEditar.includeInLayout = false;
				limpiarComponentes();
				currentPendiente = lstPendientes.selectedItem;
				
				if (currentPendiente && currentPendiente.tipoHallazgo == "Marca" ) {
					for (var i:int = 0; i < currentPendiente.marcas.length; i++) 
					{
						cadenaMarcas += currentPendiente.marcas[i].valor + ", ";
					}
					if (cadenaMarcas.length > 0 ) {
						cadenaMarcas.substring(0, cadenaMarcas.length - 2 );
					}
				}
			}
			
			protected function botondefault2_mouseDownHandler(event:MouseEvent):void
			{
				limpiarComponentes();
				vgEditar.visible = vgEditar.includeInLayout = true;
				vgMostrar.visible = vgMostrar.includeInLayout = false;
				btnAceptar.enabled = false;
				btnAceptar.color = 0xeaeaea;
			}
			
			protected function txtRespuesta_changeHandler(event:TextOperationEvent):void {
				validar();
			}
			
			protected function date1_seleccionaDateHandler(event:Event):void
			{
				validar();
			}
			
			private function validar():void {
				if (txtRespuesta.text != "" && documento.archivo && cmbTipoHallazgo.selectedItem &&
				(cmbTipoHallazgo.selectedItem.valor == 'Regulatorio' ||
				(cmbTipoHallazgo.selectedItem.valor == 'Marca' && cmbMarca.selectedItems && cmbMarca.selectedItems.length > 0) ||
				(cmbTipoHallazgo.selectedItem.valor == 'Competencia' && txtCompetencia.text != "")) ) {
					btnAceptar.color = 0x4ba92b;
					btnAceptar.enabled = true;
				} else {
					btnAceptar.color = 0xeaeaea;
					btnAceptar.enabled = false;
				}
			}
			
			protected function botondefaultCancelar_mouseDownHandler(event:MouseEvent):void
			{
				limpiarComponentes();
				vgEditar.visible = vgEditar.includeInLayout = false;
				if (lstPendientes.dataProvider.length > 0 ) {
					vgMostrar.visible = vgMostrar.includeInLayout = true;
				}
				lstPendientes.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
			}
			
			protected function botondefaultAceptar_mouseDownHandler(event:MouseEvent):void
			{
				if (vieneDe != "editar") {
					var hallazgo:HallazgosAcciones = new HallazgosAcciones;
					hallazgo.descripcion = txtRespuesta.text;
					hallazgo.idVisita = visitaCliente.idVisitaCliente;
					hallazgo.tipoHallazgo = cmbTipoHallazgo.selectedItem.valor;
					if (hallazgo.tipoHallazgo == "Competencia") {
						hallazgo.competencia = txtCompetencia.text;
					} else if (hallazgo.tipoHallazgo == "Marca" ) {
						hallazgo.marcas = cmbMarca.selectedItems;
					} else {
						hallazgo.competencia = "";
						hallazgo.marcas = null;
					}
					hallazgo.documento = documento;
					lstPendientes.dataProvider.addItem(hallazgo);
				}
				else {
					currentPendiente.tipoHallazgo = cmbTipoHallazgo.selectedItem.valor;
					currentPendiente.documento = documento;
					currentPendiente.descripcion = txtRespuesta.text;
					currentPendiente.idVisita = visitaCliente.idVisitaCliente;
					if (currentPendiente.tipoHallazgo == "Competencia") {
						currentPendiente.competencia = txtCompetencia.text;
						currentPendiente.marcas = null;
					} else if (currentPendiente.tipoHallazgo == "Marca" ) {
						currentPendiente.marcas = cmbMarca.selectedItems;
						currentPendiente.competencia = "";
					} else {
						currentPendiente.competencia = "";
						currentPendiente.marcas = null;
					}
				}
				if (!VistaOperacionReportarVisita.reportarVisita.hallazgos) {
					VistaOperacionReportarVisita.reportarVisita.hallazgos = new ArrayCollection;
					VistaOperacionReportarVisita.reportarVisita.hallazgos.addItem(hallazgo);
					lstPendientes.dataProvider = VistaOperacionReportarVisita.reportarVisita.hallazgos;
				}
				if (lstPendientes.selectedIndex < 0 )
					lstPendientes.selectedIndex = 0;
				limpiarComponentes();
				lstPendientes.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
				//vgEditar.visible = vgEditar.includeInLayout = false;
			}
			
			protected function botondefaultEliminar_mouseDownHandler(event:MouseEvent):void
			{
				alertaSingleton.show("Â¿Desea eliminar este Pendiente?", "Advertencia","","","NO","SI","",null,false,respuestaEliminar);
			}
			
			protected function respuestaEliminar(event:EventoAlertaPqNet):void {
				if (event.respuesta.botonSeleccionado == "SI" ) {
					lstPendientes.dataProvider.removeItemAt(lstPendientes.selectedIndex);
					lstPendientes.selectedIndex = 0;
					lstPendientes.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
				}
			}
			
			protected function botondefaultEditar_mouseDownHandler(event:MouseEvent):void
			{
				limpiarComponentes();
				vieneDe = "editar";
				vgMostrar.visible = vgMostrar.includeInLayout = false;
				vgEditar.visible = vgEditar.includeInLayout = true;
				currentPendiente = lstPendientes.selectedItem;
				txtRespuesta.text = currentPendiente.descripcion;
				txtCompetencia.text = currentPendiente.competencia;
				cmbTipoHallazgo.selectedIndex = cmbTipoHallazgo.seleccionarValor(currentPendiente.tipoHallazgo, "valor");
				documento = currentPendiente.documento;
				vgCompetencia.visible = vgCompetencia.includeInLayout = false;
				vgMarca.visible = vgMarca.includeInLayout = false;
				if (currentPendiente.tipoHallazgo == "Marca") {
					for each (var item:CatalogoItem in cmbMarca.dataProvider) 
					{
						for each (var marca:CatalogoItem in currentPendiente.marcas) 
						{
							if (marca.llave == item.llave) {
								item.selected = marca.selected;
								item.seleccionado = marca.seleccionado;
							}
						}
						
					}
					cmbMarca.drawText();
					vgMarca.visible = vgMarca.includeInLayout = true;
				} else if (currentPendiente.tipoHallazgo == "Competencia") {
					vgCompetencia.visible = vgCompetencia.includeInLayout = true;
				}
				
			}
			
			protected function cmbTipoHallazgo_changeHandler(event:IndexChangeEvent):void
			{
				vgCompetencia.visible = vgCompetencia.includeInLayout = false;
				vgMarca.visible = vgMarca.includeInLayout = false;
				if (cmbTipoHallazgo.selectedItem) {
					if (cmbTipoHallazgo.selectedItem.llave == "Marca") {
						vgMarca.visible = vgMarca.includeInLayout = true;
					} else if (cmbTipoHallazgo.selectedItem.llave == "Competencia") {
						vgCompetencia.visible = vgCompetencia.includeInLayout = true;
					}
				}
				validar();
			}
			
			protected function btnPdf_clickHandler(event:MouseEvent):void
			{
				browseFileSystem();
			}
			
			public var file:File = new File();
			public function browseFileSystem():void{
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				
				var docFilter:FileFilter;
				docFilter = new FileFilter("Documents", "*.pdf");
				file.addEventListener(Event.COMPLETE,completeHandler);
				file.browse([docFilter]);
			}
			
			[Bindable] private var documento:DocumentoSolicitudVisita
			private function completeHandler(event:Event):void
			{
				documento = new DocumentoSolicitudVisita();
				documento.archivo = event.target.data;
				documento.nombre = event.target.name;
				documento.ruta = event.target.nativePath;
				validar();
			}
			
			private function selectHandler(event:Event):void
			{
				var file:FileReference = FileReference(event.target);
				file.load();
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				trace("ioErrorHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void
			{
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			
			protected function cmbMarca_changeComboHandler(event:EventoComun):void
			{
				validar();
			}
			
			protected function txtCompetencia_changingHandler(event:TextOperationEvent):void
			{
				validar();
			}
			
			protected function visualizar_clickHandler(event:MouseEvent):void
			{
				var ruta:String = documento.ruta;
				if (!ruta )
				{
					ruta = "http://" + Destinos.ipUsandose + "/SAP/" + RutasPdF.REPORTAR_HALLASGOS + currentPendiente.idHallazgoAccion + ".pdf";
				}
				var urlarchivo:URLRequest;		
				urlarchivo = new URLRequest ( ruta.indexOf('http') == -1 ? "file://"+ encodeURI(ruta) : encodeURI(ruta) );	
				navigateToURL(urlarchivo);
			}
			
		]]>
	</fx:Script>
	
	
	
	<s:Rect width="100%" height="100%">
		<s:stroke>
			<s:SolidColorStroke color="#E3E3E4" weight="1"/>
		</s:stroke>
	</s:Rect>
	
	<s:HGroup width="100%" height="100%" padding="1" gap="0">
		<s:VGroup width="25%" height="100%" paddingTop="50" gap="0" >
			<s:Label text="NO HAS AGREGADO HALLAZGOS" width="100%" height="100%" 
					 textAlign="center" verticalAlign="middle" fontSize="28"
					 visible="{lstPendientes.dataProvider.length == 0}" includeInLayout="{lstPendientes.dataProvider.length == 0}"
					 fontFamily="Novecento" fontWeight="bold" color="#C2C3C9" />
			
			<s:List styleName="listStyle" width="100%" height="100%" id="lstPendientes" contentBackgroundColor="#FFFFFF"
					itemRenderer="vista.vistas.reporte.visita.hallazgos.itemrendered.HallazgosReportarVisitaIR" 
					changing="lstRequisitos_changingHandler(event)" visible="{lstPendientes.dataProvider.length > 0}" includeInLayout="{lstPendientes.dataProvider.length > 0}"
					/>
			<s:HGroup paddingLeft="10" paddingRight="10" width="100%" >
				<otros:LineaDivision color="#ECEEF0" width="100%" height="1" />
			</s:HGroup>
			<s:HGroup width="100%" height="45" horizontalAlign="center" verticalAlign="middle" >
				<s:Label text="#{lstPendientes.dataProvider.length} {lstPendientes.dataProvider.length == 1 ? 'HALLAZGO' : 'HALLAZGOS'}" />
			</s:HGroup>
		</s:VGroup>
		
		<otros:LineaDivision color="#E3E3E4" width="1" height="100%" />
		
		<s:VGroup width="75%" height="100%" paddingLeft="35" paddingRight="35" paddingTop="30" gap="10" >
			<s:HGroup width="100%" horizontalAlign="right" >
				<boton:BotonDefault width="295" height="40" conTexto="true" color="#008895" label="+ AGREGAR HALLAZGO" 
									horizontalCenter="0" verticalCenter="0" styleNameLabel="titulo_blanco_Novecento" mouseDown="botondefault2_mouseDownHandler(event)" />
			</s:HGroup>
			
			<otros:LineaDivision color="#ECEEF0" width="100%" height="1" />
			
			<s:HGroup width="100%" height="45" verticalAlign="middle" >
				<s:Label text="Hallazgo #{vgEditar.visible ? (lstPendientes.dataProvider.length + 1) : (lstPendientes.selectedIndex + 1)}" 
						 visible="{vgEditar.visible || vgMostrar.visible}" 
						 color="#008895" fontWeight="bold" fontSize="23" />
				<s:Label text="{UtilsFecha.formatoFechaGenerico(currentPendiente.ferealizacion,'DD/MM/YYYY','')}" fontWeight="bold"
						 color="#404040" fontSize="23" />
			</s:HGroup>
			
			<otros:LineaDivision color="#ECEEF0" width="100%" height="1" />
			
			<s:VGroup id="vgEditar" width="100%" height="100%" visible="false" includeInLayout="false">
				<s:VGroup width="100%" height="100%" paddingTop="30" paddingBottom="30" >
					<s:HGroup width="100%" >
						<s:VGroup width="100%" maxWidth="255" paddingRight="40">
							<s:Label text="Tipo de Hallazgo" fontSize="14" color="#008895" />
							<cmbCat:ComboCatalogos width="100%" id="cmbTipoHallazgo" change="cmbTipoHallazgo_changeHandler(event)"  />
						</s:VGroup>
						
						<s:VGroup width="100%" id="vgCompetencia" visible="false" includeInLayout="false" >
							<s:Label text="Nombre de la Empresa" fontSize="14" color="#008895" />
							<input:TxtInputBlanco width="100%" color="#808080" height="28" id="txtCompetencia" changing="txtCompetencia_changingHandler(event)" />
						</s:VGroup>
						<s:VGroup width="100%" maxWidth="700" id="vgMarca" visible="false" includeInLayout="false" >
							<s:Label text="Seleccionar" fontSize="14" color="#008895" />
							<combo:ComboCheckDefault width="100%" id="cmbMarca" mensajeVacio="Selecciona las marcas" changeCombo="cmbMarca_changeComboHandler(event)" />
						</s:VGroup>
					</s:HGroup>
					
					<s:VGroup width="100%" paddingBottom="30" paddingTop="30" >
						<s:Label text="Redactar Observaciones" fontSize="14" color="#008895" />
						<s:TextArea fontFamily="Helvetica" fontSize="16" id="txtRespuesta" color="#808080" change="txtRespuesta_changeHandler(event)"
									fontStyle="italic" prompt="Escribe AquiÌ" 
									skinClass="skins.skin.textarea.TextAreaBlancoSkin" width="100%" height="100%" maxHeight="120" />
					</s:VGroup>
					
					<otros:LineaDivision color="#ECEEF0" width="100%" height="1" />
					
					<s:Label text="Cargar Documento:" width="100%" fontSize="14" color="#008895" paddingTop="20" />
					<s:HGroup width="100%"  >
						<agregarDocumento:AgregarDoc width="100%" maxWidth="350" height="100%" sizeHeight="30" id="btnPdf" label="{documento.nombre}" click="btnPdf_clickHandler(event)"  />
						<boton1:BotonImagen width="50" height="30" source="{catalogoIconosBotones.getInstance().vista_previa_cuadro}" click="visualizar_clickHandler(event)" visible="{documento.nombre != null}" />
					</s:HGroup> 
				</s:VGroup>
				
				<s:HGroup width="100%" paddingBottom="85">
					<boton:BotonDefault width="200" height="40" conTexto="true" color="#008895" label="CANCELAR" 
										horizontalCenter="0" verticalCenter="0" styleNameLabel="titulo_blanco_Novecento" mouseDown="botondefaultCancelar_mouseDownHandler(event)" />
					<s:Spacer width="100%" />
					<boton:BotonDefault width="200" height="40" conTexto="true" color="#4ba92b" label="ACEPTAR" id="btnAceptar"
										horizontalCenter="0" verticalCenter="0" styleNameLabel="titulo_blanco_Novecento" mouseDown="botondefaultAceptar_mouseDownHandler(event)" />
				</s:HGroup>
			</s:VGroup>
			
			<s:VGroup id="vgMostrar" width="100%" height="100%" >
				<s:VGroup width="100%" height="100%" paddingTop="30" paddingBottom="30" >
					
					<s:HGroup width="100%" >
						<s:VGroup width="100%" maxWidth="255" paddingRight="40">
							<s:Label text="Tipo de Hallazgo" fontSize="14" color="#008895" />
							<s:Label text="{currentPendiente.tipoHallazgo}" fontSize="16" color="#404040" fontWeight="bold" />
						</s:VGroup>
						
						<s:VGroup width="100%" visible="{currentPendiente.competencia}" includeInLayout="{currentPendiente.competencia}" >
							<s:Label text="Nombre de la Empresa" fontSize="14" color="#008895" />
							<s:Label text="{currentPendiente.competencia}" fontSize="16" color="#404040" fontWeight="bold" />
						</s:VGroup>
						<s:VGroup width="100%" maxWidth="700" visible="{cadenaMarcas != ''}" includeInLayout="{cadenaMarcas != ''}" >
							<s:Label text="Marcas" fontSize="14" color="#008895" />
							<s:Label text="{cadenaMarcas}" fontSize="16" color="#404040" fontWeight="bold" width="100%" maxDisplayedLines="1" />
						</s:VGroup>
					</s:HGroup>
					
					<s:VGroup width="100%" paddingBottom="30" paddingTop="30" >
						<s:Label text="Observaciones" fontSize="14" color="#008895" />
						<s:Label fontFamily="Helvetica" fontSize="16" color="#808080" text="{currentPendiente.descripcion}"
								 fontStyle="italic" width="100%" height="100%" maxHeight="120" />
					</s:VGroup>
					
					<otros:LineaDivision color="#ECEEF0" width="100%" height="1" />
					
					<s:VGroup width="100%" >
						<s:Label text="Documento:" fontSize="14" color="#008895" />
						<s:HGroup width="100%" height="28" verticalAlign="middle" >
							<mx:Image source="{catalogoIconosEtiquetas.getInstance().documento_azul}" width="28" height="28" />
							<s:Label width="100%" fontWeight="bold" color="#404040" fontSize="18"
								text="{currentPendiente.documento.nombre}" />
						</s:HGroup>
					</s:VGroup>
					
				</s:VGroup>
				
				<s:HGroup width="100%" paddingBottom="85">
					<boton:BotonDefault width="200" height="40" conTexto="true" color="#008895" label="ELIMINAR" 
										horizontalCenter="0" verticalCenter="0" styleNameLabel="titulo_blanco_Novecento" mouseDown="botondefaultEliminar_mouseDownHandler(event)" />
					<s:Spacer width="100%" />
					<boton:BotonDefault width="200" height="40" conTexto="true" color="#4ba92b" label="EDITAR" 
										horizontalCenter="0" verticalCenter="0" styleNameLabel="titulo_blanco_Novecento" mouseDown="botondefaultEditar_mouseDownHandler(event)" />
				</s:HGroup>
			</s:VGroup>

		</s:VGroup>
		
	</s:HGroup>
	
</s:Group>
