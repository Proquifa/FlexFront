<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.controls.Alert;
			
			[Bindable]
			private var _listaIncidentes:ArrayCollection;
			[Bindable]
			private var _datosGenerales:ObjetoTabla;
			[Bindable]
			private var _abiertoCerrado:ArrayCollection;
			[Bindable]
			private var estadoTiempo:ArrayCollection = new ArrayCollection();
			
			
			public function actualizar():void{
				this.myChart;
				this.gridResultados;
			}
			
			private function maxTopClientes():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			/**
			 * Metodo que recibe del mapa el top ten de clientes  
			 */
			public function set obtenerTasaTopGrafica(abiertoCerrado:ArrayCollection):void{
				if (abiertoCerrado==null){
					return ;
				}
				
				this._abiertoCerrado = abiertoCerrado;
				var abiertosTemp:int = 0;
				var cerradosTemp:int = 0;
				for( var i:int = 0; i < abiertoCerrado.length; i++ ){
					if (abiertoCerrado.getItemAt( i ).estado == "Abierto" ){
						abiertosTemp = abiertosTemp + 1;
					}else{
						cerradosTemp = cerradosTemp + 1;
					}
				}
				this.estadoTiempo = new ArrayCollection([
					{estado:"Abiertos ", Monto: abiertosTemp , EtiquetaMonto: "Abiertos ( "+ abiertosTemp  + " )" },
					{estado:"Cerrados", Monto: cerradosTemp , EtiquetaMonto: "Cerrados ( "+ cerradosTemp + " )"}
				]);	
			}
			
			public function set obtenerDatos(datos:ObjetoTabla):void{
				if(datos == null){
					return ;
				}
				this._datosGenerales = new ObjetoTabla();
				this._datosGenerales = datos;
				var evt:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.BUSCAR_DATOS_TOPCLIENTE);
				evt.idProveedor = datos.idProveedor;
				evt.anioInt = datos.anioInt;
				evt.periodo = datos.periodo;
				evt.tipoPeriodo = datos.tipoPeriodo;
				evt.mes = datos.mes;
				evt.tipo = "false";
				dispatchEvent(evt);
			}
			
			public function set obtenerTasaTabla(listaIncidentes:ArrayCollection):void{
				if(listaIncidentes==null){
					return ;
				}
				this._listaIncidentes = listaIncidentes; 
			}	
			public function seleccionaTabla():void{			
				this.navegador.selectedChild = this.vistaTabla;
			} 
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}	
			
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" title="Abiertos vs Cerrados" dropShadowVisible="false" borderVisible="false">
		<!--<mx:CurrencyFormatter id="formatoExcel" precision="2" currencySymbol="$" useThousandsSeparator="false"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%" creationPolicy="all"> 
				
			<mx:VBox id="vistaGrafico"  >
				<mx:VBox width="100%" height="100%" borderStyle="solid">
					<mx:PieChart id="myChart" width="100%" height="100%"
								 dataProvider="{this.estadoTiempo}" 
								 showDataTips="true">
						<mx:series>
							<mx:PieSeries id="pieSeriesId" 
										  field="Monto" 
										  nameField="estado"
										  labelField= "EtiquetaMonto"  
										  explodeRadius=".05" 
										  labelPosition="inside"/>
						</mx:series>
					</mx:PieChart>
				</mx:VBox>
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTopClientes()" width="60"/>
				</mx:HBox>
			</mx:VBox>
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<!--variableRowHeight="true"-->
				<s:DataGrid id="gridResultados" dataProvider="{this._listaIncidentes}" width="100%" height="100%"  >
					<s:columns>
						<s:ArrayList>
							<formato:GridColumnFormato formato="numfila" headerText="#" guardarFormato="numeroDeFila"/>
							<s:GridColumn headerText="Folio" dataField="folio"/>
							<s:GridColumn headerText="Responsable" dataField="responsable"/>
							<s:GridColumn headerText="Estado" dataField="estado"/>
						</s:ArrayList>
					</s:columns>								
				</s:DataGrid>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="GrÃ¡fico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTopClientes()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" width="80" />
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	</s:Panel>
</s:Group>
