<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mate="http://mate.asfusion.com/">
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			
			import vista.ev_PlanificarSprint.VistaPlanificarSprint;
			import vista.evento.EventoEVPlanificarSprint;
			import vista.modelo.ModeloEVPlanificarSprint;
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mate:Debugger level="{Debugger.ALL}"/>
		
		
		
		<!-- //////////////////////////////OBTENER TOTALES-->
		
		<mate:EventHandlers type="{ EventoEVPlanificarSprint.OBTENER_TOTALES_VISITA_CLIENTE }">
			<mate:RemoteObjectInvoker destination="{ Destinos.VISITA_CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerTotalesVisitaPorCliente"
									  arguments="{[event.usuario]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="setObtenerSolicitudesPoolVisitas"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="errorAtenderPlanificarSprint"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarTotalesVisitasClientesAgrupadas"
								   targetKey="recibirVisitaClienteAgrupadas"/>
		</mate:Injectors>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarGraficaClientesAgrupadas"
								   targetKey="recibirListaGraficaCliente"/>
		</mate:Injectors>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarGraficaTipoVisitaAgrupadas"
								   targetKey="recibirListaGraficaTipoVisita"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////VISITA A CLIENTE-->
		
		<mate:EventHandlers type="{ EventoEVPlanificarSprint.OBTENER_VISITA_CLIENTE_POR_EMPLEADO }">
			<mate:RemoteObjectInvoker destination="{ Destinos.VISITA_CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerVisitasClientePorUsuario"
									  arguments="{[event.usuario]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="setObtenerVisitaClientePorEmpleado"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="errorAtenderPlanificarSprint"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarListaVisitaClientePorEmpleado"
								   targetKey="recibirListaVisitaClientePorEmpleado"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////SPRINTS ABIERTOS-->
		
		<mate:EventHandlers type="{ EventoEVPlanificarSprint.OBTENER_SPRINST_EN_CURSO }">
			<mate:RemoteObjectInvoker destination="{ Destinos.VISITA_CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerUltimosSprintAbiertos"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="setObtenerSprintsAbiertos"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="errorAtenderPlanificarSprint"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarSprintsAbiertos"
								   targetKey="recibirListaSprints"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////GUARDAR ASIGNACION DE PSRINTS-->
		
		<mate:EventHandlers type="{ EventoEVPlanificarSprint.GUARDAR_PLANIFICACION_DE_SPRINT }">
			<mate:RemoteObjectInvoker destination="{ Destinos.VISITA_CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="actualizarVisitaClienteGuardadasPlanificar"
									  arguments="{[event.usuario,event.visita1,event.visita2,event.visita3,event.visita4,event.visita5]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="setObtenerRespuestaGuardado"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="errorAtenderPlanificarSprint"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarRespuestoGuardado"
								   targetKey="recibirRespuestaGuardado"/>
		</mate:Injectors>
		
		<!-- //////////////////////////////PLANIFICAR ASIGNACION DE SRINTS-->
		
		<mate:EventHandlers type="{ EventoEVPlanificarSprint.PLANIFICAR_SPRINT_VISITA_CLIENTE }">
			<mate:RemoteObjectInvoker destination="{ Destinos.VISITA_CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="planificarSprintVisitaCliente"
									  arguments="{[event.usuario,event.idSprint,event.visitaCliente]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="setObtenerRespuestaPlanificarSprint"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVPlanificarSprint}"
										method="errorAtenderPlanificarSprint"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{VistaPlanificarSprint}">
			<mate:PropertyInjector source="{ ModeloEVPlanificarSprint }" 
								   sourceKey="enviarRespuestoPlanificarSprint"
								   targetKey="recibirRespuestaPlanificar"/>
		</mate:Injectors>
		
		
	</fx:Declarations>	
</mate:EventMap> 