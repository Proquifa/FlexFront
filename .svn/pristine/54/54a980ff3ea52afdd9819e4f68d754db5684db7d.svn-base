<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="100%" 
		  
		  >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.finanzas.facturacion.EventoConsultaFacturacion2013;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.TiempoProceso;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaCancelacion_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaCobro_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaEntrega_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaFacturacion_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaFacturarRemision_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaRefacturacion_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaResumenFactura;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaRevision_Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspectorSinCredito.InspectorPrepago;
			import mx.utils.StringUtil;
			
			import skins.skin.label.Texto_w100;
			import skins.skin.linkButton.LinkButtonPQNet2;
			
			private var _inspectorFacturacion:InsPConsultaFacturacion_Facturacion = new InsPConsultaFacturacion_Facturacion;
			private var _inspectorEntrega:InsPConsultaEntrega_Facturacion = new InsPConsultaEntrega_Facturacion;
			private var _inspectorRevision:InsPConsultaRevision_Facturacion = new InsPConsultaRevision_Facturacion;
			private var _inspectorProcesoCobros:InsPConsultaCobro_Facturacion = new InsPConsultaCobro_Facturacion;
			private var _inspectorFactRemision:InsPConsultaFacturarRemision_Facturacion = new InsPConsultaFacturarRemision_Facturacion;
			private var _inspectorRefacturacion:InsPConsultaRefacturacion_Facturacion = new InsPConsultaRefacturacion_Facturacion;
			private var _inspectorCancelacion:InsPConsultaCancelacion_Facturacion = new InsPConsultaCancelacion_Facturacion;
			private var _inspectorResumeFactura:InsPConsultaResumenFactura = new InsPConsultaResumenFactura;
			
			private var _inpectorPrepago:InspectorPrepago;
			
			public function set obtenTiempoProcesoFacturacion(tProceso:TiempoProceso):void
			{
				if(tProceso == null) return;
				
				if((tProceso as TiempoProceso).etapa == "FACTURACIÃ“N")
				{
					this.espacioConsultaProceso.removeAllElements();
					
					if( this._inspectorFacturacion == null )
					{
						this._inspectorFacturacion = new InsPConsultaFacturacion_Facturacion;
					}
					
					_inspectorFacturacion.vgFacturaPortal.includeInLayout = _inspectorFacturacion.vgFacturaPortal.visible = false;
					
					if (isNaN(tProceso.TCambio))
					{
						if(tProceso.fechaInicio == null)
							this._inspectorFacturacion.lblTipoCambRES.text = 'Pendiente';
						else
							this._inspectorFacturacion.lblTipoCambRES.text = 'ND'
					}
					else
					{
						this._inspectorFacturacion.lblTipoCambRES.text = "$ "+UtilsFormatosNumericos.precisionADosDecimales(tProceso.TCambio);
					}
					
					if ((tProceso as TiempoProceso).fechaInicioPortal != null)
					{
						_inspectorFacturacion.vgFacturaPortal.includeInLayout = _inspectorFacturacion.vgFacturaPortal.visible = true;
						_inspectorFacturacion.lblPendiente.visible = _inspectorFacturacion.lblPendiente.includeInLayout = false;
						_inspectorFacturacion.lnkVer.visible = _inspectorFacturacion.lnkVer.includeInLayout = false;
						
						if ((tProceso as TiempoProceso).documento != null)
							_inspectorFacturacion.lnkVer.visible = _inspectorFacturacion.lnkVer.includeInLayout = true;
						else
							_inspectorFacturacion.lblPendiente.visible = _inspectorFacturacion.lblPendiente.includeInLayout = true;
					}
					
					if(tProceso.fechaFinPortal == null)
					{
						_inspectorFacturacion.lblRealizoFacPortal.text = "Pendiente";
					}
					else
					{
						if(tProceso.contacto == null)
							_inspectorFacturacion.lblRealizoFacPortal.text = "ND";
						else
							_inspectorFacturacion.lblRealizoFacPortal.text = tProceso.contacto;
					}
					
					this._inspectorFacturacion._infoGeneral = tProceso;
					this.espacioConsultaProceso.addElement(_inspectorFacturacion);
				}
			}
			
			public function set obtenTiempoProcesoEntrega(tProcesoEntrega:ArrayCollection):void
			{
				if(tProcesoEntrega == null) return;
				espacioConsultaProceso.removeAllElements();
				_inspectorEntrega = null;
				if( _inspectorEntrega == null )
				{
					_inspectorEntrega = new InsPConsultaEntrega_Facturacion;
				}
				_inspectorEntrega.tramitar.visible = _inspectorEntrega.tramitar.includeInLayout = false;
				_inspectorEntrega.surtir.visible = _inspectorEntrega.surtir.includeInLayout = false;
				_inspectorEntrega.asignar.visible = _inspectorEntrega.asignar.includeInLayout = false;
				_inspectorEntrega.ejecutar.visible = _inspectorEntrega.ejecutar.includeInLayout = false;
				_inspectorEntrega.cerrar.visible = _inspectorEntrega.cerrar.includeInLayout = false;
				
				//Tramitar Ruta
				_inspectorEntrega.lbl_EtiquetaTramRuta.visible = _inspectorEntrega.lbl_EtiquetaTramRuta.includeInLayout = false;
				_inspectorEntrega.lnkEtiquetaTramRuta.visible = _inspectorEntrega.lnkEtiquetaTramRuta.includeInLayout = false;
				_inspectorEntrega.lblComentariosTramRuta.visible = _inspectorEntrega.lblComentariosTramRuta.includeInLayout = false;
				
				//Surtir Ruta
				_inspectorEntrega.lnkColectoraSurtirRuta.visible = _inspectorEntrega.lnkColectoraSurtirRuta.includeInLayout = false;
				_inspectorEntrega.lbl_ColectoraSurtirRuta.visible = _inspectorEntrega.lbl_ColectoraSurtirRuta.includeInLayout = false;
				
				var currentItem:TiempoProceso;
				var enlaceDocumento:LinkButtonPQNet2 ;
				for(var d:int = 0 ; d<tProcesoEntrega.length ; d++)
				{
					currentItem = tProcesoEntrega[d] as TiempoProceso;
					if(currentItem.etapa == 'TRAMITAR RUTA')
					{
						if(currentItem.fechaFin == null)
						{
							_inspectorEntrega.lbl_EtiquetaTramRuta.visible = _inspectorEntrega.lbl_EtiquetaTramRuta.includeInLayout = true;
							_inspectorEntrega.lbl_EtiquetaTramRuta.text = "Pendiente";
							
							_inspectorEntrega.lblComentariosTramRuta.visible = _inspectorEntrega.lblComentariosTramRuta.includeInLayout = true;
							_inspectorEntrega.lblComentariosTramRuta.text = "Pendiente";
						}
						else
						{
							if(currentItem.referencia == 'Pendiente' || currentItem.referencia =='ND')
							{
								_inspectorEntrega.lbl_EtiquetaTramRuta.visible = _inspectorEntrega.lbl_EtiquetaTramRuta.includeInLayout = true;
								_inspectorEntrega.lbl_EtiquetaTramRuta.text = "ND";
							}
							else
							{
								_inspectorEntrega.lnkEtiquetaTramRuta.visible = _inspectorEntrega.lnkEtiquetaTramRuta.includeInLayout = true;
								_inspectorEntrega.lnkEtiquetaTramRuta.label = currentItem.referencia;
							}
							
							_inspectorEntrega.lblComentariosTramRuta.visible = _inspectorEntrega.lblComentariosTramRuta.includeInLayout = true;
							if(currentItem.comentarios == 'Pendiente' || currentItem.comentarios =='ND')
							{
								_inspectorEntrega.lblComentariosTramRuta.text = "ND";
							}
							else
							{
								_inspectorEntrega.lblComentariosTramRuta.text = currentItem.comentarios;
							}
						}
						
						_inspectorEntrega._tramitarRuta = currentItem;
						_inspectorEntrega.tramitar.visible = _inspectorEntrega.tramitar.includeInLayout = true;
						
					}
					else if(currentItem.etapa == 'SURTIR RUTA')
					{
						_inspectorEntrega.lbl_ColectoraSurtirRuta.visible = _inspectorEntrega.lbl_ColectoraSurtirRuta.includeInLayout = false;
						_inspectorEntrega.lnkColectoraSurtirRuta.visible = _inspectorEntrega.lnkColectoraSurtirRuta.includeInLayout = false;
						_inspectorEntrega.grpEtiquetaSurtirRuta.removeAllElements();
						
						var arrayLinks:Array = currentItem.referencia.split(",");
						
						if(arrayLinks[0] == "Pendiente" || arrayLinks[0] == "ND" || StringUtil.trim(arrayLinks[0] as String).length == 0)
						{
							var lbl_SurtidoSurtirRuta:Texto_w100 = new Texto_w100;
							
							if(currentItem.fechaFin == null)
								lbl_SurtidoSurtirRuta.text = "Pendiente";
							else
								lbl_SurtidoSurtirRuta.text = "ND";
							
							_inspectorEntrega.grpEtiquetaSurtirRuta.addElement(lbl_SurtidoSurtirRuta);
						}
						else
						{
							if(arrayLinks.length>0)
							{
								var etiquetaTemp:String;
								for(var i:int = 0; i<arrayLinks.length ; i++)
								{
									etiquetaTemp = arrayLinks[i] as String; 
									if(etiquetaTemp!= null && StringUtil.trim(etiquetaTemp).length>0)
									{
										enlaceDocumento = new LinkButtonPQNet2;
										enlaceDocumento.label = etiquetaTemp;
										enlaceDocumento.toolTip = "Ver Documento";
										_inspectorEntrega.grpEtiquetaSurtirRuta.addElement(enlaceDocumento);	
									}
								}
							}
						}
						
						if(currentItem.fechaFin == null)
						{
							_inspectorEntrega.lbl_ColectoraSurtirRuta.visible = _inspectorEntrega.lbl_ColectoraSurtirRuta.includeInLayout = true;
							_inspectorEntrega.lbl_ColectoraSurtirRuta.text = "Pendiente";
						}
						else
						{
							if(currentItem.pedimento == "Pendiente" || currentItem.pedimento =="ND")
							{
								_inspectorEntrega.lbl_ColectoraSurtirRuta.visible = _inspectorEntrega.lbl_ColectoraSurtirRuta.includeInLayout = true;
								_inspectorEntrega.lbl_ColectoraSurtirRuta.text = "ND";
							}
							else
							{
								_inspectorEntrega.lnkColectoraSurtirRuta.visible = _inspectorEntrega.lnkColectoraSurtirRuta.includeInLayout = true;
								_inspectorEntrega.lnkColectoraSurtirRuta.label = currentItem.pedimento;
							}
						}
						
						_inspectorEntrega._surtirRuta = currentItem;
						_inspectorEntrega.surtir.visible = _inspectorEntrega.surtir.includeInLayout = true;
					}
					else if(currentItem.etapa == 'ASIGNAR MENSAJERO')
					{
						
						if(currentItem.fechaFin == null)
						{
							_inspectorEntrega.lblRutaAsignarMensajero.text = "Pendiente";
						}
						else
						{
							_inspectorEntrega.lblRutaAsignarMensajero.text = currentItem.medio + " Â· " + currentItem.referencia;
						}
						
						_inspectorEntrega._asignarMensajero = currentItem;
						_inspectorEntrega.asignar.visible = _inspectorEntrega.asignar.includeInLayout = true;
					}
					else if(currentItem.etapa == 'EJECUTAR RUTA')
					{
						_inspectorEntrega._ejecutarRuta = currentItem;
						_inspectorEntrega.ejecutar.visible = _inspectorEntrega.ejecutar.includeInLayout = true;
					}
					else if(currentItem.etapa == 'CERRAR RUTA')
					{
						_inspectorEntrega.grpDocumentosResultantes.removeAllElements();
						
						if((currentItem.pedimento != "Pendiente" && currentItem.pedimento != "ND" && currentItem.pedimento != null) || 
							(currentItem.referencia != "Pendiente" && currentItem.referencia != "ND" && currentItem.referencia != null)){
							if(currentItem.pedimento != "Pendiente" && currentItem.pedimento != "ND" && currentItem.pedimento != null)
							{
								enlaceDocumento = new LinkButtonPQNet2;
								enlaceDocumento.label = currentItem.pedimento;
								enlaceDocumento.toolTip = "Ver Documento";
								enlaceDocumento.id = 'docto1';
								_inspectorEntrega.grpDocumentosResultantes.addElement(enlaceDocumento);	
							}
							
							if(currentItem.referencia != "Pendiente" && currentItem.referencia != "ND" && currentItem.referencia != null)
							{
								enlaceDocumento = new LinkButtonPQNet2;
								enlaceDocumento.label = currentItem.referencia;
								enlaceDocumento.toolTip = "Ver Documento";
								enlaceDocumento.id = 'docto2';
								_inspectorEntrega.grpDocumentosResultantes.addElement(enlaceDocumento);	
							}
						}
						else
						{
							var lbl_DocResultantesCR:Texto_w100 = new Texto_w100;
							if(currentItem.fechaFin == null)
								lbl_DocResultantesCR.text = "Pendiente";
							else
							{
								if(currentItem.pedimento == null)
									lbl_DocResultantesCR.text = "ND";
								else
									lbl_DocResultantesCR.text = currentItem.pedimento;
							}
							_inspectorEntrega.grpDocumentosResultantes.addElement(lbl_DocResultantesCR);
						}
						
						if(currentItem.comentarios =='ND')
						{
							currentItem.comentarios = 'NO';
						}
						
						_inspectorEntrega._cerrarRuta = currentItem;
						_inspectorEntrega.cerrar.visible = _inspectorEntrega.cerrar.includeInLayout = true;
					}
				}
				espacioConsultaProceso.addElement( _inspectorEntrega);
			}
			
			public function set obtenTiempoProcesoRevision(tProcesoRevision:ArrayCollection):void
			{
				if(tProcesoRevision == null) return;
				this.espacioConsultaProceso.removeAllElements();
				if( this._inspectorRevision == null )
				{
					this._inspectorRevision = new InsPConsultaRevision_Facturacion;
				}
				
				if(tProcesoRevision.length != 0)
				{
					_inspectorRevision.grpDocumentosResultantes.removeAllElements();
					var currentItem:TiempoProceso = tProcesoRevision[0] as TiempoProceso;
					
					if((currentItem.doscResult1 != "Pendiente" && currentItem.doscResult1 != "ND") || (currentItem.doscResult2 != "Pendiente" && currentItem.doscResult2 != "ND"))
					{
						var enlaceDocumento:LinkButtonPQNet2;
						if(currentItem.doscResult1 != "Pendiente" && currentItem.doscResult1 != "ND")
						{
							enlaceDocumento = new LinkButtonPQNet2;
							enlaceDocumento.label = currentItem.doscResult1;
							enlaceDocumento.toolTip = "Ver Documento";
							enlaceDocumento.id = 'docto1';
							_inspectorRevision.grpDocumentosResultantes.addElement(enlaceDocumento);	
						}
						
						if(currentItem.doscResult2 != "Pendiente" && currentItem.doscResult2 != "ND")
						{
							enlaceDocumento = new LinkButtonPQNet2;
							enlaceDocumento.label = currentItem.doscResult2;
							enlaceDocumento.toolTip = "Ver Documento";
							enlaceDocumento.id = 'docto2';
							_inspectorRevision.grpDocumentosResultantes.addElement(enlaceDocumento);
						}
					}
					else
					{
						var lbl_DocResultantesCR:Texto_w100 = new Texto_w100;
						lbl_DocResultantesCR.text = currentItem.doscResult1;
						_inspectorRevision.grpDocumentosResultantes.addElement(lbl_DocResultantesCR);
					}
					
					_inspectorRevision.lblTituloComentarios.visible = _inspectorRevision.lblTituloComentarios.includeInLayout = false;
					_inspectorRevision.lblComentarios.visible = _inspectorRevision.lblComentarios.includeInLayout = false;
					
					if(currentItem.revision == 'No realizada') 
					{
						_inspectorRevision.lblTituloComentarios.visible = _inspectorRevision.lblTituloComentarios.includeInLayout = true;
						_inspectorRevision.lblComentarios.visible = _inspectorRevision.lblComentarios.includeInLayout = true;
						_inspectorRevision.lblComentarios.text = currentItem.commentRevision;
					}
					
					if(currentItem.fechaProgramacion == null)
					{
						_inspectorRevision.grpProgramcion.visible = _inspectorRevision.grpProgramcion.includeInLayout = false;
					}
					else
					{
						_inspectorRevision.grpProgramcion.visible = _inspectorRevision.grpProgramcion.includeInLayout = true;
					}
					
				}
				else
				{
					_inspectorRevision.grpProgramcion.visible = _inspectorRevision.grpProgramcion.includeInLayout = false;
				}
				_inspectorRevision._revision = currentItem;
				this.espacioConsultaProceso.addElement(_inspectorRevision);
			} 
			
			public function set recibeTiempoProcesoCobros(procesoCobros:ArrayCollection):void
			{
				if(procesoCobros == null) return;
				var num:int = 0;
				var _arrHistorial:ArrayCollection = new ArrayCollection();
				this.espacioConsultaProceso.removeAllElements();
				
				if( this._inspectorProcesoCobros == null )
				{
					this._inspectorProcesoCobros = new InsPConsultaCobro_Facturacion;
				}
				
				this.espacioConsultaProceso.addElement( this._inspectorProcesoCobros);
				
				var removeItems:Array = new Array;
				
				for(var d:int = 0 ; d<procesoCobros.length ; d++)
				{
					if((procesoCobros[d] as TiempoProceso).etapa == 'COBRO_HISTORIAL')
					{
						num = procesoCobros.length - d;
						procesoCobros[d].numFila = num; 
						_arrHistorial.addItem(procesoCobros[d]);
						removeItems.push(d);
					}
				}
				
				for (var i:int = removeItems.length-1; i >=0 ; i--) 
				{
					procesoCobros.removeItemAt(removeItems[i]);
				}
				
				if(_arrHistorial.length > 0)
				{
					var objeto:Object = new Object();
					objeto.etapa = 'COBRO_HISTORIAL';
					objeto.historial = _arrHistorial;
					objeto.numFila = 0;
					procesoCobros.addItem(objeto);
				}
				
				this._inspectorProcesoCobros._cobro = procesoCobros;
			} 
			
			
			public function set obtenTiempoProcesoFactRevision(tProceso:Facturacion):void
			{
				if(tProceso== null) return;
				
				this.espacioConsultaProceso.removeAllElements();
				
				if( this._inspectorFactRemision == null )
				{
					this._inspectorFactRemision = new InsPConsultaFacturarRemision_Facturacion;
				}
				this.espacioConsultaProceso.addElement( this._inspectorFactRemision);
				this._inspectorFactRemision._facRemision = tProceso;
			}
			
			public function set obtenTiempoProcesoRefacturacion(tProceso:Facturacion):void
			{
				if(tProceso== null) return;
				this.espacioConsultaProceso.removeAllElements();
				if( this._inspectorRefacturacion == null )
				{
					this._inspectorRefacturacion = new InsPConsultaRefacturacion_Facturacion;
				}
				_inspectorRefacturacion.lnkFacturaResultante.visible = _inspectorRefacturacion.lnkFacturaResultante.includeInLayout = false;
				_inspectorRefacturacion.lblFacturaResultante.visible = _inspectorRefacturacion.lblFacturaResultante.includeInLayout = true;
				
				_inspectorRefacturacion.lnkXml.visible = _inspectorRefacturacion.lnkXml.includeInLayout = false;
				_inspectorRefacturacion.lblXml.visible = _inspectorRefacturacion.lblXml.includeInLayout = true;
				
				if(tProceso.ffin == null)
				{
					_inspectorRefacturacion.lblFacturaResultante.text = "Pendiente";
					_inspectorRefacturacion.lblXml.text = "Pendiente";
				}
				else
				{
					if(tProceso.factura == null)
					{
						_inspectorRefacturacion.lblFacturaResultante.text = "ND";
						_inspectorRefacturacion.lblXml.text = "ND";
					}
					else
					{
						_inspectorRefacturacion.lnkFacturaResultante.visible = _inspectorRefacturacion.lnkFacturaResultante.includeInLayout = true;
						_inspectorRefacturacion.lblFacturaResultante.visible = _inspectorRefacturacion.lblFacturaResultante.includeInLayout = false;
						_inspectorRefacturacion.lnkFacturaResultante.label = tProceso.factura;
						
						_inspectorRefacturacion.lnkXml.visible = _inspectorRefacturacion.lnkXml.includeInLayout = true;
						_inspectorRefacturacion.lblXml.visible = _inspectorRefacturacion.lblXml.includeInLayout = false;
						_inspectorRefacturacion.lnkXml.label = tProceso.factura + ".xml";
					}
				}
				
				this.espacioConsultaProceso.addElement( this._inspectorRefacturacion);
				this._inspectorRefacturacion._refacturacion = tProceso;
			}
			
			public function set obtenTiempoProcesoCancelacion(tProceso:Facturacion):void
			{
				if(tProceso== null) return;
				this.espacioConsultaProceso.removeAllElements();
				if( this._inspectorCancelacion == null )
				{
					this._inspectorCancelacion = new InsPConsultaCancelacion_Facturacion;
				}
				this.espacioConsultaProceso.addElement( this._inspectorCancelacion);
				this._inspectorCancelacion._cancelacion = tProceso;
			}
			
			public function set obtenResumen( tProceso:ArrayCollection ):void
			{
				if(tProceso== null) return;
				
				this.espacioConsultaProceso.removeAllElements();
				if( this._inspectorResumeFactura == null )
				{
					this._inspectorResumeFactura = new InsPConsultaResumenFactura;
				}
				this.espacioConsultaProceso.addElement( this._inspectorResumeFactura);
				_inspectorResumeFactura.recibirinfo( tProceso );
			}
			/**
			 * este componente contiene todo lo de prepago
			 */ 
			public function set obtenPrepago( $datos:EventoConsultaFacturacion2013 ):void{
				if( $datos == null )
				{
					return;
				}
				this.espacioConsultaProceso.removeAllElements();
				if( this._inpectorPrepago == null )
				{
					this._inpectorPrepago = new InspectorPrepago();
				}
				this.espacioConsultaProceso.addElement( this._inpectorPrepago);
				_inpectorPrepago.recibeDatos( $datos );
			}
			
		]]>
	</fx:Script>
	<s:VGroup id="espacioConsultaProceso" width="100%" height="100%"  paddingRight="10"/>
</s:VGroup>