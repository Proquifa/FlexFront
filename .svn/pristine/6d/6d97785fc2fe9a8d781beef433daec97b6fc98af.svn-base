<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:pqNet="skins.botones.pqNet.*"
		 width="100%" height="100%"
		 xmlns:otros="skins.otros.*"
		 resize="calc(event)" xmlns:ns="vista.vistas.ev_ReportarVisita.*" xmlns:ns1="vista.vistas.ev_ReportarVisita.Componentes.*"
		 creationComplete="completo(event)"
		
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.Sprint;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.itemRenderer.vistaPrincipal.CatClientes_IR_Item_imagen;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			
			import vista.evento.EventoEVReportarVisita;
			
			private var universo:ArrayCollection;
			[Bindable] public var sprint:Sprint;
			
			[Bindable]private var sizeFontProvee:Number;
			[Bindable]private var sizeFontLittle:Number;
			[Bindable]private var sizeGrande:Number;
			[Bindable]private var sizeXGrande:Number;
			[Bindable]public var sizeFont:Number = 15;
			[Bindable]private var nombreClienteA:String;
			[Bindable]public var contactoActual:Contacto = new Contacto();
			[Bindable]public var visitaClienteActual:VisitaCliente;
			public var cargarArchivos:Boolean;
			public var cargarReporte:Boolean;
			public var cargarAcciones:Boolean;
			public var cargarHallazgos:Boolean;
			
			
			protected function calc(event:ResizeEvent):void
			{
				sizeFontLittle = (12/2005) * (unscaledWidth);
				sizeFontLittle = sizeFontLittle > 12 ? 12:sizeFontLittle;
				sizeFontLittle = sizeFontLittle < 7 ? 7:sizeFontLittle;
				
				sizeFontProvee = (20/2005) * (unscaledWidth);
				sizeFontProvee = sizeFontProvee > 20 ? 20:sizeFontProvee;
				sizeFontProvee = sizeFontProvee < 10 ? 10:sizeFontProvee;
				
				sizeFont = (16 / 2005) * (unscaledWidth);
				sizeFont = sizeFont > 16 ? 16:sizeFont;
				sizeFont = sizeFont < 12 ? 12:sizeFont;
				
				sizeGrande = (24/2005) * (unscaledWidth);
				sizeGrande = sizeFontProvee > 24 ? 24:sizeFontProvee;
				sizeGrande = sizeFontProvee < 16 ? 16:sizeFontProvee;
				
				sizeXGrande = (28/2005) * (unscaledWidth);
				sizeXGrande = sizeFontProvee > 28 ? 28:sizeFontProvee;
				sizeXGrande = sizeFontProvee < 22 ? 22:sizeFontProvee;
			}
			
			public function reVisitaActual(Vist:VisitaCliente):void
			{
				visitaClienteActual = Vist;
				contactoActual = Vist.contacto;
				reciveCliente(Vist.idCliente);
				Vst_Documentos.listaDeDocumentos = new ArrayCollection();
				Vst_Reporte.reporte.text = "";
			}
			
			
			public function reciveCliente(idCliente:int):void{
				var item:CatClientes_IR_Item_imagen = new CatClientes_IR_Item_imagen();
				
				try
				{
					imagenAct.source = 	imgCliente.getInstance()["cliente_"+ idCliente ];
				}
				catch (error:Error)
				{
					imagenAct.source = imgCliente.getInstance().default_Select;
					
				}
			}
			
			
			protected function tbBar_updateCompleteHandler(event:FlexEvent):void
			{
			    var ancho:int = 0;
				var alto:int = 0;
				var espacio:int = 0;
				var incremento:int = 0;
				var radiusx:int = tbBar.radius;
				var radiusy:int = tbBar.radius;
				
				
				if (tbBar.hgTab.numElements > 0 )
				{
					ancho = tbBar.hgTab.getElementAt(0).width;
					alto = tbBar.hgTab.getElementAt(0).height;
					espacio = tbBar.hgTab.gap;
					grpBorder.graphics.clear();
					grpBorder.graphics.lineStyle(1,0x008894);
					grpBorder.graphics.moveTo(0, alto);
					for (var i:int = 0; i < tbBar.hgTab.numElements; i++) 
					{
						if (i == vs.selectedIndex)
						{
							if (i != (tbBar.hgTab.numElements -1) )
							{
								incremento += ancho + radiusx;
								grpBorder.graphics.moveTo(incremento, alto );
								incremento += (espacio - radiusx);
								grpBorder.graphics.lineTo(incremento , alto );
							}
							else
							{
								incremento += ancho;
								grpBorder.graphics.moveTo(incremento, alto);
								radiusx = 0;
							}
						}
						else
						{
							if(i != (tbBar.hgTab.numElements -1))
								incremento += ancho;
							else
							{
								//Para que tenga curva el ultimo elemento descomentar esta linea y comentar las que siguen 
								//incremento += (ancho - radius);
								incremento += ancho;
								radiusx = 0;
							}
							grpBorder.graphics.lineTo(incremento, alto );
							if ((i+1) == vs.selectedIndex )
							{
								incremento += (espacio - radiusx);
								grpBorder.graphics.lineTo(incremento, alto );
								incremento += radiusx;
							}
							else
							{
								if(i != (tbBar.hgTab.numElements -1))
								{
									incremento += espacio;
									grpBorder.graphics.lineTo(incremento, alto );
								}
							}
						}
					}
					
					var realSize:Number = (this.linea.width);
					grpBorder.graphics.lineTo(realSize + radiusx - radiusy, alto);
					grpBorder.graphics.curveTo(realSize + radiusx, alto, realSize, alto + radiusy);
					grpBorder.graphics.lineTo(realSize + radiusx, grpContenido.height + alto - radiusy);
					grpBorder.graphics.curveTo(realSize + radiusx, grpContenido.height + alto, realSize- radiusy, grpContenido.height + alto);
					grpBorder.graphics.lineTo(0 + radiusy, grpContenido.height + alto);
					grpBorder.graphics.curveTo(0, grpContenido.height + alto, 0, grpContenido.height + alto - radiusy);
					grpBorder.graphics.lineTo(0, alto);
					
					grpBorder.graphics.endFill();
				}
			}
			
			
			protected function vs_changeHandler(event:IndexChangedEvent):void
			{
		        tbBar_updateCompleteHandler(null);
			}
			
			
			protected function completo(event:FlexEvent):void
			{
				Vst_Reporte.addEventListener("ValidarBotonGuardarReporVisita",validarBotonGuardar);
				tbBar.dataProvider = vs;
			}
			
			public function inicializar_Pantalla():void
			{
				if(cargarReporte){
					Vst_Reporte.reporte.text = visitaClienteActual.reporte;
					activaBoton();
				}
				else{
					Vst_Reporte.limpiaPantalla();
				}
				
				if(cargarArchivos){
					Vst_Documentos.listaDeDocumentos = visitaClienteActual.listaDocumentos;
					Vst_Documentos.asignarDataProvider();
				}
					
				else
				Vst_Documentos.limpiarPantalla();
				
				if(cargarAcciones){
					Vst_Acciones.listaAcciones = visitaClienteActual.acciones;
					Vst_Acciones.asignarDataProvider();
				}
				else{
					Vst_Acciones.limpiarPantalla();
				}
				
				if(cargarHallazgos){
					Vst_Hallazgos.listaAHallazgos = visitaClienteActual.hallazgos;
					Vst_Hallazgos.asignarDataProvider();
				}
				else{
					Vst_Hallazgos.limpiarPantalla();
				}
				
				
				tbBar.selectedIndex = 0;
				tbBar_updateCompleteHandler(null);
			}
			
			protected function registrar_ReporteVisita(event:MouseEvent):void
			{
				var eventDo:EventoEVReportarVisita = new EventoEVReportarVisita(EventoEVReportarVisita.ENVIAR_DOCUMENTOS_DE_REPORTE_VISITA);
				eventDo.listaDocumentos = Vst_Documentos.listaDeDocumentos; 
				eventDo.idVisita = visitaClienteActual.idVisitaCliente;
				eventDo.reporte = Vst_Reporte.reporte.text;
				eventDo.listaHallazgos = Vst_Hallazgos.listaAHallazgos;
				eventDo.listaAcciones = Vst_Acciones.listaAcciones;
				dispatchEvent(eventDo);
			}
			
			private function validarBotonGuardar(event:Event):void{
				if(Vst_Reporte.reporte.text == ""){
					btoAceptarEnab.visible = btoAceptarEnab.includeInLayout = true;
					btoAceptar.visible = btoAceptar.includeInLayout = false;
				}
					
					else{
						btoAceptarEnab.visible = btoAceptarEnab.includeInLayout = false;
						btoAceptar.visible = btoAceptar.includeInLayout = true;
					}
				
				
				dispatchEvent(new Event("agregarReporteAVisita"));
					
			}
			
			
			private function activaBoton():void{
				if(Vst_Reporte.reporte.text == ""){
					btoAceptarEnab.visible = btoAceptarEnab.includeInLayout = true;
					btoAceptar.visible = btoAceptar.includeInLayout = false;
				}
					
				else{
					btoAceptarEnab.visible = btoAceptarEnab.includeInLayout = false;
					btoAceptar.visible = btoAceptar.includeInLayout = true;
				}
				
				
				
				
			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" gap="0" paddingTop="20" >
		
		<s:VGroup width="100%" height="100%" maxHeight="30">
			<s:HGroup width="100%" height="100%" >
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeGrande}" color="#000000" text="VISITA #1 · {visitaClienteActual.nivelIngreso}·" textAlign="left" />
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeGrande}" color="#008895" text= "{visitaClienteActual.nombreCliente} " textAlign="left" />
				<!--<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeFontAgente}" color="#008894" text="{ocString} · {dia}" textAlign="left" />-->
			</s:HGroup>  
			
			<s:Rect width="100%" height="1" id="linea">
				<s:fill>
					<s:SolidColor color="#424242"/>
				</s:fill>
			</s:Rect>
		</s:VGroup>  
		
		
		<s:Spacer height="18" />
		
		<s:HGroup width="100%" height="15%" gap="0" paddingTop="0" paddingBottom="0">
			
			<s:HGroup width="100%" verticalAlign="middle" >
				
				<s:HGroup width="10%" height="100%" horizontalAlign="center" verticalAlign="top">
					<s:Image id="imagenAct" visible="true" includeInLayout="true" smoothingQuality="default" smooth="true"/>
				</s:HGroup> 		  
				<s:Spacer width="20" />
				
				<s:VGroup width="90%" height="100%" paddingTop="30">
					
					<s:HGroup width="100%" >
						<s:Label styleName="TituloNovecento_18" fontSize="{sizeXGrande}" color="#424242" text="Cliente:"/>
						<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeXGrande}" color="#008894" text="{visitaClienteActual.nombreCliente}" width="100%" maxDisplayedLines="1" />
					</s:HGroup>
					
					<s:Spacer height="0" />
					
					<s:VGroup width="100%" height="100%"  >
						<s:HGroup  width="100%" verticalAlign="middle">
							<mx:Image source="{catalogoIconosBotones.getInstance().contacto_svg}" />	
							<s:Label styleName="tab_texto_12_Helvetica"  fontSize="{sizeXGrande}" color="#008894" text="{contactoActual.nombreCompleto}" textAlign="left" fontFamily="Helvetica" fontWeight="bold"/>
						</s:HGroup>  
						<s:HGroup  width="100%" verticalAlign="middle">
							<mx:Image source="{catalogoIconosBotones.getInstance().mail_svg}" />	
							<s:Label fontSize="{sizeGrande}" color="#008894" text="Correo:" textAlign="left" fontFamily="Helvetica" />				
							<s:Label fontSize="{sizeGrande}" color="#424242" text="{contactoActual.EMail}" width="100%" textAlign="left" fontFamily="Helvetica" />				
						</s:HGroup>  
						<s:HGroup width="100%" verticalAlign="middle">
							<mx:Image source="{catalogoIconosBotones.getInstance().telefono_svg}" />	
							<s:Label fontSize="{sizeGrande}" color="#008894" text="Teléfono:" textAlign="left" fontFamily="Helvetica" />				
							<s:Label fontSize="{sizeGrande}" color="#424242" text="{contactoActual.telefono==null?'ND':contactoActual.telefono} · Ext {contactoActual.extension1 == null?'':contactoActual.extension1}" textAlign="left" fontFamily="Helvetica" width="100%"/>				
						</s:HGroup>  
					</s:VGroup> 
					
				</s:VGroup>  
			</s:HGroup> 
		</s:HGroup>
		
		<s:Group width="100%" height="75%" >
			<s:VGroup width="100%" height="100%" gap="0" >
				<ns1:MenuTab id="tbBar" width="100%" dataProvider="{vs}" radius="0" />
				<s:Scroller id="grpContenido" width="100%" minHeight="350" height="100%" updateComplete="tbBar_updateCompleteHandler(event)" horizontalScrollPolicy="off" >
					<s:VGroup width="100%" height="100%" paddingLeft="25" paddingRight="25" paddingBottom="25">
							<mx:ViewStack id="vs" width="100%" height="100%"  selectedIndex="0" change="vs_changeHandler(event)" paddingTop="38">
								<s:NavigatorContent label="REDACTAR REPORTE" >
									<s:VGroup width="100%" height="100%">
										<ns:RedactarReporteReVisita width="100%" height="100%" id="Vst_Reporte"/>
									</s:VGroup>
								</s:NavigatorContent>
								
								<s:NavigatorContent label="HALLAZGOS" >
									<s:VGroup width="100%" height="100%">
										<ns:RedactarHallazgosReVisita width="100%" height="100%" id="Vst_Hallazgos" />
									</s:VGroup>
								</s:NavigatorContent>
								
								<s:NavigatorContent label="ACCIONES" >
									<s:VGroup width="100%" height="100%">
										<ns:RedactarAccionesReVisita width="100%" height="100%" id="Vst_Acciones" />
									</s:VGroup>
								</s:NavigatorContent>
								
								<s:NavigatorContent label="CARGAR DOCUMENTOS" >
									<s:VGroup width="100%" height="100%">
										<ns:CargarDocumentosReVisita width="100%" height="100%" id="Vst_Documentos" />
									</s:VGroup>
								</s:NavigatorContent>
								
								<s:NavigatorContent label="COTIZAR" >
									<s:VGroup width="100%" height="100%">
										<ns:CotizarReVisita width="100%" height="100%" />
									</s:VGroup>
								</s:NavigatorContent>
								
							</mx:ViewStack>
						</s:VGroup>
					</s:Scroller>
			</s:VGroup>  
			<s:Group id="grpBorder" width="100%" height="100%" />
		</s:Group>
		
		<s:Spacer height="16" />
		<pqNet:botonPqNetLargo label="GUARDAR" id="btoAceptarEnab" width="100%"  colorBase="0xc2c3c9"/>
		<pqNet:botonPqNetLargo label="GUARDAR" id="btoAceptar" width="100%"  colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" click="registrar_ReporteVisita(event)" visible="false" includeInLayout="false"/>
		
		</s:VGroup> <!--PRINCIPAL-->
</s:Group>
