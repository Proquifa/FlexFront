<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.pieChartDinamico.PieDinamico;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.PartidaASurtirPHS;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.pieChartDinamico.pqNetPiesChartDinamico;
			import mx.utils.ObjectUtil;
			[Bindable] private var _listaPartidaASurtirPHSUniverso:ArrayCollection;
			[Bindable] private var _listaPartidaASurtirPHSTrabajo:ArrayCollection;
			/**
			 * recibo la lista del mapa MapaInspectorPhs
			 */
			public function set recibeListaPartidaDespacho($lista:ArrayCollection):void{
				if($lista == null || $lista.length < 1) return;
				this._listaPartidaASurtirPHSUniverso = new ArrayCollection();
				this._listaPartidaASurtirPHSUniverso = $lista;
			}
			public function iniciarEstadistica($nombreCCliente:String):void{
				this._listaPartidaASurtirPHSTrabajo = UtilsGrid.queryCampoX(this._listaPartidaASurtirPHSUniverso, "nombreCliente", $nombreCCliente );
				crearGraficas(this._listaPartidaASurtirPHSTrabajo);
			}
			////////		CREAR GRAFICAS
			[Bindable]	private var _componenteArregloPies:pqNetPiesChartDinamico = null;
			private var _listaGraficas:ArrayCollection;
			private function crearGraficas($lista:ArrayCollection):void{
				this._listaGraficas = new ArrayCollection();
				// FLETE PARTIDAS
				var arrFlete:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo($lista, "tipoFlete");
				this._listaGraficas.addItem( setearGrafica("Flete\npartidas", arrFlete, 0,0, "horizontal", 0, 0, "right", "top") );
				// SITUACION PARTIDAS
				var arrSituacion:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo($lista, "enTiempo");
				this._listaGraficas.addItem( setearGrafica("Situación\npartidas", arrSituacion, 0,0, "horizontal", 0, 0, "right", "top") );
				// MANEJO PARTIDAS
				var arrManejo:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo($lista, "manejo");
				this._listaGraficas.addItem( setearGrafica("Manejo\npartidas", arrManejo, 0,0, "horizontal", 0, 150, "right", "top") );
				// UBICACION PARTIDAS
				var arrUbicacion:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo($lista, "ubicacion");
				this._listaGraficas.addItem( setearGrafica("Ubicación\npartidas", arrUbicacion, 0, 1, "horizontal", 150, 0, "right", "bottom") );
				// TIPOS PARTIDAS
				var arrTipo:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo($lista, "tipo");
				this._listaGraficas.addItem( setearGrafica("Tipos\npartidas", arrTipo, 0, 1, "horizontal", 0, 0, "right", "bottom") );
				// CLIENTES
				var arrClientes:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo($lista, "cliente");// FIXME saber q campo cliente es
				//this._listaGraficas.addItem( setearGrafica("Clientes", arrClientes, 0, 1, "horizontal", 0, 0, "right", "bottom") );
				//AGREGAR PIES AL COMPONENTE
				if(_componenteArregloPies == null){
					_componenteArregloPies = new pqNetPiesChartDinamico();
					this.grpGraficas.addElement(_componenteArregloPies);
				}
				_componenteArregloPies.iniciarGraficas( _listaGraficas );
			}
			private function setearGrafica(
										   $lblTitulo:String,
										   $arregloAlimentador:ArrayCollection = null,
										   $tipoPie:int=0, 
										   $fila:int=0, 
										   $orientacion:String="vertical", 
										   $filaMargenLeft:int=0, 
										   $filaMargenRight:int=0, 
										   $horizontalAlign:String="center", 
										   $verticalAlign:String="middle",
										   $margenLeft:int=0,
										   $margenRight:int=0,
										   $margenTop:int=0,
										   $tamanioLetra:int=15,
										   $margenBottom:int=0):PieDinamico{
				var pie:PieDinamico = new PieDinamico();
				pie.lblTitulo = $lblTitulo;
				pie.arregloAlimentador = limpiaNulosOVaciosEnArregloPie( $arregloAlimentador );
				pie.tipoPie = $tipoPie;
				pie.fila = $fila;
				pie.orientacion = $orientacion;
				pie.filaMargenIzquierdo = $filaMargenLeft;
				pie.filaMargenDerecho = $filaMargenRight;
				pie.horizontalAlign = $horizontalAlign;
				pie.verticalAlign = $verticalAlign;
				pie.margenLeft = $margenLeft;
				pie.margenRight = $margenRight;
				pie.margenBottom = $margenBottom;
				pie.margenTop = $margenTop;
				pie.tituloSize = 20;
				return pie;
			}
			private function limpiaNulosOVaciosEnArregloPie($lista:ArrayCollection):ArrayCollection{
				var arrRegreso:ArrayCollection = new ArrayCollection();
				for(var t:int = 0; t < $lista.length; t++){
					if($lista[t].tipo != "null" && 
						$lista[t].tipo != null && 
						$lista[t].tipo != "unset" && 
						$lista[t].tipo !=  "") arrRegreso.addItem($lista[t]);
					if($lista[t].tipo == null){
						$lista[t].tipo = "Pendiente";
						arrRegreso.addItem($lista[t]);
					}
					if($lista[t].tipo == "ND"){
						$lista[t].tipo = "No definido";
						arrRegreso.addItem($lista[t]);
					}
				}
				arrRegreso = UtilsGrid.queryQuitarRepetidos( arrRegreso, "tipo");
				return arrRegreso;
			}
		]]>
	</fx:Script>
	<s:HGroup id="grpGraficas" width="100%" height="100%"/>
</s:VGroup>