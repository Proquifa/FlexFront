<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoAnalisisincidente;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoGestionIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoIncidenteDecision;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.ModeloAnalisisIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.AcordeonProcedimientosSGCIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.AnalisisIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.IncidenteDecision;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.ProcedimientosSGCIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.Mejoras;
			
		]]>
	</mx:Script>
	<!--Evento para obtener la lista de los Incidentes del Usuario-->
	<mate:EventHandlers type="{EventoAnalisisincidente.CARGAR_PROCEMIENTOS_SGC}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.PROCEDIMIENTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerProcedimientos"  
									showBusyCursor="true">
			<!--arguments="{[event.usuario]}"--> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setListaProcedimientos"
									arguments="{[resultObject,event.listaProcedimientos]}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'1']}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{ProcedimientosSGCIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="ListaProcedimientos"
							   targetKey="recibeListaProcedimientos"/>
	</mate:Injectors>	
	
	<!--Evento para obtener la lista Clientes-->
	<mate:EventHandlers type="{EventoAnalisisincidente.CARGA_CLIENTES_EN_ELCOMBO}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerClientes"  
									arguments="{[event.valorAdicional]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setListaComboClientes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'2']}"/>
			</mate:faultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="ListaComboClientes"
							   targetKey="cargarClientesAlCombo"/>
	</mate:Injectors>	
	
	<!--Evento para obtener la lista Proovedores-->
	<mate:EventHandlers type="{EventoAnalisisincidente.CARGA_PROVEEDORES_EN_ELCOMBO}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerProveedores"  
									arguments="{[event.valorAdicional]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setListaComboProovedores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'3']}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="ListaComboProovedores"
							   targetKey="cargarProveedoresAlCombo"/>
	</mate:Injectors>	
	
	<!--Evento para obtener la lista Origen-->
	<mate:EventHandlers type="{EventoAnalisisincidente.CARGA_ORIGEN_EN_ELCOMBO}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerSubprocesos"  
									arguments="{[event.valorAdicional]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setListaComboOrigen"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'4']}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="ListaComboOrigen"
							   targetKey="cargarSubProcesosAlComboOrigen"/>
	</mate:Injectors>	
	
	<!--Evento para obtener la listaProductos-->
	<mate:EventHandlers type="{EventoAnalisisincidente.CARGA_CATALOGO_POR_ID_EMPRESA}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idProveedor,event.valorAdicional]}"
									method="obtenerProductosXIdProveedor"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setListaComboProductos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'5']}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="ListaComboProductos"
							   targetKey="recibeProductos"/>
	</mate:Injectors>	
	<!--Evento para Guardar el Analisis del Incidente-->
	<mate:EventHandlers type="{EventoAnalisisincidente.GUARDA_ANALISIS_INCIDENTE}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.gestion]}"
									method="registrarGestion"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setGuardadoExitoso"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<!--<mate:faultHandlers>
			<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
			method="generico"
			arguments="{[fault,'6']}"/>
			</mate:faultHandlers>-->
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="GuardadoExitoso"
							   targetKey="recibeConfirmacion"/>
	</mate:Injectors>	
	<!--Evento para Actualizar el Analisis del Incidente-->
	<mate:EventHandlers type="{EventoAnalisisincidente.ACTUALIZA_ANALISIS_INCIDENTE}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.nueva]}"
									method="actualizarGestion"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setANALISISACTUALIZADO"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'7']}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="ANALISISACTUALIZADO"
							   targetKey="confirmaActualizacion"/>
	</mate:Injectors>	
	<!--Evento para Cargar Gestion-->
	<mate:EventHandlers type="{ EventoAnalisisincidente.CARGA_GESTION }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idIncidente]}"
									method="obtenerGestionXIdIncidente" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setREGRESAGESTION"
									arguments="{resultObject}"/>
				
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'9']}"/>
			</mate:faultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="REGRESAGESTION"
							   targetKey="cargaDatos"/>
	</mate:Injectors>
	<!--Evento para Guardar la parte de Desicion del Incidente-->
	<mate:EventHandlers type="{EventoIncidenteDecision.GUARDA_DECISION}">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.nueva]}"
									method="actualizarGestion"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method = "setDECISIONGESTION"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker  generator="{ModeloAnalisisIncidente}"
									 method="generico"
									 arguments="{[fault,'10']}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	
	<mate:Injectors target="{IncidenteDecision}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="DECISIONGESTION"
							   targetKey="recibeConfirmacion"/>
	</mate:Injectors>		
	<!--Evento para Cargar Gestion-->
	<mate:EventHandlers type="{ EventoAnalisisincidente.CARGA_GESTION_EN_DECISION }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idIncidente]}"
									method="obtenerGestionXIdIncidente" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setLECTURAGESTION"
									arguments="{resultObject}"/>
			</mate:resultHandlers>				
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{IncidenteDecision}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="LECTURAGESTION"
							   targetKey="obtenGestion"/>
	</mate:Injectors>
	<!--Evento para obtener el Gerente Piloto en el analisis-->
	<mate:EventHandlers type="{ EventoAnalisisincidente.OBTENER_GERENTE_PILOTO }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.EMPLEADO_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.IdSubproceso]}"
									method="obtenerResponsableSubproceso" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setGERENTEPILOTO"
									arguments="{resultObject}"/>
			</mate:resultHandlers>				
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{AnalisisIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="GERENTEPILOTO"
							   targetKey="recibeGerentePiloto"/>
	</mate:Injectors>
	<!--Evento para Validar Analisis Existente-->
	<mate:EventHandlers type="{ EventoAnalisisincidente.VALIDA_GESTION_EXISTENTE }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idIncidente]}"
									method="obtenerGestionXIdIncidente" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setVALIDAGESTION"
									arguments="{resultObject}"/>
				
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{Mejoras}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="VALIDAGESTION"
							   targetKey="recibeValidacionAnalisis"/>
	</mate:Injectors>
	<!--Evento para Validar Decision Existente-->
	<mate:EventHandlers type="{ EventoAnalisisincidente.VALIDA_DECISION_EXISTENTE }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.GESTION_SERVICE}"
									endpoint="{Destinos.END_POINT}"
									arguments="{[event.idIncidente]}"
									method="obtenerGestionXIdIncidente" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
									method="setVALIDADECISION"
									arguments="{resultObject}"/>
				
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{Mejoras}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}"
							   sourceKey="VALIDADECISION"
							   targetKey="recibeValidacionDecision"/>
	</mate:Injectors>
	<!-- Reset -->
	<mate:EventHandlers type="{ EventoGestionIncidente.RESET }">	
		<mate:MethodInvoker generator="{ModeloAnalisisIncidente}"
							method="reset"/>
	</mate:EventHandlers>
	
	
	<mate:Injectors target="{AcordeonProcedimientosSGCIncidente}">
		<mate:PropertyInjector source="{ModeloAnalisisIncidente}" sourceKey="returnProcedimientosAgrupados" targetKey="recibirSubprocesosAgrupados"/>
	</mate:Injectors>
	
</mate:EventMap>