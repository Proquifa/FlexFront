<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				
				autoDrawBackground="false"
				mouseOut="mouseOutHandler()"
				hideEffect="{fxFade}"
				>
	<fx:Declarations>	
		<s:Fade id="fxFade" duration="200" alphaFrom="1" alphaTo="0"/>
		<s:SolidColor id="s1" color="0x{catalogoColores.LABEL_NEGRO}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.utils.clearInterval;
			
			import mx.charts.HitData;
			import mx.charts.LineChart;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.items.LineSeriesItem;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.formatters.NumberFormatter;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			private var elipse:Ellipse;
			private var osInfo:Array;
			private	var lblTipElipse:Label;
			private var factorScale:int = 1;
			
			private var anchoMax:Number = 0;
			override protected function measure():void
			{
				super.measure();
				
				if(lblTipElipse.visible)
				{
					this.width = Math.max(anchoMax,90) * factorScale;
					this.height = Math.max(anchoMax,90) * factorScale; 
				}
				else
				{
					this.width = Math.max(anchoMax,136) * factorScale; 
					this.height = 129 * factorScale;
				}   
				
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
				var hd:HitData = value as HitData;
				var item:LineSeriesItem = hd.chartItem as LineSeriesItem;
				lblTip.text =  String(value.item.mes).toUpperCase() + '\n';
				if( value.element.yField == "montoUSD" )
				{
					lblTip.text += "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas( value.item.montoUSD );
					if( value.item.hasOwnProperty('totalPeriodo') )
						lblTip.text += '\nTP\n$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( value.item.totalPeriodo );
				}
				else if( value.element.yField == "montoUSD_0" )
				{
					lblTip.text += "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(value.item.montoUSD_0 );
					 if( value.item.hasOwnProperty('totalPeriodo') && value.item.totalPeriodo != 0 )
						lblTip.text += '\nTP\n$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( value.item.totalPeriodo  );
				}
				else if( value.element.yField == "montoUSD_1" )
				{
					lblTip.text += "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(value.item.montoUSD_1 );
				}
				else if( value.element.yField == "montoUSD_2" )
				{
					lblTip.text += "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas(value.item.montoUSD_2 );
				}else if(data.element.id == 'montoObjetivo')
				{
					elipse.visible = elipse.includeInLayout = true;
					
					lblTipElipse.visible = lblTipElipse.includeInLayout = true;
					lblTipElipse.text = '⨁ ' + String(value.item.mes).toUpperCase()   + '\n'  +"$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas( value.item.montoObjetivo );
				}
			}
			
			override protected function createChildren():void
			{
				super.createChildren();
				
				osInfo = Capabilities.os.split(" ");
				if(FlexGlobals.topLevelApplication.applicationDPI == 240)
				{
					factorScale = 2;
				}
				
				elipse = new Ellipse();
				if(osInfo[0] == "Mac")
				{
					with(elipse)
					{
						width = 90;
						height = 90;
						verticalCenter = 0;
						horizontalCenter = 0;
						alpha = 0.6;
						fill = s1;
					}
					this.addElement(elipse);
					
					lblTipElipse = new Label;
					with(lblTipElipse)
					{ 
						horizontalCenter = 0;
						verticalCenter=0;
						styleName= "titulo_Helvetica_10_Blanco";
					} 
				}
				else
				{
					with(elipse)
					{
						width = (90 * factorScale);
						height = (90 * factorScale);
						verticalCenter = 0;
						horizontalCenter = 0;
						alpha = 0.6;
						fill = s1;
					}
					this.addElement(elipse);
					
					lblTipElipse = new Label;
					with(lblTipElipse)
					{ 
						horizontalCenter = 0;
						verticalCenter=0;
						
						if(factorScale == 1)
							styleName= "titulo_Helvetica_10_Blanco";
						else if(factorScale == 2)
							styleName= "titulo_Helvetica_20_Blanco";
					}
				}
				
				this.addElement(lblTipElipse);
			}
			
			override public function move(x:Number, y:Number):void
			{
				super.move(x - 45, y + 30);
			}  
			
			protected function removerToolTip():void
			{
				//trace('delete');
				visible = false;
				includeInLayout = false;
			}
			
			private var idTimeOut:uint;
			
			protected function mouseOutHandler():void
			{
				//trace('comienza timer');
				clearInterval( idTimeOut );
				idTimeOut = setTimeout( removerToolTip, 4500);
			}
			
		]]>
	</fx:Script>
	<s:Ellipse width="90" height="90" verticalCenter="0" horizontalCenter="0" fill="{s1}" alpha=".6" />
	<s:Label id="lblTip" textAlign="center"  verticalAlign="middle" verticalCenter="0" horizontalCenter="0" fontSize="10" fontWeight="bold" fontStyle="normal" fontFamily="Helvetica" color="0x{catalogoColores.LABEL_BLANCO}"/>
</s:ItemRenderer>