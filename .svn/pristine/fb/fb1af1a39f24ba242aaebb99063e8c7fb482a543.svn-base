<?xml version="1.0" encoding="utf-8"?>
<pq:MobViewStack xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="completeCrea(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:pqNet="skins.botones.pqNet.*" xmlns:origen="skins.botones.colores.origen.*" xmlns:label="skins.skin.label.*" xmlns:otros="skins.otros.*"
		 creationPolicy="all" selectedIndex="0" xmlns:grafica="skins.botones.grafica.*" xmlns:amparar="skins.botones.colores.amparar.*"
		 paddingLeft="25" paddingRight="20"
		 width="100%" height="100%"
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 resize="resizeHandler(event)" >
	<fx:Declarations>
		 <!--resizeToContent="true"--> 
		<!-- Place non-visual elements (e.g., servicesDvalue objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.InspectorPhs.vistas.eventos.EventoInspectorPhs;
			import mx.com.proquifa.proquifanet.InspectorPhs.vistas.modelo.FotoArchivo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.Pieza;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.Archivo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.PartidaInspeccion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosGrid;
			
			//[Bindable]	public var _listaPartidasInspeccionUniverso:ArrayCollection = new ArrayCollection();
			
			protected function completeCrea(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var _fecha:Date = new Date();
				for(var n:int = 0; n < 4; n++){
					_arrCaducaAnio.addItem( (_fecha.getFullYear() + n).toString() );
				}
			}
			[Bindable]	private var _arrCaducaMes:ArrayCollection = new ArrayCollection([
				"No especificado","Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
			]);
			/* [Bindable]	private var _arrTipoDocumento:ArrayCollection = new ArrayCollection([
				"CERTIFICADO","HOJA DE SEGURIDAD"]); */
			[Bindable]	private var _arrTipoDocumento:ArrayCollection = new ArrayCollection([
				FotoArchivo.CERTIFICADO, FotoArchivo.HOJA_SEGURIDAD]);
			[Bindable]	private var _arrCaducaAnio:ArrayCollection = new ArrayCollection(["No especificado"]);
			[Bindable]	private var _partidaOriginal:PartidaInspeccion = new PartidaInspeccion();
			[Bindable]	public var _partida:PartidaInspeccion = new PartidaInspeccion();
			private const icoNaranja:Class = catalogoIconosGrid.getInstance().render_circuloNaranja;
			private const icoVerde:Class = catalogoIconosGrid.getInstance().render_circuloVerde;
			private const icoRojo:Class = catalogoIconosGrid.getInstance().render_circuloRojo;
			
			public function iniciarPropiedades($partida:PartidaInspeccion = null ):void{
				selectedIndex = 0;
				if( $partida == null ) return;
					_pdfByteArray = null;
					_partidaOriginal = $partida;
					_partida = ObjectUtil.copy( $partida ) as PartidaInspeccion;
					if( _partida.caducidad == "No especificado" || _partida.caducidad == null ){
						cmbCaducaMes.selectedItem = _arrCaducaMes[0];
						cmbCaducaAnio.selectedItem = _arrCaducaAnio[0];
					}else{
						cmbCaducaMes.selectedItem = (_partida.caducidad.split('-') as Array)[0];
						cmbCaducaAnio.selectedItem = (_partida.caducidad.split('-') as Array)[1];
					}
					imgManejoCaducidad.source = icoNaranja;
					imgManejoTransito.source = icoNaranja;
					if(_partida.editoPartida){
							imgPiezas.source = _partida.revisoNumPiezas ? icoVerde:icoRojo;
							imgCaducidad.source = _partida.revisoCaducidad ? icoVerde:icoRojo;
							imgLote.source = _partida.revisoLote ? icoVerde:icoRojo;
							imgDocumento.source = _partida.revisoDoc || _partida.documento != null ? icoVerde:icoRojo;
					}else{
							imgPiezas.source =  icoNaranja;//_partida.revisoNumPiezas ? icoNaranja:icoRojo;
							imgCaducidad.source = icoNaranja;//_partida.revisoCaducidad ? icoNaranja:icoRojo;
							imgLote.source = icoNaranja;//_partida.revisoLote ? icoNaranja:icoRojo;
							imgDocumento.source = icoNaranja;//_partida.revisoDoc || _partida.documento != null ? icoNaranja:icoRojo;
					}
					if( _partida.tipoDocumento == "CERTIFICADO" ) _partida.tipoDocumento = "Certificado";
					if( _partida.tipoDocumento == "HOJA DE SEGURIDAD" ) _partida.tipoDocumento = "Hoja de seguridad";
					txtCantidad.addEventListener(MouseEvent.CLICK, validarCambios );
					txtLote.addEventListener(MouseEvent.CLICK, validarCambios );
					cmbCaducaAnio.addEventListener(MouseEvent.CLICK, validarCambios );
					cmbCaducaMes.addEventListener(MouseEvent.CLICK, validarCambios );
					cmbDocumento.addEventListener(MouseEvent.CLICK, validarCambios );
					chkCaducidad.addEventListener(MouseEvent.CLICK, validarCambios );
					chkDocumento.addEventListener(MouseEvent.CLICK, validarCambios );
					chkLote.addEventListener(MouseEvent.CLICK, validarCambios );
					chkPiezas.addEventListener(MouseEvent.CLICK, validarCambios );
					grpSpacer1.addEventListener(MouseEvent.CLICK, validarCambios );
					grpSpacer2.addEventListener(MouseEvent.CLICK, validarCambios );
					grpSpacer3.addEventListener(MouseEvent.CLICK, validarCambios );
					grpSpacer4.addEventListener(MouseEvent.CLICK, validarCambios );
			}
			private function validarCambios($event:MouseEvent):String{
				var strRegreso:String="";
				_partida.revisoCaducidad = this.chkCaducidad.selected;
				_partida.revisoDoc = this.chkDocumento.selected;
				_partida.revisoLote = this.chkLote.selected;
				_partida.revisoNumPiezas = this.chkPiezas.selected;
				_partida.anoCaduca = this.cmbCaducaAnio.selectedItem;
				_partida.mesCaduca = this.cmbCaducaMes.selectedItem;
				_partida.caducidad = cmbCaducaMes.selectedItem == "No especificado" || cmbCaducaAnio.selectedItem == "No especificado" ? "No especificado": cmbCaducaMes.selectedItem+"-"+cmbCaducaAnio.selectedItem;
				_partida.lote = txtLote.text;
				_partida.tipoDocumento = cmbDocumento.selectedItem;
				if( this.chkDocumento.selected){
					this.btnAmpa.enabled = true;
					//this.btnAmpa.includeInLayout = true;
					if( this._rutaArchivo != null ){
						this.btnEliminaAmpa.enabled = true;
						//this.btnEliminaAmpa.includeInLayout = true;
						this.btnVerAmpa.enabled = true;
						//this.btnVerAmpa.includeInLayout = true;
					}
				}else{
					this.btnAmpa.enabled = false;
					//this.btnAmpa.includeInLayout = false;
					this.btnEliminaAmpa.enabled = false;
					//this.btnEliminaAmpa.includeInLayout = false;
					this.btnVerAmpa.enabled = false;
					//this.btnVerAmpa.includeInLayout = false;
				}
				
				if(this.txtCantidad.text == "0"){
					strRegreso = "CERO";
					_partida.cantidadCompra = int(txtCantidad.text);
				}else if( int(this.txtCantidad.text) == this._partidaOriginal.cantidadCompra){
					strRegreso = "IGUAL";
					_partida.cantidadCompra =int(txtCantidad.text);
				}else	if( int(this.txtCantidad.text) > 0 && int(this.txtCantidad.text) < this._partidaOriginal.cantidadCompra ){
					strRegreso = "DIVIDIR_PARTIDA";
					_partida.cantidadCompra = int(txtCantidad.text);
				}else{
					this.txtCantidad.text = _partidaOriginal.cantidadCompra.toString();
					_partida.cantidadCompra = _partidaOriginal.cantidadCompra;
				}
				return strRegreso;
			}
			
			private function cambiaPartida($accion:String):void{
				if( $accion == "DIVIDIR_PARTIDA" || $accion == "IGUAL" ){
							/* var t:int = ObjectUtil.compare( this._partida, this._partidaOriginal);
							if( ObjectUtil.compare( this._partida, this._partidaOriginal) == 0 ){// CAMBIOS DETECTADOS
								alertaSingleton.show("Sin cambios");
							}else{
								alertaSingleton.show("cambios");
									this._partida.lote = this.txtLote.text;
									this._partida.caducidad = this.cmbCaducaMes.selectedItem == "No especificado" || this.cmbCaducaAnio.selectedItem == "No especificado" ? "No especificado": this.cmbCaducaMes.selectedItem+"-"+ this.cmbCaducaAnio.selectedItem;
									if(this.txtCantidad.text == "0"){
										var evttt:EventoGenericoInspectorPhs = new EventoGenericoInspectorPhs(EventoGenericoInspectorPhs.REGRESA_PARTIDA_A_MONITOREO);
										evttt.idPCompra = Number(this._partida.idPartidaCompra);
										//dispatchEvent( evttt );
									}else if( int(this.txtCantidad.text) == this._partidaOriginal.cantidad){
										
									}else	if( int(this.txtCantidad.text) > 0 && int(this.txtCantidad.text) < this._partidaOriginal.cantidad ){
										this._partida.cantidad = int(this.txtCantidad.text);
										
									}else{
										alertaSingleton.show("validation false");
									}
							} */
							var rechazoDoc:Boolean;
							if( _partida.documento == null && _pdfByteArray == null ) rechazoDoc = true;
							if( _partida.documento == null && _pdfByteArray != null ) rechazoDoc = false;
							if( _partida.documento != null && _pdfByteArray == null ) rechazoDoc = false;
							if( _partida.revisoDoc == false ) rechazoDoc = true;
							
							var evvt:EventoInspectorPhs = new EventoInspectorPhs(EventoInspectorPhs.GUARDA_CAMBIOS_A_PARTIDA);
							evvt.partidaSeleccionada = _partida;
							evvt.rechazoAPartida = rechazoDoc;
							evvt.pdfBytes = _pdfByteArray;
							dispatchEvent( evvt );
				}else if( $accion == "CERO"){
					var evttt:EventoInspectorPhs = new EventoInspectorPhs(EventoInspectorPhs.REGRESA_PARTIDA_A_MONITOREO);
					evttt.idPCompra = Number( _partida.idPartidaCompra);
					dispatchEvent( evttt );
				}
				selectedIndex = 0;
				_rutaArchivo = null; 
			}
			//		BROWSE
			[Bindable]	private var _rutaArchivo:String;
			[Bindable]	private var file:File = new File();//public
			private var _pdfByteArray:ByteArray = null;
			public function browseFileSystem():void {
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				file.addEventListener(Event.COMPLETE,completeHandler);
				var docFilter:FileFilter = new FileFilter("Documents", "*.pdf");//var imagesFilter:FileFilter = new FileFilter("Images", "*.jpg;*.gif;*.png");//var myFile:File = new File();	//myFile.browseForOpen("Open", [imagesFilter, docFilter]);
				file.browse([docFilter]); 
			}
			private function selectHandler(event:Event):void {
				var file:FileReference = FileReference(event.target);
				file.load();
			}
			private function ioErrorHandler(event:IOErrorEvent):void {
				trace("ioErrorHandler: " + event);
			}
			private function progressHandler(event:ProgressEvent):void {
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			private function completeHandler(event:Event):void {
				trace("completeHandler: " + event);
				this._pdfByteArray = this.file.data;
				this._rutaArchivo = file.nativePath;
				mostrarDocumento( _rutaArchivo );
			}
			//		/BROWSE
			private function mostrarDocumento(ruta:String):void{
				if (_rutaArchivo == null) ruta = RutasPdF.GENERAL_RUTA  + RutasPdF.DOCTOSR_RUTA+RutasPdF.INSPECCION_OC+ ruta +".pdf";
				var request:URLRequest = new URLRequest( ruta.indexOf('http') == -1 ? "file://"+ encodeURI(ruta) : ruta); 
				navigateToURL(request);
			}
			
			private var popUpPiezasPartida:PopPiezas = new PopPiezas();
			protected function btnPiezas_clickHandler(event:MouseEvent):void
			{
				popUpPiezasPartida = PopUpManager.createPopUp( alertaSingleton.elDisplayObject, PopPiezas, true) as PopPiezas;
				var arrPiezasAMandar:ArrayCollection = new ArrayCollection();
				if( _partida.insertoPiezas ){// PIEZAS preGUArDADAS
							var evt:EventoInspectorPhs = new EventoInspectorPhs(EventoInspectorPhs.LISTAR_PIEZAS_COMPRA);
							evt.idPCompra = _partida.idPartidaCompra;
							evt.inspector = _partida.inspector;
							dispatchEvent( evt );
							popUpPiezasPartida.iniciarPiezas( arrPiezasAMandar, _partida, false );
				}else{ // PIEZAS NUEVAS
							for(var g:int=0; g < _partida.cantidadCompra; g++ ){
										var piece:Pieza = new Pieza();
										piece.idPieza = g + 1;
										piece.lblPresentacion = _partida.presentacion;
										piece.lblCaducidad = _partida.caducidad;
										piece.lblCatalogo = _partida.codigo;
										piece.codigo = _partida.codigo;
										piece.fabrica = _partida.fabrica;
										piece.idPCompra = _partida.idPartidaCompra;
										piece.loteTxt = _partida.lote;
										piece.lblLote = _partida.lote;
										piece.lblConcepto = _partida.descripcionProducto;
										piece.piezaNueva = true;
										piece.tipoPartida = _partida.tipo;
										piece.lblIdioma = _partida.idioma;
										piece.lblEdicion = _partida.edicion;
											var doc:Archivo = new Archivo();
											doc.descripcion = _partida.tipoDocumento;
											doc.folio = _partida.codigo + "-" + _partida.fabrica;
											piece.listArchivos = new ArrayCollection();
										piece.listArchivos.addItem( doc );
										arrPiezasAMandar.addItem( piece );
							}
							popUpPiezasPartida.iniciarPiezas( arrPiezasAMandar, _partida, true );
				}
			}
			
			protected function cmbCaducaMes_clickHandler():void
			{
				if( this.cmbCaducaMes.selectedIndex == 0 ){
					this.cmbCaducaAnio.selectedIndex = 0;
				}
			}
			protected function cmbCaducaAnio_clickHandler():void
			{
				if(this.cmbCaducaAnio.selectedIndex == 0 ){
					this.cmbCaducaMes.selectedIndex = 0;
				}
			}
			protected function edita_clickHandler(event:MouseEvent):void
			{
				selectedIndex = 1;
				if( !_partida.editoPartida ){
					_partida.revisoNumPiezas = true;
					_partida.revisoCaducidad = true;
					_partida.revisoLote = true;
					_partida.revisoDoc = true;
				}
			}
			protected function resizeHandler(event:ResizeEvent):void
			{
				validateNow();// fixme test
			}
		]]>
	</fx:Script>
	<s:NavigatorContent id="first">
			<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="0">
				
								<s:HGroup width="100%" height="66" verticalAlign="middle" >
									<!--<s:Label text="{this._partida.revisoCaducidad}"/>
									<s:Label text="{this._partida.revisoDoc}"/>
									<s:Label text="{this._partida.revisoLote}"/>
									<s:Label text="{this._partida.revisoNumPiezas}"/>-->
									<label:labelTitulo text="# {this._partida.partida} · { _partida.cantidadCompra} pzs" width="100%" />
									<pqNet:botonPqNetLargo label="Editar" click="edita_clickHandler(event)" botonGris="true" />
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="60" paddingRight="10">
										<s:Label text="# Piezas:" textAlign="right" fontWeight="bold" />
										<s:Label text="{this._partida.cantidadCompra}" width="100%" />
										<s:Image id="imgPiezas"/>
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="60" paddingRight="10">
									<s:Label text="Caducidad:" textAlign="right" fontWeight="bold" />
									<s:Label text="{this._partida.caducidad}" width="100%" />
									<s:Image id="imgCaducidad"/>
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="60" paddingRight="10">	
									<s:Label text="Lote:" textAlign="right" fontWeight="bold" />
									<s:Label text="{this._partida.lote}" width="100%" />
									<s:Image id="imgLote"/>
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="60" paddingRight="10">
									<s:Label text="Manejo tránsito:" textAlign="right" fontWeight="bold" />
									<s:Label text="{ _partida.manejo}" width="100%" />
									<s:Image id="imgManejoTransito"/>
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="60" paddingRight="10">
									<s:Label text="Manejo almacenaje:" textAlign="right" fontWeight="bold" />
									<s:Label text="{ _partida.manejo}" width="100%" />
									<s:Image id="imgManejoCaducidad"/>
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="60" paddingRight="10">	
									<s:Label text="Documento:" textAlign="right" fontWeight="bold" />
									<s:Label text="{  _partida.documento == 'No especificado' ? 'Sin documentación': _partida.tipoDocumento }" width="100%"/>
									<s:Image source="{catalogoIconosGrid.getInstance().render_ojoazul}" includeInLayout="{ _partida.documento == 'No especificado' ? false: true}" visible="{ _partida.documento == 'No especificado' ? false: true}" 
											 click="mostrarDocumento( _partida.documento )" />
									<s:Image id="imgDocumento"/>
								</s:HGroup>
								<otros:divisionHueca />
								<s:HGroup width="100%" height="66" horizontalAlign="center" verticalAlign="middle">
										<pqNet:botonPqNetLargo id="btnPiezas" width="260" label="Piezas" colorBase="{catalogoColores.BTN_VERDE_AZUL}" gradientePqnet="true" sombraPq="false" botonRedondo="true" click="btnPiezas_clickHandler(event)" 
															   visible="{ _partida.documento == 'No especificado' ?false: true}" includeInLayout="{ _partida.documento == 'No especificado' ?false: true}"/>
										<pqNet:botonPqNetLargo id="btnRechazoPartida" width="260" label="Rechazo a partida" colorBase="{catalogoColores.LABEL_ROJO}" gradientePqnet="true" botonRedondo="true" sombraPq="false" 
															   visible="{ _partida.documento == 'No especificado' ?true: false}" includeInLayout="{ _partida.documento == 'No especificado' ?true: false}"/>
								</s:HGroup>
			</s:VGroup>
	</s:NavigatorContent>
	<s:NavigatorContent width="{first.width}" height="{first.height}"><!--fixme-->
				<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="0">
									<s:HGroup width="100%" height="66" verticalAlign="middle">
										<!--<s:Label text="{this._partida.revisoCaducidad}"/>
										<s:Label text="{this._partida.revisoDoc}"/>
										<s:Label text="{this._partida.revisoLote}"/>
										<s:Label text="{this._partida.revisoNumPiezas}"/>-->
										<label:labelTitulo text="# {this._partida.partida} · {_partida.cantidadCompra} pzs" width="100%" />
											<pqNet:botonPqNetLargo label="Finalizar" click="cambiaPartida( validarCambios(event) )" botonGris="true" />
									</s:HGroup>
									<otros:divisionHueca />
									<s:HGroup width="100%" height="100%" verticalAlign="middle">
											<s:Label text="# Piezas:" textAlign="right" width="80" fontWeight="bold" />
											<s:TextInput id="txtCantidad" width="300" text="{ _partida.cantidadCompra}" enabled="{this.chkPiezas.selected}"/>
											<s:HGroup id="grpSpacer1" width="100%" height="100%" click="{this.chkPiezas.selected = !this.chkPiezas.selected}"/>
											<s:CheckBox id="chkPiezas" width="20" selected="{this._partida.revisoNumPiezas}" /><!--click="{this._partida.revisoNumPiezas = this.chkPiezas.selected}"-->
									</s:HGroup>
									<otros:divisionHueca />
									<s:HGroup width="100%" height="100%" verticalAlign="middle">
											<s:Label text="Caducidad:" textAlign="right" width="80" fontWeight="bold" />
											<s:ComboBox id="cmbCaducaMes" dataProvider="{this._arrCaducaMes}" width="135" enabled="{this.chkCaducidad.selected}" change="cmbCaducaMes_clickHandler()"/>
											<s:ComboBox id="cmbCaducaAnio" dataProvider="{this._arrCaducaAnio}" width="135" enabled="{this.chkCaducidad.selected}" change="cmbCaducaAnio_clickHandler()"/>
											<s:HGroup id="grpSpacer2" width="100%" height="100%" click="{this.chkCaducidad.selected = !this.chkCaducidad.selected}"/>
											<s:CheckBox id="chkCaducidad" width="20" selected="{this._partida.revisoCaducidad}"/><!--click="{this._partida.revisoCaducidad = this.chkCaducidad.selected}"-->
									</s:HGroup>
									<otros:divisionHueca />
									<s:HGroup width="100%" height="100%" verticalAlign="middle">
											<s:Label text="Lote:" textAlign="right" width="80" fontWeight="bold" />
											<s:TextInput id="txtLote" width="300" text="{this._partida.lote}" enabled="{this.chkLote.selected}"/>
											<s:HGroup id="grpSpacer3" width="100%" height="100%" click="{this.chkLote.selected = !this.chkLote.selected}"/>
											<s:CheckBox id="chkLote" width="20" selected="{this._partida.revisoLote}"/><!--click="{this._partida.revisoLote = this.chkLote.selected}"-->
									</s:HGroup>
									<otros:divisionHueca />
									<s:HGroup width="100%" height="100%" verticalAlign="middle">
											<s:Label text="Documento:" textAlign="right" width="80" fontWeight="bold" />
											<s:ComboBox id="cmbDocumento" dataProvider="{ _arrTipoDocumento}" width="200" enabled="{ chkDocumento.selected}" selectedItem="{_partida.tipoDocumento}"/>
											<s:HGroup id="grpSpacer4" width="100%" height="100%" click="{this.chkDocumento.selected = !this.chkDocumento.selected}{if(this.chkDocumento.selected == false) this._rutaArchivo = null}"/>
											<s:CheckBox id="chkDocumento" label="{this._partida.tipoDocumento}" width="20" selected="{this._partida.revisoDoc}"/><!--click="{if(this.chkDocumento.selected == false) this._rutaArchivo = null; this._partida.revisoDoc = this.chkDocumento.selected}"-->
									</s:HGroup>
									<s:HGroup width="100%" height="100%" horizontalAlign="center" gap="0" >
												<pqNet:botonPqNetLargo id="btnVerAmpa" icono="ojomordor" width="100" botonRedondo="true" 
																	   enabled="{this._rutaArchivo == null ? false:true}" 
																	   click="mostrarDocumento(this._rutaArchivo )"
																	   /><!--includeInLayout="{this._rutaArchivo == null ? false:true}"-->
												<s:Spacer width="100%"/>
												<pqNet:botonPqNetLargo id="btnEliminaAmpa" label="Eliminar" gradientePqnet="true" botonRedondo="true" width="180"
																	   enabled="{this._rutaArchivo == null ? false:true}" 
																	   colorBase="0x{catalogoColores.LABEL_ROJO}"
																	   click="this._rutaArchivo = null; this._pdfByteArray = null"
																	   /><!--includeInLayout="{this._rutaArchivo == null ? false:true}"-->
												<s:Spacer width="100%"/>
												<pqNet:botonPqNetLargo id="btnAmpa" label="Amparar" icono="amparo" botonRedondo="true" gradientePqnet="true" colorBase="0x{catalogoColores.LABEL_VERDE}" width="180" click="browseFileSystem()" 
																	   enabled="{this.chkDocumento.selected}"/>
									</s:HGroup>  
									<otros:divisionHueca />
				</s:VGroup>
	</s:NavigatorContent>
	<s:NavigatorContent id="navTerminarInspeccion">
		<s:Label text="NO HAY MÁS PIEZAS POR INSPECCIONAR" fontSize="20" color="0x{catalogoColores.LABEL_GRIS}" horizontalCenter="0" verticalCenter="0"/>
	</s:NavigatorContent>
</pq:MobViewStack>
