<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.charts.HitData;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.controls.Alert;
			[Bindable]
			private var _clientesTopTen:ArrayCollection;
			
			[Bindable]
			private var _tiempoProcesoTabla:ArrayCollection = new ArrayCollection();
			
			
			
			[Bindable]
			private var _datosGenerales:ObjetoTabla;
			
			
			public function actualizar():void{
				this.gridResultados;
			}
			
			private function maxTopClientes():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			/**
			 * Metodo que recibe del mapa el top ten de clientes  
			 */
			public function set obtenerDatosGrafica(clientes:ArrayCollection):void{
				if (clientes==null){
					return ;
				}
				this._clientesTopTen = new ArrayCollection();
				this._clientesTopTen = clientes;
				/* for(var m:int = 0 ; m < clientes.length ; m++){
					if(m<10){
						this._clientesTopTen.addItem(clientes.getItemAt(m));
					}
				} */
			}
			
			public function set obtenerDatosTabla(datos:ObjetoTabla):void{
				if(datos == null){
					return ;
				}
				this._datosGenerales = new ObjetoTabla();
				this._datosGenerales = datos;
				var evt:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.BUSCAR_DATOS_TOPCLIENTE);
				evt.idProveedor = datos.idProveedor;
				evt.anioInt = datos.anioInt;
				evt.periodo = datos.periodo;
				evt.tipoPeriodo = datos.tipoPeriodo;
				evt.mes = datos.mes;
				evt.tipo = "false";
				dispatchEvent(evt);
			}
			
			public function set obtenerTablaProceso(datos:ArrayCollection):void{
				this._tiempoProcesoTabla = new ArrayCollection();
				if(datos.length > 0){
					this._tiempoProcesoTabla = datos
				}
			}
			
			public function seleccionaTabla():void{			
				this.navegador.selectedChild = this.vistaTabla;
			} 
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}	
			
			[Bindable]private var expensesAC:ArrayCollection = new ArrayCollection( [
				{ Month: "Jan", Profit: 2000, Expenses: 1500, Amount: 450 },
				{ Month: "Feb", Profit: 1000, Expenses: 200, Amount: 600 },
				{ Month: "Mar", Profit: 1500, Expenses: 500, Amount: 300 },
				{ Month: "Apr", Profit: 1800, Expenses: 1200, Amount: 900 },
				{ Month: "May", Profit: 2400, Expenses: 575, Amount: 500 } ]);
			
			public function set obtenerGrafica(datos:ArrayCollection):void{
				if( datos == null ){
					return;
				}
				this.expensesAC = new ArrayCollection();
				this.expensesAC = datos;
			}
			/**
			 * Metodo usado para darle formato a los DATATIPS del la grafica del Pie (en tiempo y fuera de tiempo)
			 */ 
			public function dtFunc(hd:HitData):String {
				var porcentaje:Number = new Number;
				return 	"<B>" + "*** TTP *** " + "</B> " + "<BR>" +
					"<B>" + " Mes: " +"</B>" + hd.item.nombre + "<BR>" +
					"<B>" + " # días: " + "</B>" +  hd.item.cantidad + "<BR>";
			}
			
			
			protected function exportar():void
			{
				var archivo:File = new File();
				var encabezados:String = "#,Més,Folio incidente,Fecha inicio,Fecha fin,Tiempo proceso";
				var datos:ArrayCollection = new ArrayCollection();
				datos.addItem(encabezados);
				var renglon:String = "";
				for(var m:int = 0; m<this._tiempoProcesoTabla.length; m++){
					renglon = this._tiempoProcesoTabla[m].numFila + "," +
						'"'+this._tiempoProcesoTabla[m].proceso + '"' + "," +
						'"'+this._tiempoProcesoTabla[m].folio + '"' + "," +
						'"'+this._tiempoProcesoTabla[m].fechaInicioFormato + '"' + "," +
						'"'+this._tiempoProcesoTabla[m].fechaFinFormato + '"' + "," +
						'"'+this._tiempoProcesoTabla[m].totalProcesoFormato + '"';
					datos.addItem("\r" + renglon);
				}
				archivo.save(datos,"Tiempo_Proceso.csv");
				
				
			}
			
			
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" title="Tiempo de Proceso" dropShadowVisible="false">
		<!--<mx:CurrencyFormatter id="formatoExcel" precision="2" currencySymbol="$" useThousandsSeparator="false"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%" creationPolicy="all"> 
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<mx:LineChart id="linechart" color="0x323232" height="90%" width="100%"
							  showDataTips="true" dataProvider="{this.expensesAC}" dataTipFunction="dtFunc">
					
					<mx:horizontalAxis>
						<mx:CategoryAxis categoryField="nombre" title="Meses"/>
					</mx:horizontalAxis>
					<mx:series>
						<mx:LineSeries yField="cantidad" form="curve" displayName="Días"   />
						<!--<mx:LineSeries yField="Expenses" form="curve" displayName="Expenses"/>
						<mx:LineSeries yField="Amount" form="curve" displayName="Amount"/>-->
					</mx:series>
					<mx:verticalAxis>
						<mx:LinearAxis id="vCantidad" baseAtZero="true" title="Días"/>				
					</mx:verticalAxis>
				</mx:LineChart>
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTopClientes()" width="60"/>
				</mx:HBox>
			</mx:VBox>
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				
				<mx:DataGrid id="gridResultados" dataProvider="{_tiempoProcesoTabla}" width="100%" height="100%">
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numFila"/>
						<mx:DataGridColumn headerText="Més" dataField="proceso"/>
						<mx:DataGridColumn headerText="Folio incidente" dataField="folio"/>
						<mx:DataGridColumn headerText="Fecha inicio" dataField="fechaInicioFormato"/>
						<mx:DataGridColumn headerText="Fecha fin" dataField="fechaFinFormato"/>
						<mx:DataGridColumn headerText="Tiempo proceso" dataField="totalProcesoFormato"/>
					</mx:columns>
				</mx:DataGrid>	
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTopClientes()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" width="80" click="exportar()" />
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	</s:Panel>
</s:Group>
