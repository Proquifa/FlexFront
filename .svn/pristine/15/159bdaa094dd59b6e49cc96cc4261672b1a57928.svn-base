<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:skin="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.botoneraFlotante.skin.*"		 
		 xmlns:boton="skins.boton.*" 
		 creationComplete="init()" 
		 width="100%" height="30" 
		 >
	
	
	<fx:Metadata>
		[Event(name="regresarVista", type="flash.events.Event")]
		[Event(name="avanzarVista", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.IVisualElement;
			
			import skins.catalogos.catalogoIconosBotones;  
			
			private var _data:ArrayList;
			private var _selectedIndex:Number;
			public var vista:VistaInfoMenuFlotante;
			private var _maxItemList:int;
			private var _tamLetra:Number;
			
			private var _conPalomita:Boolean = false;
			private var _clickeable:Boolean = true;
			
			
			
			
			public function get tamLetra():Number
			{
				return _tamLetra;
			}
			
			public function set tamLetra(value:Number):void
			{
				_tamLetra = value;
				if(vista != null)
				{
					vista.tam = value;
					modificaTamLetra();
				}
				
				
			}
			
			private function modificaTamLetra(){
				for (var i:int = 0; i < lstContenido.numElements; i++) 
				{
					var elemento:VistaInfoMenuFlotante = lstContenido.getElementAt(i) as VistaInfoMenuFlotante;
					elemento.tam = tamLetra;
				}
				
			}
			
			public function get maxItemList():int
			{
				return _maxItemList;
			}
			
			public function set maxItemList(value:int):void
			{
				_maxItemList = value;
			}
			
			[Bindable]
			public function get data():ArrayList
			{
				return _data;
			}
			
			protected function init():void
			{
				selectedIndex = 0;
				vista = new  VistaInfoMenuFlotante();
				
			}
			
			public function set data(value:ArrayList):void
			{
				var ancho:Number;
				if(value == null)
					return;
				
				_data = value;
				crearMenuFlotante();
				
			}
			
			private function crearMenuFlotante() {
				lstContenido.removeAllElements();
				if (data) {
					for(x = 0; x < data.length; x++){
						vista = new VistaInfoMenuFlotante();
						vista.conPalomita = conPalomita;
						vista.lblTitulo.text = data.source[x];
						vista.tam = tamLetra;
						lstContenido.addElement(vista);
					}
				}
			}
			
			
			public function avanzaEntrePestanas(value:int):void{
				
				
				if (value == 0)
				{
					if ((selectedIndex - 1) >= 0 ) {
						selectedCurrentView(selectedIndex, --selectedIndex);
						dispatchEvent(new Event("regresarVista"));
					}
					
				}
					
				else if(value == 1)
				{
					if ((selectedIndex + 1) < data.length ) {
						if (maxItemList){ 
							if ((selectedIndex + 1) < maxItemList ){
								selectedCurrentView(selectedIndex, ++selectedIndex);
								var itemSelected:IVisualElement = lstContenido.getElementAt(selectedIndex - 1) as VistaInfoMenuFlotante;
								(itemSelected as VistaInfoMenuFlotante).conPalomita = true;
								dispatchEvent(new Event("avanzarVista"));
							}
							else if ((selectedIndex + 1) == maxItemList ){
								dispatchEvent(new Event("verificaSiavanza"));
							}
						}else {
							selectedCurrentView(selectedIndex, ++selectedIndex);
							dispatchEvent(new Event("avanzarVista"));
						}
					}
				}
			}
			
			public function selectedCurrentView(oldViewIndex:int, newViewIndex:int):void {
				var oldView:IVisualElement = lstContenido.getElementAt(oldViewIndex);
				var newView:IVisualElement = lstContenido.getElementAt(newViewIndex);
				(oldView as VistaInfoMenuFlotante).chageCurrentState = "normal";
				(newView as VistaInfoMenuFlotante).chageCurrentState = "selected";
			}
			
			[Bindable]
			public function get selectedIndex():Number
			{
				return _selectedIndex;
			}
			
			public function set selectedIndex(value:Number):void
			{
				_selectedIndex = value;
				if (lstContenido && lstContenido.numElements > 0 && value != -1 ) {
					for (var oldViewIndex:int = 0; oldViewIndex < lstContenido.numElements; oldViewIndex++) 
					{
						selectedCurrentView(oldViewIndex, value);
					}
					var newView:IVisualElement = lstContenido.getElementAt(value);
					(newView as VistaInfoMenuFlotante).chageCurrentState = "selected";
				}
				validaImgAMostrar();
			}
			
			[Bindable]
			public function get conPalomita():Boolean
			{
				return _conPalomita;
			}
			
			public function set conPalomita(value:Boolean):void
			{
				_conPalomita = value;
				crearMenuFlotante();
			}
			
			public function Cmenu():void
			{
				crearMenuFlotante();
			}
			
			
			public function conAlerta(value:Boolean,indice:Number):void
			{
				var itemSelected:IVisualElement = lstContenido.getElementAt(indice) as VistaInfoMenuFlotante;
				(itemSelected as VistaInfoMenuFlotante).incompleto = value;
			}

			public function validaImgAMostrar():void
			{
				if(data){
					if(_clickeable){
						imgRegresaV.visible = imgRegresaV.includeInLayout = selectedIndex - 1 >= 0;
						imgRegresaG.visible = imgRegresaG.includeInLayout = !(selectedIndex - 1 >= 0);
						
						imgSiguienteV.visible = imgSiguienteV.includeInLayout = !(selectedIndex + 1 >= data.length);
						imgSiguienteG.visible = imgSiguienteG.includeInLayout = selectedIndex + 1 >= data.length;
					}else{
						imgRegresaV.visible = imgRegresaV.includeInLayout = selectedIndex - 1 >= 0 && _clickeable;
						imgRegresaG.visible = imgRegresaG.includeInLayout = !(selectedIndex - 1 >= 0) || _clickeable;
						
						imgSiguienteV.visible = imgSiguienteV.includeInLayout = !(selectedIndex + 1 >= data.length) && _clickeable;
						imgSiguienteG.visible = imgSiguienteG.includeInLayout = !selectedIndex + 1 >= data.length || _clickeable;
					}
				}
			}

			public function get clickeable():Boolean
			{
				return _clickeable;
			}

			public function set clickeable(value:Boolean):void
			{
				_clickeable = value;
				
			}
			
			
			
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" gap="25">
		<s:HGroup height="30" verticalAlign="middle" paddingTop="5" mouseDown="{_clickeable ? avanzaEntrePestanas(0) : ''}" id="grpRegresa">
			<mx:Image id="imgRegresaV" source="{catalogoIconosBotones.getInstance().regresar_verde}" enabled="false"/>
			<mx:Image id="imgRegresaG" source="{catalogoIconosBotones.getInstance().regresar_gris}"/>
<!--			<mx:Image id="imgRegresaV" source="{catalogoIconosBotones.getInstance().regresar_verde}" visible="{selectedIndex - 1 >= 0}" includeInLayout="{selectedIndex - 1 >= 0}" enabled="false"/>
			<mx:Image id="imgRegresaG" source="{catalogoIconosBotones.getInstance().regresar_gris}" visible="{!(selectedIndex - 1 >= 0)}" includeInLayout="{!(selectedIndex - 1 >= 0)}"/>-->
		</s:HGroup>  
		
		<s:HGroup width="100%" height="30" id="lstContenido" gap="0" />
		
		<s:HGroup id="hgroupSiguiente" height="30" verticalAlign="middle" mouseDown="{_clickeable ? avanzaEntrePestanas(1) : ''}">
			<mx:Image id="imgSiguienteV" source="{catalogoIconosBotones.getInstance().siguiente_verde}" />
			<mx:Image id="imgSiguienteG" source="{catalogoIconosBotones.getInstance().siguiente_gris}" />
<!--			<mx:Image id="imgSiguienteV" source="{catalogoIconosBotones.getInstance().siguiente_verde}" visible="{!(selectedIndex + 1 >= data.length)}" includeInLayout="{!(selectedIndex + 1 >= data.length)}" />
			<mx:Image id="imgSiguienteG" source="{catalogoIconosBotones.getInstance().siguiente_gris}" visible="{selectedIndex + 1 >= data.length}" includeInLayout="{selectedIndex + 1 >= data.length}" />-->
		</s:HGroup>
		
	</s:HGroup> 
</s:Group>
