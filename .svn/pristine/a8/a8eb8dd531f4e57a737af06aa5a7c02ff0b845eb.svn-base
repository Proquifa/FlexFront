<?xml version="1.0" encoding="utf-8"?>
<s:ToggleButton xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				skinClass="skins.skin.botones.toggleButton.buttonLeftToggleSkinPQNetDefault"
				focusColor="0x257d92"
				creationComplete="togglebutton1_creationCompleteHandler(event)"
				>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.seleccionHorario.assets.imagenesComponenteHorario;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoIconosGrid;
			
			private var _tipoButtonToggle:String = "imagen";
			
			private var _tipoImagen:String = "generalCatPro";
			
			private var _textoMostrar:String= "sin texto";
			
			private var _tipoInteraccionEnTexto:String ="itemRenderOfertaCatPro";
			
			private var _textoParaCatProOferta:String;
			
			private var _sizeFont:int;
			
			private var _espacioElementos:Number = 20;
			
			public function get espacioElementos():Number
			{
				return _espacioElementos;
			}

			public function set espacioElementos(value:Number):void
			{
				_espacioElementos = value;
				if (skin)
				{
					(skin as buttonLeftToggleSkinPQNetDefault).vgPrimerElemento.percentWidth = value;
				}
			}

			public function configurarToggleButton($tipoButtonToggle:String,$tipoImagen:String="",$tipoDeInteractionEnTexto:String=""):void
			{
				if($tipoButtonToggle == "imagen")
				{
					buttonLeftToggleSkinPQNetDefault(skin).showImagen = true;
					if(StringUtil.trim($tipoImagen).length > 0 )
					{
						switch($tipoImagen)
						{
							case "generalCatPro":
							{
								buttonLeftToggleSkinPQNetDefault(skin).imageUp = catalogoIconosGrid.getInstance().render_preciogeneral20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageOver = catalogoIconosGrid.getInstance().render_preciogeneralOver20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDown = catalogoIconosGrid.getInstance().render_preciogeneralOver20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDisable = catalogoIconosGrid.getInstance().render_preciogeneral20x20;
								break;
							}
							case "precioListaCatPro":
							{
								buttonLeftToggleSkinPQNetDefault(skin).imageUp = catalogoIconosGrid.getInstance().render_preciolista20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageOver = catalogoIconosGrid.getInstance().render_preciolistaOver20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDown = catalogoIconosGrid.getInstance().render_preciolistaOver20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDisable = catalogoIconosGrid.getInstance().render_preciolista20x20;
								break;
							}
							case "productoCatPro":
							{
								buttonLeftToggleSkinPQNetDefault(skin).imageUp = catalogoIconosGrid.getInstance().render_precioproducto20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageOver = catalogoIconosGrid.getInstance().render_precioproductoOver20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDown = catalogoIconosGrid.getInstance().render_precioproductoOver20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDisable = catalogoIconosGrid.getInstance().render_precioproducto20x20;
								break;
							}
							case "clasificacionCatPro":
							{
								buttonLeftToggleSkinPQNetDefault(skin).imageUp = catalogoIconosGrid.getInstance().direccion;
								buttonLeftToggleSkinPQNetDefault(skin).imageOver = catalogoIconosGrid.getInstance().direcciondown;
								buttonLeftToggleSkinPQNetDefault(skin).imageDown = catalogoIconosGrid.getInstance().direcciondown;
								buttonLeftToggleSkinPQNetDefault(skin).imageDisable = catalogoIconosGrid.getInstance().direccion;
								break;
							}
							case "engraneVigenciaCatPro":
							{
								buttonLeftToggleSkinPQNetDefault(skin).imageUp = catalogoIconosGrid.getInstance().render_engraneGris20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageOver = catalogoIconosGrid.getInstance().render_engraneVerdeAzul20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDown = catalogoIconosGrid.getInstance().render_engraneVerdeAzul20x20;
								buttonLeftToggleSkinPQNetDefault(skin).imageDisable = catalogoIconosGrid.getInstance().render_engraneGris20x20;
								break;
							}
							case "imgSeleccionarGridHorario":
							{
								buttonLeftToggleSkinPQNetDefault(skin).imageUp =  imagenesComponenteHorario.getInstance().seleccionarNegro;
								buttonLeftToggleSkinPQNetDefault(skin).imageOver =  imagenesComponenteHorario.getInstance().seleccionarNegro;
								buttonLeftToggleSkinPQNetDefault(skin).imageDown =  imagenesComponenteHorario.getInstance().seleccionarAzul;
								buttonLeftToggleSkinPQNetDefault(skin).imageDisable =  imagenesComponenteHorario.getInstance().seleccionarAzul;
								break;
							}
								
							default:
							{
								trace(":::::::::::::::::::::::::::::::::::::::::::::::SE TIENE QUE ESPÉCIFICAR LA IMAGEN::::::::::::::::::::::::::::::::::::::::::::::::::::::::");
								break;
							}
						}
					}
				}
				else if($tipoButtonToggle == "texto")
				{
					switch($tipoDeInteractionEnTexto)
					{
						case "itemRenderOfertaCatProHTMLText":
						{
							buttonLeftToggleSkinPQNetDefault(skin).showGrpCatroOfertaMode = true;
							buttonLeftToggleSkinPQNetDefault(skin).fuenteUpStyle = "cltas_texto";
							buttonLeftToggleSkinPQNetDefault(skin).fuenteOverStyle = "cltas_texto_verdeAzul";
							buttonLeftToggleSkinPQNetDefault(skin).fuenteDownStyle = "cltas_texto_verdeAzul";
							break;
						}
							
						default:
						{
							trace(":::::::::::::::::::::::::::::::::::::::::::::::SE TIENE QUE ESPÉCIFICAR EL TIPO DE INTERACCION QUE TENDRÁ EL TEXTO:::::::::::::::::::::::::::::::::::::::::::::::::::::");
							break;
						}
					}
				}
			}
			
			
			
			protected function togglebutton1_creationCompleteHandler(event:FlexEvent):void
			{
				configurarToggleButton(tipoButtonToggle,_tipoImagen,_tipoInteraccionEnTexto);
				(skin as buttonLeftToggleSkinPQNetDefault).vgPrimerElemento.percentWidth = espacioElementos;
			}
			
			[Inspectable(category="Styles",enumeration="imagen,texto",defaultValue="btnImagen")]
			public function get tipoButtonToggle():String
			{
				return _tipoButtonToggle;
			}
			
			public function set tipoButtonToggle(value:String):void
			{
				_tipoButtonToggle = value;
			}
			
			[Inspectable(category="Styles",enumeration="generalCatPro,precioListaCatPro,productoCatPro,engraneVigenciaCatPro,clasificacionCatPro,imgSeleccionarGridHorario")]
			public function get tipoImagen():String
			{
				return _tipoImagen;
			}
			
			public function set tipoImagen(value:String):void
			{
				_tipoImagen = value;
			}
			
			public function get textoMostrar():String
			{
				return _textoMostrar;
			}
			
			public function set textoMostrar(value:String):void
			{
				_textoMostrar = value;
			}
			
			[Inspectable(category="Styles",enumeration="itemRenderOfertaCatProHTMLText")]
			public function get tipoInteraccionEnTexto():String
			{
				return _tipoInteraccionEnTexto;
			}
			
			public function set tipoInteraccionEnTexto(value:String):void
			{
				_tipoInteraccionEnTexto = value;
			}
			
			public function get textoParaCatProOferta():String
			{
				return _textoParaCatProOferta;
			}
			
			public function set textoParaCatProOferta(value:String):void
			{
				_textoParaCatProOferta = value;
				
				buttonLeftToggleSkinPQNetDefault(skin).textoNegrita = _textoParaCatProOferta.substr(0,_textoParaCatProOferta.indexOf(" · "));
				buttonLeftToggleSkinPQNetDefault(skin).textoNormal = _textoParaCatProOferta.substr(_textoParaCatProOferta.indexOf(" · "));
			}

			public function get sizeFont():int
			{
				return _sizeFont;
			}

			public function set sizeFont(value:int):void
			{
				_sizeFont = value;
				buttonLeftToggleSkinPQNetDefault(skin).sizeFont = _sizeFont;
			}
			
			
			/* 			override protected function getCurrentSkinState():String
			{
			return super.getCurrentSkinState();
			} */
			
		]]>
	</fx:Script>
	
</s:ToggleButton>
