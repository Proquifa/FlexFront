<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true" width="100%" 
				xmlns:otros="skins.otros.*" xmlns:componentes="skins.skin.datagrid.pqNet.componentes.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.soliciud.EventoSolicitudGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.solicitud.popUP.SolicitudReferenciasPopUop;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			import vista.evento.EventoEVGestionarVisitas;
			
			private var _popUpReferencias:SolicitudReferenciasPopUop = null;
			
			[Bindable] private var _listaReferencias:ArrayCollection;
			[Bindable] private var normalIcon:Class;
			[Bindable] private var hoveredIcon:Class;
			
			override public function set data(value:Object):void{
				
				super.data = value;
				this.addEventListener( ResizeEvent.RESIZE, actualizaTamano );
				this.lblVerMas.grpTodo.paddingLeft = 10;
				grpGeneral.visible = false;
				grpGeneral.includeInLayout = false;
				grpTotal.visible = false;
				grpTotal.includeInLayout = false
				this.autoDrawBackground= true;
				if( isNaN( ( data as SolicitudVisita ).totalSolicitudes ) || ( data as SolicitudVisita ).totalSolicitudes == 0 ){
					grpGeneral.visible = true;
					grpGeneral.includeInLayout = true;
					if((data as SolicitudVisita).existeReferencia == false ){
						this.normalIcon = catalogoIconosGrid.getInstance().render_clipsitogris;																	
					}else{
						this.normalIcon = catalogoIconosGrid.getInstance().render_clipsito;	
					}	
					this.hoveredIcon = catalogoIconosGrid.getInstance().render_clipsitoblanco;// cambiar
					lblVerMas.etiqueta = ( data as SolicitudVisita ).justificacion;
					imgCirculoAmarilla.visible = imgCirculoRojo.visible = imgCirculoVerde.visible = false;
					if( ( data as SolicitudVisita ).urgencia == 'Alta' ){
						this.imgCirculoRojo.visible = true;
						this.lblPrioridad.setStyle('color', '0x'+catalogoColores.LABEL_ROJO);
					}else if( ( data as SolicitudVisita ).urgencia == 'Media' ){
						this.imgCirculoAmarilla.visible = true;
						this.lblPrioridad.setStyle('color', '0x'+catalogoColores.LABEL_AMARILLO);
					}else{
						this.imgCirculoVerde.visible = true;
						this.lblPrioridad.setStyle('color', '0x'+catalogoColores.LABEL_VERDE);
					}
				}else{
					this.autoDrawBackground = false;
					grpTotal.visible = true;
					grpTotal.includeInLayout = true;
					( data as SolicitudVisita ).totalSolicitudes == 1 ? lblTotal.text = '1 Solicitud' : lblTotal.text = ( data as SolicitudVisita ).totalSolicitudes + ' Solicitudes'; 
				}
			}
			
			private function init():void{
				//this.addEventListener( ResizeEvent.RESIZE, acomodaPopUp );	
			}
			
			private function verReferencias():void{
				if((data as SolicitudVisita).existeReferencia == true){
					if(_popUpReferencias == null){
						_listaReferencias = new ArrayCollection();
						_popUpReferencias = SolicitudReferenciasPopUop( PopUpManager.createPopUp( this, SolicitudReferenciasPopUop, true ) );
						_popUpReferencias.addEventListener( EventoSolicitudGeneral.CERRAR_POP_UP, cerrarPopUp );
						_popUpReferencias.grpPrincipal.enabled = false;
						//_popUpReferencias.addEventListener( EventoSolicitudGeneral.ENVIA_REFERENCIAS, recibeReferencias );
					}else{	
						PopUpManager.addPopUp( _popUpReferencias, this, true);
					}
					_popUpReferencias.group1_creationCompleteHandler( _listaReferencias );
					PopUpManager.centerPopUp( _popUpReferencias);
					_popUpReferencias.x = ( this.stage.width / 2 ) - 250;
					_popUpReferencias.y = ( this.stage.height / 2 ) - 355;
					
					var consulta:EventoSolicitudGeneral = new EventoSolicitudGeneral(EventoSolicitudGeneral.CONSULTA_POP_REFERENCIAS);
					consulta.vieneD = 'consulta';
					dispatchEvent(consulta);
					
					var event:EventoEVGestionarVisitas = new EventoEVGestionarVisitas(EventoEVGestionarVisitas.OBTENER_LISTA_REFERENCIAS);
					event.idSolicitudVisita = (data as SolicitudVisita).idSolicitudVisita;
					dispatchEvent(event);
				}
			}
			
			private function cerrarPopUp( $evt:EventoSolicitudGeneral ):void{
				PopUpManager.removePopUp( _popUpReferencias );
			}
			
			/* private function acomodaPopUp( evt:Event ):void{
				if (_popUpReferencias != null ){
					setTimeout(retraso, 600);
				}
			}

			private function retraso():void{
				PopUpManager.centerPopUp(_popUpReferencias);
			} */
			
			
			private function actualizaTamano(evt:Event):void{
				this.lblVerMas.width = (this.width-30);
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<s:Group width="100%" height="100%">
		<s:HGroup id="grpGeneral" width="100%" gap="0">
			<s:Rect width="6" height="100%" visible="false" visible.selected="true" >
				<s:fill>
					<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
				</s:fill>
			</s:Rect>
			<s:VGroup width="100%">
					<s:HGroup width="100%" verticalAlign="middle" paddingLeft="10" paddingRight="10" paddingTop="10">
						<s:Label fontSize="14" fontWeight="bold" id="lblSVT" text="{( data as SolicitudVisita ).folio}" 
								 color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
						<s:Image source="{ catalogoIconosGrid.getInstance().render_unionesnaranjas }"/>
						<s:Label fontSize="14" fontWeight="bold" id="lblSp" text="{( data as SolicitudVisita ).folioVisita}" 
								 color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
						<s:Spacer width="100%" />
						<s:Label fontSize="14"  id="lblPrioridad" color="0x{catalogoColores.LABEL_ROJO}" text="{( data as SolicitudVisita ).urgencia.toUpperCase()}" />
						<s:Group >
							<s:Image source="{catalogoIconosGrid.getInstance().render_circuloRojo}" id="imgCirculoRojo"/>
							<s:Image source="{catalogoIconosGrid.getInstance().render_circuloNaranja}" id="imgCirculoAmarilla" visible="false"/>
							<s:Image source="{catalogoIconosGrid.getInstance().render_circuloVerde}" id="imgCirculoVerde" visible="false"/>
						</s:Group>
			 		</s:HGroup>	
					<componentes:VerMasRenderer id="lblVerMas" textAlingDercha="true" etiqueta="{ ( data as SolicitudVisita ).justificacion }" width="100%"  data="{this.data}" /> 
					<s:HGroup width="100%" verticalAlign="middle"  paddingLeft="10" paddingRight="10" paddingBottom="15">
						<!--<s:Label fontWeight="bold" id="lblTemaPs" "skins.skin.datagrid.pqNet.componentes.VerMasRenderer"/>-->
						<s:Label text="{ ( data as SolicitudVisita ).empleado.usuario }" fontWeight="bold"/>
						<s:Label text=" Â· "/>
						<s:Label id="lblNivelEmpleado" color="0x{catalogoColores.LABEL_GRIS}" text="{ ( data as SolicitudVisita ).empleado.departamento }" />
						<s:Spacer width="100%"/>
						<mx:Image source="{normalIcon}" horizontalCenter="0" click="verReferencias()" />
					</s:HGroup>
				<otros:division width="100%"/>
			</s:VGroup>
		</s:HGroup>
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="false" includeInLayout="false" id="grpTotal">
			<s:Spacer height="20"/>
			<s:Label color="0x{catalogoColores.LABEL_CASI_NEGRO}" fontSize="14" fontWeight="bold" id="lblTotal"/>
			<s:Label color="0x{catalogoColores.LABEL_GRIS}" text="TOTAL"/>
			<s:Spacer height="20"/>
		</s:VGroup> 
	</s:Group>
</s:ItemRenderer>
