<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:label="skins.skin.label.*"  xmlns:otros="skins.otros.*" creationComplete="init(),busquedaRapida(event), inicio()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.comun.avisodecambios.EventoConsultaAvisoDeCambios;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.BusquedaRapidaCR;
			import mx.events.ListEvent;
			
			[Bindable]
			public var _avisoCambios:ArrayCollection;
			[Bindable]
			public var _avisoCambiosDClickGrafica:ArrayCollection;
			
			private function itemClickEvent(event:ListEvent):void{	 	        	
				var tipoDocumento:String;
				var folioDocumento:String;
				var urlreq:URLRequest;
				var ruta:String;
				// si es AvisoCambio
				var path:Object;
				if (event.columnIndex == 1){
					path = Util.rutaNueva(this.gridDoctos.selectedItem.folioNT);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.NOTIFICACIONES_RUTA + path.ruta + this.gridDoctos.selectedItem.folioNT +".pdf";
					urlreq = new URLRequest( ruta );
					navigateToURL( urlreq );
				}
				//si es OC
				if (event.columnIndex == 4){
					path = Util.rutaNueva(this.gridDoctos.selectedItem.docto);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COMPRAS_RUTA + path.ruta + this.gridDoctos.selectedItem.docto  +"-P.pdf";
					urlreq = new URLRequest( ruta );
					navigateToURL( urlreq );
				}
				//si es pedido
				if (event.columnIndex == 6){
					path = Util.rutaNueva(this.gridDoctos.selectedItem.CPedido);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + path.ruta + this.gridDoctos.selectedItem.CPedido  +".pdf";
					urlreq = new URLRequest ( ruta );
					navigateToURL( urlreq );
				}	
			} 
			
			
			public function cambiarBusquedaR():void{		
				var evento:Event = new Event("cambiarBusquedaRapida",true,false);
				this.dispatchEvent(evento);
			} 
			
			public function agregarVentanaTipoBusqueda( ventana:DisplayObject ):void{
				if(ventana == null){
					return;
				}
				this.espacioBusqueda.removeAllChildren();
				this.espacioBusqueda.addChild( ventana );
			}
			
			public function inicia():void{
				addEventListener("cambiarBusquedaAvanzada",busquedaRapida);
			} 
			
			public function init():void{
				addEventListener("cambiarBusquedaRapida",busquedaAvanzada);
				addEventListener("cambiarBusquedaAvanzada",busquedaRapida);
			}
			
			
			public function busquedaAvanzada(event:Event):void{
				this.agregarVentanaTipoBusqueda(new BAConsultaAvisoDeCambios() );
			}
			public function busquedaRapida(evento:Event):void{
				this.agregarVentanaTipoBusqueda( new BusquedaRapidaCR() );
			}
			
			public function inicio():void{
				addEventListener(EventoTablero.MAXIMIZAR_GRAFICA,maximizarGraficaGenerica);
				addEventListener(EventoTablero.VOLVER_A_TABLERO, minimizar);
				
				
			}  
			
			private var catalogoGraficas:ArrayCollection = new ArrayCollection();
			
			
			private function maximizarGraficaGenerica(event:Event):void{	
				this.espacioGrafico.removeAllChildren();
				this.espacioGrafico.addChild(event.target.maxGrafica as DisplayObject);
			}
			
			private function minimizar(event:Event):void{
				this.espacioGrafico.removeAllChildren();
				this.insertarGraficas(this.catalogoGraficas);
			}
			
			public function insertarGraficas(graficas:ArrayCollection):void{
				this.catalogoGraficas =  new ArrayCollection();
				
				if(graficas.length > 0){
					this.catalogoGraficas = graficas;
					var iteraciones:int = graficas.length/2;
					var residuo:int = graficas.length%2;
					for(var m:int = 0; m < iteraciones ; m++){
						var contenedor:HBox = new HBox();
						contenedor.percentHeight = 100;
						contenedor.percentWidth = 100;
						contenedor.addChild(graficas[m*2]);
						contenedor.addChild(graficas[(m*2)+1]);
					}
					if(residuo != 0){
					contenedor.percentHeight = 100;
					contenedor.percentWidth = 100;
					contenedor.addChild(graficas[graficas.length-1]);
					} 
					espacioGrafico.addChild(contenedor as DisplayObject);
				}
			}
			
			public function set obtenerAvisoDeCAmbios(avisoCambios:ArrayCollection):void{
				if(avisoCambios == null){
					_avisoCambios.removeAll();
					return ;
				}
				this._avisoCambios = new ArrayCollection();
				this._avisoCambios = avisoCambios;
				
				var evento:EventoConsultaAvisoDeCambios = new EventoConsultaAvisoDeCambios(EventoConsultaAvisoDeCambios.OBTENER_DATOS_GRAFICA_AC);
				evento.datosGrafica = this._avisoCambios;
				dispatchEvent(evento);
				
			}
			
			public function set reciboStack(viewStack:int):void{
				this.viewStakAvisoCambios.selectedIndex = viewStack;
			}
			
			public function set reciboDatosClick(dataClick:ArrayCollection):void{
				if(dataClick == null){
					_avisoCambios.removeAll();
					return ;
				}
				_avisoCambios = dataClick;
			}
			
			/* public function set obtenerFiltroAvisoDeCAmbios(filtro:ArrayCollection):void{
				if(filtro == null){
					return;
				}
				this._avisoCambios = filtro;
			}
			
			private function enviaDatosGrafica():void{
				var evento:EventoConsultaAvisoDeCambios = new EventoConsultaAvisoDeCambios(EventoConsultaAvisoDeCambios.OBTENER_DATOS_GRAFICA_AC);
				evento.datosGrafica = this._avisoCambios;
				dispatchEvent(evento);
			} */
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%">
		<label:labelTitulo_Otros top="20" text="Consulta aviso de cambios" width="100%"/>
		<mx:HBox width="100%" id="espacioBusqueda" >
			<mx:VBox width="100%">
				
			</mx:VBox>
		</mx:HBox>
		<mx:ViewStack width="100%" height="100%" id="viewStakAvisoCambios" creationPolicy="all">
			<s:NavigatorContent id="gridAvisoCambios">
			<s:VGroup width="100%"	height="100%">
					
				<s:VGroup width="100%" height="100%">	
					<mx:DataGrid  width="100%" height="100%" id="gridDoctos" itemClick="itemClickEvent(event)"
								  variableRowHeight="true" 
								  verticalAlign="middle" dataProvider="{this._avisoCambios}">
						<mx:columns>						
							<mx:DataGridColumn headerText="#" dataField="numFila" width="13" textAlign="center"/>
							<mx:DataGridColumn headerText="Folio NT" dataField="folioNT" width="100" textAlign="center">
								<mx:itemRenderer>
									<fx:Component>
										<mx:LinkButton label="{data.folioNT}" color="#0C4AFC"/>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Tipo" dataField="tipo"  width="100" textAlign="center"/>
							<mx:DataGridColumn headerText="Resultado AC" dataField="decision"  width="100" textAlign="center"/>
							<mx:DataGridColumn headerText="OC" dataField="docto"  width="100" textAlign="center">
								<mx:itemRenderer>
									<fx:Component>
										<mx:LinkButton label="{data.docto}" color="#0C4AFC"/>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
							<mx:DataGridColumn headerText="Proveedor" dataField="nomProveedor" width="280" textAlign="center" wordWrap="true" paddingRight="10"/>
							<mx:DataGridColumn headerText="Pedido" dataField="CPedido"  width="100" textAlign="center">
								<mx:itemRenderer>
									<fx:Component>
										<mx:LinkButton label="{data.CPedido}" color="#0C4AFC"/>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>						
							<mx:DataGridColumn headerText="Cliente" dataField="nombre"  width="160" textAlign="center"/>
							<mx:DataGridColumn headerText="F.Envio" dataField="FEnvioFormato" width="100" textAlign="center" />
							<mx:DataGridColumn headerText="Razon" dataField="razon" width="100" textAlign="center" color="red"/>									
							<mx:DataGridColumn headerText="Estatus" dataField="estado" width="100" textAlign="center"/>				
						</mx:columns>
					</mx:DataGrid>
				</s:VGroup>
				
				<s:VGroup width="100%" >
					<s:HGroup width="100%">
						<s:Spacer width="100%"/>	
						<s:Button styleName="botonNegroOld" label="Grafica" id="verGraficas" click="{viewStakAvisoCambios.selectedChild = this.graficaAvisoCambios} "/> <!--; this.enviaDatosGrafica()-->
					</s:HGroup>	
				</s:VGroup>
				
			</s:VGroup>	
			</s:NavigatorContent>
			
			<s:NavigatorContent id="graficaAvisoCambios">
				<s:VGroup width="100%" height="100%">
					<mx:HBox width="100%" height="100%" id="vbox1">
						<mx:HBox id="espacioGrafico" height="100%" width="100%" />
					</mx:HBox>
					
					<s:VGroup width="100%" >
						<s:HGroup width="100%">
							<s:Spacer width="100%"/>	
							<s:Button styleName="botonNegroOld" label="Inicio" id="verGrid" click="{viewStakAvisoCambios.selectedChild = this.gridAvisoCambios}"/>
						</s:HGroup>	
					</s:VGroup>
				</s:VGroup>
			</s:NavigatorContent>
			
		</mx:ViewStack>
	</s:VGroup>
</s:Group>
