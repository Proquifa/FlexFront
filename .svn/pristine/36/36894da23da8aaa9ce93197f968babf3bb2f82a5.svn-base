<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:maps="mx.com.proquifa.proquifanet.rsl.vista.mapas.tableros.operativos.*"
		 xmlns:tablero="mx.com.proquifa.proquifanet.rsl.vista.vistas.*"
		 width="100%" height="100%" 
		 creationComplete="init()" xmlns:label="skins.skin.label.*"
		 >
	<fx:Declarations>
		<maps:MapaTableroOperativos />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.operativos.EventoTableroOperativos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.operativos.ParametrosBusquedaOperativo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.operativos.ProcesoValor;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.TabOperativosMenu;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.comercializacion.confirmaciones.TabOperativosConfirmaciones;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.comercializacion.pedidos.TabOperativosPedidos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.comercializacion.reqcot.TabOperativosReqCot;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.comercializacion.seguimiento.TabOperativosSeguimiento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.finanzas.cargarFactura.TabOperativosCargarFactura;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.finanzas.cobros.TabOperativosCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.finanzas.pagos.TabOperativosPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.finanzas.revision.TabOperativosRevision;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.compras.avisocambios.TabOperativosAvisoDeCambios;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.compras.confirmacion.TabOperativosConfirmacionesCompras;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.compras.monitoreo.TabOperativosMonitoreo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.compras.pedidos.TabOperativosPedidosCompras;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.despachos.cierreruta.TabOperativosCierreRuta;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.despachos.entregas.TabOperativosEntregas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.despachos.facturacion.TabOperativosFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.componentes.operaciones.despachos.inspeccion.TabOperativosInspeccion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.operativos.menu.TabOperativosBarraMenu;
			
			import spark.components.VGroup;
			import spark.events.IndexChangeEvent;
			
			public var _menuTabOperativos:TabOperativosMenu = new TabOperativosMenu;
			public static var comercializacion:VGroup = null;
			public static var operacion:VGroup = null;
			public static var finanzas:VGroup = null;
			public static var cambio:Number = 18;
			public static var cargarDatos:Object = new Object;
			
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				/* trace(unscaledWidth + " width!!!!"); */
				if(unscaledWidth < 1550 && cambio != 12){
					cambio = 12;
				}else if(unscaledWidth >= 1550 &&  unscaledWidth <= 1840 && cambio != 14 ){
					cambio = 14;
					
				}else if(unscaledWidth > 1840 && cambio != 18 ){
					cambio = 18;
				}
			}
			
			/* cuando se necesite crear otra vista para los botones en el menu */
			
			private function init():void
			{
				cargarDatos.comercializacion = false;
				cargarDatos.operaciones = false;
				cargarDatos.finanzas = false;
				cargarDatos.vista = "COMERCIALIZACIÓN";
				cargarDatos.newData = false;
				
				_menuTabOperativos.menu.btnBarra.addEventListener(IndexChangeEvent.CHANGING, menuClick,false,0,true);
				
				tabOperativos.agregarInformacion(_menuTabOperativos);
				
				
				
				var graficas:ArrayCollection = new ArrayCollection;
				
				graficas.addItem(new TabOperativosReqCot());
				graficas.addItem(new TabOperativosConfirmaciones());
				graficas.addItem(new TabOperativosSeguimiento());
				graficas.addItem(new TabOperativosPedidos()); 
				comercializacion = tabOperativos.generarEspacioGraficas(graficas, "COMERCIALIZACIÓN");
				
				graficas = new ArrayCollection();
				graficas.addItem(new TabOperativosPedidosCompras());
				graficas.addItem(new TabOperativosAvisoDeCambios());
				graficas.addItem(new TabOperativosConfirmacionesCompras());
				graficas.addItem(new TabOperativosMonitoreo());
				graficas.addItem(new TabOperativosInspeccion());
				graficas.addItem(new TabOperativosFacturacion());
				graficas.addItem(new TabOperativosEntregas());			 
				graficas.addItem(new TabOperativosCierreRuta());			 
				operacion = tabOperativos.generarEspacioGraficas(graficas, "OPERACIONES"); 
				
				
				graficas = new ArrayCollection();
				graficas.addItem(new TabOperativosRevision());
				graficas.addItem(new TabOperativosCobros());
				graficas.addItem(new TabOperativosCargarFactura());
				graficas.addItem(new TabOperativosPagos());
				finanzas = tabOperativos.generarEspacioGraficas(graficas, "FINANZAS")
				
				tabOperativos.insertarGraficasTablero(comercializacion);
				tabOperativos.insertarGraficasTablero(operacion); 
				tabOperativos.insertarGraficasTablero(finanzas);
				
				ocultarIndicadores();
				comercializacion.visible = comercializacion.includeInLayout = true;
				cargarDatos.comercializacion = true;
			}
			
			protected function menuClick(event:IndexChangeEvent):void{
				var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("buscarOperativos");
				eventEspera.tipoEventos.push("CONSULTA_TABLERO");
				ocultarIndicadores();
				switch(event.newIndex)
				{
					case ProcesoValor.COMERCIALIZACION:
					{
						if(cargarDatos.comercializacion == false)
						{
							dispatchEvent(eventEspera);
							var eventCom:EventoTableroOperativos = new EventoTableroOperativos(EventoTableroOperativos.CONSULTA_TABLERO_OPERACIONES);
							eventCom.parametros = TabOperativosBarraMenu.parametrosBusqueda;
							dispatchEvent(eventCom);
							cargarDatos.vista = "COMERCIALIZACIÓN";
							cargarDatos.comercializacion = true;
							comercializacion.visible = comercializacion.includeInLayout = true;
						}
						else
						{
							cargarDatos.vista = "COMERCIALIZACIÓN";
							comercializacion.visible = comercializacion.includeInLayout = true;
						}
						
						break;
					}
					case ProcesoValor.OPERACIONES:
					{
						if(cargarDatos.operaciones == false)
						{
							dispatchEvent(eventEspera);
							var eventOp:EventoTableroOperativos = new EventoTableroOperativos(EventoTableroOperativos.CONSULTA_TABLERO_OPERACIONES);
							eventOp.parametros = TabOperativosBarraMenu.parametrosBusqueda;
							dispatchEvent(eventOp);
							cargarDatos.vista = "OPERACIONES";
							cargarDatos.operaciones = true;
							operacion.visible = operacion.includeInLayout = true;
						}
						else
						{
							cargarDatos.vista = "OPERACIONES";
							operacion.visible = operacion.includeInLayout = true;
						}
						
						break;
					}	
					case ProcesoValor.FINANZAS:
					{
						if(cargarDatos.finanzas == false)
						{
							dispatchEvent(eventEspera);
							var eventFin:EventoTableroOperativos = new EventoTableroOperativos(EventoTableroOperativos.CONSULTA_TABLERO_FINANZAS);
							eventFin.parametros = TabOperativosBarraMenu.parametrosBusqueda;
							dispatchEvent(eventFin);
							cargarDatos.vista = "FINANZAS";
							cargarDatos.finanzas = true;
							finanzas.visible = finanzas.includeInLayout = true;
						}
						else
						{				
							cargarDatos.vista = "FINANZAS";
							finanzas.visible = finanzas.includeInLayout = true;
						}
						
						break;
					}	
					default:
					{
						break;
					}
				}
			}
			
			private function ocultarIndicadores():void
			{
				comercializacion.visible = comercializacion.includeInLayout = false;
				operacion.visible = operacion.includeInLayout = false;
				finanzas.visible = finanzas.includeInLayout = false;
			}
			
		]]>
	</fx:Script>
	
	<tablero:PlantillaTableroOperativo id="tabOperativos" horizontal="true" sameSize="true" />
	
	
</s:Group>
