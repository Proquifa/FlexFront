package vista.modelo
{
	import flash.events.Event;
	import flash.events.EventDispatcher;
	
	import mx.collections.ArrayCollection;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
	import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
	import mx.utils.ObjectUtil;

	public class ModeloJuntaCierreDeSprint extends EventDispatcher
	{
		/**
		 ***************************************************** VISITAS ASIGNAR SPRINT *************************************************************
		 */
		
		private var universoVisitas:ArrayCollection; 
		private var visitasAgrupadasEV:ArrayCollection; 
		private var graficaEV:ArrayCollection; 
		public var _sql:Query;
		public function setObtenerVisitasParaGestorVentas( data:ArrayCollection ):void{
			if(!data){
				visitasAgrupadasEV = new ArrayCollection;
				graficaEV = new ArrayCollection;
				universoVisitas = new ArrayCollection;
			}else{
				visitasAgrupadasEV = new ArrayCollection;
				graficaEV = new ArrayCollection;
				for each (var temp:VisitaCliente in data) 
				{
					if(temp.credito == 0)
						temp.credito = 1;
				}
				universoVisitas = ObjectUtil.copy(data) as ArrayCollection;
				
				_sql = new Query(data,["usuarioEV","tipo","estado"],false);
				var arrayEV:Array = _sql.getPunteros(["usuarioEV"],"usuarioEV");
				for each (var ev:String in arrayEV) 
				{
					var resumen:ResumenConsulta = new ResumenConsulta;
					
					var array:Array = _sql.getPunteros([ev]);
					if(array.length > 0){
						var visitaCliente:VisitaCliente = ObjectUtil.copy(_sql.universo.getItemAt(array[0])) as VisitaCliente;
						visitaCliente.numVisitas = array.length;
						visitaCliente.numSolicitud = _sql.getPunteros([ev,"solicitud"]).length;
						visitaCliente.numCRM = _sql.getPunteros([ev,"crm"]).length;
						visitaCliente.numPendientes =  _sql.getPunteros([ev,null,"Pendiente"]).length;
						visitaCliente.numFinalizadas = _sql.getPunteros([ev,null,"Finalizado"]).length;
						visitaCliente.numNoFinalizadas = _sql.getPunteros([ev,null,"No finalizada"]).length;
						visitasAgrupadasEV.addItem(visitaCliente);
						
						resumen.etiqueta = ev;
						resumen.numEjecutivoVentas = 1;
						resumen.totalVisita = visitaCliente.numVisitas;
						resumen.totalSolicitudes = visitaCliente.numSolicitud;
						resumen.totalCRM = visitaCliente.numCRM;
						graficaEV.addItem(resumen);
					}
				}
				/*visitasAgrupadasEV = data;*/
			}
			dispatchEvent( new Event("enviarVisitasAsignarSprintModeloAsignarSprint") );
			dispatchEvent( new Event("enviarDatosGraficaEVModeloAsignarSprint") );
			dispatchEvent( new Event("enviarUniversoVisitasModeloAsignarSprint") );
		}
		[Bindable(event="enviarUniversoVisitasModeloAsignarSprint")]
		public function get enviarUniversoVisitasAsignarSprint():ArrayCollection{
			return universoVisitas;
		}
		[Bindable(event="enviarVisitasAsignarSprintModeloAsignarSprint")]
		public function get enviarVisitasAsignarSprint():ArrayCollection{
			return visitasAgrupadasEV;
		}
		[Bindable(event="enviarDatosGraficaEVModeloAsignarSprint")]
		public function get enviarGraficaEV():ArrayCollection{
			return graficaEV;
		}
		
		
		/**
		 ***************************************************** COMPLETAR ASIGNACION *************************************************************
		 */
		
		private var listaVisitaCliente:ArrayCollection;
		public function setObtenerVisitaClientePorEmpleado( data:ArrayCollection ):void{
			if( data == null ){
				listaVisitaCliente = new ArrayCollection();
				
			}else{
				listaVisitaCliente = data;
				var numFila:int = 1;
				for each (var temp:VisitaCliente in data) 
				{
					temp.numFila = numFila;
					temp.nombreContacto = temp.contacto.nombreCompleto;
					numFila++;
				}
			}
			
			dispatchEvent( new Event("obtenerlistaVisitaClientePorEmpleadoModeloAsignarSprint") );
		}
		[Bindable(event="obtenerlistaVisitaClientePorEmpleadoModeloAsignarSprint")]
		public function get enviarListaVisitaClientePorEmpleado():ArrayCollection{
			return listaVisitaCliente;
		}

		/**
		 ***************************************************** CIERRE DE SPRINT  *************************************************************
		 */
		
		private var respuestaCierre:int;
		public function setReciveRespuestaCierreSprint(resp:int):void{
			respuestaCierre = resp;
			
			
			dispatchEvent( new Event("mandarRespuestaCierreDeSprint") );

		}
		[Bindable(event="mandarRespuestaCierreDeSprint")]
		public function get enviarRespuestaCierre():int{
			return respuestaCierre;
		}
		
		
		
		
		
		
		/**
		 *************************************************************************************************************************************
		 */
		
		
		
		public function ModeloJuntaCierreDeSprint()
		{
		}
	}
}