<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:layout="mx.com.proquifa.proquifanet.rsl.vista.vistas.*"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 creationComplete="inicio()" xmlns:label="skins.skin.label.*"
		 >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.PopUpEsperaLarga;
			import mx.core.IVisualElement;
			import mx.events.EffectEvent;
			import mx.events.IndexChangedEvent;
			import mx.graphics.SolidColor;
			
			import spark.components.HGroup;
			import spark.components.VGroup;
			import spark.components.supportClasses.GroupBase;
			import spark.effects.Fade;
			import spark.effects.Resize;
			import spark.primitives.Rect;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import skins.catalogos.catalogoIconosBotones;
			
			/* [Bindable]	public var tituloTablero:String; */
			private var _ocultarMostrarMenuBool:Boolean = true;
			private var _mostrarOcultarPanelInfoBool:Boolean = true;
			
			[Bindable] private var _imagenTab:Class = catalogoIconosBotones.getInstance().tabalreves;
			

			public var muestraPaginador:Boolean;
			public var muestraPagina1:Boolean = true;
			
			/* public var tipoComponente:String; */
			[Bindable]	private var textoHTML:String;
			private var hasComparation:Boolean= false;
			public var isVistaComparacion:Boolean = false;
			public var isPanelInfoMaximixed:Boolean = false;
			
			public var espacio:Number = 0;
			
			private var _horizontal:Boolean = false;
			
			private var _sameSize:Boolean = false;
			
			private var _sinInfoMax:Boolean = false;
			private const FILA:int = 4;
			
			/**
			 * Deprecated
			 */
			public function agregarBusquedaProveedor(busqueda:IVisualElement):void{}
			
			public function inicio():void
			{
				addEventListener( EventoTablero.MAXIMIZAR_GRAFICA, maximizarGraficaGenerica );
				addEventListener( EventoTablero.MAXIMIZAR_TABLA, seleccionarTablaGenerica );
				addEventListener( EventoTablero.VOLVER_A_TABLERO, minimizar );
				
			}  
			public function agregarInformacion(informacion:IVisualElement):void
			{
				if(informacion == null){
					return;
				}
				grpEspacioInformacion.removeAllElements();
				grpEspacioInformacion.addElement(informacion);
			}
			
			public function agregarEspacioTrabajo(espacio:IVisualElement):void
			{
				if(espacio == null){
					return;
				}
				espacioA = espacio;
			} 
			
			
			protected function resizeInfoEndHandler( event:EffectEvent ):void
			{
				validateDisplayList();
			}
			
			private var pop:PopUpEsperaLarga = new PopUpEsperaLarga();
			private var catalogoGraficas:ArrayCollection = new ArrayCollection();
			private var auxCatalogoGraficas:ArrayCollection = new ArrayCollection();
			private var catalogoGraficasPag2:ArrayCollection = new ArrayCollection();
			public var activarDoblePagina:Boolean;
			
			protected function validarSiElComponenteTieneVistaComparacion( event:EventoTablero ):void
			{
				// COMPARACION
				if( event.target.maxGrafica == null )
					return;
				
				if( event.target.hasOwnProperty("informacion") )
					textoHTML = event.target.informacion;
				
				if( event.target.hasOwnProperty("comparacion") && event.target.comparacion != null )
				{
					hasComparation = true;
					grpEspacioA.visible = grpEspacioA.includeInLayout = true;
					
					espacioA = event.target.maxGrafica;
					espacioB = event.target.comparacion;
					
					/* if( event.target.hasOwnProperty("informacion") )
					textoHTML = event.target.informacion; */
					
					if( event.target.maxGrafica.hasOwnProperty("stackGeneral") )
						event.target.maxGrafica.stackGeneral.addEventListener( IndexChangedEvent.CHANGE, cambiarIndexStackGeneralMax ); 
				}
				else
				{ // NORMAL
					grpEspacioA.visible = grpEspacioA.includeInLayout = true;
					espacioA = event.target.maxGrafica;
				}
				contenedorGraficas.visible = contenedorGraficas.includeInLayout = false;
				contenedorGraficasPag2.visible = contenedorGraficasPag2.includeInLayout = false;
			}
			
			private function seleccionarTablaGenerica(event:EventoTablero):void
			{
				if( event.target.maxGrafica == null )
					return;
				validarSiElComponenteTieneVistaComparacion( event );
				event.target.maxGrafica.seleccionaTabla();
				DatosGlobales.getInstance().statusTablero = "grid";
			}
			
			private function maximizarGraficaGenerica(event:EventoTablero):void
			{
				if( event.target.maxGrafica == null )
					return;
				validarSiElComponenteTieneVistaComparacion( event );
				if(hasComparation)
				{
					grpTabComparacion.visible = grpTabComparacion.includeInLayout =  true;
				}
				
				if (!sinInfoMax)
					grpTabPanelInfo.visible = grpTabPanelInfo.includeInLayout = true;
				grpPanelInfo.visible = grpPanelInfo.includeInLayout = true;
				event.target.maxGrafica.seleccionarGrafica();
			}
			
			private var vistaTablaGrafica:IVisualElement = null;
			
			private function minimizar(event:Event):void
			{
				if(isPanelInfoMaximixed){
					grpPanelInfo.width = 0;
					isPanelInfoMaximixed = false;
					_mostrarOcultarPanelInfoBool = true;
					//invalidateDisplayList();
				}
				if(hasComparation)
					hasComparation = false;
				if(isVistaComparacion)
					isVistaComparacion = false;
				
				if(vista == _COMPARACION)
					vista = _TABLA_Y_GRAFICA;
				
				DatosGlobales.getInstance().statusTablero = "principal";
				grpEspacioA.visible = grpEspacioA.includeInLayout = false;
				grpTabComparacion.visible = grpTabComparacion.includeInLayout = false;
				
				if( grpEspacioB != null ){
					grpEspacioB.visible = grpEspacioB.includeInLayout = false;
					botones.visible = botones.includeInLayout = muestraPaginador;
				}
				
				
				grpTabPanelInfo.visible = grpTabPanelInfo.includeInLayout = false;
				grpPanelInfo.visible = grpPanelInfo.includeInLayout = false;
				
				//contenedorGraficas.visible = contenedorGraficas.includeInLayout = true;
				
				if(activarDoblePagina)
				{
					insertarGraficas( auxCatalogoGraficas,"contenedorGraficas" ); 
					insertarGraficas( catalogoGraficasPag2,"contenedorGraficasPag2"); 
					
					
				}
				else{
					insertarGraficas( catalogoGraficas,"contenedorGraficas" );
				}
				
				
				if(muestraPagina1)
				{
					contenedorGraficas.visible = contenedorGraficas.includeInLayout = false;
					contenedorGraficasPag2.visible = contenedorGraficasPag2.includeInLayout = true;
				}
				else{
					contenedorGraficas.visible = contenedorGraficas.includeInLayout = true;
					contenedorGraficasPag2.visible = contenedorGraficasPag2.includeInLayout = false;
				}
				
			}
			
			//////////////////////////////////////////////cambio de vista tabla/grafica en componentes max//////////////////////////
			protected function cambiarIndexStackGeneralMax( event:IndexChangedEvent ):void
			{
				if( event.newIndex == 0 )
				{
					if(isPanelInfoMaximixed){
						grpPanelInfo.width = 0;
						isPanelInfoMaximixed = false;
						_mostrarOcultarPanelInfoBool = true;
						//invalidateDisplayList();
					}
					
					grpTabComparacion.visible = grpTabComparacion.includeInLayout = false;
					grpPanelInfo.visible = grpPanelInfo.includeInLayout = false;
					grpTabPanelInfo.visible = grpTabPanelInfo.includeInLayout = false;
				}
				else if( event.newIndex == 1 )
				{
					if(hasComparation)
						grpTabComparacion.visible = grpTabComparacion.includeInLayout =  true;
					
					if (!sinInfoMax)
						grpTabPanelInfo.visible = grpTabPanelInfo.includeInLayout = true;
					grpPanelInfo.visible = grpPanelInfo.includeInLayout = true;
				}
			}
			
			public function insertarGraficas( graficas:ArrayCollection, tipoContenedor:String ):void{
				if(tipoContenedor == "contenedorGraficas"){
					if (horizontal){
						return;
					}
					else{
						contenedorGraficas.visible = contenedorGraficas.includeInLayout = true;
						contenedorGraficas.removeAllElements();
						if( rectFondoB != null )
							rectFondoB.visible = false;
						
						catalogoGraficas =  new ArrayCollection();
						auxCatalogoGraficas = new ArrayCollection();
						catalogoGraficas = graficas;
						auxCatalogoGraficas = graficas;
						var relleno:SolidColor = new SolidColor();
						relleno.color = 0xeaeaea;
						if( graficas.length > 0 )
						{
							var iteraciones:int = graficas.length/2;
							var residuo:int = graficas.length%2;
							for(var m:int = 0; m < iteraciones ; m++)
							{
								var contenedor:VGroup = new VGroup();
								contenedor.percentHeight = 100;
								contenedor.percentWidth = 100;
								contenedor.gap = 0;
								contenedor.addElement(graficas[m*2]);
								
								var Hrecta:Rect = new Rect();
								if(m == 0 || m == iteraciones -1 && residuo == 0 )
								{
									Hrecta.percentWidth = 90;
								}
								else
								{
									Hrecta.percentWidth = 100;
								}
								if( m == 0 ) 
									contenedor.horizontalAlign = "right";
								if( m == iteraciones -1 ) 
									contenedor.horizontalAlign = "left";
								
								Hrecta.height = 2;
								Hrecta.fill = relleno;
								Hrecta.verticalCenter = 0;
								contenedor.addElement( Hrecta );
								
								contenedor.addElement(graficas[(m*2)+1]);
								contenedorGraficas.addElement(contenedor);
								
								var Vrecta:Rect = new Rect();
								Vrecta.width = 2;
								Vrecta.percentHeight = 95;
								Vrecta.fill = relleno;
								Vrecta.verticalCenter = 0;
								Vrecta.right = 0;
								if( m < iteraciones-1)
								{
									contenedorGraficas.addElement( Vrecta );
								}
							}
							if(residuo != 0)
							{
								if( graficas.length != 1 )
								{
									var Vrecta2:Rect = new Rect();
									Vrecta2.width = 2;
									Vrecta2.percentHeight = 95;
									Vrecta2.fill = relleno;
									Vrecta2.verticalCenter = 0;
									Vrecta2.right = 0; 
									contenedorGraficas.addElement( Vrecta2 );
								}
								var contenedor2:VGroup = new VGroup();
								contenedor2.percentHeight = 100;
								contenedor2.percentWidth = 100;
								contenedor2.addElement(graficas[graficas.length-1]);
								contenedorGraficas.addElement(contenedor2); 
							}
						}
					}
					
				}
				else{
					contenedorGraficas.visible = contenedorGraficas.includeInLayout = false;
					if (horizontal){
						return;
					}
					else{
						contenedorGraficasPag2.removeAllElements();
						if( rectFondoB != null )
							rectFondoB.visible = false;
						
						catalogoGraficasPag2 =  new ArrayCollection();
						catalogoGraficasPag2 = graficas;
						var relleno:SolidColor = new SolidColor();
						relleno.color = 0xeaeaea;
						if( graficas.length > 0 )
						{
							var iteraciones:int = graficas.length/2;
							var residuo:int = graficas.length%2;
							for(var m:int = 0; m < iteraciones ; m++)
							{
								var contenedor:VGroup = new VGroup();
								contenedor.percentHeight = 100;
								contenedor.percentWidth = 100;
								contenedor.gap = 0;
								contenedor.addElement(graficas[m*2]);
								
								var Hrecta:Rect = new Rect();
								if(m == 0 || m == iteraciones -1 && residuo == 0 )
								{
									Hrecta.percentWidth = 90;
								}
								else
								{
									Hrecta.percentWidth = 100;
								}
								if( m == 0 ) 
									contenedor.horizontalAlign = "right";
								if( m == iteraciones -1 ) 
									contenedor.horizontalAlign = "left";
								
								Hrecta.height = 2;
								Hrecta.fill = relleno;
								Hrecta.verticalCenter = 0;
								contenedor.addElement( Hrecta );
								
								contenedor.addElement(graficas[(m*2)+1]);
								contenedorGraficasPag2.addElement(contenedor);
								
								var Vrecta:Rect = new Rect();
								Vrecta.width = 2;
								Vrecta.percentHeight = 95;
								Vrecta.fill = relleno;
								Vrecta.verticalCenter = 0;
								Vrecta.right = 0;
								if( m < iteraciones-1)
								{
									contenedorGraficasPag2.addElement( Vrecta );
								}
							}
							if(residuo != 0)
							{
								if( graficas.length != 1 )
								{
									var Vrecta2:Rect = new Rect();
									Vrecta2.width = 2;
									Vrecta2.percentHeight = 95;
									Vrecta2.fill = relleno;
									Vrecta2.verticalCenter = 0;
									Vrecta2.right = 0; 
									contenedorGraficasPag2.addElement( Vrecta2 );
								}
								var contenedor2:VGroup = new VGroup();
								contenedor2.percentHeight = 100;
								contenedor2.percentWidth = 100;
								contenedor2.addElement(graficas[graficas.length-1]);
								contenedorGraficasPag2.addElement(contenedor2); 
							}
						}
					}
					
				}
				
				
			}
			
			public function generarEspacioGraficas( graficas:ArrayCollection):VGroup{
				
				if( rectFondoB != null )
					rectFondoB.visible = false;
				
				catalogoGraficas =  new ArrayCollection();
				catalogoGraficas = graficas;
				var relleno:SolidColor = new SolidColor();
				relleno.color = 0xeaeaea;
				if( graficas.length > 0 )
				{
					
					var vgroup:VGroup = new VGroup();
					vgroup.percentHeight = 100;
					vgroup.percentWidth = 100;
					vgroup.gap = 0;
					vgroup.verticalAlign = "middle";
					var iteraciones:int = Math.ceil(graficas.length / FILA );
					var start:int = 0;
					for (var i:int = 0; i < iteraciones; i++) 
					{
						var cont:int = 0;
						var hgroup:HGroup = new HGroup;
						hgroup.percentWidth = 100;
						hgroup.percentHeight = 100;
						hgroup.gap = 0;
						hgroup.verticalAlign = "middle";
						start = ( FILA * i );
						for(var m:int = start; m < graficas.length ; m++)
						{
							var contenedor:VGroup = new VGroup();
							contenedor.percentHeight = 100;
							contenedor.percentWidth = 100;
							contenedor.gap = 0;
							contenedor.addElement(graficas[m]);
							hgroup.addElement(contenedor);
							
							var Vrecta:Rect = new Rect();
							Vrecta.width = 2;
							Vrecta.percentHeight = 95;
							Vrecta.fill = relleno;
							Vrecta.verticalCenter = 0;
							Vrecta.right = 0;
							if( m < graficas.length-1)
							{
								hgroup.addElement( Vrecta );
							}
							if (++cont == FILA)
								break;
						}
						
						vgroup.addElement(hgroup);
						if ( (start + cont) < graficas.length ){
							var Hrecta:Rect = new Rect();
							Hrecta.percentWidth = 100;
							Hrecta.height = 2;
							Hrecta.fill = relleno;
							Hrecta.verticalCenter = 0;
							vgroup.addElement( Hrecta );
						}
						
						if (sameSize && iteraciones > 1 && (i == (iteraciones -1)) ){
							var Vrecta2:Rect = new Rect();
							Vrecta2.width = 2;
							Vrecta2.percentHeight = 95;
							Vrecta2.fill = relleno;
							Vrecta2.verticalCenter = 0;
							Vrecta2.right = 0;
							hgroup.addElement(Vrecta2);
							for (var j:int = 0; j < (FILA -cont); j++){
								var hgroup2:HGroup = new HGroup;
								hgroup2.percentWidth = 100;
								hgroup2.percentHeight = 100;
								hgroup2.gap = 0;
								hgroup2.verticalAlign = "middle";
								hgroup.addElement(hgroup2);
							}
						}
					}
					
					return vgroup;
				}
				return null;
			}
			
			public function insertarGraficasTablero(vgroup:VGroup):void{
				contenedorGraficas.addElement(vgroup);
			}
			
			public var isMenuMinimixed:Boolean = false;
			public var fxMenuResize:Resize;
			public function menuMuestraOculta():void
			{
				fxMenuResize = new Resize();
				fxMenuResize.addEventListener(EffectEvent.EFFECT_END,menuResizeEnd);
				fxMenuResize.target = grpEspacioInformacion;
				fxMenuResize.duration = 200;
				
				if( !fxMenuResize.isPlaying )
				{
					if( _ocultarMostrarMenuBool)
					{
						fxMenuResize.stop();
						fxMenuResize.widthTo = 0;
						_ocultarMostrarMenuBool = false;
						isMenuMinimixed = true;
						_imagenTab = catalogoIconosBotones.getInstance().tab;
					}
					else
					{
						fxMenuResize.stop();
						fxMenuResize.widthTo = 320;
						_ocultarMostrarMenuBool = true;
						_imagenTab = catalogoIconosBotones.getInstance().tabalreves;
					} 
					fxMenuResize.play();
				}
			}
			
			private function menuResizeEnd(event:EffectEvent):void
			{
				if((event.target as Resize).widthTo == 320){
					isMenuMinimixed = false;
				}
			}
			
			public var fxPanelInfoResize:Resize;
			private function panelInfoMuestraOculta():void
			{
				fxPanelInfoResize = new Resize();
				if(vista == _COMPARACION)
					fxPanelInfoResize.target = grpEspacioB;
				else
					fxPanelInfoResize.target = grpEspacioA;
				
				fxPanelInfoResize.duration = 200;
				
				if( !fxPanelInfoResize.isPlaying )
				{
					if( _mostrarOcultarPanelInfoBool)
					{
						fxPanelInfoResize.widthTo = (layout as LayoutPlantillaTablero).widthCurrentMiddleComponent - 250;
						_mostrarOcultarPanelInfoBool = false;
						isPanelInfoMaximixed = true;
					}
					else
					{
						fxPanelInfoResize.widthTo = (fxPanelInfoResize.target as GroupBase).getLayoutBoundsWidth()+250;
						isPanelInfoMaximixed = false;
						_mostrarOcultarPanelInfoBool = true;
					} 
					fxPanelInfoResize.play();
				}
			}
			
			
			/////////////////////////////////////////////////////////////////////////////// COMPARACION ///////////////////////////////////////////////////////////////////////
			private var _espacioA:IVisualElement;
			private var _espacioB:IVisualElement;
			private const _TABLA_Y_GRAFICA:String = "tablaYGrafica";
			private const _COMPARACION:String = "comparacion";
			private var vista:String = _TABLA_Y_GRAFICA;
			private var rectFondoB:Rect;
			
			public function get espacioB():IVisualElement
			{
				return _espacioB;
			}
			
			public function set espacioB(value:IVisualElement):void
			{
				if( _espacioB != null )
					grpEspacioB.removeElementAt( grpEspacioB.getElementIndex( _espacioB ) );
				_espacioB = value;
				grpEspacioB.addElement( _espacioB);
			}
			
			public function get espacioA():IVisualElement
			{
				return _espacioA;
			}
			
			public function set espacioA(value:IVisualElement):void
			{
				if( _espacioA != null )
					grpEspacioA.removeElementAt( grpEspacioA.getElementIndex( _espacioA ) );
				_espacioA = value;
				_espacioA.alpha = 1;
				grpEspacioA.addElement( _espacioA);
				_espacioA.visible = _espacioA.includeInLayout = true;
			}
			
			public function compararVistas():void
			{
				if( vista == _TABLA_Y_GRAFICA )
				{
					// MOSTRAR COMPARACION
					grpEspacioB.visible = grpEspacioB.includeInLayout = true;
					grpEspacioB.width = (layout as LayoutPlantillaTablero).widthCurrentMiddleComponent;
					botones.visible = botones.includeInLayout = false;
					vista = _COMPARACION;
					isVistaComparacion = true;
					resizeGrpA( grpEspacioA,"MIN");
					DatosGlobales.getInstance().statusTablero = "comparacion";
					dispatchEvent(new Event("comparativaTabClientes",true));
					dispatchEvent(new Event("comparativaTabProveedor",true));
				}
				else
				{
					// MOSTRAR TABLA
					grpEspacioA.visible = grpEspacioA.includeInLayout = true;
					vista = _TABLA_Y_GRAFICA;
					resizeGrpA(grpEspacioA,"MAX");
					DatosGlobales.getInstance().statusTablero = "maximizada_grid";
				}
			} 
			
			public var fxResizerGrpA:Resize;
			protected function resizeGrpA( $targetMini:Object,$tipo:String):void
			{
				var fade:Fade = new Fade();
				fade.target = _espacioA;
				
				fxResizerGrpA = new Resize();
				fxResizerGrpA.target = $targetMini;
				fxResizerGrpA.duration = 400;
				
				if($tipo == "MIN"){
					fade.duration = 100;
					fade.startDelay = 0;
					fade.alphaFrom = 1;
					fade.alphaTo = 0;
					
					fxResizerGrpA.addEventListener(EffectEvent.EFFECT_END,resizeACeroEnd);
					fxResizerGrpA.widthTo = 0;
					fxResizerGrpA.widthFrom = (layout as LayoutPlantillaTablero).widthCurrentMiddleComponent;
				}else{
					fade.duration = 400;
					fade.startDelay = 300;
					fade.alphaFrom = 0;
					fade.alphaTo = 1;
					
					fxResizerGrpA.addEventListener(EffectEvent.EFFECT_END,resizeANormalEnd);
					fxResizerGrpA.widthFrom =0;
					fxResizerGrpA.widthTo =  (layout as LayoutPlantillaTablero).widthCurrentMiddleComponent;
				}
				
				fxResizerGrpA.startDelay = 0;
				fxResizerGrpA.play(); 
				fade.play();
			} 
			private function resizeACeroEnd(event:EffectEvent):void
			{
				grpEspacioA.visible = grpEspacioA.includeInLayout = false;	
			}
			private function resizeANormalEnd(event:EffectEvent):void
			{
				isVistaComparacion = false;
				grpEspacioB.visible = grpEspacioB.includeInLayout = false;
				
				botones.visible = botones.includeInLayout = muestraPaginador;
			}
			
			public function get horizontal():Boolean
			{
				return _horizontal;
			}
			
			public function set horizontal(value:Boolean):void
			{
				_horizontal = value;
			}
			
			public function get sameSize():Boolean
			{
				return _sameSize;
			}
			
			public function set sameSize(value:Boolean):void
			{
				_sameSize = value;
			}
			
			public function get sinInfoMax():Boolean
			{
				return _sinInfoMax;
			}
			
			public function set sinInfoMax(value:Boolean):void
			{
				_sinInfoMax = value;
			}
			
			
			protected function atras_clickHandler(event:MouseEvent, tipoFlecha:String ):void
			{
				
				if(tipoFlecha == "adelante")
				{
					Adelante.enabled = true;
					atras.enabled = false;
					contenedorGraficas.visible = contenedorGraficas.includeInLayout = true;
					contenedorGraficasPag2.visible = contenedorGraficasPag2.includeInLayout = false	
					muestraPagina1 = false;
				}
				
				if(tipoFlecha == "atras")
				{
					Adelante.enabled = false;
					atras.enabled = true;
					contenedorGraficas.visible = contenedorGraficas.includeInLayout = false;
					contenedorGraficasPag2.visible = contenedorGraficasPag2.includeInLayout = true;
					muestraPagina1 = true;
				}
				
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<layout:LayoutPlantillaTablero paddingLeft="-15" paddingRight="-15" paddingTop="-10" paddingBottom="-10"/>
	</s:layout>
	
	<s:Group id="grpEspacioInformacion"/>
	<s:Group width="0" height="100%" id="grpTabMenu">
		<s:Image source="{this._imagenTab}" horizontalCenter="-6" verticalCenter="10" click="menuMuestraOculta()" />
	</s:Group>
	
	
	
	
	<s:HGroup id="contenedorGraficas" width="100%" height="100%" gap="0" verticalAlign="middle" includeInLayout="false" visible="false" />
	
	<s:HGroup id="contenedorGraficasPag2" width="100%" height="100%" gap="0" verticalAlign="middle"  />
	
	<s:HGroup width="100%" height="30" id="botones" bottom="0" horizontalAlign="center" visible="false" includeInLayout="false" >
		<s:Group width="100%" height="30" verticalCenter="0" >
			
			<s:HGroup width="20" height="100%" paddingTop="0"  visible="true" includeInLayout="true" verticalAlign="middle" horizontalCenter="-20" buttonMode="true"  click="atras_clickHandler(event,'atras')" >
				<s:HGroup width="100%" height="100%" id="atras" enabled="true">
					<s:Ellipse width="20" height="20">
						<s:fill>
							<s:SolidColor color="#33899e"/>
						</s:fill>  
					</s:Ellipse>
				</s:HGroup>
			</s:HGroup>
			
			<s:HGroup width="20" height="100%" paddingTop="0"  visible="true" includeInLayout="true" verticalAlign="middle" horizontalCenter="20"  buttonMode="true" click="atras_clickHandler(event,'adelante')">
				<s:HGroup width="100%" height="100%" id="Adelante" enabled="false">
					<s:Ellipse width="20" height="20" >
						<s:fill>
							<s:SolidColor color="#33899e"/>
						</s:fill>  
					</s:Ellipse>
				</s:HGroup>
			</s:HGroup> 
			<!--<label:TituloBankGothic_30 text="Botones"/>	-->
		</s:Group> 
		
	</s:HGroup>  
	
	<s:Group  id="grpEspacioA" includeInLayout="false"  visible="false" >
		<s:Rect width="100%" height="100%" visible="true" includeInLayout="true">
			<s:fill>
				<s:SolidColor color="0xFFFFFF"/>
			</s:fill>
		</s:Rect>
		<!-- espacioA -->
	</s:Group>
	<s:Group id="grpTabComparacion" visible="false" includeInLayout="false">
		<s:Image id="imgComparativa" source="{catalogoIconosBotones.getInstance().tabComparar}" horizontalCenter="-5" verticalCenter="-200"  includeInLayout="true" click="compararVistas()"/> <!--click="compararVistas()"-->
	</s:Group>
	<s:Group id="grpEspacioB" width="100%" height="100%" visible="false" includeInLayout="false" >
		<s:Rect width="100%" height="100%" >
			<s:fill>
				<s:SolidColor color="0xeaeaea" alpha="1"/>
			</s:fill>
		</s:Rect>
		<!-- espacioB -->
	</s:Group>
	<s:Group  id="grpTabPanelInfo" width="0" height="100%" includeInLayout="false" visible="false">
		<s:Image source="{catalogoIconosBotones.getInstance().tabInfo}" horizontalCenter="-5" verticalCenter="-5" click="panelInfoMuestraOculta()" />
	</s:Group>
	<s:Group id="grpPanelInfo" width="0" height="100%" visible="false" includeInLayout="false" >
		<s:Rect left="0" right="0" top="0" bottom="0">
			<s:fill>
				<s:SolidColor color="#363636" alpha="1"/>
			</s:fill>
		</s:Rect>
		<s:RichEditableText id="richText" width="100%" fontSize="15" color="0xFFFFFF" height="100%" selectable="false" editable="false" justificationStyle="auto"
							paddingTop="20" paddingBottom="10" paddingLeft="30" paddingRight="10"
							textFlow="{ TextConverter.importToFlow( textoHTML , TextConverter.TEXT_FIELD_HTML_FORMAT) }" />
	</s:Group>
</s:Group>