<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:componentes="mx.com.proquifa.vista.vistas.registrarConfirmacion.componentes.*"
		 xmlns:checkBox="mx.com.proquifa.vista.vistas.skin.checkBox.*" 
		 creationComplete="ini(event)"
		 width="100%" height="100%" 
		 resize="calc(event)"
		 >
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.vista.eventos.gestionarBackOrder.EventoGestionarBackOrder;
			import mx.effects.AnimateProperty;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.ObjectUtil;
			
			import spark.core.NavigationUnit;
			
			[Bindable] private var contadorDisponibles:Number = 0;
			[Bindable] private var contadorCancelar:Number = 0;
			[Bindable] private var contadorCambio:Number = 0;
			[Bindable] private var contadorBack:Number = 0;
			[Bindable] public var numPartidasActuales:Number = 0;
			
			[Bindable] private var sizeFontAgente:Number;
			[Bindable] private var sizeFontTiny:Number;
			[Bindable] private var sizeFontG:Number;
			private var _dataProvider:ArrayCollection;
			private var bloqueoListaEditado:Boolean;
			
			private var _referencia:Boolean;
			private var _condicion:Boolean;
			private var _medio:Boolean;
			private var _confirma:Boolean;
			
			[Bindable]
			public function get confirma():Boolean
			{
				return _confirma;
			}
			
			public function set confirma(value:Boolean):void
			{
				_confirma = value;
			}
			
			[Bindable]
			public function get medio():Boolean
			{
				return _medio;
			}
			
			public function set medio(value:Boolean):void
			{
				_medio = value;
			}
			
			[Bindable]
			public function get condicion():Boolean
			{
				return _condicion;
			}
			
			public function set condicion(value:Boolean):void
			{
				_condicion = value;
			}
			
			[Bindable]
			public function get referencia():Boolean
			{
				return _referencia;
			}
			
			public function set referencia(value:Boolean):void
			{
				_referencia = value;
			}
			
			[Bindable]
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}
			
			public function set dataProvider(value:ArrayCollection):void
			{
				_dataProvider = value;
				lstOrdenesCompra.dataProvider = new ArrayCollection();
				lstOrdenesCompra.dataProvider = ObjectUtil.copy(value) as ArrayCollection;
				
				obtenerTotalesIniciales(dataProvider);
				numPartidasActuales = value.length;
				dispatchEvent(new Event("terminarEspera"));
			}
			
			protected function calc(event:ResizeEvent):void
			{
				sizeFontG = (18 / 693) * (unscaledWidth);
				sizeFontG = sizeFontG > 18 ? 18:sizeFontG;
				sizeFontG = sizeFontG < 14 ? 14:sizeFontG;
				
				
				sizeFontAgente = (14 / 693) * (unscaledWidth);
				sizeFontAgente = sizeFontAgente > 14 ? 14:sizeFontAgente;
				sizeFontAgente = sizeFontAgente < 12 ? 12:sizeFontAgente;
				
				sizeFontTiny = (12 / 693) * (unscaledWidth);
				sizeFontTiny = sizeFontTiny > 12 ? 12:sizeFontTiny;
				sizeFontTiny = sizeFontTiny < 10 ? 10:sizeFontTiny;
			}
			
			
			[Bindable]private var listaTemp:ArrayCollection = new ArrayCollection();
			protected function ini(event:FlexEvent):void
			{
				lstOrdenesCompra.addEventListener("itemCrece",indiceVisible);
				addEventListener(EventoGestionarBackOrder.SE_ACTIVO_UN_CAMBIO,verificarListaBack);
				addEventListener(EventoGestionarBackOrder.REVISA_BOTON,RevisaBoton);
			}
			
			public function verificarListaBack(event:EventoGestionarBackOrder):void
			{
				
				if(event.tipoPartida == 'Cancelar')
				{
					lstOrdenesCompra.dataProvider[event.indiceActual].backCancelar = true;
					lstOrdenesCompra.dataProvider[event.indiceActual].backStockBO = false;
					lstOrdenesCompra.dataProvider[event.indiceActual].tipoPartida = "Cancelar";
					
				}
				else if(event.tipoPartida == 'Enviar a stock')
				{
					lstOrdenesCompra.dataProvider[event.indiceActual].backCancelar = false;
					lstOrdenesCompra.dataProvider[event.indiceActual].backStockBO = true;
					lstOrdenesCompra.dataProvider[event.indiceActual].tipoPartida = "Enviarastock";
				}
				else
				{
					lstOrdenesCompra.dataProvider[event.indiceActual].backCancelar = false;
					lstOrdenesCompra.dataProvider[event.indiceActual].backStockBO = false;
					lstOrdenesCompra.dataProvider[event.indiceActual].tipoPartida = "";
				}
				
				lstOrdenesCompra.dataProvider[event.indiceActual].responsable = DatosGlobales.getInstance()._usuario.usuario;
				
				recorreListaBack();
			}
			
			public function RevisaBoton(ev:EventoGestionarBackOrder):void
			{
				recorreListaBack();
			}
			
			public  var contBack:int;
			public function recorreListaBack():void
			{
				contBack = 0;
				for (var i:int = 0; i < lstOrdenesCompra.dataProvider.length; i++) 
				{
					if(lstOrdenesCompra.dataProvider[i].backCancelar == true || lstOrdenesCompra.dataProvider[i].backStockBO)
						contBack = contBack +1;
				}
				
				var eveBoton:EventoGestionarBackOrder = new EventoGestionarBackOrder(EventoGestionarBackOrder.ACTIVA_DESACTIVA_BOTON_REGISTRO);
				dispatchEvent(eveBoton);	
				
			}
			
			[Bindable]public var piezas:int; 
			[Bindable]public var montoString:String; 
			[Bindable]public var clientes:int; 
			private function mostrarTotales(value:ArrayCollection):void
			{
				var montos:int; 
				piezas = 0;
				montos = 0;
				for (var i:int = 0; i < value.length; i++) 
				{
					piezas += value[i].totalPiezas;
					montos += value[i].montoTotal;
				}
				montoString = UtilsFormatosNumericos.precisionADosDecimalesConComas(montos);
			}
			
	
			
			public var todas:Boolean;
			public function obtenerPartidasListas():ArrayCollection
			{
				
				var listaPartidas:ArrayCollection = new ArrayCollection();
				var partidasUtilizadas:ArrayCollection = new ArrayCollection();
				listaPartidas = ObjectUtil.copy(lstOrdenesCompra.dataProvider) as ArrayCollection;
				var completa:Boolean;
				
				var sql:Query = new Query(listaPartidas,["backCancelar"]);
				var punteros:Array = sql.getPunteros([true]);
				
				for (var i:int = 0; i < punteros.length; i++) 
				{
					partidasUtilizadas.addItem( sql.universo.getItemAt(punteros[i]) );
					
				}
				
				var sqlBS:Query = new Query(listaPartidas,["backStockBO"]);
				var punterosBS:Array = sqlBS.getPunteros([true]);
				
				for (var i:int = 0; i < punterosBS.length; i++) 
				{
					partidasUtilizadas.addItem( sql.universo.getItemAt(punterosBS[i]) );
					
				}
				
				
				return partidasUtilizadas;
			}
			
	
			private function obtenerTotalesIniciales(value:ArrayCollection):void
			{
				var montos:int;
				var sql:Query = new Query(value,["cliente","dummy"]);
				var punteros:Array = sql.getPunteros([null,"false"]);
				clientes = sql.getPunteros(["cliente"],"cliente").length
				piezas = sql.getSumarCampo("totalPiezas",punteros);
				montos = sql.getSumarCampo("montoTotal",punteros);
				montoString = UtilsFormatosNumericos.precisionADosDecimalesConComas(montos);
				
			}
			
		
			
			private function scrollToIndex(index:int, animationDuration:int = 100):void 
			{
				dobleClick(index, animationDuration);
				setTimeout(dobleClick, 100, index,animationDuration);
			}
			
			private function dobleClick(index:int, animationDuration):void
			{
				var pt:Point = lstOrdenesCompra.layout.getScrollPositionDeltaToElement(index);
				var verticalScroll:int = lstOrdenesCompra.layout.verticalScrollPosition;
				var verticalScrollOld:int = lstOrdenesCompra.layout.verticalScrollPosition;
				var delta:int = -1;
				if (pt != null )
				{
					while (pt)
					{
						lstOrdenesCompra.validateNow();
						if (pt.y > 0) {
							
							delta = lstOrdenesCompra.layout.getVerticalScrollPositionDelta(NavigationUnit.DOWN);
						} else {
							verticalScrollOld = delta;
							delta = lstOrdenesCompra.layout.getVerticalScrollPositionDelta(NavigationUnit.UP);
						}
						
						lstOrdenesCompra.layout.verticalScrollPosition += delta;
						verticalScroll += delta;
						pt = lstOrdenesCompra.layout.getScrollPositionDeltaToElement(index);
						if ((delta == 0 || verticalScrollOld == delta) && pt != null ){
							break;
						}
					}
					var animation:AnimateProperty = new AnimateProperty(lstOrdenesCompra.dataGroup);
					animation.property = "verticalScrollPosition";
					animation.duration = animationDuration;
					animation.toValue = verticalScroll; 
				}
			}
			
			protected function indiceVisible(event:Event):void
			{
				scrollToIndex(lstOrdenesCompra.selectedIndex);
			}
		
			
			
			protected function verCompleto(event:MouseEvent):void
			{
				scrollToIndex(lstOrdenesCompra.selectedIndex);
			}
			
		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%">
		<s:stroke>
			<s:SolidColorStroke color="#008894" weight="1"/>
		</s:stroke>
	</s:Rect>
	
	<s:VGroup width="100%" height="100%" top="1" bottom="1" left="1" right="1" gap="0">
		<s:HGroup width="100%" height="10%" verticalAlign="middle" horizontalAlign="center"  gap="0">
			
			<s:HGroup width="8%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeFontG}" color="#424242" text="#" textAlign="center" maxDisplayedLines="1"/>			
			</s:HGroup>  
			
			<s:HGroup width="21%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeFontG}" color="#424242" text="OC" textAlign="center" maxDisplayedLines="1"/>			
			</s:HGroup>  
			
			<s:HGroup width="31%" height="100%" verticalAlign="middle" horizontalAlign="left">
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeFontG}" color="#424242" text="CLIENTE" textAlign="center" maxDisplayedLines="1"/>			
			</s:HGroup>  
			
			<s:HGroup width="20%" height="100%" verticalAlign="middle" horizontalAlign="center" gap="0">
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeFontG}" color="#424242" text="PEDIDO" textAlign="center" maxDisplayedLines="1" height="100%" verticalAlign="middle"/>			
			</s:HGroup>  
			
			<s:HGroup width="20%" height="100%" verticalAlign="middle" horizontalAlign="center" gap="0">
				<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{sizeFontG}" color="#424242" text="FEE" textAlign="center" maxDisplayedLines="1" height="100%" verticalAlign="middle"/>			
			</s:HGroup>  
 </s:HGroup>
		<s:Rect width="100%" height="1">
			<s:fill>
				<s:SolidColor color="#424242" />
			</s:fill>
		</s:Rect>
		
		<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
				selectedIndex="0" id="lstOrdenesCompra" contentBackgroundAlpha="0" click="verCompleto(event)"
				itemRenderer="mx.com.proquifa.vista.vistas.gestionarBackOrder.itemRender.IR_PartidasGripOperacionBO"
				/>
		
		<s:Rect width="100%" height="1">
			<s:fill>
				<s:SolidColor color="#424242" />
			</s:fill>
		</s:Rect>
		<s:HGroup width="100%" height="10%" verticalAlign="middle" horizontalAlign="left" gap="0" maxHeight="50">
			
			<s:HGroup width="6%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label styleName="TituloNovecento_18"  fontSize="{sizeFontAgente}" color="#424242" text="#{lstOrdenesCompra.dataProvider.length}" textAlign="center" maxDisplayedLines="1"/>			
			</s:HGroup>  
			<s:HGroup width="21%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label styleName="TituloNovecento_18"  fontSize="{sizeFontAgente}" color="#424242" text="{piezas} {piezas==1?'pza':'pzas'}" textAlign="center" maxDisplayedLines="2" />
				<s:Spacer width="100%" />
				<s:Label styleName="TituloNovecento_18"  fontSize="{sizeFontAgente}" color="#424242" text="Monto Total: ${montoString}" textAlign="center" maxDisplayedLines="2" />			
			</s:HGroup>  
			<s:HGroup width="19%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label styleName="TituloNovecento_18"  fontSize="{sizeFontAgente}" color="#424242" text="{clientes} {clientes==1?'Cliente':'Clientes'}" textAlign="center" maxDisplayedLines="1"/>			
			</s:HGroup>  
			<s:HGroup width="14%" height="100%" verticalAlign="middle" horizontalAlign="center">
				<s:Label styleName="TituloNovecento_18"  fontSize="{sizeFontAgente}" color="#424242" text="" textAlign="center" maxDisplayedLines="2"/>			
			</s:HGroup>  
			
		</s:HGroup>  
		
	</s:VGroup>  
</s:Group>
