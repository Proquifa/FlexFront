<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:comboPqNet="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:s="library://ns.adobe.com/flex/spark" xmlns:lstscrl="skins.spark.components.*"  
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:textinput="skins.skin.textinput.*" 
		 xmlns:pqNet="skins.botones.pqNet.*" 
		 xmlns:label="skins.skin.label.*"
		 xmlns:otros="skins.otros.*"
		 creationComplete="init()"
		 width="100%" height="100%" xmlns:shaders="skins.skin.shaders.*" 
		 >
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.carteras.EventoCatClientes_Carteras;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.alertPqNet.ResultAlert;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cartera;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.CarteraCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.StringFunciones;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.CollectionEvent;
			import mx.events.DragEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosCarteras;
			import skins.catalogos.catalogoImgClientes;
			
			private var _user:Empleado = DatosGlobales.getInstance()._usuario;
			private var _currentCliente:CarteraCliente;
			private var _ruta:String;
			private var _nombreCliente:String;
			private var _nivelIngreso:String;
			private var _industria:String;
			private var _idIndustria:Number;
			private var _cancel:Boolean;
			private var _keyPrincipal:String;
			private var respIdEV:Number;
			private var respIdESAC:Number;
			private var respIdCobrador:Number;
			public var areaAct:String;
			public var carteraBorrador:Boolean;
			private var respIdEVT:Number;
			
			public var _isNew:Boolean = true;
			static public var CarteraNueva:Boolean;
			
			public var _carteraPrincipal:Cartera;
			private var _popUpModificarColaboradores:Cartera_popUp_colaboradores;
			
			[Bindable] private var $clienteTmp:CarteraCliente;
			
			protected function init():void
			{
				lstClientes.dataProvider = new ArrayCollection();
				lstClientes.dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE,agregadoCliente,false,0,true);
			}
			
			public function limpiarCampos():void
			{
				txt_nombreCartera.text = "";
				txt_nombreCartera.prompt = "NOMBRE DE LA CARTERA";
				cmbCobrador.selectedIndex = 0;
				cmbESAC.selectedIndex = 0;
				cmbEV.selectedIndex = 0;
				lbl_sumatoria.text = "$0.00";
				lbl_of.text = "$0.00";
				lbl_od.text = "$0.00";
				lbl_pv.text = "$0.00";
				lbl_fac_Ant.text = "$0.00";
				crecimiento_PV1.text = "0%";
				crecimiento_PV2.text = "0%";
				crecimiento_PV3.text = "0%";
				crecimiento_PV1_2.text = "0%";
				crecimiento_PV2_2.text = "0%";
				crecimiento_PV3_2.text = "0%";
				
				lbl_of_porciento.text = "0.00%";
				lbl_od_porciento.text = "0.00%";
				_isNew = true;
				switchBotones(2);
				$clienteTmp = new CarteraCliente();
				
				
				if(DatosGlobales.getInstance()._usuario.idFuncion == 39){
					
				}
					
					
				else if(DatosGlobales.getInstance()._usuario.idFuncion == 3)
				{
					
				}
					
					
					
				else if(DatosGlobales.getInstance()._usuario.idFuncion == 37)
				{
					
				}
				
				lstClientes.alpha = 0;
				init();
			}
			
			public function recibeCarteraEditar($cartera:Cartera):void
			{
				limpiarCampos();
				_currentCliente = new CarteraCliente();
				_carteraPrincipal = ObjectUtil.copy($cartera) as Cartera;
				txt_nombreCartera.text = $cartera.nombre;
				_nivelIngreso = $cartera.nivel;
				_industria = ($cartera.clientes[0] as CarteraCliente).industria;
				_currentCliente.idCartera = $cartera.idcartera;
				_currentCliente.idEV = respIdEV = $cartera.ev;
				_currentCliente.idEsac = respIdESAC = $cartera.esac;
				_currentCliente.idEVT = respIdEVT = $cartera.evt;
				_currentCliente.idCobrador = respIdCobrador = $cartera.cobrador;
				_currentCliente.nombreEjecutivoVenta = ($cartera.clientes[0] as CarteraCliente).nombreEjecutivoVenta;
				_idIndustria = $cartera.industria;
				_ruta = ($cartera.clientes[0] as CarteraCliente).ruta;
				_nombreCliente = ($cartera.clientes[0] as CarteraCliente).nombre;
				lstClientes.alpha = 1;
				lstClientes.dataProvider = $cartera.clientes;
				cargaCombos();
				hacerCalculos();
				_isNew = false;
				switchBotones(1);
				_keyPrincipal = generateKey();
				lstClientes.dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE,agregadoCliente,false,0,true);
				if(!CarteraNueva){
					btn_guardar.enabled = false;
					
				}
				
				if(_carteraPrincipal.carteraDesistema){
					
					lstClientes.dropEnabled = false;
					lstClientes.dragEnabled = false;
					btn_limpiar.visible = false;
					btn_guardar.visible = false;
					carteraBorrador = false;
					alertaSingleton.show("Esta cartera fue creada por el sistema, no se podrán agregar ni eliminar clientes");
				}
				else{
					
					if(_carteraPrincipal.publicada){
						
						if(_carteraPrincipal.area == areaAct ||areaAct=="Direccion"){
							lstClientes.dropEnabled = true;
							lstClientes.dragEnabled = true;
						}
						else{
							lstClientes.dropEnabled = false;
							lstClientes.dragEnabled = false;
							alertaSingleton.show("Esta cartera pertenece a otra área, no se podrán agregar ni eliminar clientes");
						}
						
						btn_limpiar.visible = false;
						btn_guardar.visible = false;
						/*btn_publicar.visible = btn_publicar.includeInLayout = false;*/
						carteraBorrador = false;
						
					}
					else{
						btn_limpiar.visible = true;
						btn_guardar.visible = true;
						/*btn_publicar.visible = btn_publicar.includeInLayout = true;*/
						carteraBorrador = true;
						
					}
					
					
				}
				
				dispatchEvent(new Event("mandarSiEsBorradorOPublicada"));
			}
			
			private function cargaCombos():void
			{
				cargaEV();
				cargaESAC();
				cargaEVT();
				cargaCobrador();
			}
			
			private function setInfoCombos():void
			{
				if(!lstClientes.dataProvider || lstClientes.dataProvider.length == 0)
				{
					/*cargaCombos();*/
					_ruta = _currentCliente.ruta;
					_nombreCliente = _currentCliente.nombre;
					_nivelIngreso = _currentCliente.nivelIngreso;
					_industria = _currentCliente.industria;
 					_idIndustria = _currentCliente.idIndustria;
					/*txt_nombreCartera.text = cmbESAC.selectedItem.nombre;*/
				}
			}
			
			
			public function cleanCampos(event:DragEvent):void
			{
				if(lstClientes.dataProvider.length == 1)
				{
					lstClientes.alpha = 0;
					
					if(_isNew)
						limpiarCampos();
				}
			}
			
			
			// ESTE ES EL METODO QUE SE DISPARA CUANDO ENTRA EL OBJETO A LA LISTA
			protected function entraClienteLista(event:DragEvent):void
			{
				if(_cancel)
					event.preventDefault();
				
				_currentCliente = new CarteraCliente();
				var current:Vector.<Object> = event.dragSource.dataForFormat("itemsByIndex") as Vector.<Object>; 
				
				for (var i:int = 0; i < 1; i++) 
				{ 
					_currentCliente = current[i] as CarteraCliente;
					lstClientes.alpha = 1;
				}
				
				activarCambioLista();
				
				setInfoCombos();
				
			
				
			}
			
			private function hacerCalculos():void
			{
				var fecha:Date = new Date();
				var tmp:ArrayCollection = ObjectUtil.copy(lstClientes.dataProvider) as ArrayCollection;
				$clienteTmp = new CarteraCliente();
				
				if(lstClientes.dataProvider != null )
				{
					for(var n:int=0; n < tmp.length; n++)
					{
						var tmpCliente:CarteraCliente = tmp[n] as CarteraCliente;
						
						$clienteTmp.cli_facturacionAct += tmpCliente.cli_facturacionAct;
						$clienteTmp.cli_monto_ObjetivoDeseado += tmpCliente.cli_monto_ObjetivoDeseado;
						$clienteTmp.cli_monto_ObjetivoFundamental += tmpCliente.cli_monto_ObjetivoFundamental;
						$clienteTmp.cli_facturacionAnt += tmpCliente.cli_facturacionAnt;
					}
					
					lbl_sumatoria.text = $clienteTmp.cli_facturacionAct_Text;
					lbl_fac_Ant.text = $clienteTmp.cli_facturacionAnt_Text;
					lbl_of.text = $clienteTmp.cli_monto_ObjetivoFundamental_text;
					lbl_od.text = $clienteTmp.cli_monto_ObjetivoDeseado_text;
					
					var pf:Number = ($clienteTmp.cli_facturacionAct / (fecha.month + 1));
					var difOF:Number = (($clienteTmp.cli_monto_ObjetivoFundamental / $clienteTmp.cli_facturacionAnt)-1)*100;
					var difOD:Number = (($clienteTmp.cli_monto_ObjetivoDeseado / $clienteTmp.cli_facturacionAnt)-1)*100;
					
					var proy:Number = pf*12;
					lbl_pv.text = "$"+ UtilsFormatosNumericos.precisionADosDecimalesConComas(proy);
					lbl_of_porciento.text = UtilsFormatosNumericos.precisionADosDecimales(difOF)+" %";
					lbl_od_porciento.text = UtilsFormatosNumericos.precisionADosDecimales(difOD)+" %";
					
					var pv1:Number = ((proy/$clienteTmp.cli_facturacionAnt)-1)*100;
					var pv2:Number = ((proy/$clienteTmp.cli_monto_ObjetivoFundamental)-1)*100;
					var pv3:Number = ((proy/$clienteTmp.cli_monto_ObjetivoDeseado)-1)*100;
					
					crecimiento_PV1.text = crecimiento_PV1_2.text = UtilsFormatosNumericos.precisionADosDecimalesConComas(pv1)+"%";
					crecimiento_PV2.text = crecimiento_PV2_2.text = UtilsFormatosNumericos.precisionADosDecimalesConComas(pv2)+"%";
					crecimiento_PV3.text = crecimiento_PV3_2.text = UtilsFormatosNumericos.precisionADosDecimalesConComas(pv3)+"%";
					
					dist1.source = dist1_2.source = proy > $clienteTmp.cli_facturacionAnt ? catalogoIconosCarteras.getInstance().arriba1 : catalogoIconosCarteras.getInstance().abajo1;
					dist2.source = dist2_2.source = proy > $clienteTmp.cli_monto_ObjetivoFundamental ? catalogoIconosCarteras.getInstance().arriba2 :catalogoIconosCarteras.getInstance().abajo2;
					dist3.source = dist3_2.source = proy > $clienteTmp.cli_monto_ObjetivoDeseado ? catalogoIconosCarteras.getInstance().arriba3 : catalogoIconosCarteras.getInstance().abajo3;
				}
			}
			
			
			private function cargaEV():void{
				if( cmbEV.dataProvider != null && cmbEV.dataProvider.length > 0 )
				{
					var valor:Number = _currentCliente.idEV == 0 ? _currentCliente.cli_idEv:_currentCliente.idEV;
					cmbEV.selectedIndex = cmbEV.seleccionarValor(valor.toString(),"llave");
				}
				else
				{
					setTimeout( cargaEV, 500 );
				}
			}
			
			private function cargaESAC():void
			{
				var index:Number = 0
				if( cmbESAC.dataProvider != null && cmbESAC.dataProvider.length > 0 )
				{
					var valor:Number = _currentCliente.idEsac == 0 ? _currentCliente.cli_idEsac:_currentCliente.idEsac;
					cmbESAC.selectedIndex = cmbESAC.seleccionarValor(valor.toString(),"llave");
					index = cmbESAC.selectedIndex;
			        trace("index" + index)
					
				}
				else
				{
					setTimeout( cargaESAC, 500 );
				}
			}
			
			private function cargaEVT():void
			{
				var index:Number = 0
				if( cmbEVT.dataProvider != null && cmbEVT.dataProvider.length > 0 )
				{
					var valor:Number = _currentCliente.idEVT == 0 ? _currentCliente.cli_idEv:_currentCliente.idEVT;
					cmbEVT.selectedIndex = cmbEVT.seleccionarValor(valor.toString(),"llave");
					index = cmbEVT.selectedIndex;
					trace("index" + index)
					
				}
				else
				{
					setTimeout( cargaEVT, 500 );
				}
			}
			
			private function cargaCobrador():void
			{
				if( cmbCobrador.dataProvider != null && cmbCobrador.dataProvider.length > 0 )
				{
					var valor:Number = _currentCliente.idCobrador == 0 ? _currentCliente.cli_idCobrador:_currentCliente.idCobrador;
					cmbCobrador.selectedIndex = cmbCobrador.seleccionarValor(valor.toString(),'llave');
				}
				else
				{
					setTimeout( cargaCobrador, 500 );
				}
			}
			
			// ESTA FUNCION SE DISPARA CUANDO HAY CAMBIOS EN EL ARRAY DE LA LISTA
			protected function agregadoCliente(event:CollectionEvent):void
			{
				hacerCalculos();
/*				if(!_isNew)
					validarCambios("");
*/			}
			
			protected function lstClientes_dragEnterHandler(event:DragEvent):void
			{
				var _cliTemp:CarteraCliente = new CarteraCliente();
				var vec:Vector.<Object> = event.dragSource.dataForFormat("itemsByIndex") as Vector.<Object>; 
				
				for (var i:int = 0; i < 1; i++) 
				{ 
					_cliTemp = vec[i] as CarteraCliente;
				}
				
				if(_clickIn)
				{
					_cancel = false;
					_clickIn = false;
				}
				
			}
			
			private function seRepiteNombre($nom:String):Boolean
			{
				var temp:ArrayCollection = ObjectUtil.copy(lstClientes.dataProvider) as ArrayCollection;
				
				if(temp.length > 0)
				{
					for(var n:int=0; n < temp.length; n++)
					{
						var _curr:CarteraCliente = temp[n] as CarteraCliente;
						if($nom == _curr.nombre)
							return true;
					}
				}
				return false;
			}
			
			private function validarCampos($publicar:Boolean = false):Boolean
			{
				 if(StringUtil.trim(txt_nombreCartera.text) == "")
				{
					alertaSingleton.show("Es necesario indicar el nombre de la Cartera.",catalogoAlertas.TIT_ADV_operacionImposible);
					return false;
				} 
				
				if($publicar)
				{
					if(cmbESAC.selectedIndex == 0)
					{
						alertaSingleton.show("Es necesario indicar el ESAC.",catalogoAlertas.TIT_ADV_operacionImposible);
						return false;
					}
					if(cmbEV.selectedIndex == 0)
					{
						alertaSingleton.show("Es necesario indicar el EV.",catalogoAlertas.TIT_ADV_operacionImposible);
						return false;
					}
					if(cmbCobrador.selectedIndex == 0)
					{
						alertaSingleton.show("Es necesario indicar el Cobrador.",catalogoAlertas.TIT_ADV_operacionImposible);
						return false;
					}
				}
				
				if(lstClientes.dataProvider)
				{
					if(lstClientes.dataProvider.length == 0)
					{
						alertaSingleton.show("Es necesario que ingrese un cliente a la cartera.",catalogoAlertas.TIT_ADV_operacionImposible);
						return false;
					}
					if(lstClientes.dataProvider.length > 20)
					{
						alertaSingleton.show("La cartera no puede contener mas de 20 clientes.",catalogoAlertas.TIT_ADV_operacionImposible);
						return false;
					}
				}
				return true;
			}
			
			protected function guardarCartera($update:Boolean,$publicar:Boolean=false):void
			{
				if(validarCampos())
				{
					var guardar:EventoCatClientes_Carteras = new EventoCatClientes_Carteras(EventoCatClientes_Carteras.GUARDAR_CARTERA);
					var carteraNew:Cartera = new Cartera();
					if(!$publicar)
					{
						if($update)
							carteraNew = ObjectUtil.copy(_carteraPrincipal) as Cartera;
						
						carteraNew.nombre = txt_nombreCartera.text;
						carteraNew.publicada = false;
						carteraNew.industria = _idIndustria;
						carteraNew.usuario = _user.idEmpleado;
						carteraNew.clientes = ObjectUtil.copy(lstClientes.dataProvider) as ArrayCollection;
						if(carteraNew.justificacion != null)
							carteraNew.justificacion = _carteraPrincipal.justificacion;
						else
							carteraNew.justificacion = justificacion;
							
						carteraNew.cart_updateResponsables = changeResponsables();
						
						
						
						if(DatosGlobales.getInstance()._usuario.idFuncion == 1 || DatosGlobales.getInstance()._usuario.idFuncion == 24 || DatosGlobales.getInstance()._usuario.idFuncion == 22 ){
							carteraNew.cart_updateCOBRADOR = changeCobrador();
							carteraNew.cart_updateEV = changeEV();
							carteraNew.cart_updateESAC = changeESAC();
							carteraNew.cart_updateEVT = changeEVT();
							carteraNew.area = "Direccion";
							carteraNew.esac = cmbESAC.selectedItem.llave;
							carteraNew.evt = cmbEVT.selectedItem.llave;
							carteraNew.ev = cmbEV.selectedItem.llave;
							carteraNew.cobrador = cmbCobrador.selectedItem.llave;
						}
						
						
						else if(DatosGlobales.getInstance()._usuario.idFuncion == 39){
							carteraNew.cart_updateCOBRADOR = changeCobrador();
							carteraNew.area = "Finanzas"
							carteraNew.cobrador = cmbCobrador.selectedItem.llave;
							
							if(!isNaN(cmbESAC.selectedItem.llave))
								carteraNew.esac = cmbESAC.selectedItem.llave;
							else
								carteraNew.esac = 0;
							
							if(!isNaN(cmbEV.selectedItem.llave))
								carteraNew.ev = cmbEV.selectedItem.llave;
							else
								carteraNew.ev = 0;	
							
						}
							
							
						else if(DatosGlobales.getInstance()._usuario.idFuncion == 3)
						{
							carteraNew.cart_updateEV = changeEV();
							carteraNew.area = "Ventas";
							carteraNew.ev = cmbEV.selectedItem.llave;
							
							if(!isNaN(cmbCobrador.selectedItem.llave))
							  carteraNew.cobrador = cmbCobrador.selectedItem.llave;
							 else
								carteraNew.cobrador = 0;
							
							if(!isNaN(cmbESAC.selectedItem.llave))
								carteraNew.esac = cmbESAC.selectedItem.llave;
								else
							carteraNew.esac = 0;
								
						}
							
							
						
						else if(DatosGlobales.getInstance()._usuario.idFuncion == 37)
						{
							carteraNew.cart_updateESAC = changeESAC();
							carteraNew.cart_updateEVT = changeEVT();
							carteraNew.area = "ESAC";
							carteraNew.esac = cmbESAC.selectedItem.llave;
							carteraNew.evt=cmbEVT.selectedItem.llave;
							
							if(!isNaN(cmbEV.selectedItem.llave))
								carteraNew.ev = cmbEV.selectedItem.llave;
							else
								carteraNew.ev = 0;	
							
							if(!isNaN(cmbCobrador.selectedItem.llave))
								carteraNew.cobrador = cmbCobrador.selectedItem.llave;
							else
								carteraNew.cobrador = 0;							
						}
						
						guardar.carteraSeleccionada = carteraNew;
						guardar.idResponsable = _user.clave;
						dispatchEvent(guardar);
						
						_carteraPrincipal = ObjectUtil.copy(carteraNew) as Cartera;
					}
					else
					{
						
						reasignarColaboradores();
						
					}
				}
			}
		
			private function changeResponsables():Boolean
			{
				var cambio:Boolean = false;
				
				if(respIdCobrador != Number(cmbCobrador.selectedItem.llave))
				{
					cambio = true;
				}
				
				if(respIdESAC != Number(cmbESAC.selectedItem.llave))
				{
					if(respIdESAC != NaN)
					{
						cambio = true;
					}
					
				}
				if(respIdEV != Number(cmbEV.selectedItem.llave))
				{
					cambio = true;
				}
				
				return cambio;
			}
			
			private function changeESAC():Boolean
			{
				var cambio:Boolean = false;
				
				if(respIdESAC != Number(cmbESAC.selectedItem.llave))
				{
					cambio = true;
				}
				return cambio;
			}
			
			private function changeEV():Boolean
			{
				var cambio:Boolean = false;
				
				if(respIdEV != Number(cmbEV.selectedItem.llave))
				{
					cambio = true;
				}
				return cambio;
			}
			
			private function changeEVT():Boolean
			{
				var cambio:Boolean = false;
				
				if(respIdEVT != Number(cmbEVT.selectedItem.llave))
				{
					cambio = true;
				}
				return cambio;
			}
			
			private function changeCobrador():Boolean
			{
				var cambio:Boolean = false;
				
				if(respIdCobrador != Number(cmbCobrador.selectedItem.llave))
				{
					cambio = true;
				}
				return cambio;
			}
			
			
			public function set confirmacionGuardadoCartera($id:Number):void
			{
				if (isNaN($id))
					return;
				
				if($id > 0)
				{
					if (Cartera_Menu2EditarCartera.CarteraNueva){ 
						_carteraPrincipal.idcartera = $id;
						var ev:EventoCatClientes_Carteras = new EventoCatClientes_Carteras(EventoCatClientes_Carteras.SOLICITAR_LISTA_CARTERAS);
						ev.idNivel = _user.nivel;
						ev.idResponsable = _user.clave;
						dispatchEvent(ev);
						
						_keyPrincipal = generateKey();
						respIdCobrador = cmbCobrador.selectedItem.llave;
						respIdESAC = cmbESAC.selectedItem.llave;
						respIdEV = cmbEV.selectedItem.llave;
						_isNew = false;
						switchBotones(1);
					}
				
					else{
						alertaSingleton.show("La cartera ha sido guardada.",catalogoAlertas.TIT_CONF_operacionExitosa);
						btn_guardar.enabled = false;
						btn_publicar.enabled = true;
					}
				}
			}
			
			private function generateKey():String
			{
				var valor:String="";
				var curr:ArrayCollection = ObjectUtil.copy(lstClientes.dataProvider) as ArrayCollection;
				StringFunciones.sortArreglo(curr,"nombre");
				
				valor += StringUtil.trim(txt_nombreCartera.text)+"_";
				valor += _idIndustria+"_";
				valor += cmbESAC.selectedItem.llave+"_";
				valor += cmbEV.selectedItem.llave+"_";
				valor += cmbCobrador.selectedItem.llave+"_";
				
				for(var m:int=0; m < curr.length; m++)
				{
					var cli:CarteraCliente = curr[m] as CarteraCliente;
					valor += cli.nombre+"_";
				}
				
				return valor;
			}
			
			private function validarCambios(comboCambio:String):void
			{
				/*if(_user.idFuncion == 1 || _user.idFuncion == 24 || _user.idFuncion == 22 ){
					txt_nombreCartera.text = cmbESAC.selectedItem.nombre;
				}
				
				else if(comboCambio == "ESAC")
				txt_nombreCartera.text = cmbESAC.selectedItem.nombre;
				
				else if(comboCambio == "EV")
					txt_nombreCartera.text = cmbEV.selectedItem.valor;
				
				else if(comboCambio == "Cobrador")
					txt_nombreCartera.text = cmbCobrador.selectedItem.valor; */
				
				if(!_isNew && txt_nombreCartera.text != "")
				{
					var valor:String = generateKey();
				
					if(valor == _keyPrincipal)
					{
						switchBotones(1);
						btn_guardar.enabled = false;
					}
					else
					{
						if(_carteraPrincipal.publicada)
							switchBotones(1);
						else
						{
							switchBotones(2);
							btn_guardar.enabled = true;
						}
						  
					}
				}
			}
			
			private function switchBotones($opc:Number):void
			{
				switch($opc)
				{
					case 1:
					{
						btn_publicar.enabled = true;
						btn_guardar.enabled = false;
						//btn_cancelar.label = "Regresar";
						break;
					}
					case 2:
					{
						btn_publicar.enabled = false;
						//btn_cancelar.label = "Cancelar";
						break;
					}
				}
			}
			
			private function reasignarColaboradores():void
			{
				var listaTemp:ArrayCollection = ObjectUtil.copy( lstClientes.dataProvider ) as ArrayCollection;
				var vendedores:Array = new Array();
				var cobradores:Array = new Array();
				var esac:Array = new Array();
				for (var i:int=0; i < listaTemp.length; i++)
				{
					var _currentCliente:CarteraCliente = listaTemp[i] as CarteraCliente;
					if(_currentCliente.cart_nombreEv != null)
						vendedores.push(_currentCliente.cart_nombreEv);
					if(_currentCliente.cart_nombreCobrador != null)
						cobradores.push(_currentCliente.cart_nombreCobrador);
					if(_currentCliente.cart_nombreEsac != null)
						esac.push(_currentCliente.cart_nombreEsac);
				}
				
				var singlesVendedores:Array = removeDuplicates(vendedores);
				var singlesCobradores:Array = removeDuplicates(cobradores);
				var singlesESAC:Array = removeDuplicates(esac);
				
				/*if (singlesVendedores.length > 1 || singlesCobradores.length > 1 || singlesESAC.length > 1)
				{
					var app:DisplayObject = FlexGlobals.topLevelApplication as DisplayObject;
					if(_popUpModificarColaboradores == null)
					{
						_popUpModificarColaboradores = Cartera_popUp_colaboradores( PopUpManager.createPopUp(app, Cartera_popUp_colaboradores,true));
						_popUpModificarColaboradores.addEventListener("cerrandoPopUp_CarterasColaboradores",cerrarPopUp,false,0,true);
						_popUpModificarColaboradores.addEventListener(EventoCatClientes_Carteras.MODIFICACIONES_DE_COLABORADORES_CARTERAS,cambiarValores,false,0,true);
						PopUpManager.centerPopUp(_popUpModificarColaboradores);
					}
					else
					{
						PopUpManager.addPopUp( _popUpModificarColaboradores, app, true);
					}
					_popUpModificarColaboradores.recibeVendedores(singlesVendedores);
					_popUpModificarColaboradores.recibeCobradores(singlesCobradores);
					_popUpModificarColaboradores.recibeESAC(singlesESAC);
					_popUpModificarColaboradores.linea();
				}
				else
				{*/
					modificarVendedorCobrador(singlesESAC[0],singlesCobradores[0],singlesVendedores[0]);
/*				}
*/			}
			
			
			private function removeDuplicates(arr:Array):Array
			{
				var currentValue:String = "";
				var tempArray:Array = new Array();
				arr.sort(Array.CASEINSENSITIVE);
				arr.forEach(
					function(item:*, index:uint, array:Array):void {
						if (currentValue != item ) {
							tempArray.push(item);
							currentValue= item;
						}
					}
				);
				return tempArray.sort(Array.CASEINSENSITIVE);
			}
			
			protected function cerrarPopUp(eve:Event = null):void
			{
				PopUpManager.removePopUp(_popUpModificarColaboradores );
				_popUpModificarColaboradores = null;
			}
			
			// ESTA FUNCION RECIBE LA SELECCION DEL POP UP PARA LA PUBLICACION DE UNA CARTERA
			protected function cambiarValores($evt:EventoCatClientes_Carteras):void
			{
				_popUpModificarColaboradores.cerrarPop();
				modificarVendedorCobrador($evt.esacSeleccionado,$evt.cobradorSeleccionado,$evt.evSeleccionado);
			}
			
			protected function modificarVendedorCobrador($esac:String, $cobrador:String,$ev:String):void
			{
				var arrayTemp:ArrayCollection = ObjectUtil.copy(lstClientes.dataProvider) as ArrayCollection;
				
				if($esac)
					cmbESAC.selectedIndex = cmbESAC.seleccionarValor($esac.toString(),"valor");
				
				if($ev)
					cmbEV.selectedIndex = cmbEV.seleccionarValor($ev.toString(),"valor");
				
				if($cobrador)
					cmbCobrador.selectedIndex = cmbCobrador.seleccionarValor($cobrador.toString(),"valor");
				
				var guardar:EventoCatClientes_Carteras = new EventoCatClientes_Carteras(EventoCatClientes_Carteras.GUARDAR_CARTERA);
				var carteraNew:Cartera = new Cartera();
				
				carteraNew = _carteraPrincipal;
				carteraNew.publicada = true;
				carteraNew.nombre = txt_nombreCartera.text;
				carteraNew.industria = _idIndustria;
				
				carteraNew.usuario = _user.idEmpleado;
				carteraNew.clientes = ObjectUtil.copy(lstClientes.dataProvider) as ArrayCollection;
				if(carteraNew.justificacion != null)
					carteraNew.justificacion = _carteraPrincipal.justificacion;
				else
					carteraNew.justificacion = justificacion;
			
				 if(_user.idFuncion == 1 || _user.idFuncion == 24 || _user.idFuncion == 22 )
				{
					
					carteraNew.area = "Direccion"
						
					carteraNew.cart_updateCOBRADOR = changeCobrador();
					carteraNew.cobrador = cmbCobrador.selectedItem.llave;
					
					carteraNew.cart_updateEV = changeEV();
					carteraNew.ev = cmbEV.selectedItem.llave;
					
					carteraNew.cart_updateESAC = changeESAC();
					carteraNew.esac = cmbESAC.selectedItem.llave;
					
				}
				
				else if(DatosGlobales.getInstance()._usuario.idFuncion == 39){
					carteraNew.cart_updateCOBRADOR = changeCobrador();
					carteraNew.area = "Finanzas"
					carteraNew.esac = 0;
					carteraNew.ev = 0;
					carteraNew.cobrador = cmbCobrador.selectedItem.llave;
				}
					
					
				else if(DatosGlobales.getInstance()._usuario.idFuncion == 3)
				{
					carteraNew.cart_updateEV = changeEV();
					carteraNew.area = "Ventas";
					carteraNew.ev = cmbEV.selectedItem.llave;
					carteraNew.cobrador = 0;
					carteraNew.esac = 0;
				}
					
					
					
				else if(DatosGlobales.getInstance()._usuario.idFuncion == 37)
				{
					carteraNew.cart_updateESAC = changeESAC();
					carteraNew.area = "ESAC";
					carteraNew.ev = 0;
					carteraNew.cobrador = 0;
					carteraNew.esac = cmbESAC.selectedItem.llave;
				}
				
				carteraNew.cart_updateResponsables = changeResponsables();
				guardar.carteraSeleccionada = carteraNew;
				guardar.idResponsable = _user.clave;
				dispatchEvent(guardar);
				
				_carteraPrincipal = ObjectUtil.copy(carteraNew) as Cartera;
			}
			
			private var _clickIn:Boolean;
			protected function vgroup1_mouseDownHandler(event:MouseEvent):void
			{
				_clickIn = true;
			}
			
			protected function vgroup1_mouseUpHandler(event:MouseEvent):void
			{
				_clickIn = false;
			}
			
			private var _sePublicaCartera:Boolean;
			private function confirmaPublicar():void
			{
				_sePublicaCartera = true;
				alertaSingleton.show( catalogoAlertas.CONF_publicarCartera ,catalogoAlertas.TIT_ADV_Publicar_cartera,'PublicarCarteraCliente','','','SI','NO',null,false, nuevaFuncionPop)
			}
			
			
			// ESTA FUNCION RECIBE LA RESPUESTA DEL POP UP DE CONFIRMAPUBLICAR
			public function set recibeDelAlert( $dato:ResultAlert):void
			{
				if( $dato == null || $dato.vieneD == null )
					return;
				
			}
			
			public function nuevaFuncionPop($dato:EventoAlertaPqNet):void{
				if( $dato == null )
					return;
				
				method1($dato.respuesta);	
			}
			
	         private function method1($dato:ResultAlert):void
			{
				if( $dato.botonSeleccionado == "SI" && _sePublicaCartera)
				{
					
					if(DatosGlobales.getInstance()._usuario.idFuncion == 1 || DatosGlobales.getInstance()._usuario.idFuncion == 24 || DatosGlobales.getInstance()._usuario.idFuncion == 22 ){
						realizarOperaciones();
					}
					else{
						if(CarteraNueva)
						dispatchEvent(new Event("AbrirPopUPJustificacion"));
						else
							realizarOperaciones();
					}
					
					

				}
			}
			
			public var justificacion:String;
			public function realizarOperaciones():void{
				if (!CarteraNueva)
					guardarCartera(true,false);
				guardarCartera(true,true);
				_sePublicaCartera = false;
				dispatchEvent(new Event("regresarVistaAplicadas"));

			}
			
			protected function btn_cancelar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("cambiarVistaEdicionCarteraEditaBoton",true));
			}
			
			private function tipoGuardado():void
			{
				if(_isNew)
					guardarCartera(false);
				else
					guardarCartera(true);
				
			}
			
			private function LimpiaryRegresarValores():void
			{
				dispatchEvent(new Event("ponerValoresDeLimpieza",true));
				limpiarCampos();
			}
			
			private var vertical:Number=0;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				
				vertical =this.verticalScrollPosition;
				if(unscaledWidth != 0)
				{
					if(unscaledWidth < 900)  // ESTO ES PARA CUANDO SON 15 PULGADAS
					{
						grp_indicadores.visible = grp_indicadores.includeInLayout = false;
						grp_indicadores_2.visible = grp_indicadores_2.includeInLayout = true;
						titulo_facAnt.text = "Fact. Ant:";
						titulo_of.text = "Obj. Fundamental:"
						titulo_od.text = "Obj. Deseado:"
						titulo_PV.text = "PV:"
						titulo_FactAct.text = "Fact. Act:"; 
						
						var valor:Number = (grp_Botones.width / 14) * 3;
						
						btn_limpiar.width = valor;
						btn_exportar.width = valor;
						btn_guardar.width = valor;
						btn_publicar.width = valor;
						//	spc_Btn.includeInLayout = false;
						
						lbl_fac_Ant.setStyle("fontSize",12);
						lbl_of.setStyle("fontSize",12);
						lbl_of_porciento.setStyle("fontSize",12);
						lbl_od.setStyle("fontSize",12);
						lbl_od_porciento.setStyle("fontSize",12);
						lbl_pv.setStyle("fontSize",12);
						lbl_sumatoria.setStyle("fontSize",12);
						titulo_FactAct.setStyle("fontSize",16);
						
					}
					else
					{
						grp_indicadores.visible = grp_indicadores.includeInLayout = true;
						grp_indicadores_2.visible = grp_indicadores_2.includeInLayout = false;
						titulo_facAnt.text = "Facturación Anterior:";
						titulo_of.text = "Objetivo Fundamental:"
						titulo_od.text = "Objetivo Deseado:"
						titulo_PV.text = "Proyección Venta:"
						titulo_FactAct.text = "Facturación Actual:";
						
						btn_limpiar.percentWidth = 100;
						btn_exportar.percentWidth = 100;
						btn_guardar.percentWidth = 100;
						btn_publicar.percentWidth = 100;
						spc_Btn.includeInLayout = true;
						
						lbl_fac_Ant.setStyle("fontSize",18);
						lbl_of.setStyle("fontSize",18);
						lbl_of_porciento.setStyle("fontSize",18);
						lbl_od.setStyle("fontSize",18);
						lbl_od_porciento.setStyle("fontSize",18);
						lbl_pv.setStyle("fontSize",18);
						lbl_sumatoria.setStyle("fontSize",24);
						titulo_FactAct.setStyle("fontSize",18);
					}
				} 
			} 
			
			
			protected function cambios_lista(event:IndexChangeEvent):void{
				activarCambioLista();
			}
			
			
			protected function activarCambioLista():void
			{
				if(!_isNew && txt_nombreCartera.text != "")
				{
					if(_carteraPrincipal.publicada){
						btn_guardar.enabled = true;
						btn_publicar.enabled = true;
						
					}
						
					else
					{
						btn_publicar.enabled = false;
						btn_guardar.enabled = true; 
					}
				}
				
				
			}
			
		]]>
	</fx:Script>
	
	<s:Rect width="100%" height="100%" >
		<s:filters>
			<shaders:sombraBevelFilter direccion="left"/>
		</s:filters>
		<s:fill>
			<s:SolidColor color="#eaeaea" />
		</s:fill>
	</s:Rect>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center" paddingLeft="20" paddingRight="20" paddingTop="15">
		<s:VGroup width="100%" height="100%" mouseDown="vgroup1_mouseDownHandler(event)" mouseUp="vgroup1_mouseUpHandler(event)" >
			<s:Group width="100%" height="100%">
				<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
					<s:Image id="img_Arrastra" source="{catalogoImgClientes.getInstance().arrastre}"/>
				</s:VGroup>
				<lstscrl:List id="lstClientes" width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off" alpha="0" 
							  dragDrop="entraClienteLista(event)" contentBackgroundColor="#eaeaea"
							  dragComplete="cleanCampos(event)" 
							  dropEnabled="true" dragEnabled="true" dragMoveEnabled="true"
							  dragEnter="lstClientes_dragEnterHandler(event)" changing="cambios_lista(event)"
							  itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.carteras.itemRenderer.IR_ClienteArrastrado" >
					<lstscrl:layout>
						<s:TileLayout columnAlign="justifyUsingWidth" columnWidth="220" />
					</lstscrl:layout>
				</lstscrl:List>
			</s:Group>
		</s:VGroup>
		
		
		<s:VGroup width="100%" gap="10" paddingBottom="20">
			<otros:divisionDegradado width="100%" />
			<label:Titulo id="lblTipo" text="DATOS GENERALES" verticalCenter="-3" textAlign="center" width="100%" maxDisplayedLines="2" paddingTop="5" paddingBottom="5"/> 
			<s:TextInput id="txt_nombreCartera" width="100%" keyUp="validarCambios('')" prompt="NOMBRE DE LA CARTERA" fontStyle="normal" height="28" />
			
			<s:HGroup width="100%" paddingTop="20" >
				<s:VGroup width="100%">
					<label:Titulo_w100  text="ESAC" paddingTop="0" />
					<comboPqNet:ComboCatalogos id="cmbESAC" width="100%" creationComplete="{ cmbESAC.cargarESACnombreCartera('--NINGUNO--') }" changing="validarCambios('ESAC')"/>
				</s:VGroup>
				<s:Spacer width="10%" />
				<s:VGroup width="100%">
					<label:Titulo_w100  text="EV Telemarketing" paddingTop="0" />
					<comboPqNet:ComboCatalogos id="cmbEVT" width="100%" creationComplete="{ cmbEVT.cargarEmpleadosXTipoTablero( 'evt','--NINGUNO--' ) }" changing="validarCambios('EVT')"/>
				</s:VGroup>
				<s:Spacer width="10%" />
				<s:VGroup width="100%">
					<label:Titulo_w100  text="EV Campo" paddingTop="0" />
					<comboPqNet:ComboCatalogos id="cmbEV" width="100%" creationComplete="{ cmbEV.cargarEmpleadosXTipoTablero( 'ev','--NINGUNO--' ) }" changing="validarCambios('EV')"/>
				</s:VGroup>
				<s:Spacer width="10%" />
				<s:VGroup width="100%">
					<label:Titulo_w100  text="Cobrador" paddingTop="0" />
					<comboPqNet:ComboCatalogos id="cmbCobrador" width="100%" creationComplete="{ cmbCobrador.cargarEmpleadosPorSoloPorTipo('Contabilidad','--NINGUNO--') }" changing="validarCambios('Cobrador')"/>
				</s:VGroup>
			</s:HGroup>
		</s:VGroup>
		
		<otros:divisionDegradado width="100%" />
		
		<s:HGroup width="100%" paddingTop="20" paddingLeft="20" paddingRight="20">
			
			<s:VGroup gap="15">
				<label:Texto_16_GrisCasiNegro id="titulo_facAnt" text="Facturación Anterior:" maxDisplayedLines="2"/>
				<label:Titulo_22_pTop10 id="lbl_fac_Ant" fontSize="18" width="100%" textAlign="center" paddingTop="0" color="#016481"/>
			</s:VGroup>
			
			<s:Spacer width="100%"/>
			<s:VGroup gap="15">
				<label:Texto_16_GrisCasiNegro id="titulo_of" text="Objetivo Fundamental:" maxDisplayedLines="2"/>
				<label:Titulo_22_pTop10 id="lbl_of" fontSize="18" width="100%" textAlign="center" paddingTop="0" color="#01737b"/>
				<label:Titulo_22_Gris_pTop10  id="lbl_of_porciento" fontSize="18" width="100%" textAlign="center" paddingTop="0"/>
			</s:VGroup>
			<s:Spacer width="100%"/>
			<s:VGroup gap="15">
				<label:Texto_16_GrisCasiNegro id="titulo_od" text="Objetivo Deseado:" maxDisplayedLines="2"/>
				<label:Titulo_22_pTop10 id="lbl_od" fontSize="18" width="100%" textAlign="center" paddingTop="0" color="#2f94a4"/>
				<label:Titulo_22_Gris_pTop10  id="lbl_od_porciento" fontSize="18" width="100%" textAlign="center" paddingTop="0"/>
			</s:VGroup>
			
			
			<s:Spacer width="100%"/>
			<s:VGroup gap="15">
				<label:Texto_16_GrisCasiNegro id="titulo_PV" text="Proyección Venta:" maxDisplayedLines="2"/>
				<label:Titulo_22_pTop10 id="lbl_pv" fontSize="18" width="100%" textAlign="center" paddingTop="0" />
				<s:HGroup id="grp_indicadores" width="100%" verticalAlign="middle" horizontalAlign="center" >
					<label:Texto_10_Blanco text="0%" id="crecimiento_PV1" color="#016481"/>
					<s:Image id="dist1" source="{catalogoIconosCarteras.getInstance().arriba1}" />
					
					<label:Texto_10_Blanco text="0%" id="crecimiento_PV2" color="#01737b"/>
					<s:Image id="dist2" source="{catalogoIconosCarteras.getInstance().arriba2}" />
					
					<label:Texto_10_Blanco text="0%" id="crecimiento_PV3" color="#2f94a4"/>
					<s:Image id="dist3" source="{catalogoIconosCarteras.getInstance().arriba3}" />
				</s:HGroup>
				<s:VGroup id="grp_indicadores_2" width="100%" visible="false" includeInLayout="false" >
					<s:HGroup width="100%" horizontalAlign="center">
						<label:Texto_10_Blanco text="0%" id="crecimiento_PV1_2" color="#016481"/>
						<s:Image id="dist1_2" source="{catalogoIconosCarteras.getInstance().arriba1}" />
					</s:HGroup>
					<s:HGroup width="100%" horizontalAlign="center">
						<label:Texto_10_Blanco text="0%" id="crecimiento_PV2_2" color="#01737b"/>
						<s:Image id="dist2_2" source="{catalogoIconosCarteras.getInstance().arriba2}" />
					</s:HGroup>
					<s:HGroup width="100%" horizontalAlign="center">
						<label:Texto_10_Blanco text="0%" id="crecimiento_PV3_2" color="#2f94a4"/>
						<s:Image id="dist3_2" source="{catalogoIconosCarteras.getInstance().arriba3}" />
					</s:HGroup>
				</s:VGroup>
			</s:VGroup>
			<s:Spacer width="100%"/>
			<s:VGroup width="20%" gap="15">
				<label:Texto_16_GrisCasiNegro id="titulo_FactAct" text="Facturación Actual:" fontSize="18" maxDisplayedLines="2"/>
				<label:Titulo_22_pTop10 id="lbl_sumatoria" color="#430071" paddingTop="0" width="100%" textAlign="center" fontSize="24"/>
			</s:VGroup>
		</s:HGroup>
		
		
		<s:Spacer height="20"/>
		<s:VGroup  id="grpMain" width="100%" >
			<otros:divisionGruesa width="100%"/>
			<s:HGroup width="100%" id="grp_Botones"  paddingTop="10" paddingBottom="20" >
				<pqNet:botonPqNetLargo id="btn_exportar" label="Exportar" />
				<s:Spacer width="100%" id="spc_Btn" />
				<pqNet:botonPqNetLargo id="btn_limpiar" label="Limpiar" click="LimpiaryRegresarValores()"/>
				<pqNet:botonPqNetLargo id="btn_guardar" label="Guardar" click="tipoGuardado()"/>
				<pqNet:botonPqNetLargo id="btn_publicar" label="Publicar" enabled="false" click="confirmaPublicar()"/>
			</s:HGroup>
		</s:VGroup>
	</s:VGroup>
	
	
</s:Group>
