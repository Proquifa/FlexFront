<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:graficas="skins.skin.graficas.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			public function set recibeDatapProvider( $datos:ArrayCollection ):void{
				if($datos==null ){return;}
				var arregloMotivos:ArrayCollection = new ArrayCollection();
				var agrupacionClientes:ArrayCollection = new ArrayCollection();
				var motivoClientes:ResumenConsulta = new ResumenConsulta();
				var motivoMensajeros:ResumenConsulta = new ResumenConsulta();
				var motivoSolicitante:ResumenConsulta = new ResumenConsulta();
				var motivoND:ResumenConsulta = new ResumenConsulta();
				var resumen:ResumenConsulta = new ResumenConsulta();
				resumen.total= 0;
				resumen.clientes = 0;
				resumen.totalEntregas  = 0;
				resumen.partidas  = 0;
				resumen.piezasTotal  = 0;
				for( var i:int = 0; i < $datos.length; i++){
					var currentItem:Factura = ( $datos[i] as Factura );
					//se hace una agrupacion de lcientes
					if(agrupacionClientes.length == 0 ){ 
						agrupacionClientes.addItem( $datos[i] );
					}else{
						var seAgrego:Boolean = false;
						for( var x:int = 0; x < agrupacionClientes.length; x++ ){
							if( ( agrupacionClientes[x] as Factura ).nombre_Cliente == ( $datos[i] as Factura ).nombre_Cliente ){
								seAgrego = true;
								x = agrupacionClientes.length;
							}
						}
						if( !seAgrego ){
							agrupacionClientes.addItem( $datos[i] );
						}
					}
					//se valida para saber si la entrega tiene algun motivo pne
					var validaMotivoExistente:Boolean = false;
					//se crea el dataProvider de la grafica 
					if( currentItem.rutaRelacionada.motivoClientes ){
						if( isNaN(motivoClientes.total) ){motivoClientes.total = 0}
						if( isNaN(motivoClientes.totalEntregas) ){motivoClientes.totalEntregas = 0} 
						if( isNaN(motivoClientes.partidas) ){motivoClientes.partidas = 0}
						if( isNaN(motivoClientes.piezasTotal) ){motivoClientes.piezasTotal = 0} 
						if( isNaN(motivoClientes.clientes) ){motivoClientes.clientes = 0}
						motivoClientes.etiqueta = 'Cliente';
						motivoClientes.total = currentItem.montoFacturaDLS + motivoClientes.total;
						motivoClientes.totalEntregas = motivoClientes.totalEntregas + 1;
						motivoClientes.partidas =  motivoClientes.partidas + currentItem.rutaRelacionada.numeroPartidasRuta;
						motivoClientes.piezasTotal = motivoClientes.piezasTotal + currentItem.numeroPiezasFactura;
						validaMotivoExistente = true;
					}
					if( currentItem.rutaRelacionada.motivoMensajeros){
						if( isNaN(motivoMensajeros.total) ){motivoMensajeros.total = 0}
						if( isNaN(motivoMensajeros.totalEntregas) ){motivoMensajeros.totalEntregas = 0} 
						if( isNaN(motivoMensajeros.partidas) ){motivoMensajeros.partidas = 0}
						if( isNaN(motivoMensajeros.piezasTotal) ){motivoMensajeros.piezasTotal = 0} 
						if( isNaN(motivoMensajeros.clientes) ){motivoMensajeros.clientes = 0}
						motivoMensajeros.etiqueta = "Mensajero";
						motivoMensajeros.total = currentItem.montoFacturaDLS + motivoMensajeros.total;
						motivoMensajeros.totalEntregas = motivoMensajeros.totalEntregas + 1;
						motivoMensajeros.partidas =  motivoMensajeros.partidas + currentItem.rutaRelacionada.numeroPartidasRuta;
						motivoMensajeros.piezasTotal = motivoMensajeros.piezasTotal + currentItem.numeroPiezasFactura;
						validaMotivoExistente = true;
					}
					if( currentItem.rutaRelacionada.motivoND ){
						if( isNaN(motivoND.total) ){motivoND.total = 0}
						if( isNaN(motivoND.totalEntregas) ){motivoND.totalEntregas = 0} 
						if( isNaN(motivoND.partidas) ){motivoND.partidas = 0}
						if( isNaN(motivoND.piezasTotal) ){motivoND.piezasTotal = 0} 
						
						
						if( isNaN(motivoND.clientes) ){motivoND.clientes = 0}
						motivoND.etiqueta = 'ND';
						motivoND.total = motivoND.total + currentItem.montoFacturaDLS ;
						motivoND.totalEntregas = motivoND.totalEntregas + 1;
						motivoND.partidas =  motivoND.partidas + currentItem.rutaRelacionada.numeroPartidasRuta;
						motivoND.piezasTotal = motivoND.piezasTotal + currentItem.numeroPiezasFactura;
						validaMotivoExistente = true;
					}
					if( currentItem.rutaRelacionada.motivoSolicitante ){
						if( isNaN(motivoSolicitante.total) ){motivoSolicitante.total = 0}
						if( isNaN(motivoSolicitante.totalEntregas) ){motivoSolicitante.totalEntregas = 0} 
						if( isNaN(motivoSolicitante.partidas) ){motivoSolicitante.partidas = 0}
						if( isNaN(motivoSolicitante.piezasTotal) ){motivoSolicitante.piezasTotal = 0} 
						if( isNaN(motivoSolicitante.clientes) ){motivoSolicitante.clientes = 0} 
						motivoSolicitante.etiqueta = 'Solicitante';
						motivoSolicitante.total = currentItem.montoFacturaDLS + motivoSolicitante.total;
						motivoSolicitante.totalEntregas = motivoSolicitante.totalEntregas + 1;
						motivoSolicitante.partidas =  motivoSolicitante.partidas + currentItem.rutaRelacionada.numeroPartidasRuta;
						motivoSolicitante.piezasTotal = motivoSolicitante.piezasTotal + currentItem.numeroPiezasFactura;
						validaMotivoExistente = true;
					}
					//se calcula un resumen total de los valores si es que cuenta almenos con un motivo pne
					if(validaMotivoExistente){
						validaMotivoExistente = false;
						resumen.total = resumen.total + currentItem.montoFacturaDLS;
						resumen.clientes = agrupacionClientes.length;
						resumen.totalEntregas = resumen.totalEntregas + 1;
						resumen.partidas = resumen.partidas + currentItem.rutaRelacionada.numeroPartidasRuta;
						resumen.piezasTotal = resumen.piezasTotal + currentItem.numeroPiezasFactura;
					}
				}
				arregloMotivos.addItem( motivoClientes ); 
				arregloMotivos.addItem( motivoMensajeros );
				arregloMotivos.addItem( motivoND );
				arregloMotivos.addItem( motivoSolicitante );
				//es posible que nunca llegeun motivos por algun tipo y se tengan que validar los valores nulos
				for( var n:int = 0; n < arregloMotivos.length; n++){
					if( isNaN( (arregloMotivos[n] as ResumenConsulta).total ) ){
						(arregloMotivos[n] as ResumenConsulta).total = 0;
					} 
					if( isNaN( (arregloMotivos[n] as ResumenConsulta).totalEntregas ) ){
						(arregloMotivos[n] as ResumenConsulta).totalEntregas = 0;
					}
					if( isNaN( (arregloMotivos[n] as ResumenConsulta).partidas ) ){
						(arregloMotivos[n] as ResumenConsulta).partidas = 0;
					}
					if( isNaN( (arregloMotivos[n] as ResumenConsulta).piezasTotal ) ){
						(arregloMotivos[n] as ResumenConsulta).piezasTotal = 0;
					} 
					if( isNaN( (arregloMotivos[n] as ResumenConsulta).clientes ) ){
						(arregloMotivos[n] as ResumenConsulta).clientes = 0;
					} 
					//se hace un comparacion  para el conteo de clientes por motivo PNE
					for( var v:int = 0; v < agrupacionClientes.length; v++ ){
						if( (arregloMotivos[n] as ResumenConsulta).etiqueta == 'Cliente' &&  (agrupacionClientes[v] as Factura).rutaRelacionada.motivoClientes){
							(arregloMotivos[n] as ResumenConsulta).clientes = (arregloMotivos[n] as ResumenConsulta).clientes + 1 ;
						}
						if( (arregloMotivos[n] as ResumenConsulta).etiqueta == 'Mensajero' &&  (agrupacionClientes[v] as Factura).rutaRelacionada.motivoMensajeros){
							(arregloMotivos[n] as ResumenConsulta).clientes = (arregloMotivos[n] as ResumenConsulta).clientes+ 1 ;
						}
						if( (arregloMotivos[n] as ResumenConsulta).etiqueta == 'ND' &&  (agrupacionClientes[v] as Factura).rutaRelacionada.motivoND){
							(arregloMotivos[n] as ResumenConsulta).clientes = (arregloMotivos[n] as ResumenConsulta).clientes+ 1 ;
						}
						if( (arregloMotivos[n] as ResumenConsulta).etiqueta == 'Solicitante' &&  (agrupacionClientes[v] as Factura).rutaRelacionada.motivoSolicitante){
							(arregloMotivos[n] as ResumenConsulta).clientes = (arregloMotivos[n] as ResumenConsulta).clientes+ 1 ;
						}
					}
				}
				myChart.dataProvider = myChart.aplicarFormatoConsultaEntregas( arregloMotivos);
				//se modifican directamente los valores del resumen en el pie 
				myChart.resumenTotal.total = resumen.total;
				myChart.resumenTotal.clientes = resumen.clientes;
				myChart.resumenTotal.totalEntregas = resumen.totalEntregas;
				myChart.resumenTotal.partidas = resumen.partidas;
				myChart.resumenTotal.piezasTotal = resumen.piezasTotal; 
			}
			
		]]>
	</fx:Script>
	<s:Spacer width="100%" height="5%"/>
	<componentes:tituloChartTablero width="100%" text="MOTIVOS PNE" textAlign="center"/>
	<graficas:PieChartPqGris id="myChart" width="100%" height="100%"  etiquetasHabilitadas="true" habilitarResumen="true"
							 dataProvider="{null}" lineasHabilitadas="true"
							 showDataTips="false"  innerRadius=".5">  
		<graficas:series>
			<graficas:pieSeriesPqNet field="total"/>
		</graficas:series>
	</graficas:PieChartPqGris>
	<s:Spacer width="100%" height="30%"/>
</s:VGroup>