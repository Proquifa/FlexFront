<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:busqueda="mx.com.proquifa.vista.vistas.skin.busqueda.*"
		 xmlns:label="skins.skin.label.*"
		 xmlns:otros="skins.otros.*" 
		 width="100%" height="100%" 
		 xmlns:arribo="mx.com.proquifa.vista.vistas.gestorCompras.componentes.arribo.*" 
		 xmlns:boton="mx.com.proquifa.vista.vistas.skin.boton.*" 
		 xmlns:agregarDocumento="mx.com.proquifa.vista.vistas.skin.agregarDocumento.*"
		 resize="reajustar_resizeHandler(event)"
		 >
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.vista.eventos.EventoGestorCompras;
			import mx.com.proquifa.vista.modelo.gestorCompras.arriba.ModeloArriboGestorCompras;
			import mx.events.ResizeEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosBotones;
			import skins.textinput.busqueda.skinTextInputBusqueda2D;
			
			private var _dataProvider:ArrayCollection;
			public static var generarLista:Boolean;
			[Bindable]public static var tipoPublicaciones:Boolean;
			
			public function set tipoProductoPublicaciones(value:Boolean):void
			{
				tipoPublicaciones = value;
			}
			
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}
			
			public function set dataProvider(value:ArrayCollection):void
			{
				_dataProvider = ObjectUtil.copy(value) as ArrayCollection;
				lstOrdenCompra.dataProvider = value;
				lblTotal.text = value.length.toString();
				lblTotal.text += value.length == 1 ? ' Orden de Compra' : ' Ordenes de Compra';
				lstOrdenCompra.selectedIndex = 0;
				lstOrdenCompra.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
				
				listaAsociar.gridPartidasAsociadas.dataProvider = new ArrayCollection();
				listaAsociar.universoPartidasAsociadas = new ArrayCollection();
				listaAsociar.objectCertificados = new Object;
				/*listaAsociar.objectAsociar = new Object;*/
				/*listaAsociar.reiniciar();*/
				if(value.length == 0){
					dispatchEvent( new Event("volverVistaAnterior",true));
				}
				else{
					listaAsociar.quitarTodo();
				}
					
			}
			
			protected function txtBuscador_changingHandler(event:TextOperationEvent):void
			{
				lstOrdenCompra.dataProvider = UtilsGrid.queryCampoXLike(dataProvider,"compra",txtBuscador.text);
			}
			
			protected function lstOrdenCompra_changingHandler(event:IndexChangeEvent):void
			{
				var query:Query;
				if(tipoPublicaciones)
					query = ModeloArriboGestorCompras.queryPub;
				else
					query = ModeloArriboGestorCompras.query;
				var punteros:Array = lstOrdenCompra.selectedItem.object.partidas;
				var array:ArrayCollection = new ArrayCollection;
				/*var arrayAux:ArrayCollection = new ArrayCollection;
				if(listaAsociar.gridPartidas.dataProvider != null) {
					arrayAux = listaAsociar.gridPartidas.dataProvider as ArrayCollection;
				}
				if((respaldo.length == 0) && (listaAsociar.gridPartidas.dataProvider != null)) {
					respaldo = listaAsociar.gridPartidas.dataProvider as ArrayCollection;
				}*/
				
				for (var i:int = 0; i < punteros.length; i++) 
				{
					var partida:PartidaCompra = ObjectUtil.copy(query.universo.getItemAt(punteros[i])) as PartidaCompra;
					partida.numFila = i + 1;
					partida.loteVigente = partida.lote;
					partida.object = "agregarPartida";
					if(i == punteros.length-1)
						partida.abierto = true;
					else
						partida.abierto = false;
						
					array.addItem(partida);
				}
				
				/*var i:int;
				var k:int;
				for(i=0;i<arrayAux.length;i++){
					for(k=0;k<respaldo.length;k++){
						if(respaldo[i].idPartidaCompra == arrayAux[k].idPartidaCompra){
							respaldo[i].lote = arrayAux[k].lote;
							respaldo[i].origen = arrayAux[k].origen;
							respaldo[i].rutaPDF = arrayAux[k].rutaPDF;
							respaldo[i].certificadoPdf = arrayAux[k].certificadoPdf;
						}
						else{
							respaldo.addItem(arrayAux[k]);
						}
					}
				}
				
				for(i=0;i<array.length;i++){
					for(k=0;k<respaldo.length;k++){
						if(array[i].idPartidaCompra == respaldo[k].idPartidaCompra){
							array[i].lote = respaldo[k].lote;
							array[i].origen = respaldo[k].origen;
							array[i].rutaPDF = respaldo[k].rutaPDF;
							array[i].certificadoPdf = respaldo[k].certificadoPdf;
						}
					}
				}*/
				/*vgpAsociar.dataProvider = array;
				vgpAsociar.gridPartidasAsociadas.dataProvider = new ArrayCollection();
				vgpAsociar.object = new Object;
				vgpAsociar.objectAsociar = new Object;*/
				
				
				listaAsociar.dataProvider = array;
				listaAsociar.object = new Object;
				
				var evento:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.ESCONDER_POPUP_ABC);
				evento.habilitado = true;
				dispatchEvent(evento);
				/*if(listaAsociar.universoPartidasAsociadas.length > 0)*/
					listaAsociar.gridPartidasAsociadas.dataProvider = ObjectUtil.copy(listaAsociar.universoPartidasAsociadas) as ArrayCollection;
				listaAsociar.verificarInformacion();
			}
			
			private var certificadoPdf:ByteArray = null;
			private var _rutaDoc:String;
			public var file:File = new File();
			public var filepdf:File = new File();
			public var filexml:File = new File();
			protected function agregardocumento1_clickHandler(valor:String):void
			{
				browseFileSystem(valor);
			}
			
			public function browseFileSystem(valor:String):void{
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				
				var docFilter:FileFilter;
				if (valor == 'pdf')
				{
					docFilter = new FileFilter("Documents", "*.pdf");
					file.addEventListener(Event.COMPLETE,completeHandlerPDF);
				}
				file.browse([docFilter]); 
			}
			
			private function selectHandler(event:Event):void 
			{
				var file:FileReference = FileReference(event.target);
				file.load();
				/*if(btnBusq.text != ".pdf")
				imgVer.source = catalogoIconosBotones.getInstance().ver;
				else
				imgVer.source = catalogoIconosBotones.getInstance().verGris;*/
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void 
			{
				trace("ioErrorHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void 
			{
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			private function completeHandlerPDF(event:Event):void 
			{
				trace("completeHandler: " + event);
				certificadoPdf = this.file.data;
				_rutaDoc = file.nativePath;
				btnBusq.label = file.name;
				filepdf = file;
				
				if(btnBusq.label != ".pdf")
					imgVer.source = catalogoIconosBotones.getInstance().ver;
				else
					imgVer.source = catalogoIconosBotones.getInstance().verGris;
			}
			
			protected function visualizarPDF_clickHandler(event:MouseEvent):void
			{
				var request:URLRequest = new URLRequest("file://"+  encodeURI(_rutaDoc));
				navigateToURL(request);
			}
			
			protected function generarListaPL_clickHandler(event:MouseEvent):void
			{
				var i:int;
				var j:int;
				var completo:Boolean = true;
				var problema:String = "";
				for(i=0; i < listaAsociar.gridPartidasAsociadas.dataProvider.length; i++){
					j=i;
					////////////// Complementa con el certificado y el origen //////////////////
					if(listaAsociar.objectCertificados.hasOwnProperty(listaAsociar.gridPartidasAsociadas.dataProvider[i].idPartidaCompra)){
						var temp:PartidaCompra;
						temp = listaAsociar.gridPartidasAsociadas.dataProvider[i];
						if(listaAsociar.objectCertificados[temp.idPartidaCompra].certificadoPdf != null)
							listaAsociar.gridPartidasAsociadas.dataProvider[i].certificadoPdf = listaAsociar.objectCertificados[temp.idPartidaCompra].certificadoPdf;
						
						if(listaAsociar.objectCertificados[temp.idPartidaCompra].origen != null)
							listaAsociar.gridPartidasAsociadas.dataProvider[i].origen = listaAsociar.objectCertificados[temp.idPartidaCompra].origen;
						
						if(listaAsociar.objectCertificados[temp.idPartidaCompra].tipoLote != null)
							listaAsociar.gridPartidasAsociadas.dataProvider[i].tipoLote = listaAsociar.objectCertificados[temp.idPartidaCompra].tipoLote;
					}
					/*if(listaAsociar.objectCertificados.hasOwnProperty(listaAsociar.gridPartidasAsociadas.dataProvider[i].idPartidaCompra)){
						var tempOrigen:PartidaCompra;
						tempOrigen = listaAsociar.gridPartidasAsociadas.dataProvider[i];
						listaAsociar.gridPartidasAsociadas.dataProvider[i].origen = listaAsociar.objectCertificados[tempOrigen.idPartidaCompra].origen;
					}*/
					////////////////////////////// Validaciones //////////////////////////////
					if( ((listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).origen == null) ||
						((listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).origen == "")  || ((listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).origen.toLocaleUpperCase() == "--NINGUNO--")
					)
					{
						completo=false;
						problema += (listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).numFila +", ";
					}
					else if( ((listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).lote == null) ||
						((listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).lote == "")){
						completo=false;
						problema += (listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).numFila +", ";
					}
					else if(!tipoPublicaciones){
						if(listaAsociar.gridPartidasAsociadas.dataProvider[i].nombreProveedor == "USP"){
							if((listaAsociar.gridPartidasAsociadas.dataProvider[i].tipoLote == false) && 
								(listaAsociar.gridPartidasAsociadas.dataProvider[i].rutaCertificadoActual == null)){
								if((listaAsociar.gridPartidasAsociadas.dataProvider[i].rutaPDF ==null) && 
									(listaAsociar.gridPartidasAsociadas.dataProvider[i].certificadoPdf == null)){
									completo=false;
									problema += (listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).numFila +", ";
								}
							}
							else if((listaAsociar.gridPartidasAsociadas.dataProvider[i].tipoLote == true) && 
								(listaAsociar.gridPartidasAsociadas.dataProvider[i].rutaCertificadoAnterior == null)){
								if((listaAsociar.gridPartidasAsociadas.dataProvider[i].rutaPDF ==null) && 
									(listaAsociar.gridPartidasAsociadas.dataProvider[i].certificadoPdf == null)){
									completo=false;
									problema += (listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).numFila +", ";
								}
							}
							/*else if((listaAsociar.gridPartidasAsociadas.dataProvider[i].rutaPDF ==null) && 
								(listaAsociar.gridPartidasAsociadas.dataProvider[i].certificadoPdf == null)){
								completo=false;
								problema += (listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).numFila +", ";
							}*/
						}else{
							if( ((listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).certificadoPdf == null) ||
								(listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).certificadoPdf.length == 0){
								completo=false;
								problema += (listaAsociar.gridPartidasAsociadas.dataProvider[i] as PartidaCompra).numFila +", ";
								
							}
						}
					}
				}
				problema=problema.substring(0, problema.length-2);
				if((filepdf.data != null) && (listaAsociar.gridPartidasAsociadas.dataProvider.length > 0) && (completo)){
					var evento:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.GENERAR_LISTA_ARRIBO);
					/*evento.listaPartidas = vgpAsociar.gridPartidasAsociadas.dataProvider as ArrayCollection;*/
					evento.listaPartidas = listaAsociar.gridPartidasAsociadas.dataProvider as ArrayCollection;
					evento.docPdf = filepdf.data;
					dispatchEvent(evento);
				}
				if(!completo){
					alertaSingleton.show("Hay campos sin llenar en "+(problema.length == 1 ? "la fila":"las filas")+" "+problema,catalogoAlertas.TIT_ADV_atencion);
					/*alertaSingleton.show("Aún hay información faltante",catalogoAlertas.TIT_ADV_atencion);*/
				}
				else if(filepdf.data == null){
					alertaSingleton.show("Falta agregar documento a Packing List",catalogoAlertas.TIT_ADV_atencion);
				}
				else if(listaAsociar.gridPartidasAsociadas.dataProvider == 0){
					alertaSingleton.show("No hay partidas",catalogoAlertas.TIT_ADV_atencion);
				}
			}
			public function set respuestaGenerarListaArribo(data:String):void
			{
				if(data == null) return;	
				if (data != "No se inserto Lista Arribo" && data != "Falta_Archivo")
				{
					/*vgpAsociar.quitarTodo();*/
					btnBusq.label = ".pdf";
					var eve:EventoGestorCompras;
					if(tipoPublicaciones){
						eve = new EventoGestorCompras(EventoGestorCompras.LISTADO_ARRIBO_PUBLICACIONES);
						eve.publicaciones = true;
					}
					else{
						eve = new EventoGestorCompras(EventoGestorCompras.LISTADO_ARRIBO); 
						eve.publicaciones = false;
					}
						
						
					eve.idEmpleado = DatosGlobales.getInstance()._usuario.clave;
					dispatchEvent(eve);
					generarLista = true;
					
					imgVer.source = catalogoIconosBotones.getInstance().verGris;
					filepdf = new File();
					if (EventoGestorCompras.consolidado)
					{
						var ert:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.OBTENER_LISTAS_ORDENES_CONSOLIDADO);
						ert.idOC = 0;
						ert.tipoPublicaciones = false;
						dispatchEvent(ert);
					}
					listaAsociar.quitarTodo()
					alertaSingleton.show("Se ha generado la Lista de Arribo",catalogoAlertas.TIT_ADV_atencion);
				}
				else
				{
					alertaSingleton.show(data,catalogoAlertas.TIT_ADV_atencion);
				}
			}
			
			/*protected function init(event:FlexEvent):void
			{
			vgpAsociar.addEventListener(EventoGestorCompras.ENVIAR_HABILITAR_GENERAR_LISTA,habilitarGenerarLista,false,0,true);
			}
			private function habilitarGenerarLista(evt:EventoGestorCompras):void
			{
			if(evt != null){
			if(evt.habilitado == false)
			imgGenerarList.source = catalogoIconosBotones.getInstance().generarFacturaGris;	
			else
			imgGenerarList.source = catalogoIconosBotones.getInstance().generar_lista;
			}
			}*/
			[Bindable] public static var heightBtnPDF:Number = 30;
			
			protected function reajustar_resizeHandler(event:ResizeEvent):void
			{
				heightBtnPDF = (27/1140) * (unscaledHeight);
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" paddingTop="20" gap="10" paddingLeft="10">
		<label:Titulo_32_Novecento_VerdeAzul id="lblProveedor" width="100%" textAlign="center" />
		<otros:divisionDegradado width="100%" />
		
		<s:HGroup width="100%" height="100%" paddingTop="20" paddingRight="10" gap="10">
			<s:VGroup id="vgpOrdenCompra" width="19%" height="100%">
				<s:HGroup width="100%" horizontalAlign="center" >
					<s:TextInput id="txtBuscador" width="100%" maxWidth="{lstOrdenCompra.width - 10}" skinClass="skins.textinput.busqueda.skinTextInputBusqueda2D" change="txtBuscador_changingHandler(event)" paddingRight="0"/>
				</s:HGroup> 
				
				<s:VGroup width="100%" height="100%" gap="0" paddingBottom="20">
					<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
							selectedIndex="0" id="lstOrdenCompra" contentBackgroundAlpha="0"
							itemRenderer="mx.com.proquifa.vista.vistas.gestorCompras.itemrender.OrdenesCompra_Arribo_IR"
							changing="lstOrdenCompra_changingHandler(event)"
							/>
					<otros:LineaDivision width="100%" maxWidth="350" height="2" color="#333333" />
					<label:Texto_14_Helvetica width="100%" id="lblTotal" textAlign="center" fontSize="18" paddingTop="10"/>
				</s:VGroup>
			</s:VGroup>
			<s:HGroup height="100%" verticalAlign="middle" >
				<otros:divisionDegradadoVertical height="100%" /> 
			</s:HGroup>
			
			
			
			<s:VGroup id="vgpPartidas" width="81%" height="100%" >
				
				<arribo:GridAsociarPartidaListaArriboLista id="listaAsociar" width="100%" height="100%" />
				<s:HGroup width="100%" paddingBottom="17" paddingTop="15" gap="0" paddingRight="0" paddingLeft="0" >					
					<s:HGroup width="100%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingLeft="10"  gap="0">
						
						<s:HGroup width="47%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingRight="10"  gap="0">
							<label:TituloNovecento_18 id="lblPackingList" text="Packing List:" textAlign="left" fontSize="18" height="22"/>
							<agregarDocumento:AgregarDoc width="100%" height="100%" sizeHeight="{heightBtnPDF}" id="btnBusq" label=".pdf" click="agregardocumento1_clickHandler('pdf')" />
						</s:HGroup>		
						<mx:Image id="imgVer" source="{catalogoIconosBotones.getInstance().verGris}" width="50" height="30" click="visualizarPDF_clickHandler(event)" />					
					</s:HGroup>
					<s:HGroup width="100%" horizontalAlign="right" paddingRight="10">
						<mx:Image id="imgGenerarList" source="{catalogoIconosBotones.getInstance().generar_lista}"  horizontalAlign="right" click="generarListaPL_clickHandler(event)"/>		
					</s:HGroup>
				</s:HGroup>
			</s:VGroup>  			
		</s:HGroup>
	</s:VGroup>
</s:Group>
