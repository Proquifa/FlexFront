<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.controls.Alert;
			[Bindable]
			private var _clientesTopTen:ArrayCollection;
			[Bindable]
			private var _proveedoresParaTabla:ArrayCollection;
			[Bindable]
			private var _datosGenerales:ObjetoTabla;
			
			
			public function actualizar():void{
				this.myChart;
				this.gridResultados;
			}
			
			private function maxTopClientes():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			/**
			 * Metodo que recibe del mapa el top ten de clientes  
			 */
			public function set obtenerClientesTopProvGrafica(clientes:ArrayCollection):void{
				if (clientes==null){
					return ;
				}
				this._clientesTopTen = new ArrayCollection();
				for(var m:int = 0 ; m < clientes.length ; m++){
					if(m<10){
						this._clientesTopTen.addItem(clientes.getItemAt(m));
					}
				}
			}
			
			public function set obtenerDatos(datos:ObjetoTabla):void{
				if(datos == null){
					return ;
				}
				this._datosGenerales = new ObjetoTabla();
				this._datosGenerales = datos;
				var evt:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.BUSCAR_DATOS_TOPCLIENTE);
				evt.idProveedor = datos.idProveedor;
				evt.anioInt = datos.anioInt;
				evt.periodo = datos.periodo;
				evt.tipoPeriodo = datos.tipoPeriodo;
				evt.mes = datos.mes;
				evt.tipo = "false";
				dispatchEvent(evt);
			}
			
			public function set ObtenerTabla(proveedoresTabla:ArrayCollection):void{
				if(proveedoresTabla==null){
					return ;
				}
				this._proveedoresParaTabla = proveedoresTabla;
			}	
			
			public function seleccionaTabla():void{			
				this.navegador.selectedChild = this.vistaTabla;
			} 
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}	
			
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" title="Top 10 Proveedores" dropShadowVisible="true">
		<!--<mx:CurrencyFormatter id="formatoExcel" precision="2" currencySymbol="$" useThousandsSeparator="false"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%" creationPolicy="all"> 
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<mx:PieChart id="myChart" width="100%" height="100%"
							 dataProvider="{this._clientesTopTen}" 
							 showDataTips="true">
					<mx:series>
						<mx:PieSeries 
							field="cantidad" 
							nameField="nombre" 
							labelPosition="callout"
							labelField="nombre"
							explodeRadius=".05"/>
					</mx:series>
				</mx:PieChart>
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTopClientes()" width="60"/>
				</mx:HBox>
			</mx:VBox>
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<mx:DataGrid id="gridResultados" dataProvider="{this._proveedoresParaTabla}" width="100%" height="100%" variableRowHeight="true" textAlign="center">
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numeroFila" width="50" />
						<mx:DataGridColumn headerText="Proveedor" dataField="nombre" />
						<mx:DataGridColumn headerText="Cantidad" dataField="cantidad" width="120" />
					</mx:columns>
				</mx:DataGrid>
				<!--<s:DataGrid id="gridResultados" dataProvider="{this._proveedoresParaTabla}" width="100%" height="100%" variableRowHeight="true" >
					<s:columns>
						<s:ArrayList>							
							<formato:GridColumnFormato formato="numfila" headerText="#" guardarFormato="numeroFila"/>
							<s:GridColumn headerText="Nombre Cliente" dataField="nombreCliente">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label width="100%" height="100%" text="{data.nombreCliente}" verticalAlign="middle" textAlign="center"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn headerText="Cantidad" dataField="cantidad">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label width="100%" height="100%" text="{data.cantidad}" verticalAlign="middle" textAlign="center" verticalCenter="8"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<formato:GridColumnFormato formato="moneda" headerText="Monto compra USD" dataField="montoDolares" guardarFormato="totalDolares" />
						</s:ArrayList>
					</s:columns>								
				</s:DataGrid>-->
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="GrÃ¡fico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTopClientes()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" width="80" />
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	</s:Panel>
</s:Group>
