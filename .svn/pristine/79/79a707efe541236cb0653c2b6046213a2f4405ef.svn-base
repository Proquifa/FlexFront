<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				height="100%" width="100%" maxHeight="120"
				autoDrawBackground="false"
				xmlns:pqNet="skins.botones.pqNet.*"
				xmlns:chekbox="skins.skin.chekbox.*"
				xmlns:label="skins.skin.label.*" xmlns:otros="skins.otros.*">
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.TiempoEntrega;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PartidaCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.StringFunciones;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoIconosBotones;
			
			import vista.evento.reportarVisita.EventoReportarVisita;
			import vista.vistas.reporte.visita.VistaOperacionReportarVisita;
			
			[Bindable] private var curren:PartidaCotizacion;
			[Bindable] private var tiempoEntrega:String;
			
			override public function set data(value:Object):void
			{
				super.data = value;
				
				if(value == null)
					return;
				curren = value as PartidaCotizacion;
				
				tiempoEntrega = "";
				
				if(curren.producto.tiempoEntregaRuta != null && curren.producto.tiempoEntregaRuta.length > 0 && curren.producto.tiempoEntrega == null)
				setTiemposEntregas();
				
				if(curren.producto.proveedor == 44)
				{
					if(curren.tipoPresentacion != null && curren.tipoPresentacion.toLowerCase() == 'bolsa de aluminio')
					{
						curren.tipoPresentacion = "bolsadealuminio"
					}
					if(curren.producto.tipoPresentacion)
						imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
					else
						imagen.source =  catalogoIconosBotones.getInstance().ningunousp;
				}
				else if(curren.producto.proveedor == 45)
				{
					if(curren.producto.tipoPresentacion)
					{
						if(curren.producto.tipoPresentacion.toLowerCase() != "ampolleta")
							imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
						else
							imagen.source =  catalogoIconosBotones.getInstance().vialep;
					}
						
					else{
						imagen.source =  catalogoIconosBotones.getInstance().ningunoep;
					}
					
				}
				else if(curren.producto.proveedor == 12)
				{
					if(curren.producto.tipoPresentacion)
					{
						/*if(curren.producto.tipoPresentacion.toLowerCase() != "ampolleta" && curren.tipoPresentacion.toLowerCase() != "blister" &&  curren.producto.tipoPresentacion.toLowerCase() != "caja" )
							imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
						else*/
							imagen.source =  catalogoIconosBotones.getInstance().vialsigma;
					}
						
					else{
						imagen.source =  catalogoIconosBotones.getInstance().ningunosigma;
					}
					
				}
				else if(curren.producto.proveedor == 46)
				{
					if(curren.producto.tipoPresentacion)
					{
						imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
					}
						
					else{
						imagen.source =  catalogoIconosBotones.getInstance().ningunobp;
					}
					
				}
					
				else if(curren.producto.proveedor == 50)
				{
					if(curren.producto.tipoPresentacion)
					{
						imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
					}
						
					else{
						imagen.source =  catalogoIconosBotones.getInstance().ningunofeum;
					}
					
				}
					
				else if(curren.producto.proveedor == 485)
				{
					if(curren.producto.tipoPresentacion)
					{
						/*if(curren.producto.tipoPresentacion.toLowerCase() != "vial")
						imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
						else*/
						imagen.source =  catalogoIconosBotones.getInstance().vialtrc;
					}
						
					else{
						imagen.source =  catalogoIconosBotones.getInstance().ningunotrc;
					}
					
				}
				else if(curren.producto.proveedor == 1089)
				{
					if(curren.producto.tipoPresentacion)
					{
						/*if(curren.producto.tipoPresentacion.toLowerCase() != "vial")
						imagen.source =  catalogoIconosBotones.getInstance()[curren.producto.tipoPresentacion.toLowerCase()+curren.producto.fabrica.toLocaleLowerCase()];
						else*/
						imagen.source =  catalogoIconosBotones.getInstance().vialtlc;
					}
						
					else{
						imagen.source =  catalogoIconosBotones.getInstance().ningunotlc;
					}
					
				}
				else if(curren.producto.tipoPresentacion)
				{
					
					if(curren.producto.tipoPresentacion.toLowerCase() == "frasco" )
					{
						imagen.source =  catalogoIconosBotones.getInstance().ningunoDefault;
					}
					else if(curren.producto.tipoPresentacion.toLowerCase() == "vial" ){
						imagen.source =  catalogoIconosBotones.getInstance().ningunoDefault;
						
					}
					else if(curren.producto.tipoPresentacion.toLowerCase() == "ninguno" ){
						imagen.source =  catalogoIconosBotones.getInstance().ningunoDefault;
					}
				}
				else
				{
					imagen.source =  catalogoIconosBotones.getInstance().ningunoDefault;
				}
			}
			
			
			protected function agregar_Producto(event:MouseEvent):void
			{
				
				
				
			}
			
			protected function eliminarProductoDeCotizacion(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			
			
			protected function agregarNotas(event:MouseEvent):void
			{
				
				dispatchEvent(new Event("abrirPopUpAgregarNotasReportar",true));
				
			}
			
			protected function seleccionada_clickHandler(event:MouseEvent):void
			{
				data.seleccionada = seleccionada.selected;
				
				var actDesBoton:EventoReportarVisita = new EventoReportarVisita(EventoReportarVisita.ACTIVAR_DESACTIVAR_BOTONES_ELIMINAR_CAMBIAR);
				dispatchEvent(actDesBoton);
				
			}
			private var _arrayLocalTE:TiempoEntrega;
			private var _arrayGuadalajaraTE:TiempoEntrega;
			private var _arrayForaneolTE:TiempoEntrega;
			private var _arrayCentroATE:TiempoEntrega;
			private var _arraySudaTE:TiempoEntrega;
			private var _arrayRestoMundoTE:TiempoEntrega;
			private function setTiemposEntregas():void
			{
				_arrayCentroATE = new TiempoEntrega();
				_arrayForaneolTE = new TiempoEntrega();
				_arrayGuadalajaraTE = new TiempoEntrega();
				_arrayLocalTE = new TiempoEntrega();
				_arrayRestoMundoTE = new TiempoEntrega();
				_arraySudaTE = new TiempoEntrega();
				
				
					for (var r:Number=0; r< curren.producto.tiempoEntregaRuta.length; r++)
					{
						var tiempo:TiempoEntrega = curren.producto.tiempoEntregaRuta[r] as TiempoEntrega;
						if (tiempo.ruta)
						{
							switch(StringFunciones.noAccent(tiempo.ruta))
							{
								case 'Local':
								{
									_arrayLocalTE = tiempo;
									break;
								}
								case 'Guadalajara':
								{
									_arrayGuadalajaraTE = tiempo;
									break;
								}
								case 'Foraneo':
								{
									_arrayForaneolTE = tiempo;
									break;
								}
								case 'Centroamerica':
								{
									_arrayCentroATE = tiempo;
									break;
								}
								case 'Sudamerica':
								{
									_arraySudaTE = tiempo;
									break;
								}
								case 'Resto del mundo':
								{
									_arrayRestoMundoTE = tiempo;
									break;
								}
									
								default:
								{
									break;
								}
							}
						}
					}
				
				aplicarTiempoEntrega(); 
			}
			
			private var _currentIndex:Number = NaN;
			[Bindable] private 	var tiempoEntregaSelected:TiempoEntrega = new TiempoEntrega(); 
			private function aplicarTiempoEntrega():void
			{
				tiempoEntregaSelected = new TiempoEntrega(); 
				switch(curren.producto.rutaCli)
				{
					case "Local":
					{
						tiempoEntregaSelected = _arrayLocalTE;
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						_currentIndex =0;
						break;
					}
					case "Guadalajara":
					{
						tiempoEntregaSelected = _arrayGuadalajaraTE; 
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						_currentIndex =1;
						
						break;
					}
					case "Foraneo":
					{
						tiempoEntregaSelected = _arrayForaneolTE; 
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						_currentIndex =2;
						
						break;
					}
					case "Centroamerica":
					{
						tiempoEntregaSelected = _arrayCentroATE; 
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						_currentIndex =3;
						
						break;
					}
					case "Sudamerica":
					{
						tiempoEntregaSelected = _arraySudaTE; 
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						_currentIndex =4;
						
						break;
					}
					case "Resto del mundo":
					{
						tiempoEntregaSelected = _arrayRestoMundoTE; 
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						_currentIndex =5;
						
						break;
					}
						
					default:
					{
						tiempoEntregaSelected = new TiempoEntrega();
						curren.tiempoEntrega = tiempoEntregaSelected.requierePNo;
						break;
					}
				}
				
				
				
			}
			
			
			
			protected function abrirPopUpCotizacion(event:MouseEvent):void
			{
				dispatchEvent(new Event("abrirPopUpAbrirPopUpCotizacionModificar",true));
			}
			
		]]>
	</fx:Script>
	
	
	<s:Group width="100%" height="100%" >
		<s:Rect width="100%" height="100%" bottom="0" visible="{itemIndex%2==0}">
			<s:fill>
				<s:SolidColor color="#F2F7F7"  />
			</s:fill>
		</s:Rect>
		
		
		<s:HGroup width="100%" height="100%" gap="0" verticalAlign="middle" horizontalAlign="center" paddingTop="10" paddingBottom="10" paddingLeft="17" >
			
			<s:HGroup width="2%" height="100%" verticalAlign="middle" horizontalAlign="center" >
				<chekbox:checkBoxVerde styleCheck="checkBoxBlancoCuadroGrisPalomaVerde" id="seleccionada" selected="{curren.seleccionada}" click="seleccionada_clickHandler(event)" />
			</s:HGroup>  
			
			<s:HGroup width="6%" height="100%" verticalAlign="middle" horizontalAlign="center" >
				<mx:Image smoothBitmapContent="true" source="{catalogoIconosBotones.getInstance().caja_2}"  id="imagen" height="50" width="50" />
			</s:HGroup> 
			
			
			<s:HGroup width="3%" height="100%" verticalAlign="middle" horizontalAlign="center" >
				<s:Label text="{itemIndex+1}" width="100%" fontSize="12" textAlign="center"/>
			</s:HGroup>  
			
			<s:HGroup width="33%" height="100%" verticalAlign="middle" horizontalAlign="center" >
				<s:Label text="{curren.producto.concepto}" width="100%" fontSize="12"  maxDisplayedLines="2"/>
			</s:HGroup>  
			
			<s:HGroup width="10%" height="100%" verticalAlign="middle" horizontalAlign="center" >
				<s:Label text="{curren.tiempoEntrega}" fontSize="12" width="100%"  textAlign="center" />
			</s:HGroup>  
			
			<s:HGroup width="16%" height="100%" verticalAlign="middle" horizontalAlign="center" >
				<s:Label text="{curren.producto.fabrica}"  fontSize="12" width="100%" textAlign="center"  />
			</s:HGroup>  
			
			<s:HGroup width="7%" height="100%" verticalAlign="middle" horizontalAlign="right" click="abrirPopUpCotizacion(event)" buttonMode="true"  >
				<s:Label text="{curren.cantidad}" fontSize="12" textAlign="right" />
				<mx:Image smoothBitmapContent="true" source="{catalogoIconosBotones.getInstance().lapiz_punta_fina}" height="10" width="10" horizontalAlign="right"  />
			</s:HGroup>  
			
			
			<s:VGroup width="10%" height="100%" horizontalAlign="right" verticalAlign="middle" gap="0" click="abrirPopUpCotizacion(event)" buttonMode="true"   >
				<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="right" >
					<s:Label text="{curren.monedaSimbolo} {UtilsFormatosNumericos.precisionADosDecimalesConComas(curren.producto.costoAux)}"  fontSize="12" width="100%" textAlign="right" />
					<mx:Image smoothBitmapContent="true" source="{catalogoIconosBotones.getInstance().lapiz_punta_fina}" height="10" width="10" horizontalAlign="right" />
				</s:HGroup>  
				<s:Label text="Máximo {curren.monedaSimbolo} {UtilsFormatosNumericos.precisionADosDecimalesConComas(curren.producto.costo)}" color="#ef5b34"  fontSize="10" width="100%" textAlign="right" />
			</s:VGroup> 
			
			
			<s:HGroup width="10%" height="100%" verticalAlign="middle" horizontalAlign="right" >
				<s:Label text="{curren.monedaSimbolo} {UtilsFormatosNumericos.precisionADosDecimalesConComas(curren.producto.totalCostoPiezas)}" fontSize="12" width="100%" textAlign="right" />
			</s:HGroup>  
			
			<s:HGroup width="3%" height="100%" verticalAlign="middle" horizontalAlign="center" click="agregarNotas(event)"  >
				<mx:Image smoothBitmapContent="true" source="{catalogoIconosBotones.getInstance().notas}" height="20" width="20" />
			</s:HGroup>  
			
			
		</s:HGroup>  
	
	</s:Group> 
</s:ItemRenderer>

