<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
		 xmlns:graficas="skins.skin.graficas.*"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Llamada;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			private var _currentType:String;
			private var keys:Object;
			private var _infoTipoET:ArrayCollection;
			private var _infoTipoFT:ArrayCollection;
			
			public function set obtenerFiltroGrafico(tipo:String):void{
				if(_currentType != tipo){
					_currentType = tipo;
					if(_currentType =="ET")
						myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoTipoET,null,'totalLlamadas');
					else if(_currentType =="FT")
						myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoTipoFT,null,'totalLlamadas');
				}
			}
			
			public function set recibeLlamadas($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) return ;
				
				_infoTipoET = new ArrayCollection();
				_infoTipoFT = new ArrayCollection();
				myChart.dataProvider = new ArrayCollection();
				
				/**
				 * Se obtiene un array del ArrayCollection con el fin de aplicar funciones espécificas de los Arrays como el ordenar
				 * */
				
				var arrayTemp:Array = new Array();
				arrayTemp = (ObjectUtil.copy($infoGrafica) as ArrayCollection).source;
				arrayTemp.forEach(setearElTipo);
				arrayTemp.forEach(setearETyFT);
				/**
				 * Se dividen todos los tipos llamadas que estan en tiempo vs las fuera de tiempo y se ordenan
				 * */ 
				var arrayTiposET:Array = new Array();
				var arrayTiposFT:Array = new Array();
				
				arrayTiposET = arrayTemp.filter(ObtenerTodosTiposET);
				arrayTiposFT = arrayTemp.filter(ObtenerTodosTiposFT);
				arrayTiposET.sortOn("estado");
				arrayTiposFT.sortOn("estado");
				
				//Para liberar memoria
				arrayTemp = new Array();
				
				/**
				 * arreglo temporal para controlar el ciclo del for que se encargará de sumar las cantidades de cada  tipo
				 * quitando las duplicados
				 * */
				
				keys= new Object();
				var arrayTotalTiposET:Array = new Array();
				arrayTotalTiposET = arrayTiposET.filter(quitaDuplicados);
				
				keys= new Object();
				var arrayTotalTiposFT:Array = new Array();
				arrayTotalTiposFT = arrayTiposFT.filter(quitaDuplicados);
				
				FormarLosTipos(arrayTotalTiposET,arrayTiposET,_infoTipoET);
				FormarLosTipos(arrayTotalTiposFT,arrayTiposFT,_infoTipoFT);
				
				if(_currentType =="ET")
					myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoTipoET,null,'totalLlamadas');
				else if(_currentType =="FT")
					myChart.dataProvider = myChart.aplicarFormatoConsultasDeDosEtiquetas(_infoTipoFT,null,'totalLlamadas');
				
				//Para liberar memoria
				arrayTotalTiposET = new Array();
				arrayTiposET= new Array();
				arrayTotalTiposFT= new Array();
				arrayTiposFT= new Array();
			}
			private function FormarLosTipos(TotalTiposPagos:Array,tiposPagosInfo:Array,infoTiposPagos:ArrayCollection):void
			{
				
				var totalLlamadas:int;
				var currentLlamada:Llamada; 
				var j:int;
				var totalClientes:int;
				var itemResumenConsulta:ResumenConsulta;
				for(var i:int =0; i<TotalTiposPagos.length; i++){
					j=0;
					totalLlamadas =0;
					totalClientes =0;
					keys = new Object();
					currentLlamada = tiposPagosInfo[j] as Llamada;
					while( (TotalTiposPagos[i] as Llamada).estado == currentLlamada.estado ){
						
						totalLlamadas++;
						
						if(!keys.hasOwnProperty(currentLlamada.empresa)){
							keys[currentLlamada.empresa] = currentLlamada.empresa;
							totalClientes++;
						}
						
						tiposPagosInfo.shift();
						if(tiposPagosInfo.length >0)
							currentLlamada = tiposPagosInfo[j] as Llamada;
						else
							currentLlamada =new Llamada();
					}
					
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta.etiqueta = (TotalTiposPagos[i] as Llamada).estado.toLocaleUpperCase();
					itemResumenConsulta.totalClientes = totalClientes;
					itemResumenConsulta.totalLlamadas = totalLlamadas;
					
					infoTiposPagos.addItem(ObjectUtil.copy(itemResumenConsulta));
				}
			}
			private function setearETyFT(item:Llamada, id:uint, llamadas:Array):void
			{
				if(item.enTiempo == 'NA' || item.enTiempo == 'ET'){
					item.enTiempo = 'ET';
				}
			}
			
			private function ObtenerTodosTiposET(item:Llamada, id:uint, llamadas:Array):Boolean
			{
				return item.enTiempo == 'ET' ? true : false;	
			}
			private function ObtenerTodosTiposFT(item:Llamada, id:uint, llamadas:Array):Boolean
			{
				return item.enTiempo == 'FT' ? true : false;	
			}
			private function setearElTipo(item:Llamada, id:uint, estados:Array):void
			{
				if(item.requsicionCotiza){
					item.estado = 'Con requisición';
				}else{
					item.estado = 'Sin requisición';
				}
			}
			
			private function quitaDuplicados(item:Llamada, idx:uint, tipos:Array):Boolean{
				if (keys.hasOwnProperty(item.estado)) {
					return false;
				} else {
					keys[item.estado] = item.estado;
					return true;
				}
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="0">
		<s:Spacer width="100%" height="10%"/>
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%" 
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5">   
			<graficas:series>
				<graficas:pieSeriesPqNet field="totalLlamadas"/> 
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="10%"/>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" height="8%" verticalAlign="middle">
			<componentes:tituloChartTablero width="100%" text="TIPO" textAlign="center"/>
		</s:VGroup>
		<s:Spacer width="100%" height="2%"/>
	</s:VGroup>
</s:Group>