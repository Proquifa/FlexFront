<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  xmlns:graficas="skins.skin.graficas.*" xmlns:grafica="skins.botones.grafica.*"
		  xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
		  xmlns:chartRep="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.graficaPie.*"
		  xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
		  xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.expofarma.GraficaExpoFarma;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			
			[Bindable]	public var tituloGrafica:String = "";
			[Bindable] private var _arrTemp:ArrayCollection = new ArrayCollection();
			
			private const _tamanioMinimo:int = 170;
			
			public function set recibeInfoGraficos( $lista:ArrayCollection ):void{
				if($lista == null) return;
				var arrColumn:ArrayCollection = new ArrayCollection();
				var objetoGrafica1:Object = UtilsGrid.queryCampoX( $lista, "etiqueta", "Barras");
				var arrTemp:ArrayCollection = ObjectUtil.copy(objetoGrafica1) as ArrayCollection;
				
				while(arrTemp.length > 0){
					var objeto:Object = new Object();
					objeto.registrados = 0;
					objeto.registradosLabel = '';
					objeto.fecha = UtilsFecha.formatoFechaDDMMMYY((arrTemp[0] as GraficaExpoFarma).fecha);
					
					for( var i:int = 0 ; i < arrTemp.length ; i++){
						if(objeto.fecha == UtilsFecha.formatoFechaDDMMMYY((arrTemp[i] as GraficaExpoFarma).fecha)){
							objeto.registrados = ((arrTemp[i] as GraficaExpoFarma).registrados);
							objeto.registradosLabel = objeto.registrados + ( objeto.registrados == 1 ? ' Registro' : ' Registros')
							arrTemp.removeItemAt(i);
							i = i - 1;
						}
					}
					arrColumn.addItem(objeto);
				}
				myChart.dataProvider = arrColumn; 
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String{
				return $etiqueta.toString().toUpperCase();
			}
			
			private function formateoEje($valor:Date):String{
				var strRegreso:String = "";
				if($valor != null ) strRegreso = '$ ' + UtilsFecha.formatoFechaDDMMMYY( $valor );
				return strRegreso;
				//if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="300"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
	</fx:Declarations>
	
	<s:Label width="100%" text="REGISTROS" textAlign="center" paddingTop="20" fontFamily="Bank Gothic" fontSize="20" fontWeight="bold" fontStyle="normal" />
	
	
	<mx:ColumnChart id="myChart" width="100%" height="100%" 
					mouseSensitivity="5" 
					showDataTips="false" 
					showDataTipTargets="false" 
					dataTipMode="single" 
					type="stacked"
					seriesFilters="[]"
					paddingRight="{ width > _tamanioMinimo ? 40 : 5}"
					paddingLeft="{ width > _tamanioMinimo ? 20 : 5}"
					> 
		<!--dataTipRenderer="{RegistroToolTip}"-->
		
		<mx:series>
			<mx:ColumnSeries id="colBar"
							 yField="registrados" 
							 showDataEffect="{fxInterpolateIn}"
							 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
							 />
		</mx:series>
		<mx:horizontalAxis>
			<mx:CategoryAxis id="piezas" categoryField="fecha"  /> <!--labelFunction="formateoEje"-->
		</mx:horizontalAxis>
		<mx:verticalAxis>
			<mx:LinearAxis id="montos"  baseAtZero="true"  /> 
		</mx:verticalAxis>
		<mx:verticalAxisRenderers>
			<mx:AxisRenderer axis="{montos}" showLine="false" showLabels="{ width > _tamanioMinimo ? true : false}"  tickPlacement="none" color="0x999999" />			  
		</mx:verticalAxisRenderers>
		<mx:horizontalAxisRenderers>
			<mx:AxisRenderer axis="{piezas}"  fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" tickStroke="{trazoDelgado}" axisStroke="{trazoGruezo}"/>
			
			<!-- 	 axisStroke="{trazoGruezo}"
			-->
			
			<!--labelFunction="lblFunction"-->
		</mx:horizontalAxisRenderers>
		
		<mx:backgroundElements>
			<mx:GridLines visible="{ width > _tamanioMinimo ? true: false}">
				<mx:horizontalStroke>
					<s:SolidColorStroke weight="0.5" color="0xeeeeee" />
				</mx:horizontalStroke>
			</mx:GridLines>
		</mx:backgroundElements>
	</mx:ColumnChart>
	<!--<componentes:horizontalAxisChartPq id="barraX" text="REGISTROS" width="100%" horizontalCenter="0" 
	paddingRight="{ width > _tamanioMinimo ? 40 : 5}" paddingLeft="{ width > _tamanioMinimo ? 40 : 5}" />-->
	
</s:VGroup>
