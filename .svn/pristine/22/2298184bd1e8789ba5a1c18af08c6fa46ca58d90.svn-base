<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:mate="http://mate.asfusion.com/"
				xmlns:servicios="mx.com.proquifa.proquifanet.admonComunicacion.vistas.servicios.*" 
				xmlns:events="com.asfusion.mate.events.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoPendientesPorEnviar;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.modelo.ModeloLlamadasAdmonComunicacion;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.vista.recepcion.componentes.docRecibir.LLamNew;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaCatalogoService;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.ModeloParaContactoService;
			
		]]>
	</mx:Script>
	
<!--	<servicios:ServicioPendientesPorEnviar id="servicios"/>-->
	
	
	<!--Evento para obtener a los usuarios-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.OBTNER_USUARIOS}">
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerEmpleadosPorTipo"  
									arguments="{[event.tipo,event.valorAdicional]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="setUsuarios"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{LLamNew}">
		<mate:PropertyInjector source="{ModeloLlamadasAdmonComunicacion}"
							   sourceKey="Usuarios"
							   targetKey="usuariosParaCombo"/>
	</mate:Injectors>
	
	<!--Evento para obtener a los Empleados para el Destino-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.OBTENER_EMPLEADOS_DESTINOS_LLAMADAS }">	
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerEmpleados"  	
									arguments="{[event.valorAdicional]}"							  	
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="setEmpleado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{LLamNew}">
		<mate:PropertyInjector source="{ModeloLlamadasAdmonComunicacion}"
							   sourceKey="Empleado"
							   targetKey="empleadosParaCombo"/>
	</mate:Injectors>
	
	<!--Evento para cargar al vendedor de la empresa-->
	<mate:EventHandlers type="{EventoParaCatalogoService.OBTENER_EMPLEADOS_POR_EMPRESA_EN_LLAMADA}">
		<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_SERVICE}" 
								  endpoint="{Destinos.END_POINT}"
								  method = "obtenerVendedorPorNombreEmpresa"   
								  arguments="{[event.nombreEmpresa]}" 
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="setVendedor"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="faultObtenerEmpleadosPorEmpresaEnLlamada"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{LLamNew}">
		<mate:PropertyInjector source="{ModeloLlamadasAdmonComunicacion}"
							   sourceKey="Vendedor"
							   targetKey="recibeVendedorDeLaEmpresa"/>
	</mate:Injectors>
	
	<!--Evento para guardar llamadas-->
	<mate:EventHandlers type="{EventoPendientesPorEnviar.GUARDAR_LLAMDAS}">
		<mate:RemoteObjectInvoker   destination="{Destinos.LLAMADAS_POR_GUARDAR}" 
									endpoint="{Destinos.END_POINT}"
									method="registrarLlamada"  
									arguments="{[event.llamada]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="setLlamada"
									arguments="{true}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloLlamadasAdmonComunicacion}"
									method="faultCotizacionesPorEnviar"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	<mate:Injectors target="{LLamNew}">
		<mate:PropertyInjector source="{ModeloLlamadasAdmonComunicacion}"
							   sourceKey="Llamada"
							   targetKey="recibeLlamadasGuardadas"/>
	</mate:Injectors>
	
	
	<!--Evento para obtener los Clientes en el combo para el contacto no encontrado-->
	<mate:EventHandlers type="{EventoParaCatalogoService.OBTENER_CLIENTES_NO_ENCONTRADOS}">
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerClientes" 
									arguments="{event.valorAdicional}" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="setClientesNoEncontrados"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloParaContactoService}"
									method="faultClientesNoEncontrados"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors target="{LLamNew}">
		<mate:PropertyInjector source="{ModeloParaContactoService}"
							   sourceKey="ClientesNoEncontrados"
							   targetKey="clientesNoEncontradosParaCombo"/>
	</mate:Injectors>
	
</mate:EventMap>