<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:componentes="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:otros="skins.otros.*" 
		  xmlns:AdvancedDataGrid="skins.skin.AdvancedDataGrid.*" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:grafica="skins.botones.grafica.*" 
		  xmlns:graficas="skins.skin.graficas.*" 
		  xmlns:pqNet="skins.botones.pqNet.*"
		  xmlns:label="skins.skin.label.*" 
		  width="100%" height="100%"
		  paddingRight="20" paddingLeft="20" paddingTop="25" paddingBottom="15" creationComplete="init()"> 
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.charts.chartClasses.NumericAxis;
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ParametrosBusquedaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ProductosCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.events.EffectEvent;
			import mx.utils.ObjectUtil;
			
			
			private var cont:Number=0;
			private var _showGrafica:Boolean = false;
			private var _sql:Query;
			private var _sqlF:Query;
			
			
			private function init():void{
				cont=0;
				validarLlenarGrid();
				
			}
			
			public function seleccionaTabla():void{			
				stackGeneral.selectedChild = vistaTabla;
				validarLlenarGrid();
			}
			public function seleccionarGrafica():void{
				stackGeneral.selectedChild = vistaGrafico;
			}
			
			private function minimiza():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			[Bindable]	private var _arregloCincoBotones:ArrayCollection = new ArrayCollection([
				{label:"Estándares",bandera:false},
				{label:"Biológicos",bandera:false},
				{label:"Reactivos",bandera:false},
				{label:"Publicaciones",bandera:false},
				{label:"Labware",bandera:false}]);
			
			[Bindable]	private var _listadoProductosClienteTrabajo:ArrayCollection = new ArrayCollection();
			
			public function set recibeListaProductosCliente($lista:ArrayCollection):void{
				if($lista == null ) return;
				setValoresFooter($lista);
				_sql = new Query( $lista, ["tipo"] );
				btnBarra_click();
			}
			private var _arrTipos:Array = [ "Estandares", "Biológicos", "Reactivos", "Publicaciones", "Labware" ];
			
			protected function btnBarra_click():void
			{
				if( btnBarra.selectedIndex == -1 )
					return;
				
				var indice:int = btnBarra.selectedIndex;
				for( var v:int = 0; v < _arrTipos.length; v++ ){
					_arregloCincoBotones[ v ].bandera = _sql.getPunteros([ _arrTipos[v] ]).length > 0; // ? true: false;
				}
				_arregloCincoBotones.refresh();
				var strTipo:String = _arrTipos[ indice ];
				_listadoProductosClienteTrabajo = _sql.ensamblarLista( [ strTipo ] );// strTipo = "Estandares", "Biológicos", "Reactivos",  etc etc
				setValoresFooter(_listadoProductosClienteTrabajo);
				btnExportar.enabled =  _listadoProductosClienteTrabajo.length < 1 ? false : true;
				setearNumFila( _listadoProductosClienteTrabajo );
				btnBarra.selectedIndex = indice;
			}	
			
			private function setearNumFila( $lista:ArrayCollection ):ArrayCollection{
				for( var g:int = 0; g < $lista.length; g++ ){
					var cItem:* = $lista[ g ];
					if( cItem.hasOwnProperty("numFila") )
						cItem.numFila = g + 1;
				}
				return $lista;
			}
			
			private function generaArchivo():void{ 
				var ArchivoFinal:File = new File();
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Descripción");
				fila1[2] = hoja.addItem("Cantidad");
				fila1[3] = hoja.addItem("Monto");
				fila1[4] = hoja.addItem("Marca");
				for(var i:int = 0 ; i< _listadoProductosClienteTrabajo.length; i++ ){
					fila1 = new Array();
					fila1[0] = (_listadoProductosClienteTrabajo[i] as ProductosCliente ).numFila;
					fila1[1] = '"'+(_listadoProductosClienteTrabajo[i] as ProductosCliente ).descripcion+'"';
					fila1[2] = (_listadoProductosClienteTrabajo[i] as ProductosCliente ).cant;
					fila1[3] = '"'+(_listadoProductosClienteTrabajo[i] as ProductosCliente ).costoString+'"';
					fila1[4] = '"'+(_listadoProductosClienteTrabajo[i] as ProductosCliente ).fabrica+'"';
					hoja.addItem('\r' + fila1 );
				}
				if( btnBarra.selectedIndex > -1){
					if( btnBarra.selectedIndex == 0 ) ArchivoFinal.save( hoja, "Productos_Estandar.csv");
					if( btnBarra.selectedIndex == 1 ) ArchivoFinal.save( hoja, "Productos_Biologicos.csv");
					if( btnBarra.selectedIndex == 2 ) ArchivoFinal.save( hoja, "Productos_Reactivos.csv");
					if( btnBarra.selectedIndex == 3 ) ArchivoFinal.save( hoja, "Publicaciones.csv");
					if( btnBarra.selectedIndex == 4 ) ArchivoFinal.save( hoja, "labware.csv");
				}
			}
			
			public function set recibeLinealMixProductos( $lista:ArrayCollection ):void{
				if( $lista == null )
					return;
				
				var tempArray:ArrayCollection = Util.sortArray( UtilsGrid.queryCampoX( $lista, "etiqueta", "MIX_PRODUCTOS_0" ),"total",true);
				for (var r:int = 1; r<=tempArray.length; r++)
				{
					(tempArray[r-1] as ResumenConsulta).rankingTableroCliente = r;
				}
				
				myChart.dataProvider = myChart.aplicarFormatoTableroClientesRanking( tempArray);
				myChart.useCursorHand = true;
				
			}
			
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			
			public function set recibirFiltros( $event:EventoTableroClientes ):void{
				if( $event == null )
					return;
				//if( _keyAnterior != $event.keyConsulta )
				{
					_event = $event;
					_minimoMeses = _event.parametros.rangoMinMes;
					_maximoMeses = _event.parametros.rangoMaxMes;
					cont++;
				}
				if (cont >1){
					validarLlenarGrid();
				}
				
				if (_showGrafica)
				{
					btnCloseGraf.visible=false;
					hideGrafica.play();
				}
			}
			
			private var _keyAnterior:String = "";
			
			protected function validarLlenarGrid():void
			{
				if( stackGeneral.selectedChild == vistaTabla ){
					if( _event != null ) // && _event.keyConsulta != _keyAnterior )
					{
						var eventEspera:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
						eventEspera.mensaje = "iniciarEspera";
						eventEspera.idButtons = [];
						eventEspera.tipoEventos = [];
						eventEspera.tipoEventos.push("CONSULTA_GRID_MIX_PRODUCTOS");
						dispatchEvent(eventEspera);  
						
						var parametros:ParametrosBusquedaCliente = new ParametrosBusquedaCliente();
						var evet:EventoTableroClientes = new EventoTableroClientes( EventoTableroClientes.CONSULTA_GRID_MIX_PRODUCTOS );
						evet.rangoMinMes = _event.parametros.rangoMinMes;
						evet.rangoMaxMes = _event.parametros.rangoMaxMes;
						evet.parametros = _event.parametros;
						dispatchEvent( evet );
						cont++;
						_keyAnterior = _event.keyConsulta;
					}
				}
			}
			
			private function compareFunction_Monto(item1:Object,item2:Object):int
			{
				return ObjectUtil.numericCompare(item1.costo,item2.costo); 
			}
			
			protected function myChart_itemClickHandler(event:ChartItemEvent):void
			{
				var parametros:ParametrosBusquedaCliente = new ParametrosBusquedaCliente();
				var evet:EventoTableroClientes = new EventoTableroClientes( EventoTableroClientes.CONSULTA_DISTRIBUCION_MIX_PRODUCTOS );
				evet.rangoMinMes = _event.parametros.rangoMinMes;
				evet.rangoMaxMes = _event.parametros.rangoMaxMes;
				evet.parametros = _event.parametros;
				evet.tipoProducto = event.hitData.item.etiqueta;
				dispatchEvent( evet );
				
				tituloDistribucion.text = (event.hitData.item.etiqueta as String).toUpperCase();
				
			}
			
			protected function showGrafica_effectEndHandler(event:EffectEvent):void
			{
				divisionGrafica.visible = divisionGrafica.includeInLayout = true;
				grafDistribucion.percentWidth = 100;
				grafDistribucion.percentHeight = 100;
				_showGrafica = true;
				btnCloseGraf.visible = true;
			}
			
			protected function hideGrafica_effectEndHandler(event:EffectEvent):void
			{
				btnCloseGraf.visible = false;
				divisionGrafica.visible = divisionGrafica.includeInLayout = false;
				_showGrafica = false;
				grafDistribucion.width = 0;
				grafDistribucion.visible = false;
				grafDistribucion.includeInLayout = false;				
				myChart.percentWidth = 100;
			}
			
			protected function btnCloseGraf_clickHandler(event:MouseEvent):void
			{
				myChartDistribucion.invalidateDisplayList();
				btnCloseGraf.visible=false;
				hideGrafica.play();
			}
			
			public function set recibeDistribucion($arreglo:ArrayCollection):void
			{
				if( $arreglo == null )
					return;
				
				myChartDistribucion.dataProvider = myChartDistribucion.aplicarFormatoTableroClientes( $arreglo );
				
				if (!_showGrafica)
				{
					myChartDistribucion.invalidateDisplayList();
					grafDistribucion.visible = grafDistribucion.includeInLayout = true;
					showGrafica.play();
				}	
			}
			
			private function setValoresFooter($arreglo:ArrayCollection):void
			{
				_sqlF = new Query($arreglo,["descripcion","fabrica"]);
				
				var _noProductos:Number = _sqlF.getValoresCampoOmitiendoRepetidosDeTodoElUniverso("descripcion").length;
				var _cantidad :Number  = _sqlF.getSumarCampo("cant",[],"",true);
				var _monto :Number  = _sqlF.getSumarCampo("costo",[],"",true);
				var _noFabrica:Number = _sqlF.getValoresCampoOmitiendoRepetidosDeTodoElUniverso("fabrica").length;
				
				lbl1_nototal.text ="";
				lbl2_noDescripcion.text=_noProductos == 1 ? "1 Producto":_noProductos.toString()+" Productos";
				lbl3_totalCantidad.text = _cantidad == 1 ? "1 Pieza":_cantidad.toString()+" Piezas";
				lbl4_montoTotal.text= "$"+UtilsFormatosNumericos.precisionADosDecimalesConComas(_monto);
				lbl5_noFabrica.text= _noFabrica == 1 ? "1 Marca":_noFabrica.toString()+" Marcas";
				
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Parallel id="showGrafica" effectEnd="showGrafica_effectEndHandler(event)" target="{grafDistribucion}" > 
			<s:Fade alphaFrom="0" alphaTo="1" duration="100" startDelay="200"/>
			<s:Resize widthFrom="0" widthTo="300" duration="130"/>
		</s:Parallel>
		
		<s:Parallel id="hideGrafica" effectEnd="hideGrafica_effectEndHandler(event)" target="{grafDistribucion}" >
			<s:Fade alphaFrom="1" alphaTo="0" duration="50"/>
			<s:Resize widthFrom="300" widthTo="0" duration="300"/>
		</s:Parallel>	
	</fx:Declarations>
	
	<componentes:TituloChartMaxTablero width="100%" text="MIX LÍNEAS" />
	<mx:ViewStack id="stackGeneral" width="100%" height="100%" paddingBottom="0" creationPolicy="all">
		
		<s:NavigatorContent id="vistaTabla" width="100%" height="100%">
			<s:VGroup width="100%" height="100%" paddingBottom="0" gap="0">
				<s:VGroup width="100%" height="100%" paddingBottom="0" horizontalAlign="center">
					<otros:divisionGruesa width="100%" />
					<s:HGroup width="100%" paddingBottom="10" paddingTop="10" horizontalAlign="right" >
						<s:ButtonBar width="70%" height="30" id="btnBarra" selectedIndex="0" 
									 dataProvider="{ this._arregloCincoBotones}" click="btnBarra_click()" 
									 skinClass="skins.botoneras.botoneraBandera.skinBotoneraBandera" />
					</s:HGroup>
						
					<otros:divisionGruesa width="100%"/>
					<s:VGroup id="v1" height="90%" width="100%">
						
					<AdvancedDataGrid:PQNetAdvanceDataGridFooter id="tablaProductos" width="100%" rowHeight="40" height="100%" 
																 disableDragableColumns="{[0]}" disableResizableColumns="{[0]}"
																 anchoColumnas="{['8%','47%','15%','15%','=']}" dataProvider="{this._listadoProductosClienteTrabajo}" paddingTop="0" mostrarFooter="false">
						<AdvancedDataGrid:columns>
							<mx:AdvancedDataGridColumn headerText="#" dataField="numFila" />
							<mx:AdvancedDataGridColumn headerText="Descripción" dataField="descripcion"  sortCompareFunction="{compareFunction_Monto}">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false">
											<s:states>
												<s:State name="normal"/>
												<s:State name="hovered"/>
												<s:State name="selected"/>
											</s:states>
											<label:Texto text="{data.descripcion}" width="100%" fontSize="12" maxDisplayedLines="2"/>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn headerText="Cantidad" dataField="cant"/>
							<mx:AdvancedDataGridColumn headerText="Monto" dataField="costoString" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ProductosCliente;
												]]>
											</fx:Script>
											<s:states>
												<s:State name="normal"/>
												<s:State name="hovered"/>
												<s:State name="selected"/>
											</s:states>
											<label:Texto text="{data.costoString}" width="100%" fontSize="12" />
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn headerText="Marca" dataField="fabrica"/>
						</AdvancedDataGrid:columns>
					</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
					</s:VGroup>
				</s:VGroup>
				<otros:division width="100%" grueso="2" color="0xeaeaea"/>
				<s:HGroup id="grpFooter" width="100%" height="75" verticalAlign="middle" gap="0">
					<label:Titulo id="lbl1_nototal" paddingTop="0" width="8%" textAlign="center" />
					<label:Titulo id="lbl2_noDescripcion" paddingTop="0" width="47%" textAlign="center"/>
					<label:Titulo id="lbl3_totalCantidad" paddingTop="0" width="15%" textAlign="center" />
					<label:Titulo id="lbl4_montoTotal" paddingTop="0" width="15%" textAlign="center" />
					<label:Titulo id="lbl5_noFabrica" paddingTop="0" width="15%" textAlign="center" />
				</s:HGroup>
				
				<otros:divisionHueca width="100%" />
				<s:HGroup width="100%" height="40" verticalAlign="middle" paddingBottom="5" paddingTop="10">
					<grafica:botonPopUp icono="chart" click="stackGeneral.selectedChild = vistaGrafico"/>
					<pqNet:botonPqNetLargo label="Inicio" click="minimiza()" />
					<s:Spacer width="100%" />
					<pqNet:botonPqNetLargo id="btnExportar" icono="exportar" label="Exportar" click="generaArchivo()" />
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		
		<s:NavigatorContent id="vistaGrafico" width="100%" height="100%">
			<s:HGroup width="100%" height="100%" gap="0" paddingRight="-20">
				<s:VGroup width="100%" height="100%" gap="0" paddingRight="20">
					<otros:divisionGruesa width="100%" />
					<s:HGroup id="grpPrincipal" width="100%" height="100%" gap="0"  >
						<s:Group width="100%" height="100%" >
							<s:HGroup width="100%" horizontalAlign="right" paddingTop="20">
								<grafica:botonPopUp id="btnCloseGraf" icono="tache" click="btnCloseGraf_clickHandler(event)" visible="false" />
							</s:HGroup>
							<s:HGroup width="100%" height="100%" paddingTop="40" paddingBottom="20">
								<graficas:PieChartPqGris id="myChart" width="100%" height="100%" dataProvider="{null}" showDataTips="false" innerRadius=".5"
														 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true" itemClick="myChart_itemClickHandler(event)">
									<graficas:series>
										<graficas:pieSeriesPqNet field="total"/>
									</graficas:series>
								</graficas:PieChartPqGris>
								<otros:VDivisionDelgada id="divisionGrafica" height="100%"  visible="false" includeInLayout="false"/>
								<s:VGroup width="0" height="100%" id="grafDistribucion" visible="false">
									<label:TituloBankGothic_30 id="tituloDistribucion"/>
									<graficas:PieChartPqGris id="myChartDistribucion"  width="100%" height="100%" showDataTips="false" innerRadius=".5"
															 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true" >
										<graficas:series>
											<graficas:pieSeriesPqNet field="total"/>
										</graficas:series>
									</graficas:PieChartPqGris>
								</s:VGroup>
							</s:HGroup>
						</s:Group>
					</s:HGroup>
					<s:Label width="100%" paddingBottom="10" styleName="axisVerticalLabels">
						<s:text>Los montos se refieren a precio de Venta</s:text>
					</s:Label>
					<otros:divisionHueca width="100%" />
					<s:HGroup width="100%" height="40" verticalAlign="middle" paddingTop="10" paddingBottom="5">
						<grafica:botonPopUp icono="tabla" click="seleccionaTabla()"/>
						<pqNet:botonPqNetLargo label="Inicio" click="minimiza()" />
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>		
		</s:NavigatorContent>
	</mx:ViewStack>
</s:VGroup>
