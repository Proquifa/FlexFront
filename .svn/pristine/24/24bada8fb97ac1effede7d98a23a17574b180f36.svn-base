<?xml version="1.0" encoding="utf-8"?>
<textinput:txtInputBlancoDefaultPQNet xmlns:fx="http://ns.adobe.com/mxml/2009" 
									  xmlns:s="library://ns.adobe.com/flex/spark" 
									  xmlns:mx="library://ns.adobe.com/flex/mx" 
									  xmlns:textinput="skins.skin.textinput.*"
									  creationComplete="init()"
									  >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.adobe.flex.extras.controls.eventotextinputemail.EventoTextInputEmail;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.validators.EmailValidator;
			import mx.validators.ValidationResult;
			
			private var emails:ArrayCollection = new ArrayCollection();
			private var validador:EmailValidator = new EmailValidator();
			private var errores:ArrayCollection = new ArrayCollection();
			private var numDirecciones:int = 0;
			private var numResultados:int = 0;
			private var _vieneD:String = new String;
			public var activarAlerta:Boolean = false;
			
			
			
			private function init():void{
				this.validador.addEventListener(ValidationResultEvent.VALID,validaremails);
				this.validador.addEventListener(ValidationResultEvent.INVALID,validaremails);
				this.validador.invalidCharError = "Caracteres invalidos ";
			}
			
			private function validaremails(event:ValidationResultEvent):void{
				if(event.type == "valid"){
					this.numResultados = this.numResultados + 1;
				}
				if(event.type == "invalid"){
					event.results[0].subField = (this.numResultados + 1).toString();
					this.errores.addItem(event.results[0]);
					this.numResultados = this.numResultados + 1;
				}
				if(this.numDirecciones == this.numResultados){
					if(this.errores.length == 0){
						this.dispatchEvent(new EventoTextInputEmail(EventoTextInputEmail.VALIDADO_EMAILS));
					}
					else{
						var evento:EventoTextInputEmail = new EventoTextInputEmail(EventoTextInputEmail.ERROR_EMAILS);
						if(this.activarAlerta == true){
							AlertaActivada();
						}
						evento.errores = this.errores;
						this.dispatchEvent(evento);
					}
				}
			}
			
			public function validarEmails( vieneD:String ):void{
				this._vieneD = vieneD;
				this.emails = new ArrayCollection();
				this.errores = new ArrayCollection();
				if(this.text == null || this.text == ""){
					this.dispatchEvent(new EventoTextInputEmail(EventoTextInputEmail.TEXTINPUTVACIO_EMAILS));
				}
				else{
					this.emails = new ArrayCollection(this.text.split(";"));
					this.numDirecciones = this.emails.length;
					this.numResultados = 0;
					for(var m:int = 0; m<this.emails.length; m++){
						validador.validate(this.emails[m]);
					}
				}
			}
			
			private function AlertaActivada():void{
				var texto:String = "";
				for(var m:int = 0; m<this.errores.length;m++){
					//traduccion al espaniol burdo XD
					if ( this.errores[m].errorMessage.toString() == "This field is required."){
						texto = texto + "En el campo " + _vieneD + " se necesitan datos para la dirección " + this.errores[m].subField.toString() +"\n";
					} else if ( this.errores[m].errorMessage.toString() == "The domain in your e-mail address is incorrectly formatted." ||
						this.errores[m].errorMessage.toString() == "The domain in your e-mail address is missing a period." ){
						//se utiliza this.errores[m].subField -1] para saber en el arreglo numericamente  a q correo corresponde
						texto = texto + "En el campo " + _vieneD  + " el formato del dominio de un correo es incorrecta para la dirección " + this.emails[this.errores[m].subField -1] + "\n";
					} else if ( this.errores[m].errorMessage.toString() == "An at sign (@) is missing in your e-mail address." ){
						//se utiliza this.errores[m].subField -1] para saber en el arreglo numericamente  a q correo corresponde
						texto = texto + "En el campo " + _vieneD  + " se necesita un (@) para la dirección " + this.emails[this.errores[m].subField -1] + "\n";
					} else if ( this.errores[m].errorMessage.toString() == "Caracteres invalidos "){
						texto = texto + "En el campo " + _vieneD  + " se encontraron caracteres invalidos como 'dos puntos', 'coma' o 'espacio en blanco'";
					}else{
						texto = texto + "En el campo " + _vieneD  + " se encontraron caracteres invalidos";
					}
				}
				//Alert.show(texto,"Errores de Validación");
				/*  var event:EventoAlertaPqNet = new EventoAlertaPqNet(EventoAlertaPqNet.MOSTRAR_ALERTA);
				event.mensaje = texto;
				event.encabezado = "Errores de Validación";
				dispatchEvent(event);  */
				alertaSingleton.show(texto,"Errores de Validación");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</textinput:txtInputBlancoDefaultPQNet>
