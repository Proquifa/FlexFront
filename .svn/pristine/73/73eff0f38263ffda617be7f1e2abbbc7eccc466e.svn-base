<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="720" height="680"
			   skinClass="skins.titleWindow.skinTitleWindowAlert"
			   creationComplete="init(event)" 
			   xmlns:ns1="vista.ev_RealizarDailyScrum.Componentes.*" 
			   >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.DailyScrum;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import skins.titleWindow.skinTitleWindowAlert;

			/*private var arrayEjecutivos:ArrayCollection;*/
			[Bindable]private var totalAsistencias:int = 0; 
			
			public function setListaEjecutivos(array:ArrayCollection):void
			{
				listaAsistencia.dataProvider = array;
			}
			public function getListaAsistencia():ArrayCollection
			{
				return ObjectUtil.copy(listaAsistencia.dataProvider) as ArrayCollection;
			}
			
			protected function cancelar(event:MouseEvent):void
			{
				dispatchEvent(new Event("cancelar"));
			}
			protected function aceptar(event:MouseEvent):void
			{
				dispatchEvent(new Event("aceptar"));
			}
			
			protected function init(event:FlexEvent):void
			{
				listaAsistencia.addEventListener("calcularContadorAsistencia",calcularAsistencia);
				listaAsistencia.addEventListener("verificarBloqueo",verificarBloqueoAsistencia);
			}
			private function calcularAsistencia(event:Event):void
			{
				totalAsistencias = 0;
				if(listaAsistencia && listaAsistencia.dataProvider){
					for each (var visita:VisitaCliente in listaAsistencia.dataProvider) 
					{
						if(visita.asistenciaEmpleado)
							totalAsistencias++;
					}
				}
			}
			private function verificarBloqueoAsistencia(event:Event):void
			{
				var lista = listaAsistencia.dataProvider;
				var bandera:Boolean = true;
				for each (var visita:VisitaCliente in lista) 
				{
					if(visita.estadoCodigo == 'incorrecto'){
						bandera = false;
						break;
					}
				}
				setBloqueoAvanzar(bandera);
			}
			
			public function setBloqueoAvanzar(value:Boolean):void
			{
				if(value){
					btnIniciar.buttonMode = true;
					btnIniciar.addEventListener(MouseEvent.CLICK,aceptar);
					colorBoton.color = 0x008894;
				}else{
					btnIniciar.buttonMode = false;
					btnIniciar.removeEventListener(MouseEvent.CLICK,aceptar);
					colorBoton.color = 0xc2c3ca;
				}
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="43" paddingBottom="20" paddingRight="20" paddingLeft="20">
		<s:HGroup width="100%">
			<s:Label text="EJECUTIVOS DE CUENTA" fontSize="20" fontFamily="Novecento" textAlign="left" width="100%" maxDisplayedLines="1" fontWeight="bold" color="#008894"/>
			<s:Label text="CÃ“DIGO VALIDADOR" fontSize="20" fontFamily="Novecento" textAlign="right" width="100%" maxDisplayedLines="1" fontWeight="bold" color="#008894"/>
		</s:HGroup>  
		
		<s:Rect width="100%" height="1">
			<s:fill>
				<s:SolidColor color="#eceef0" />
			</s:fill>
		</s:Rect>
		
		<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
				id="listaAsistencia" contentBackgroundAlpha="0"
				>
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
									xmlns:s="library://ns.adobe.com/flex/spark" 
									xmlns:mx="library://ns.adobe.com/flex/mx" 
									xmlns:otros="skins.otros.*"
									autoDrawBackground="false"
									width="100%" height="32"
									>
						
						<fx:Script>
							<![CDATA[
								import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
								import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
								
								import vista.evento.EventoRealizarDailyScrum;
								[Bindable]private var current:VisitaCliente;
								protected function cambioEstado(asistencia:Boolean,estadoCodigo:String):void
								{
									/*current.asistenciaEmpleado = chkCetificado.selected;
									current.empleado.asistencia = chkCetificado.selected;*/
									current.asistenciaEmpleado = asistencia;
									current.empleado.asistencia = asistencia;
									current.estadoCodigo = estadoCodigo;
									dispatchEvent(new Event("calcularContadorAsistencia",true));
									dispatchEvent(new Event("verificarBloqueo",true));
								}
								override public function set data(value:Object):void
								{
									if(value){
										super.data = value;
										current = value as VisitaCliente;
									}else{
										current = new VisitaCliente;
									}
								}
								
								protected function compararTexto(event:EventoRealizarDailyScrum):void
								{
									if(event.valor == current.empleado.codigoAsistencia){
										txtCodigo.currentState = "correcto";
										cambioEstado(true,'correcto');
									}else if(event.valor == ""){
										txtCodigo.currentState = "normal";
										cambioEstado(false,'sinCodigo');
									}else{
										txtCodigo.currentState = "incorrecto";
										cambioEstado(false,'incorrecto');
									}
									dispatchEvent(new Event("verificarBloqueoBoton"));
								}
								
							]]>
						</fx:Script>
						
						<s:Rect width="100%" top="0" visible="{itemIndex==0?false:true}">
							<s:fill>
								<s:SolidColor color="#000000" /><!--eceef0-->
							</s:fill>
						</s:Rect>
						
						<s:HGroup width="100%" height="100%" gap="0" verticalAlign="middle">
							<s:Label text="{itemIndex+1}" fontSize="20" fontFamily="Helvetica" color="#008894" width="50" fontWeight="bold"/>
							<s:Label text="{current.empleado.nombre}" fontSize="20" fontFamily="Helvetica" textAlign="left" width="100%" maxDisplayedLines="1" color="#404040" fontWeight="bold"/>
							<s:Spacer width="100%" />
							<!--<ns1:chkVerde id="chkCetificado" width="20" height="20" change="cambioEstado(event)"/>-->
							<ns1:textValidadorAsistencia id="txtCodigo" width="150" height="25" validarCodigo="compararTexto(event)"/>
							<s:Spacer width="10" />
						</s:HGroup>  
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
			<s:layout>
				<s:VerticalLayout rowHeight="15">
					
				</s:VerticalLayout>
			</s:layout>
		</s:List>
		
		<s:Rect width="100%" height="1">
			<s:fill>
				<s:SolidColor color="#96949a" />
			</s:fill>
		</s:Rect>
		
		<s:HGroup width="100%" >
			<s:Label text="#{listaAsistencia.dataProvider.length}" fontSize="20" fontFamily="Helvetica" textAlign="left" width="100%" maxDisplayedLines="1" color="#404040"/>
			<s:Label text="#{totalAsistencias}" fontSize="20" fontFamily="Helvetica" textAlign="right" width="100%" maxDisplayedLines="1" color="#404040"/>
		</s:HGroup>  
		
		<s:Spacer height="20" />
		<s:HGroup width="100%" >
			<s:Group width="150" height="30" click="cancelar(event)" buttonMode="true">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#008894" />
					</s:fill>
				</s:Rect>
				<s:Label text="CANCELAR" fontSize="20" fontFamily="Novecento" textAlign="center" maxDisplayedLines="1" fontWeight="bold"
						 width="100%" height="100%" verticalAlign="middle" color="#FFFFFF"/>
			</s:Group>  
			
			<s:Spacer width="100%" />
			
			<s:Group width="150" height="30" id="btnIniciar">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#008894" id="colorBoton" />
					</s:fill>
				</s:Rect>
				<s:Label text="ACEPTAR" fontSize="20" fontFamily="Novecento" textAlign="center" maxDisplayedLines="1" fontWeight="bold"
						 width="100%" height="100%" verticalAlign="middle" color="#FFFFFF"/>
			</s:Group>  
			
		</s:HGroup> 
		
		
	</s:VGroup>  
	
</s:TitleWindow>
