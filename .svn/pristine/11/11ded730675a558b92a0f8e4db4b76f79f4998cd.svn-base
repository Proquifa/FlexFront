<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="estadisticaAbiertosView"
		actionBarVisible="false" backgroundColor="#252b2c" gestureSwipe="resultSwipe(event)"  >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroNavegacion;
			
			import spark.transitions.SlideViewTransition;
			import spark.transitions.ViewTransitionDirection;
			
			public function resultSwipe(event:TransformGestureEvent):void{
				if(event.offsetX == -1){
					var evento:EventoMensajeroNavegacion = new EventoMensajeroNavegacion(EventoMensajeroNavegacion.NAVEGAR_VISTA_SIGUIENTE);
					evento.indiceNavegador = this.parentDocument["navegador"].length;
					//trace("getElement: " + this.navigator.getElementIndex(this) + " children: " + this.navigator.numChildren + " elements:" + this.navigator.numElements + " " + this.navigator.instanceIndex);
					trace("largo :" + this.parentDocument["navegador"].length);
					this.dispatchEvent(evento);
					var transicion:SlideViewTransition = new SlideViewTransition();
					transicion.direction = ViewTransitionDirection.LEFT;
					transicion.duration = 300;
					this.navigator.pushView(estadisticasRealizadosView,null,null, transicion);
					
					
				}
			}
			
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.pieChartDinamico.PieDinamico;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.pieChartDinamico.pqNetPiesChartDinamico;
			
			public var pendientesAbiertos:ArrayCollection = new ArrayCollection();
			
			public var datosGrafica:ArrayCollection = new ArrayCollection();
			
			protected var _componenteArregloPies:pqNetPiesChartDinamico;
			
			
			protected  var _listaGraficas:ArrayCollection = new ArrayCollection();
			
			public function set recibirPendientesAbiertos(pendientes:ArrayCollection):void{
				this.pendientesAbiertos = new ArrayCollection();
				if(pendientes.length > 0){
					this.pendientesAbiertos = pendientes;
					this._listaGraficas.addItem( setteaGrafica("Abiertos, En cierre\n & Cerrados", 0, Util.getInstance().consultaPieChartConteoXCampo(pendientes,"estadoPendiente", "Evento(s)")) );
					_componenteArregloPies = new pqNetPiesChartDinamico();
					//if(_componenteArregloPies == null){
					this.addElement(_componenteArregloPies);
					//}
					_componenteArregloPies.iniciarGraficas( _listaGraficas );
				}
			}
			
			
			
			private function setteaGrafica($titulo:String,$tipo:int,$dataProvider:ArrayCollection):PieDinamico
			{
				var pieRegreso:PieDinamico = new PieDinamico();
				pieRegreso.lblTitulo = $titulo;
				pieRegreso.tituloColor = 0xFFFFFF;
				pieRegreso.tipoPie = $tipo;
				pieRegreso.arregloAlimentador = $dataProvider;
				pieRegreso.tituloSize = 50;
				return pieRegreso;
			}
		]]>
	</fx:Script>
</s:View>
