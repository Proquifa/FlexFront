<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<fx:Declarations>
		<mx:SeriesInterpolate id="interpolarpiechart" duration="1000" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			
			
			import mx.charts.HitData;
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectUtil;
			
			import spark.formatters.CurrencyFormatter;
			
			[Bindable]
			private var _niveles:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var _areas:ArrayCollection = new ArrayCollection();
			
			private var _datos:ArrayCollection = new ArrayCollection();
			
			
			
			public function set	recibir_CostosNoCalidad(_datos:ArrayCollection):void{
				this._datos = new ArrayCollection();
				this._areas = new ArrayCollection();
				this._niveles = new ArrayCollection();
				if(_datos.length> 0){
					this._datos = _datos;
					calcularGraficas();
				}
				
			}
			
			private function calcularGraficas():void{
				var temp:ArrayCollection = new ArrayCollection();
				var temp2:ArrayCollection = new ArrayCollection();
				temp = ObjectUtil.copy(this._datos) as ArrayCollection;
				temp2 = ObjectUtil.copy(this._datos) as ArrayCollection;
				var tempNivel:ArrayCollection = new ArrayCollection();
				var tempArea:ArrayCollection = new ArrayCollection();
				while(temp.length > 0){
					var objNivel:Object = {};
					objNivel["label"] = temp[0].nivelGeneral
					objNivel["valor"] = temp[0].costoTotalIncidentes;
					for(var m:int = 1; m<temp.length; m++){
						if(temp[m].nivelGeneral == objNivel["label"] ){
							objNivel["valor"] = objNivel["valor"] + temp[m].costoTotalIncidentes;
							temp.removeItemAt(m);
							m = m - 1;
						}
					}
					temp.removeItemAt(0);
					tempNivel.addItem(objNivel);
				}
				
				while(temp2.length > 0){
					var objArea:Object = {};
					objArea["label"] = temp2[0].subproceso;
					objArea["valor"] = temp2[0].costoTotalIncidentes;
					for(var n:int = 1; n<temp2.length; n++){
						if(temp2[n].subproceso == objArea["label"] ){
							objArea["valor"] = objArea["valor"] + temp2[n].costoTotalIncidentes;
							temp2.removeItemAt(n);
							n = n -1;
						}
					}
					temp2.removeItemAt(0);
					tempArea.addItem(objArea);
				}
				this._niveles = ObjectUtil.copy(tempNivel) as ArrayCollection;
				this._areas = ObjectUtil.copy(tempArea) as ArrayCollection;;
			}
			
			public function customTip(data:HitData):String{
				var formato:CurrencyFormatter = new CurrencyFormatter();
				formato.useGrouping = true;
				formato.useCurrencySymbol = true;
				formato.currencySymbol = "";
				var etiqueta:String = data.item.label.toString() + " " + formato.format( data.chartItem["percentValue"]) + "%" + "\n CNC: $ " + data.item.valor; 
				
				return etiqueta;
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:HorizontalLayout gap="10" />
	</s:layout>
	<s:Panel title="Distribución de costos de no calidad generados por nivel" height="100%" width="50%">
		<mx:PieChart dataTipFunction="customTip" paddingBottom="20" paddingLeft="20" paddingTop="20" paddingRight="20" showDataTips="true" dataProvider="{this._niveles}" id="pieNiveles" width="100%" height="100%">
			<mx:series>
				<mx:PieSeries showDataEffect="{interpolarpiechart}" displayName="Nivel" field="valor" nameField="label" labelPosition="callout" labelField="label"/>
			</mx:series>
		</mx:PieChart>
	</s:Panel>
	<s:Panel title="Distribución de costos de no calidad generados por área" height="100%" width="50%">
		<mx:PieChart dataTipFunction="customTip"  paddingBottom="20" paddingLeft="20" paddingTop="20" paddingRight="20" width="100%" height="100%" showDataTips="true" dataProvider="{this._areas}" id="pieAreas">
			<mx:series>
				<mx:PieSeries showDataEffect="{interpolarpiechart}" displayName="Area" field="valor" nameField="label" labelPosition="callout" labelField="label"/>
			</mx:series>
		</mx:PieChart>
	</s:Panel>
</s:NavigatorContent>
