<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:otros="skins.otros.*" 
		  xmlns:contenedores="skins.skin.contenedores.*" 
		  xmlns:label="skins.skin.label.*" 
		  xmlns:textinput="skins.skin.textinput.*"
		  width="100%" height="100%" xmlns:shaders="skins.skin.shaders.*"  >
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.agenteAduanal.EventoCatAgenteAduanalGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.AgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			
			import skins.catalogos.catalogoAlertas;
			
			[Bindable] public var _proveedores:ArrayCollection;
			[Bindable] public var _proveedoresResp:ArrayCollection;
			public var _idAgente:Number;
			public var _proveedorSeleccionado:Number = 0;
			public var actualiza:Boolean;
			
			
			protected function inicia():void
			{
				if (lstProveedores.dataProvider!=null)
				{
					if(actualiza)
					{
						lstProveedores.selectedIndex = _proveedorSeleccionado;
						actualiza = false;
					}
					else
					{
						lstProveedores.selectedIndex = 0;
					}
					
				}
				
				if (lstProveedores.selectedItem){
					var itemProveedor:Proveedor = (this.lstProveedores.selectedItem as Proveedor)
					var obt:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.OBTENER_LISTA_FAMILIA)
					obt.idProveedor = itemProveedor.idProveedor;
					obt.idAgente = _idAgente;
					dispatchEvent( obt);
					
					var enviaPro:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.ENVIA_NOMBRE_PROVEEDOR);
					enviaPro.proveedor = (this.lstProveedores.selectedItem as Proveedor);
					dispatchEvent(enviaPro);
				}
			}
			
			
			public function set recibeProveedores( $proveedores:ArrayCollection):void{
				if ($proveedores == null) 
					return;
				
				_proveedores = ObjectUtil.copy($proveedores) as ArrayCollection;
				_proveedoresResp = ObjectUtil.copy($proveedores) as ArrayCollection;
				var final:Object = new Object();
				final.nombre = 'ultimo';
				final.tamano = _proveedores.length;
				_proveedores.addItem(final);
				inicia();
				var etiqueta:String = _proveedores.length > 1 ? ' Proveedores':' Proveedor';
				
			}
			
			/**
			 * funcion que busca las conincidencias en el universo de contactos segun el texto ingresado al Textinput
			 */ 
			private function filtroPorTexto():void{
				
				var _listaVisual:ArrayCollection = new ArrayCollection();
				var _listaPrincipal:ArrayCollection = new ArrayCollection();
				var _final:Object = new Object();
				
				_listaPrincipal = ObjectUtil.copy( _proveedoresResp ) as ArrayCollection;
				_listaVisual = ObjectUtil.copy( _listaPrincipal ) as ArrayCollection;
				if( this.busquedaAsociadas.text  != ""){
					_listaVisual = UtilsGrid.queryCampoXLike( _listaPrincipal, 'nombre', this.busquedaAsociadas.text ); 
				}
				_final.nombre = 'ultimo';
				_final.tamano = _listaVisual.length;
				_listaVisual.sort
				_listaVisual.addItem(_final);
				lstProveedores.dataProvider = new ArrayCollection(); 
				this.lstProveedores.dataProvider = ObjectUtil.copy( _listaVisual ) as ArrayCollection;
				var etiqueta:String = _listaVisual.length > 1 ? ' Proveedores':' Proveedor';
			}
			
			public function set recibeAgenteSeleccionado($pro:AgenteAduanal):void{
				if( $pro == null )
					return;
				
				_idAgente = $pro.idAgenteAduanal;
			}
			
			protected function lstProveedores_changingHandler(event:IndexChangeEvent):void
			{
				if (lstProveedores.selectedItem && lstProveedores.selectedItem.nombre != 'ultimo'){
					var itemProveedor:Proveedor = (this.lstProveedores.selectedItem as Proveedor)
					var eve:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.OBTENER_LISTA_FAMILIA)
					eve.idProveedor = itemProveedor.idProveedor;
					eve.idAgente = _idAgente;
					dispatchEvent( eve);
					
					var enviaPro:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.ENVIA_NOMBRE_PROVEEDOR);
					enviaPro.proveedor = (this.lstProveedores.selectedItem as Proveedor);
					dispatchEvent(enviaPro);
					
					dispatchEvent(new Event("mandarLimpiarIndicadorSeleccionado",true));
					
				}else{
					event.preventDefault();
					event.stopImmediatePropagation();
				}
			}
			
			public function set recibeIdMinMax( $id:Number):void
			{
				if ($id > 0)
				{
					actualiza = true;
					_proveedorSeleccionado = lstProveedores.selectedIndex;
					inicia();
				}
			}
			
			public function set recibeDesasociado( $id:Number):void
			{
				if ($id >= 0 )
				{
					actualiza = true;
					_proveedorSeleccionado = lstProveedores.selectedIndex;
					inicia();
				}else if ($id == -1)
				{
					alertaSingleton.show( 'No es posible desasociar el agente aduanal, debido a que esta siendo utilizado en alguna configuraciÃ³n de precios.' ,catalogoAlertas.TIT_ADV_operacionImposible);
				}
			}
			
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Group width="100%" height="100%" >
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#eaeaea"/>
			</s:fill>
		</s:Rect>
		<s:Rect id="fondo" width="100%" height="100%" >
			<!--<s:filters>
				<s:DropShadowFilter alpha="1" angle="-180" blurX="9" blurY="1"
									color="#424242" distance="1" hideObject="false" inner="false"
									knockout="false" quality="3" strength="1"/>
			</s:filters>-->
			<s:filters>
				<shaders:sombraVertical />
			</s:filters>
			<s:fill>
				<s:SolidColor color="#eaeaea" />
			</s:fill>
		</s:Rect>
		<contenedores:VGroupConPaddingStandardPqNet width="100%" height="100%" gap="10">
			<s:VGroup width="100%" horizontalAlign="center" gap="10">
				<label:Titulo_16_pTop10 text="PROVEEDORES" backgroundAlpha="0" backgroundColor="#e9e9e9" />
				<textinput:txtInputBlancoDefaultPQNet id="busquedaAsociadas"  skinClass="skins.textinput.busqueda.skinTextInputBusqueda" width="100%" fontStyle="normal" prompt="Proveedor" change="filtroPorTexto()" enter="filtroPorTexto()" />
			</s:VGroup>
			<s:List id="lstProveedores" borderVisible="false" horizontalScrollPolicy="off" width="100%" height="100%"  
					changing="lstProveedores_changingHandler(event)" contentBackgroundAlpha="0"
					itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.agenteAduanal.itemRenderer.operativos.CatAgenteIR_Proveedores" 
					dataProvider="{_proveedores}">
			</s:List>
		</contenedores:VGroupConPaddingStandardPqNet>
	</s:Group>
	
</s:VGroup>
