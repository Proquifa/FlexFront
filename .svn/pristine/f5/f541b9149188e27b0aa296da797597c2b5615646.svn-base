<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" implements="mx.managers.IFocusManagerContainer"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="500" height="100%"
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:popUp="skins.popUp.*" xmlns:otros="skins.otros.*" xmlns:pqNet="skins.botones.pqNet.*">
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.edit.SelectionState;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.admonComunicacion.vistas.eventos.EventoPopUpContactos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.CatalogoItem;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Direccion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.core.IFlexDisplayObject;
			import mx.managers.ISystemManager;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosEtiquetas;
			import skins.catalogos.catalogoIconosGrid;
			import skins.panel.componentes.txtTitulo;
			
			/* import vista.evento.EventoEVReqMovil;
			
			
			private var _popUpRutas:VendedorRutasContactosPopUp; */
			
			[Bindable]
			public var _contacto:Contacto;
			[Bindable]
			public var _idCliente:int;
			[Bindable]
			public var _creaContacto:Boolean;
			[Bindable]
			private var _tipoEvento:String;
			
			[Bindable] private var _vieneDe:String;
			
			private var _presionado:Boolean;
			
			private var _idContacto:int = 0;
			
			public function get defaultButton():IFlexDisplayObject{
				// TODO Auto Generated method stub
				return txtNombre; // <-- PLACE THE REFERENCE FOR SOME DEFAULT FOCUSABLE COMPONENT HERE (DEFAULT BUTTON OR WHATEVER)
			}
			public function set defaultButton(value:IFlexDisplayObject):void{
				// TODO Auto Generated method stub
				
			}
			override public function get systemManager():ISystemManager{
				return super.systemManager;
				// TODO Auto Generated method stub
				//return null;
			}
			private var _nombre:String = "";
			private var _email:String = "";
			public function creaContacto( $contacto:Contacto ):void{
				if ($contacto == null){
					return;
				}
				_vieneDe = $contacto.vieneDE_PopUp;
				_creaContacto = true;
				_nombre = this.txtNombre.text;
				_email = this.txtEmail.text;
				_contacto = new Contacto();
				_contacto.habilitado = true;
				_contacto.empresa = $contacto.empresa;
				_contacto.idEmpresa = $contacto.idEmpresa
				_contacto.tipo = 'Clientes';
				_tipoEvento = 'inserta';
				_idContacto = 0;
				this.txtNombre.text = _nombre;
				this.txtEmail.text = _email;
				
				lblEmail.visible = txtEmail.visible = _vieneDe == 'LlamNew' ? false : true;
				lblEmail.includeInLayout = txtEmail.includeInLayout = _vieneDe == 'LlamNew' ? false : true;
				
			}
			
			private function salirPopUpContacto():void{
				limpia();
				var evt:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.CANCELA_DATOS_CONTACTO_POUP );
				evt.estatusContacto = "cierra";
				dispatchEvent( evt );
			} 
			private function limpia():void{
				_contacto = new Contacto();
			}
			
			private function validaContenido():Boolean{
				var valida:Boolean = true;
				if(txtNombre.text == "" ) {
					alertaSingleton.show('Es obligatorio el Nombre del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					valida = false;
					return valida;
				}
				
				if(txtEmail.text == "" && _vieneDe != 'LlamNew') {
					alertaSingleton.show('Es obligatorio el Email del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					valida = false;
					return valida;
				}
				return valida;
			}
			
			private function guardaContacto():void{
				if ( validaContenido()  ){
					var evt:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.SELECCIONA_CONTACTO );
					evt.nuevoContacto = new Contacto();
					evt.nuevoContacto.nombre = txtNombre.text;
					evt.nuevoContacto.EMail = txtEmail.text;
					evt.nuevoContacto.empresa = _contacto.empresa;
					evt.nuevoContacto.idEmpresa = _contacto.idEmpresa;
					evt.nuevoContacto.titulo = "nuevoContacto";
					dispatchEvent( evt );
					var evtC:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.CANCELA_DATOS_CONTACTO_POUP );
					evtC.estatusContacto = "edita";
					dispatchEvent( evtC );
					txtNombre.text="";
					txtEmail.text="";
				}
 			}
			
			public function set recibirContactos( $datos:ArrayCollection ):void{
				if($datos == null){
					return
				}
				var $evtLimpia:EventoPopUpContactos = new EventoPopUpContactos( EventoPopUpContactos.LIMPIA_ID_CONTACTO ); 
				dispatchEvent( $evtLimpia ); 
				$datos = new ArrayCollection();
				salirPopUpContacto(); 
				_idContacto = 0;
				this.txtEmail.text = "";
				this.txtNombre.text = "";
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:states>
		<s:State name="normal" />
		<s:State name="selected" />
	</s:states>
	<popUp:PopUpBlanco width="100%" height="100%"/>
		<s:VGroup width="100%" height="100%" paddingBottom="15" paddingLeft="15" paddingRight="15" paddingTop="15"
				  x.normal="4" y.normal="3">
			<s:Label fontWeight="bold" fontSize="19" text="Nuevo Contacto"/>
			<otros:divisionGruesa width="100%" />
			<s:Spacer width="15"/>
			<s:Label  fontSize="16" text="{ _contacto.empresa }" width="100%" />
			<otros:division width="100%" />
			<s:Spacer width="15"/>
			<s:VGroup width="100%" paddingLeft="15" paddingRight="15"
					  height.selected="100%">
				<s:HGroup width="100%">
					<s:Label text="Nombre:" fontWeight="bold" width="70%"/>
					<s:Spacer width="15"/>
					<s:Label includeIn="selected" width="30%" fontWeight="bold" text="TÃ­tulo:" />
				</s:HGroup>
				<s:HGroup width="100%">
					<s:TextInput fontStyle="normal"  width="100%" id="txtNombre" text="{ _contacto.nombre }" />
				</s:HGroup>
				<s:Spacer includeIn="selected" width="15"/>
				
				<s:Spacer width="15"/>
				<s:Label text="E-Mail:" fontWeight="bold" id="lblEmail"/>
				<s:TextInput fontStyle="normal" width="100%" id="txtEmail" text="{ _contacto.EMail }" />
				<s:Spacer includeIn="selected" height="15"/>
				
			</s:VGroup>
			<otros:division includeIn="selected" width="100%"/>
			<s:Spacer width="15"/>
			
			<s:Spacer height="100%"/>
			<otros:division width="100%"/>
			<s:Spacer width="10"/>
			<s:HGroup width="100%" height="100%">
				<pqNet:botonPqNetLargo label="Cancelar" click="salirPopUpContacto()"/>
				<s:Spacer width="100%"/>
				<pqNet:botonPqNetLargo label="Asociar" click="guardaContacto()" id="btnGuardar"/>
			</s:HGroup>
		</s:VGroup>
</s:Group>
