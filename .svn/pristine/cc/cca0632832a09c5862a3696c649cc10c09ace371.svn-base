<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		actionBarVisible="false" backgroundColor="#252b2c" gestureSwipe="slideFunction(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import eventos.EventoMensajeroNavegacion;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.pieChartDinamico.PieDinamico;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.pieChartDinamico.pqNetPiesChartDinamico;
			
			import spark.transitions.SlideViewTransition;
			import spark.transitions.ViewTransitionDirection;
			
			public var pendientesRealizados:ArrayCollection = new ArrayCollection();
			
			public var datosGrafica:ArrayCollection = new ArrayCollection();
			
			protected var _componentesArregloPies:pqNetPiesChartDinamico;
			
			protected var _listaGraficas:ArrayCollection = new ArrayCollection();
			
			
			public function set recibirPendientesRealizados(pendientes:ArrayCollection):void{
				this.pendientesRealizados = new ArrayCollection();
				if(pendientes.length > 0){
					this.pendientesRealizados = pendientes;
					var datos:ArrayCollection = Util.getInstance().consultaPieChartConteoXCampo(pendientes,"realizado","Evento(s)");	
					var datos2:ArrayCollection = new ArrayCollection();
					if(datos[0].tipo == false){
						if(datos.length > 1){
							datos[1].tipo = "Realizado";
							datos2.addItem(datos[1]);
						}
						datos[0].tipo = "No realizado";
						datos2.addItem(datos[0]);
					}
					else{
						datos[0].tipo = "Realizado";
						datos2.addItem(datos[0]);
						if(datos.length > 1){
							datos[1].tipo = "No realizado";
							datos2.addItem(datos[1]);
						}
					}
					
					this._listaGraficas.addItem( setteaGrafica("Realizados VS\nNo realizados",1,datos2));
					_componentesArregloPies = new pqNetPiesChartDinamico();
					this.addElement(_componentesArregloPies);
					_componentesArregloPies.iniciarGraficas(_listaGraficas);
				}
			}
			
			
			private function setteaGrafica($titulo:String,$tipo:int,$dataProvider:ArrayCollection):PieDinamico{
				var pieRegreso:PieDinamico = new PieDinamico();
				pieRegreso.lblTitulo = $titulo;
				pieRegreso.tituloColor = 0xFFFFFF;
				//pieRegreso.subTitulo = $subTitulo;
				//pieRegreso.infoGeneralDeLaGrafica = $info;
				pieRegreso.tipoPie = $tipo;
				pieRegreso.arregloAlimentador = $dataProvider;
				//pieRegreso.popUpHabilitado = $popUp;
				pieRegreso.tituloSize = 50;
				return pieRegreso;
			}
			
			protected function slideFunction(event:TransformGestureEvent):void
			{
				var popTran:SlideViewTransition = new SlideViewTransition();
				var pushTran:SlideViewTransition = new SlideViewTransition();
				popTran.direction = ViewTransitionDirection.RIGHT;
				pushTran.direction = ViewTransitionDirection.LEFT;
				popTran.duration = 300;
				pushTran.duration = 300;
				
				if(event.offsetX == 1){
					var evento1:EventoMensajeroNavegacion = new EventoMensajeroNavegacion(EventoMensajeroNavegacion.NAVEGAR_VISTA_ANTERIOR);
					evento1.indiceNavegador = this.parentDocument["navegador"].length;
					//trace("largo: " + this.navigator.getElementIndex(this) + " children: " + this.navigator.numChildren + " elements:" + this.navigator.numElements + " "+ this.navigator.instanceIndex);
					trace("largo :" + this.parentDocument["navegador"].length);
					this.dispatchEvent(evento1);
					//this.navigator.pushView(estadisticaAbiertosView,null,null,pushTran);
					this.navigator.popView(popTran);
				}
				
				if(event.offsetX == -1){
					var evento2:EventoMensajeroNavegacion = new EventoMensajeroNavegacion(EventoMensajeroNavegacion.NAVEGAR_VISTA_SIGUIENTE);
					evento2.indiceNavegador =  this.parentDocument["navegador"].length;
					//trace("getElement: " + this.navigator.getElementIndex(this) + " children: " + this.navigator.numChildren + " elements:" + this.navigator.numElements + " " + this.navigator.instanceIndex );
					trace("largo :" + this.parentDocument["navegador"].length);
					this.dispatchEvent(evento2);
					this.navigator.pushView(estadisticaJustificacionView,null,null,pushTran);
				}
			}
			
		]]>
	</fx:Script>
</s:View>
