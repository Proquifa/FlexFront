<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				
				autoDrawBackground="false"
				mouseOut="mouseOutHandler()"
				hideEffect="{fxFade}" xmlns:label="skins.skin.label.*"
				>
	<!--width="126" height="129"-->
	
	<!--"
	creationComplete="creaTriangulo()"-->
	
	<fx:Declarations>	
		<s:Fade id="fxFade" duration="200" alphaFrom="1" alphaTo="0"/>
		<s:SolidColor id="s1" color="0x{catalogoColores.LABEL_NEGRO}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.charts.series.items.LineSeriesItem;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.core.FlexGlobals;
			
			import spark.components.Label;
			import spark.primitives.Ellipse;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			private var spr:Sprite = new Sprite();
			private var _color:String;
			
			private var factorScale:int = 1;
			private var osInfo:Array;
			private	var lblTipElipse:Label;
			private var elipse:Ellipse;
			
			private var anchoMax:Number = 0;
			override protected function measure():void
			{
				super.measure();
				
				if(lblTipElipse.visible)
				{
					this.width = Math.max(anchoMax,90) * factorScale;
					this.height = Math.max(anchoMax,90) * factorScale; 
				}
				else
				{
					this.width = Math.max(anchoMax,136) * factorScale; 
					this.height = 129 * factorScale;
				}   
				
			}
			
			
			override protected function createChildren():void
			{
				super.createChildren();
				elipse = new Ellipse();
				with(elipse)
				{
					width = 90;
					height = 90;
					verticalCenter = 0;
					horizontalCenter = 0;
					alpha = 0.6;
					fill = s1;
				}
				this.addElement(elipse);
				
				lblTipElipse = new Label;
				lblTipElipse.setStyle("textAlign", "center");
				with(lblTipElipse)
				{ 
					horizontalCenter = 0;
					verticalCenter=0;
					styleName= "titulo_Helvetica_10_Blanco";
				} 
				
				this.addElement(lblTipElipse);
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
				var hd:HitData = value as HitData;
				var item:LineSeriesItem = hd.chartItem as LineSeriesItem;
				var _diferencia:Number = 0;
				var _porcentaje:String = new String();
				
				elipse.visible = elipse.includeInLayout = false;
				lblTipElipse.visible = lblTipElipse.includeInLayout = false;
				
				rectangulo.visible = rectangulo.includeInLayout = false;
				//spriteTriangulo.visible = spriteTriangulo.includeInLayout = false;
				mes.visible = mes.includeInLayout = false;
				
				lblTip0.text = '';
				
				elipse.visible = elipse.includeInLayout = true;
				lblTipElipse.visible = lblTipElipse.includeInLayout = true;
				
				var cadena:String = "";
				
				if (value.item.mes && value.item.mes != "" ) {
					cadena += String(value.item.mes).toUpperCase()   + '\n';
				}
				if (value.item.montoUSD_0 && value.item.montoUSD_0 != "") {
					cadena += "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas( value.item.montoUSD_0 ) + "\n";
				}else{
					if (value.item.montoUSD_0 == 0) {
						cadena += "$ " + UtilsFormatosNumericos.precisionADosDecimalesConComas( value.item.montoUSD_0 ) + "\n";
					}
				}
				if (value.item.visitas && value.item.visitas != "" ) {
					cadena += value.item.visitas + (value.item.visitas == 1 ? ' Visita' : ' Visitas')
				}
				if (value.element.yField == "noVisitasACRM") {
					cadena += "CRM \n";
					cadena += value.item.noVisitasACRM + (value.item.noVisitasACRM == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasASolicitud") {
					cadena += "PROGRAMADAS \n";
					cadena += value.item.noVisitasASolicitud + (value.item.noVisitasASolicitud == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasAMixta") {
					cadena += "MIXTAS \n";
					cadena += value.item.noVisitasAMixta + (value.item.noVisitasAMixta == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasANP") {
					cadena += "NO PROG \n";
					cadena += value.item.noVisitasANP + (value.item.noVisitasANP == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasBCRM") {
					cadena += "CRM \n";
					cadena += value.item.noVisitasBCRM + (value.item.noVisitasBCRM == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasBSolicitud") {
					cadena += "PROGRAMADAS \n";
					cadena += value.item.noVisitasBSolicitud + (value.item.noVisitasBSolicitud == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasBMixta") {
					cadena += "MIXTAS \n";
					cadena += value.item.noVisitasBMixta + (value.item.noVisitasBMixta == 1 ? ' Visita' : ' Visitas')
				}
				else if (value.element.yField == "noVisitasBNP") {
					cadena += "NO PROG \n";
					cadena += value.item.noVisitasBNP + (value.item.noVisitasBNP == 1 ? ' Visita' : ' Visitas')
				}
				
				lblTipElipse.text = cadena;
			}
			
			override public function move(x:Number, y:Number):void
			{
				super.move(x,y);
			} 
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				if(lblTipElipse.visible)
				{
					this.move(this.x-(this.unscaledWidth*0.55),y-15);
				}
				else
				{
					this.move(this.x-(this.unscaledWidth*0.55),y-this.unscaledHeight);
					
					graphics.clear();
					
					// Background
					graphics.beginFill(0x000000,0.6);   
					graphics.moveTo((unscaledWidth/2)-5,unscaledHeight);
					graphics.lineTo((unscaledWidth/2),unscaledHeight+10);
					graphics.lineTo((unscaledWidth/2)+5,unscaledHeight);
					graphics.lineTo((unscaledWidth/2)-5,unscaledHeight);
					graphics.endFill();
					graphics.beginFill(0x2e2e2e);
					//graphics.drawRoundRect(0,10,unscaledWidth,unscaledHeight-10,0,0);
					//graphics.endFill(); 
				}
				
			}
			
			protected function removerToolTip():void
			{
				visible = false;
				includeInLayout = false;
			}
			
			private var idTimeOut:uint; 
			protected function mouseOutHandler():void
			{
				clearInterval( idTimeOut );
				idTimeOut = setTimeout( removerToolTip, 4500);
			}
			
			private var arrayLabels:Array = new Array;
		]]>
	</fx:Script>
	<s:Rect id="rectangulo" width="100%" height="100%"  fill="{s1}" alpha=".6" radiusX="10" radiusY="10"/>
	<s:Group id="grpTodo" top="10" bottom="10" right="10" left="10">
		<s:VGroup id="grpContenido" verticalCenter="0" horizontalCenter="0">
			<s:HGroup id="mes" verticalAlign="middle">
				<s:Image width="29" source="{catalogoIconosGrid.getInstance().render_calendario}" id="imgMes"/>
				<label:TituloHelvetica_10_Blanco id="lblTip0"/>
			</s:HGroup>
		</s:VGroup>
	</s:Group>  
	
</s:ItemRenderer>