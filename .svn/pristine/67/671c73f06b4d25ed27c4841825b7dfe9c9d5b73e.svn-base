package mx.com.proquifa.proquifanet.rsl.vista.modelo.solicitud
{
	import flash.events.Event;
	import flash.events.EventDispatcher;
	import flash.events.IEventDispatcher;
	
	import mx.collections.ArrayCollection;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
	import mx.controls.Alert;
	
	public class ModeloSolicitarVisita extends EventDispatcher
	{
		
		/**
		 ************************************************************** LISTA Clientes HABILITADOS **************************************************************
		 */ 
		private var _listaClientes:ArrayCollection;
		public function setListaClientes(datos:ArrayCollection):void{
		
			if(datos.length > 0)
				this._listaClientes = datos;
			else
				_listaClientes = new ArrayCollection();
			
			dispatchEvent(new Event ("listaClientesModeloSolicitarVisita"));
		}
		
		[Bindable(event="listaClientesModeloSolicitarVisita")]
		public function get listaClientes():ArrayCollection{
			return this._listaClientes;
		}
		
		/**
		 ************************************************************** LISTA DE VISITAS **************************************************************
		 */
		
		private var _listaVisitas:ArrayCollection;
		public function setListaVisita(datos:ArrayCollection):void{
			
			if(datos.length > 0)
				this._listaVisitas = datos;
			else
				_listaVisitas = new ArrayCollection();
			
			dispatchEvent(new Event ("listaClientesModeloSolicitarVisita"));
		}
		
		[Bindable(event="listaClientesModeloSolicitarVisita")]
		public function get listaVisitas():ArrayCollection{
			return this._listaVisitas;
		}
		
		/**
		 ************************************************************** LISTA DE CLIENTES **************************************************************
		 */
		
		private var _listaContactosClientes:ArrayCollection;
		public function setListaContactosCliente(datos:ArrayCollection):void{
			var contInicio:Contacto = new Contacto();
			contInicio.nombre = "Seleccione un contacto";
			_listaContactosClientes = new ArrayCollection();
			_listaContactosClientes.addItem(contInicio);
			
			if(datos.length > 0){
				
				this._listaContactosClientes.addAll(datos);
			}
			/*else
				_listaContactosClientes = new ArrayCollection();*/
			
			dispatchEvent(new Event ("listaContactosPorClienteModeloSolicitarVisita"));
		}
		
		[Bindable(event="listaContactosPorClienteModeloSolicitarVisita")]
		public function get enviarListaContactosCliente():ArrayCollection{
			return this._listaContactosClientes;
		}
		
		/**
		 ************************************************************** SOLICITAR VISITA **************************************************************
		 */
		
		private var respuestaSolicitud:Boolean;
		public function respuestaRegistrarSolicitud(datos:Boolean):void{
			
			respuestaSolicitud = datos;
			
			dispatchEvent(new Event ("respuestaRegistrarSolicitudVisitaModeloSolicitarVisita"));
		}
		
		[Bindable(event="respuestaRegistrarSolicitudVisitaModeloSolicitarVisita")]
		public function get enviarRespuestaSolicitudVisita():Boolean{
			return this.respuestaSolicitud;
		}
		
		/**
		 ************************************************************** GUARDAR NUEVO CONTACTO **************************************************************
		 */
		
		private var _confirmaContactoGuardado:int;
		public function setConfirmaContactoNuevo( $dato:Number):void{
			_confirmaContactoGuardado = $dato;
			
			dispatchEvent( new Event("enviarConfirmacionGuardadoContactoNuevo") );
		}
		[Bindable(Event="enviarConfirmacionGuardadoContactoNuevo")]
		public function get ConfirmaContactoNuevo():Number{
			return this._confirmaContactoGuardado;
		}
		
		/**
		 ***************************************************** error
		 */
		public function errorClientes(objeto:Object):void{
			dispatchEvent( new Event("errorBusquedaRapidaProdAlmacenModeloSolicitarVisita") );
			Alert.show( objeto.toString() );
			trace("error en la lista de Clientes");
		}		
		
		public function ModeloSolicitarVisita(target:IEventDispatcher=null)
		{
			super(target);
		}
	}
}