<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:dateField="skins.skin.dateField.*"
				xmlns:otros="skins.otros.*"
				xmlns:pqNet="skins.botones.pqNet.*"
				xmlns:comboPqNet="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" 
				xmlns:chekbox="skins.skin.chekbox.*"
				autoDrawBackground="false"
				creationComplete="init(event)">
	
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			import flash.utils.setTimeout;
			
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Cobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.HallazgosAcciones;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import vista.evento.EventoCierreSprintGV;
			import vista.juntaDeCierre.VistaOperacionCierreDeSprint;
			[Bindable] public var tamRealFontNombreUsuario:Number;
			[Bindable] public var unscaledWidthAnt:Number;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				trace(unscaledWidth);
				if(unscaledWidth != unscaledWidthAnt){	
					
					var tamRealFont:Number = (unscaledWidth / 2005) * 30;
					tamRealFont = tamRealFont < 16 ? 16: tamRealFont;
					if(tamRealFont>30)
						tamRealFont=30;
					 
					
					tamRealFontNombreUsuario = (unscaledWidth / 2005) * 18;
					tamRealFontNombreUsuario = tamRealFontNombreUsuario < 13 ? 13: tamRealFontNombreUsuario;
					
					if(tamRealFontNombreUsuario>18)
						tamRealFontNombreUsuario = 18;
					
				}
				
				unscaledWidthAnt = unscaledWidth;
				
			}
			
			override public function set data(value:Object):void{
				super.data=value as HallazgosAcciones;
				if(value){
					
					if(data.ferealizacion != null && data.ferealizacion != "" && data.ferealizacion2 == null){
						datePicker.txtDateField.text = UtilsFecha.formatoFechaGenerico(data.ferealizacion, "DD/MMM/YYYY");
					}else if((data.ferealizacion == null || data.ferealizacion == "") && data.ferealizacion2 != null && data.ferealizacion2 != ""){
						datePicker.txtDateField.text = UtilsFecha.formatoFechaGenerico(new Date (data.ferealizacion2.substring(0,4), new int(data.ferealizacion2.substring(4,6).substring(1))-1, data.ferealizacion2.substring(6,8)), "DD/MMM/YYYY");
					}else if(data.ferealizacion != null && data.ferealizacion != "" && data.ferealizacion2 != null && data.ferealizacion2 != ""){
						datePicker.txtDateField.text = UtilsFecha.formatoFechaGenerico(new Date (data.ferealizacion2.substring(0,4), new int(data.ferealizacion2.substring(4,6).substring(1))-1, data.ferealizacion2.substring(6,8)), "DD/MMM/YYYY");
					}else if(data.ferealizacion == null || data.ferealizacion == "" && data.ferealizacion2 == null || data.ferealizacion2 == ""){
						datePicker.txtDateField.text = "";
					}
					
					if(data.rectDescVisible == true){
						indexHallazgoSeleccionado.setStyle('color', 0x008895);
						asuntoHallazgoSeleccionado.setStyle('color', 0x008895);
						indexHallazgoSeleccionado.setStyle('fontWeight', 'bold');
						asuntoHallazgoSeleccionado.setStyle('fontWeight', 'bold');
					}else if(checkBoxDescartar.selected == false){
						if(StringUtil.trim(ta_RedactaObservaciones.text) !="" && cmbEV.textInput.text != "--NINGUNO--" && datePicker.txtDateField.text != ""){
							imgConRespuesta.visible = true;
							imgConRespuesta.includeInLayout = true;
							elipse.visible = false;
							elipse.includeInLayout = false;
							indexHallazgoSeleccionado.setStyle('color', 0x404040);
							asuntoHallazgoSeleccionado.setStyle('color', 0x404040);
							indexHallazgoSeleccionado.setStyle('fontWeight', 'bold');
							asuntoHallazgoSeleccionado.setStyle('fontWeight', 'bold');
							
						}else{
							imgConRespuesta.visible = false;
							imgConRespuesta.includeInLayout = false;
							elipse.visible = true;
							elipse.includeInLayout = true;
							indexHallazgoSeleccionado.setStyle('color', 0x88868A);
							asuntoHallazgoSeleccionado.setStyle('color', 0x88868A);
							indexHallazgoSeleccionado.setStyle('fontWeight', 'normal');
							asuntoHallazgoSeleccionado.setStyle('fontWeight', 'normal');
						}
					}else{
						imgConRespuesta.visible = false;
						imgConRespuesta.includeInLayout = false;
						elipse.visible = false;
						elipse.includeInLayout = true;
						indexHallazgoSeleccionado.setStyle('color', 0x88868A);
						asuntoHallazgoSeleccionado.setStyle('color', 0x88868A);
						indexHallazgoSeleccionado.setStyle('fontWeight', 'normal');
						asuntoHallazgoSeleccionado.setStyle('fontWeight', 'normal');
					}
				}
			}
			
			protected function init(event:FlexEvent):void
			{
				validarFuncionGenerar();
			}
			
			public function validarFuncionGenerar():void
			{
				if(StringUtil.trim(ta_RedactaObservaciones.text) !="" && cmbEV.textInput.text != "--NINGUNO--" && datePicker.txtDateField.text != ""){
					btnGuardar.enabled=true;
				}else{
					btnGuardar.enabled=false;
				}
			}

			public function validarFuncionGenerarDescartado():void
			{
				if(ta_RedactaObservacionesDescartado.text!=""){
					btnGuardarDescartado.enabled=true;
				}else{
					btnGuardarDescartado.enabled=false;
				}
			}
			
			public function guardaCambios():void
			{	
				var mes:String = "";
				var dia:String = "";
				data.descripcionAccion = ta_RedactaObservaciones.text;
				data.usuarioAsociado = cmbEV.selectedItem.llave;
				
				if(1+datePicker.selectedDate.month.toString().length ==1){
					mes = "0"+(datePicker.selectedDate.month+1).toString();
				}else{
					mes = (datePicker.selectedDate.month+1).toString();
				}
				if(datePicker.selectedDate.date.toString().length ==1){
					dia = "0"+datePicker.selectedDate.date.toString();
				}else{
					dia = datePicker.selectedDate.date.toString();
				}
				data.ferealizacion2 = datePicker.selectedDate.fullYear.toString() + mes + dia;
				
				ocultaObservaciones();
				
				data.modificado = true;
				dispatchEvent(new Event("validaGuardarPapa",true));

			}

			public function guardaCambiosDescartado():void
			{	
				data.motivoDescartado = ta_RedactaObservacionesDescartado.text;
				data.checkSeleccionado = true;
				data.modificado = true;

				data.rectDescVisibleDescartado = false;
				barraGrisArriba.includeInLayout = false;
				barraGrisArriba.visible = false;
				barraGrisAbajo.includeInLayout = false;
				barraGrisAbajo.visible = false;
				
				dispatchEvent(new Event("validaGuardarPapa",true));

			}
			
			
			public function cancelar():void
			{
				dispatchEvent(new Event("restauraDatosDesdeResp",true));
			}
			
			public function muestraMotivoDescartado():void
			{		
				barraGrisArriba.includeInLayout = true;
				barraGrisArriba.visible = true;
				barraGrisAbajo.includeInLayout = true;
				barraGrisAbajo.visible = true;
			}
			
			public function ocultaObservaciones():void
			{		
				barraGrisArriba.includeInLayout = false;
				barraGrisArriba.visible = false;
				barraGrisAbajo.includeInLayout = false;
				barraGrisAbajo.visible = false;
				data.rectDescVisible = false;
			}

			public function ocultaMotivoDescartado():void
			{		
				data.rectDescVisibleDescartado = false;
				barraGrisArriba.includeInLayout = false;
				barraGrisArriba.visible = false;
				barraGrisAbajo.includeInLayout = false;
				barraGrisAbajo.visible = false;
				data.checkSeleccionado = false;
			}

			public function controlaCheckBox():void
			{		
				if(data.checkSeleccionado == false){
					data.checkSeleccionado = true;
					data.descartado = true;
					ocultaObservaciones();
					muestraMotivoDescartado();
				}else{
					data.checkSeleccionado = false;
					data.descartado = false;
					data.modificado = true;
					ocultaMotivoDescartado();
				}
				dispatchEvent(new Event("validaGuardarPapa",true));
			}
			
			protected function lstHallazgos_changingHandler(event:Event):void
			{
				setTimeout(disparo, 200 );
				
				if(data.usuarioAsociado != null && data.usuarioAsociado != ""){
					var i:int = 0;
					for(i; i<cmbEV.dataProvider.length; i++){
						if(cmbEV.dataProvider.getItemAt(i).llave == data.usuarioAsociado)
							break;
					}
					cmbEV.textInput.text = cmbEV.dataProvider.getItemAt(i).nombre;
				}
			}
			
			private function disparo():void {
				var evento:EventoCierreSprintGV = new EventoCierreSprintGV(EventoCierreSprintGV.MOSTRAR_HALLAZGOS_DETALLES_VISITA_CIERRE_SPRINT);
				dispatchEvent(evento);	
			}

			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:VGroup width="100%" height="100%" >
		<otros:LineaDivision width="100%" height="1" color="0xf1f1f1"/>
		<s:HGroup id="rowSinDetalles" width="100%" height="100%" paddingRight="55" paddingTop="10" mouseDown="lstHallazgos_changingHandler(event)" color.selected="0xffffff" color.hovered="0xf1f1f1" color.normal="0xffffff">
			<s:VGroup paddingLeft="10" paddingBottom="5">
				<s:Ellipse width="15" height="15" visible="true" includeInLayout="true" id="elipse">
					<s:fill>
						<s:SolidColor color="#ef9525"/>
					</s:fill>  
				</s:Ellipse>
				<mx:Image id="imgConRespuesta" source="{catalogoIconosEtiquetas.getInstance().visitaConRespuesta}" width="15" height="15" visible="false" includeInLayout="false" />
			</s:VGroup>
			<s:Label id="indexHallazgoSeleccionado" text="{itemIndex+1}" paddingLeft="10"/>
			<s:Label id="asuntoHallazgoSeleccionado" width="95%" text="{data.descripcion}" paddingLeft="6"  fontFamily="Helvetica Oblique" color="#88868A"/>
			<s:VGroup width="16" height="16" verticalAlign="middle" horizontalAlign="center" paddingBottom="6">
				<chekbox:checkBoxVerde id="checkBoxDescartar" click="controlaCheckBox()" selected="{data.checkSeleccionado}"/>
			</s:VGroup>
		</s:HGroup>
		
		<s:Group id="barraGrisArriba" height="3" width="100%"  visible="{data.rectDescVisible || data.rectDescVisibleDescartado}" includeInLayout="{data.rectDescVisible || data.rectDescVisibleDescartado}">
			<s:Rect width="100%" height="100%">
				<s:filters>									
					<s:DropShadowFilter color="#f1f1f1" blurX="1" blurY="4" distance="3" strength="3" angle="90" quality="{BitmapFilterQuality.HIGH}"  />
				</s:filters>
				<s:fill>
					<s:SolidColor color="#f1f1f1"/>
				</s:fill>
			</s:Rect>
		</s:Group>
		
		<s:HGroup id="rectRedactarAcciones" height="240" width="100%" paddingTop="-4" visible="{data.rectDescVisible}" includeInLayout="{data.rectDescVisible}">
			<s:Group width="100%" height="100%">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor id="colorrectRedactarAcciones" color="#e7f3f4"/>
					</s:fill>
				</s:Rect>
				<s:VGroup width="100%" height="100%" paddingLeft="3">
					<s:HGroup paddingTop="10" width="100%" height="100%" >
						<s:VGroup width="100%" height="100%" textAlign="center" paddingLeft="40" paddingRight="40">
							<s:VGroup width="100%" horizontalAlign="right" click="ocultaObservaciones()">
								<mx:Image id="cierraObservaciones" source="{catalogoIconosBotones.getInstance().cerrar_verde_claro}" />	 
							</s:VGroup>
							<s:Label text="Redactar Acciones" styleName="titulo_verdeazul_18" paddingTop="0" fontSize="{tamRealFontNombreUsuario}"/>
							
							<s:Group width="100%" height="75">
								<s:Rect width="100%" height="100%">
									<s:fill>
										<s:SolidColor color="#ffffff"/>
									</s:fill>
								</s:Rect>
								<s:TextArea id="ta_RedactaObservaciones" width="100%" height="100%" prompt="Escribe Aqui" skinClass="skins.skin.textarea.TextAreaBlancoSkin" textAlign="left" keyUp="validarFuncionGenerar()" text="{data.descripcionAccion}"/>	
							</s:Group>
							
							<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingTop="10">
								<s:Label text="Asignar Ejecutivo de Venta" styleName="titulo_verdeazul_18" fontSize="{tamRealFontNombreUsuario}"/>
								<comboPqNet:ComboCatalogos id="cmbEV" width="300" creationComplete="{ cmbEV.cargarEmpleadosXTipoTablero( 'ev','--NINGUNO--' ) }" labelField="nombre" textAlign="left" close="validarFuncionGenerar()" prompt="{data.usuarioAsociado}"/>
								<s:Spacer width="100%"/>
								<s:Label text="Fecha Estimada de Realización" styleName="titulo_verdeazul_18" fontSize="{tamRealFontNombreUsuario}" paddingLeft="50"/>
								<s:VGroup verticalAlign="top" paddingBottom="10">
									<dateField:DatePickerDefault bordeRedondo="false" colorBorde="#000000" grosorBorde="1" heightLabelDatePicker="27" widthLabelDatePicker="165" id="datePicker" currentStateChanging="validarFuncionGenerar()"/>
								</s:VGroup>
							</s:HGroup>  
							<s:HGroup width="100%" height="100%" paddingTop="10" verticalAlign="middle" paddingBottom="30">
								<pqNet:botonPqNetLargo id="btnCancelar" width="150"  label="CANCELAR" colorBase="0x2e99b4" click="cancelar()"/>
								<s:Spacer width="100%"/>
								<pqNet:botonPqNetLargo id="btnGuardar" width="150"  label="GUARDAR" colorBase="0x2e99b4" click="guardaCambios()"/>
							</s:HGroup>
						</s:VGroup>
					</s:HGroup>
				</s:VGroup> 
			</s:Group> 
		</s:HGroup>
		
		<s:HGroup id="rectRedactarMotivoDescartado" height="220" width="100%" paddingTop="-4" paddingBottom="-3" visible="{data.rectDescVisibleDescartado}" includeInLayout="{data.rectDescVisibleDescartado}">
			<s:Group width="100%" height="100%">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor id="colorrectRedactarAccionesDescartado" color="#e7f3f4"/>
					</s:fill>
				</s:Rect>
				<s:VGroup width="100%" height="100%" paddingLeft="3">
					<s:HGroup paddingTop="10" width="100%" height="100%" >
						<s:VGroup width="100%" height="100%" textAlign="center" paddingLeft="40" paddingRight="40">
							<s:VGroup width="100%" horizontalAlign="right" click="ocultaMotivoDescartado()">
								<mx:Image id="cierraObservacionesDescartado" source="{catalogoIconosBotones.getInstance().cerrar_verde_claro}" />	 
							</s:VGroup>
							<s:Label text="Observaciones" styleName="titulo_verdeazul_18" paddingTop="0" fontSize="{tamRealFontNombreUsuario}"/>
							
							<s:Group width="100%" height="75">
								<s:Rect width="100%" height="100%">
									<s:fill>
										<s:SolidColor color="#ffffff"/>
									</s:fill>
								</s:Rect>
								<s:TextArea id="ta_RedactaObservacionesDescartado" width="100%" height="100%" prompt="Escribe Aqui" skinClass="skins.skin.textarea.TextAreaBlancoSkin" textAlign="left" keyUp="validarFuncionGenerarDescartado()" text="{data.motivoDescartado}"/>	
							</s:Group>
							
							<s:HGroup width="100%" height="100%" paddingTop="10" verticalAlign="middle" paddingBottom="30">
								<pqNet:botonPqNetLargo id="btnCancelarDescartado" width="150"  label="CANCELAR" colorBase="0x2e99b4" click="cancelar()"/>
								<s:Spacer width="100%"/>
								<pqNet:botonPqNetLargo id="btnGuardarDescartado" width="150"  label="GUARDAR" colorBase="0x2e99b4" click="guardaCambiosDescartado()" enabled="false"/>
							</s:HGroup>
						</s:VGroup>
					</s:HGroup>
				</s:VGroup> 
			</s:Group> 
		</s:HGroup>
		
		<s:Group id="barraGrisAbajo" height="2" width="100%"  visible="{data.rectDescVisible || data.rectDescVisibleDescartado}" includeInLayout="{data.rectDescVisible || data.rectDescVisibleDescartado}">
			<s:Rect width="100%" height="100%">
				<s:filters>									
					<s:DropShadowFilter color="#f1f1f1" blurX="1" blurY="4" distance="2" strength="2" angle="270" quality="{BitmapFilterQuality.HIGH}"  />
				</s:filters>
				<s:fill>
					<s:SolidColor color="#f1f1f1"/>
				</s:fill>
			</s:Rect>
		</s:Group>
	</s:VGroup>
	
</s:ItemRenderer>
