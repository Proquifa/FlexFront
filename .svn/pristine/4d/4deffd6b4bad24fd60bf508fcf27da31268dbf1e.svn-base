<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:comun="vista.componentes.comun.*" 
		xmlns:tableros="vista.componentes.comun.tableros.*" 
		xmlns:clientes="mapa.tableros.clientes.*" 
		xmlns:componentes1="vista.vistas.tableros.clientes.componentes.*" 
		backgroundColor="#0c0c0c" 
		actionBarVisible="false" 
		destructionPolicy="auto" 
		creationComplete="completeHandler(event)"
		>
	<fx:Declarations>
		<clientes:MapaMobTableroClientes dispatcher="{this}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.cancelacionCotizacion.CancelacionCotizacionMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.comportamientoPagos.ComportamientoMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.cotNoPed.CotDiferentePedidosMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.cotiPed.CotizacionPedidoMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.entregas.EntregasMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.mixMarcas.MixMarcasMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.mixProductos.MixProductosMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.pedidos.PedidosMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.seguimientosTab.SeguimientosMobChart;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.VentasPeriodoMobChart;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			
			import spark.effects.Fade;
			import spark.effects.Move;
			import spark.effects.Resize;
			import spark.transitions.SlideViewTransition;
			import spark.transitions.SlideViewTransitionMode;
			import spark.transitions.ViewTransitionDirection;
			import spark.utils.MultiDPIBitmapSource;
			
			import vista.gestion.tableros.DefaultTableroClientesMobil;
			
			private var fxMove:Move = new Move();
			private var fxFade:Fade = new Fade();
			private var fxResize:Resize = new Resize();
			private var _event:EventoTableroClientes;
			
			private var bBackGestion:Boolean = false;
			
			private var multiDPIBack:MultiDPIBitmapSource;
			private var multiDPIBackSelected:MultiDPIBitmapSource;
			[Bindable]
			private var currentDPI:int = FlexGlobals.topLevelApplication.applicationDPI;
			
			protected function backVistaDefaultHandler():void
			{
				imgBack.source =  multiDPIBackSelected;
				
				if( !bBackGestion )
				{
					
					bBackGestion = true;
					
					var slideTrans:SlideViewTransition = new SlideViewTransition();
					if( data.returnDirection == ViewTransitionDirection.DOWN )
						slideTrans.direction = ViewTransitionDirection.UP;
					else
						slideTrans.direction = ViewTransitionDirection.DOWN;
					slideTrans.duration = 400*factorEscala;
					slideTrans.mode = SlideViewTransitionMode.COVER;  //or COVER and PUSH modes 
					
					/* conservo los parametros del servicio */
					if( _event != null )
					{
						if( menuFlotante.lblMeses.text.length > 0 ){// MESES
							_event.mobLegend = menuFlotante.lblAnio.text + ' · ' + menuFlotante.lblMeses.text;
						}else if( menuFlotante.lblAnio.text.length > 0 ){// ANIO
							_event.mobLegend = 'GLOBAL · ' + menuFlotante.lblAnio.text;
						}
						if( menuFlotante.lblCliente.text.length > 0 )// CLIENTE/COLABORADOR
							_event.mobLegend = menuFlotante.lblCliente.text + ' · ' + menuFlotante.lblAnio.text;
						
						if( menuFlotante.lblCliente.text.length > 0 && menuFlotante.lblMeses.text.length > 0 && menuFlotante.lblAnio.text.length > 0)// CLIENTE/COLABORADOR
							_event.mobLegend = menuFlotante.lblCliente.text + ' · ' + menuFlotante.lblAnio.text + ' · ' +  menuFlotante.lblMeses.text;

						if( menuFlotante.lblProveedor.text.length > 0 )// Proveedor
							_event.mobLegend = menuFlotante.lblProveedor.text + ' · ' + menuFlotante.lblAnio.text;
						
						if( menuFlotante.lblProveedor.text.length > 0 && menuFlotante.lblMeses.text.length > 0 && menuFlotante.lblAnio.text.length > 0)// CLIENTE/COLABORADOR
							_event.mobLegend = menuFlotante.lblProveedor.text + ' · ' + menuFlotante.lblAnio.text + ' · ' +  menuFlotante.lblMeses.text;
						
						_event.mobIndexOrigen = menuFlotante.selectedIndex;
						_event.mobComboSelectedIndex = menuFlotante.cmbClientes.selectedIndex;
						_event.mobComboProveedorSelectedIndex = menuFlotante.cmbProveedor.selectedIndex;
					}
					var dataTransfer:Object = new Object();
					dataTransfer.event = _event;
					navigator.popView();
					navigator.pushView( DefaultTableroClientesMobil, dataTransfer, null, slideTrans );
				}
			}
			
			private var _currentChart:IVisualElement;
			private var factorEscala:int = 1;
			protected function completeHandler(event:FlexEvent):void
			{
				if(currentDPI == 240)
					factorEscala = 2;
				
				multiDPIBack= new MultiDPIBitmapSource;
				multiDPIBack.source160dpi = catalogoIconosBotones.getInstance().flecha_back;
				multiDPIBack.source240dpi = catalogoIconosBotones.getInstance().flecha_backDPI240;
				imgBack.source = multiDPIBack;
				
				multiDPIBackSelected = new MultiDPIBitmapSource;
				multiDPIBackSelected.source160dpi = catalogoIconosBotones.getInstance().flecha_back_selected;
				multiDPIBackSelected.source240dpi = catalogoIconosBotones.getInstance().flecha_back_selectedDPI240;
				
				menuFlotante.addEventListener( PropertyChangeEvent.PROPERTY_CHANGE, menuOrigenSelection, false, 0, true );
				
				panInformacion.informacion = data.returnInfo;
				lblTitulo.text = data.titulo; // + ' FPS: ' + stage.frameRate.toString();
				_currentChart = initChart( data.selectedIndex );
				if( _currentChart != null )
				{
					_currentChart.percentWidth = 100;
					_currentChart.percentHeight = 100;
					if( spaceWork.numElements > 0 )
						spaceWork.removeAllElements();
					spaceWork.width = width * 0.7;
					
					spaceWork.addElement( _currentChart );
				}
				this.addEventListener( "iniciarLoaderBar", startAnimateCallService, false, 0, true );
				menuFlotante.addEventListener( "iniciarLoaderBar", startAnimateCallService, false, 0, true );
				addEventListener( "terminarLoaderBar", respondAnimateCallService, false, 0, true );
				addEventListener( "errorLoaderBar", errorCallService, false, 0, true );
				menuFlotante.addEventListener( "setearEventoFiltros", setearFiltrosEnChart, false, 0, true );
				
				if( data.hasOwnProperty('event') && data.event != null )
				{
					_event = data.event;
					/*  inicio la consulta si tengo filtros previos */
					setearFiltrosEnChart( _event );
					/* el componente para lanzar la consulta debe ser re-seteado */
					menuFlotante.eventFilters( _event );
				}
				else
				{// espero la seleccion de origen GLOBAL, CLIENTE, COLABORADOR
					fxFade.stop();
					fxFade.targets = [ spaceWork, panInformacion];
					fxFade.suspendBackgroundProcessing = true;
					fxFade.duration = 150 *factorEscala;
					fxFade.startDelay = 250 *factorEscala;
					
					if( fxMove.isPlaying )
						fxMove.stop();
					
					fxMove.target = spaceWork;
					fxMove.duration = 230 *factorEscala;
					fxMove.suspendBackgroundProcessing = true;
					
					fxMove.yTo = 100 *factorEscala;
					fxFade.alphaTo = 0.1;
					fxFade.play();
					
					menuFlotante.bOpenTypeConsulta = false;
				}
				panInformacion.addEventListener( PropertyChangeEvent.PROPERTY_CHANGE,  showInfoHandler, false, 0, true );
				dispatchEvent( new Event("iniciarLoaderBar", true ) );
			}
			
			protected function initChart( $index:int ):IVisualElement
			{
				var returnIVisual:IVisualElement;
				if( $index == -1 )
					return null;
				
				switch($index)
				{
					case 0:
					{
						returnIVisual = new MixProductosMobChart();
						break;
					}
					case 1:
					{
						returnIVisual = new CotizacionPedidoMobChart();
						break;
					}
					case 2:
					{
						returnIVisual = new SeguimientosMobChart();
						break;
					}
					case 3:
					{
						returnIVisual = new PedidosMobChart();
						break;
					}
					case 4:
					{
						returnIVisual = new VentasPeriodoMobChart();
						break;
					}
					case 5:
					{
						returnIVisual = new MixMarcasMobChart();
						break;
					}
					case 6:
					{
						returnIVisual = new CotDiferentePedidosMobChart();
						break;
					}
					case 7:
					{
						returnIVisual = new CancelacionCotizacionMobChart();
						break;
					}
					case 8:
					{
						returnIVisual = new EntregasMobChart();
						break;
					}
					case 9:
					{
						returnIVisual = new ComportamientoMobChart();
						break;
					}
				}
				return returnIVisual;
			}
			
			protected function menuOrigenSelection( event:PropertyChangeEvent ):void
			{
				if( event.currentTarget.choosingFilterBool )
				{
					spaceWork.visible = false;
					spaceWork.includeInLayout = false;
				}
				else
				{
					spaceWork.visible = true;
					spaceWork.includeInLayout = true;
				}
				spaceWork.cacheAsBitmap = true;
				
				fxFade.stop();
				fxFade.targets = [ spaceWork, panInformacion];
				fxFade.suspendBackgroundProcessing = true;
				fxFade.duration = 150*factorEscala;
				fxFade.startDelay = 250*factorEscala;
				
				if( fxMove.isPlaying )
					fxMove.stop();
				
				fxMove.target = spaceWork;
				fxMove.duration = 230*factorEscala;
				fxMove.suspendBackgroundProcessing = true;
				
				if( event.currentTarget.bOpenTypeConsulta )
				{
					fxMove.yTo = 150*factorEscala;
					fxFade.alphaTo = 1;
				}
				else
				{
					fxMove.yTo = 100*factorEscala;
					fxFade.alphaTo = 0.1;
				}
				fxFade.play();
				fxMove.play();
			}
			
			protected function showInfoHandler( event:PropertyChangeEvent ):void
			{
				fxMove.stop();
				fxMove.target = spaceWork;
				fxMove.duration = 250 * factorEscala;
				fxMove.suspendBackgroundProcessing = true;
				fxMove.disableLayout = true;
				fxMove.startDelay = 100* factorEscala;
				
				if( event.currentTarget.showingInfoBool || event.currentTarget.resizingBool )
				{
					spaceWork.width = width * 0.4; 
					fxMove.xTo = 200 * factorEscala;
				}
				else
				{
					spaceWork.width = width * 0.7; 
					fxMove.xTo = 150 * factorEscala;
				}
				fxMove.play();
			}
			
			protected function setearFiltrosEnChart( event:* = null ):void
			{
				if( event != null )
					_event = event;
				if( (_currentChart as Object).hasOwnProperty( 'iniciarConsulta' ) )
					(_currentChart as Object).iniciarConsulta( _event );
			}
			
			protected function startAnimateCallService( event:* = null ):void
			{
				loaderColor.color = 0x009fa4;
				fxResize.stop();
				loaderRect.width = 0;
				fxResize.duration = 6500 * factorEscala;
				fxResize.target = loaderRect;
				fxResize.widthTo = 700 * factorEscala;
				loaderRect.alpha = 1;
				fxResize.play();
			}
			
			protected function respondAnimateCallService( event:* ):void
			{
				fxResize.stop();
				fxResize.duration = 200 * factorEscala;
				fxResize.target = loaderRect;
				fxResize.widthTo = 1004 * factorEscala;
				fxResize.play();
				
				var fxFade:Fade = new Fade();
				fxFade.target = loaderRect;
				fxFade.duration = 350 * factorEscala;
				fxFade.alphaTo = 0;
				fxFade.startDelay =  150 * factorEscala; 
				fxFade.play();
			}
			
			protected function errorCallService( event:* ):void
			{
				loaderColor.color = 0xff362a;
				fxResize.stop();
				fxResize.duration = 200 * factorEscala;
				fxResize.target = loaderRect;
				fxResize.widthTo = 1004 * factorEscala;
				fxResize.play();
				
				var fxFade:Fade = new Fade();
				fxFade.target = loaderRect;
				fxFade.duration = 350 * factorEscala;
				fxFade.alphaTo = 0;
				fxFade.startDelay =  150 * factorEscala; 
				fxFade.play();
			}
			
			protected function imgBack_clickHandler(event:MouseEvent):void
			{
				imgBack.source = multiDPIBackSelected;
				backVistaDefaultHandler()
			}
			
			protected function imgBack_mouseOverHandler(event:MouseEvent):void
			{
				imgBack.source = multiDPIBackSelected;
			}
			
			protected function imgBack_mouseOutHandler(event:MouseEvent):void
			{
				imgBack.source = multiDPIBack;
			}
			
		]]>
	</fx:Script>
	<s:Rect id="fondo" width="100%" top="0" bottom="{grpMenu.height}" depth="-10">
		<s:fill>
			<s:SolidColor color="0xFFFFFF" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<s:Rect id="loaderRect" left="{currentDPI == 160 ? 10:20}" height="{currentDPI == 160 ? 4:8}" top="{currentDPI == 160 ? 10:20}" width="0" >
		<s:fill>
			<s:SolidColor id="loaderColor" color="0x009fa4" alpha="1" />
		</s:fill>
	</s:Rect>
	
	<!-- GRAFICAS AQUI -->
	<s:Group id="spaceWork" height="60%" x="{currentDPI == 160 ? 150:300}" y="{currentDPI == 160 ? 150:300}" depth="100"/>
		
	<s:Label id="lblTitulo" styleName="titulo_Novecento_40" maxDisplayedLines="2" text="PLANTILLA DEFAULT" left="{currentDPI == 160 ? 25:50}" top="{currentDPI == 160 ? 25:50}" />
	
	<tableros:InformationSpace id="panInformacion" right="0" top="0" width="{currentDPI == 160 ? 300:600}" height="100%"/>
	
	<s:Group id="grpMenu" width="100%" height="10%" bottom="0" >
		<s:Image id="imgBack" verticalCenter="0" left="{currentDPI == 160 ? 82:164}" click="imgBack_clickHandler(event)" mouseOver="imgBack_mouseOverHandler(event)" mouseOut="imgBack_mouseOutHandler(event)"/>
		<comun:LogoButton id="imgLogo" verticalCenter="0" right="{currentDPI == 160 ? 15:30}" buttonMode="false" />
	</s:Group>
	<componentes1:MenuFlotante id="menuFlotante" top="{currentDPI == 160 ? 10:20}" bottom="0" depth="100" rightParaLibrarLogo="{imgLogo.width}"/>
</s:View>
