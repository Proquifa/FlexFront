<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:acordeon="skins.skin.acordeon.*"
		 width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)" xmlns:mapas="mx.com.proquifa.vista.mapas.*"
		 >
	
	<fx:Declarations>
		<mapas:MapaGestionarAvisoCambio />
		<s:Resize id="fxResize" target="{lstPendientes}" duration="400" effectEnd="fxResize_effectEndHandler(event)"  />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.vista.eventos.EventoInterlocutor;
			import mx.com.proquifa.vista.modelo.ContadoresGestionarAC;
			import mx.com.proquifa.vista.modelo.Pendiente;
			import mx.com.proquifa.vista.vistas.gestionarac.VistaDefaultGestionarAC;
			import mx.com.proquifa.vista.vistas.pendientes.Pendientes;
			import mx.effects.Fade;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			
			//Vistas
			private var gestionarAC:VistaDefaultGestionarAC = null;
			
			private var _menuGrande:Boolean;
			private var fxFade:mx.effects.Fade;
			private var pendiente:Pendientes;
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener(EventoInterlocutor.SELECCCIONAR_PENDIENTE, seleccionarPendiente);
				fxFade = new mx.effects.Fade( lstPendientes );
				fxFade.duration = 300;
				crearPendientes();
				
				var eventoGestionarAC:EventoInterlocutor = new EventoInterlocutor(EventoInterlocutor.OBTENER_CONTADORES);
				eventoGestionarAC.current = DatosGlobales.getInstance()._usuario.usuario;
				dispatchEvent(eventoGestionarAC);
			}
			
			public function set obtenerContadores(datos:ContadoresGestionarAC):void
			{
				/*pendiente.dataProvider.getItemAt(0).noPendientes = datos.totalPendientes;*/
				pendiente.dataProvider.getItemAt(1).noPendientes = datos.totalPorConfirmacion;
				pendiente.dataProvider.getItemAt(2).noPendientes = datos.totalPorMonitoreo;
			}
			
			private function seleccionarPendiente(event:EventoInterlocutor):void
			{
				grpContenido.removeAllElements();
				if (event.current)
				{
					switch(event.current.pendiente)
					{
						case "Por Confirmación":
						{
							if (!gestionarAC)
								gestionarAC = new VistaDefaultGestionarAC();
							
							var eventoGestionarACConfirmar:EventoInterlocutor = new EventoInterlocutor(EventoInterlocutor.OBTENER_AVISOS_CAMBIOS);
							eventoGestionarACConfirmar.current = DatosGlobales.getInstance()._usuario.usuario;
							dispatchEvent(eventoGestionarACConfirmar);
							
							gestionarAC.origen = "Confirmacion";
							grpContenido.addElement(gestionarAC);
							break;
						}
						case "Por Monitoreo":
						{
							if (!gestionarAC)
								gestionarAC = new VistaDefaultGestionarAC();
							
							var eventoGestionarACMonitoreo:EventoInterlocutor = new EventoInterlocutor(EventoInterlocutor.OBTENER_AVISOS_CAMBIOS);
							eventoGestionarACMonitoreo.current = DatosGlobales.getInstance()._usuario.usuario;
							dispatchEvent(eventoGestionarACMonitoreo);
							
							gestionarAC.origen = "Monitoreo";
							grpContenido.addElement(gestionarAC);
							
							break;
						}
							
						default:
						{
							break;
						}
					}
				}
			}
			 
			public function ELegir_Primero():void
			{
				
			}
			
			private function crearPendientes():void
			{
				var objPendiente:Pendiente;
				pendiente = new Pendientes();
				//Seccion
				pendiente.label = "INTERLOCUTOR";
				pendiente.dataProvider = new ArrayCollection();
				//Tipo Pendiente
				objPendiente = new Pendiente();
				objPendiente.pendiente = "Gestionar AC";
				objPendiente.noPendientes = 0;
				objPendiente.noSelected = false;
				pendiente.dataProvider.addItem(objPendiente);
				objPendiente = new Pendiente();
				objPendiente.pendiente = "Por Confirmación";
				objPendiente.subMenu = true;
				objPendiente.noPendientes = 0;
				pendiente.dataProvider.addItem(objPendiente);
				objPendiente = new Pendiente();
				objPendiente.pendiente = "Por Monitoreo";
				objPendiente.subMenu = true;
				objPendiente.noPendientes = 0;
				pendiente.dataProvider.addItem(objPendiente);
				lstPendientes.addElement(pendiente);
				lstPendientes.selectedIndex = 1;
			
			}
			
			private function cambiaTamanioBoxMenu():void{
				if( !_menuGrande){ 
					fxResize.stop();
					fxResize.widthTo = 0;
					fxResize.widthFrom = 320;
					_menuGrande = true ;
					/*imgSeparator.source = catalogoIconosBotones.getInstance().tab;*/
					imgSeparator.rotation = 180;
					fxFade.alphaTo = 0;
				}else{ 
					fxResize.stop(); 
					fxResize.widthTo = 320;
					fxResize.widthFrom = 0;
					_menuGrande = false; 
					/*imgSeparator.source = catalogoIconosBotones.getInstance().tabalreves;*/
					imgSeparator.rotation = 0;
					fxFade.alphaTo = 1;
				}
				fxFade.play();
				fxResize.play();
			}
			
			protected function fxResize_effectEndHandler(event:EffectEvent):void
			{
				lstPendientes.visible = !_menuGrande;
				if( _menuGrande)
				{ 
					lstPendientes.width = 0;
				}
				else
				{
					lstPendientes.width = 320;
				}
				lstPendientes.percentHeight = 100;
			}
			
			protected function cambio_menu(event:MouseEvent):void
			{
				
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" id="grpIndicadores" horizontalAlign="left" >
		<s:HGroup width="100%" height="100%" >
			<acordeon:acordeonPqNet id="lstPendientes" headerHeight="40" height="100%" width="320" selectedIndex="0" borderVisible="false" openDuration="300" click="cambio_menu(event)"/>
			<!--<plantilla:PendientesCompradorMaster id="lstPendientes" height="100%" width="320" pendienteSeleccionado="lstPendientes_pendienteSeleccionadoHandler(event)"/>-->
			<s:Group width="1" height="100%" depth="500">
				<s:Image id="imgSeparator" horizontalCenter="-12" verticalCenter="10" click="cambiaTamanioBoxMenu()" source="{catalogoIconosBotones.getInstance().flecha_cuadro}" />
			</s:Group>
			
			<s:HGroup id="grpContenido" width="100%" height="100%" />
			
		</s:HGroup>  
	</s:VGroup>
	
</s:Group>
