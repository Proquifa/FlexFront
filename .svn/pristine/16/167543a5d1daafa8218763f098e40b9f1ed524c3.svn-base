<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap  xmlns:mx="http://www.adobe.com/2006/mxml" 
					 xmlns:mate="http://mate.asfusion.com/"
					 xmlns:servicios="mx.com.proquifa.proquifanet.rsl.vista.eventos.servicios.*" 
					 xmlns:debug="com.asfusion.mate.utils.debug.*" 
					 xmlns:ioc="com.asfusion.mate.ioc.*" 
					 cache="local" 
					 >
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.ventas.consultaCotizaciones.EventoConsultaCotizaciones;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.cotizaciones.ModeloConsultaCotizaciones;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.ConsultaInspectorEnvio;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.ConsultaInspectorSeguimiento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.ConsultaPartidasCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.ConsultaTiemposCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.GridCotizaciones;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.InfoPartidasConsultaCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.MenuConsultaCotizacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaAbiertosVsCerrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaAltaProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaESAC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaEstados;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaMarca;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaNivelIngreso;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaTipo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaTopClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.CotizacionGraficaTopProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.GraficaCotizacionesETVsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.GraficaXCotizacionETvsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.graficosETvsFT.GraficaCotizacionesAbiertasVsCerradas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.graficosETvsFT.GraficaCotizacionesClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.graficosETvsFT.GraficaCotizacionesETVsFTSecundaria;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.graficosETvsFT.GraficaCotizacionesEstado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.componentesGraficas.graficosETvsFT.GraficaCotizacionesMarcas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.ventas.Cotizaciones2012.itemRenderer.PartidasConsultaCotizaciones;		
		]]>
	</mx:Script>
	
	<!--servicios:ServicioSeguimientos id="servicios"/>-->
	
	<!--	<mate:Debugger level="{Debugger.ALL}"/>-->	
	
	
	<!--Evento para obtener los documentos recibidos por fecha, busque Avanzada-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.BUSCAR_COTIZACIONES_POR_FECHA}">
		<mate:RemoteObjectInvoker  destination="{Destinos.COTIZACIONES_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="buscarCotizacionesParaReporte"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="cotizacionesResultantes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="regresarCotizaciones"
							   targetKey="recibirCotizaciones"/>	
	</mate:Injectors>
	
	
	<!--Evento para la Espera y bloqueo de Pantalla-->
	<mate:EventHandlers type="{EventoEsperar.CONFIGURAR_ESPERA}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setControlDeBloqueoPantalla"
							arguments="{[currentEvent.mensaje, currentEvent.tipoEventos,currentEvent.idButtons,currentEvent.error]}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[MenuConsultaCotizacion,GridCotizaciones]}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="actualizarEstadoDeEsperaYBloqueo"
							   targetKey="actualizarEsperaYBloqueo"/> 
	</mate:Injectors>	
	
	<!--Evento que obtiene el resumen de cosulta cotizaciones para las graficas-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_RESUMEN_COTIZACION_GRAFICAS}">
		<mate:RemoteObjectInvoker  destination="{Destinos.CONSULTA_COTIZACION_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="obtenerResumenDeConsultaCotizacion"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setResumenCotizacion"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors targets="{[CotizacionGraficaTopClientes,CotizacionGraficaTopProducto,CotizacionGraficaNivelIngreso]}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="regresaResumenCotizacion"
							   targetKey="obtenerInformacionGrafica"/>	
	</mate:Injectors>
	
	<!--obtener tipo de filtro para graficos secundarios -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_FILTRO_GRAFICO_SECUNDARIO}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setFiltroGraficoSecundario"
							arguments="{event.tipo}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[GraficaCotizacionesAbiertasVsCerradas,GraficaCotizacionesClientes,GraficaCotizacionesMarcas,GraficaCotizacionesEstado,CotizacionGraficaAltaProducto]}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="filtroGraficoSecundario"
							   targetKey="obtenerFiltroGrafico"/> 
	</mate:Injectors>
	
	<!--Evento que obtiene los totales de cosulta cotizaciones -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_CONSULTA_TOTALES}">
		<mate:RemoteObjectInvoker  destination="{Destinos.CONSULTA_COTIZACION_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="findTotalCotizacionesPeriodo"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado,event.individual]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setResumenTotalesCotizacion"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="resumenTotalesCotizacion"
							   targetKey="obtenerInfoTotales"/>	
	</mate:Injectors>
	
	<!--Evento que obtiene los totales PASADO de cosulta cotizaciones -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_CONSULTA_TOTALES_PASADO}">
		<mate:RemoteObjectInvoker  destination="{Destinos.CONSULTA_COTIZACION_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="findTotalCotizacionesPeriodo"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado,event.individual]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setResumenTotalesPasado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="resumenTotalesPasado"
							   targetKey="obtenerInfoTotales"/>	
	</mate:Injectors>
	
	<!--Evento que obtiene los totales POSPASADO de cosulta cotizaciones -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_CONSULTA_TOTALES_POSPASADO}">
		<mate:RemoteObjectInvoker  destination="{Destinos.CONSULTA_COTIZACION_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="findTotalCotizacionesPeriodo"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado,event.individual]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setResumenTotalesPosPasado"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="resumenTotalesPosPasado"
							   targetKey="obtenerInfoTotales"/>	
	</mate:Injectors>
	
	<!--Evento para obtener las cotizaciones por Busqueda Rapida -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.BUSCAR_DOCUMENTOS_POR_FOLIO}">
		<mate:RemoteObjectInvoker  destination="{Destinos.COTIZACIONES_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="buscarCotizacionesParaReporte"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado]}"
								   showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="cotizacionesResultantes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<!--Evento para obtener todas las cotización -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_PARTIDA_COTIZACION}">
		<mate:RemoteObjectInvoker destination="{Destinos.PARTIDA_COTIZACION}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPCotizasParaReporteCotizacion"
								  arguments="{[event.cotizacion]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="setPartidaCotizacion"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="errorPartidaCotizacion"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors				target="{ConsultaPartidasCotizacion}"> 
		<mate:PropertyInjector  source="{ModeloConsultaCotizaciones}"
								sourceKey="partidaCotizacion"
								targetKey="recibirPartidas"/>
	</mate:Injectors>
	<!--Obtiene el historial de los seguimientos -->
	
<!--	<mate:EventHandlers type="{EventoConsultaCotizaciones.MUESTRA_HISTORIAL}">
		<mate:RemoteObjectInvoker destination="{Destinos.COTIZA_HISTORIAL_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPCotizaHistorial"
								  arguments="{[event.partida]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="setHistorialSeguimiento"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="errorMuestraHistorial"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{InfoPartidasConsultaCotizacion}" debug="true">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}" 
							   sourceKey="historialSeguimiento"
							   targetKey="recibirHistorial"/>
	</mate:Injectors>-->
	
	<!--Evento para obtener tiempo proceso-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.MOSTRAR_TIEMPO_PROCESO}">
		<mate:RemoteObjectInvoker destination="{Destinos.PARTIDA_COTIZACION}"
								  endpoint="{Destinos.END_POINT}"
								  method="tiempoProcesoPCotiza"
								  arguments="{[event.idPcotiza]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="setTiempoProceso"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers> 
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="errorTiempoProceso"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaTiemposCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}" 
							   sourceKey="tiempoProceso"
							   targetKey="recibirTiempoProceso"/>
	</mate:Injectors>
	
	<!--Evento para obtener info seguimiento-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_INFO_SEGUIMINETO}">
		<mate:RemoteObjectInvoker destination="{Destinos.SEGUIMIENTO_COTIZACIONES_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerHistorialSeguimientoXPartida"
								  arguments="{[event.idPcotiza]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="setInfoSeguimiento"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers> 
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="errorInfoSeguimiento"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaInspectorSeguimiento}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}" 
							   sourceKey="infoSeguimiento"
							   targetKey="recibirListaSeguimiento"/>
	</mate:Injectors>
	
	<!--Evento para recibir etiqueta Tipo Moneda-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.TIPO_MONEDA}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setObtenerTipoMoneda"
							arguments="{event.moneda}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{PartidasConsultaCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="obtenerTipoMoneda"
							   targetKey="recibeTipoMoneda"/> 
	</mate:Injectors>	
	
	<!--Evento para recibir folio seleccionado-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_ID_PCOTIZA}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setObtenerIdPCotiza"
							arguments="{event.idPcotiza}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{InfoPartidasConsultaCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="obtenerIdPCotiza"
							   targetKey="recibeIdPCotizacion"/> 
	</mate:Injectors>
	
	<!--Evento para recibir pzas de partida-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.ITEM_TIEMPO_COTIZACION}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setObtenerPiezasPartida"
							arguments="{event.piezas}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaTiemposCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="obtenerPiezasPartida"
							   targetKey="recibePiezasPartida"/> 
	</mate:Injectors>	
	
	<!--Evento para recibir tiempo Proceso-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.INSPECTOR_COTIZACION_TIEMPO_PROCESO}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setObtenerTiempoProceso"
							arguments="{event.tiempoProceso}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{InfoPartidasConsultaCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="obtenerTiempoProceso"
							   targetKey="recibeTiempoProceso"/> 
	</mate:Injectors>	
	
	<!--Evento para obtener lista busque Producto-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_BUSQUEDA_PRODUCTO}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setObtenerBusquedaProducto"
							arguments="{event.busquedaProducto}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{InfoPartidasConsultaCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="obtenerBusquedaProducto"
							   targetKey="recibeListaBusquedaProducto"/> 
	</mate:Injectors>	
	
	<!--Evento para obtener total Piezas en info General-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.TOTAL_PIEZAS_COTIZACION}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setTotalPiezas"
							arguments="{event.totalPiezas}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{MenuConsultaCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="totalPiezas"
							   targetKey="obtenerTotalPiezas"/> 
	</mate:Injectors>	
	
	<!--Evento para obtener SC o SNC-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_SC_SNC}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setServicioConforme"
							arguments="{event.conforme}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaInspectorEnvio}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="servicioConforme"
							   targetKey="obtenerServicioConforme"/> 
	</mate:Injectors>	
	
	<!--Evento para obtener clasificacion origen-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_CLASIFICACION_ORIGEN}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setClasificacionOrigen"
							arguments="{event.clasificacion}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaInspectorEnvio}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="clasificacionOrigen"
							   targetKey="obtenerClasificacionOrigen"/> 
	</mate:Injectors>	
	
	<!--Evento para obtener fecha registro-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_FECHA_DE_REGISTRO}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setFechaRegistro"
							arguments="{event.ffin}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaInspectorEnvio}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="fechaRegistro"
							   targetKey="obtenerFechaRegistro"/> 
	</mate:Injectors>	
	
	<!--Evento para obtener los Clientes  -->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_LISTA_CLIENTES}">
		<mate:RemoteObjectInvoker   destination="{Destinos.CATALOGO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerClientes" 
									arguments="{event.valorAdicional}" 
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
									method="setListaClientes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>	
		</mate:RemoteObjectInvoker>				
	</mate:EventHandlers>
	
	<mate:Injectors target="{MenuConsultaCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}" 
							   sourceKey="listaClientes"
							   targetKey="recibirListaClientes" />
	</mate:Injectors>
	
	<!--Evento para mostrar ocultar tab grafica-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.MOSTRAR_OCULTAR_TAB_INFO_GRAFICAS}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setMostrarOcultaTabGrafica"
							arguments="{event.tabGrafica}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="mostrarOcultaTabGrafica"
							   targetKey="mostrarOcultarTab"/> 
	</mate:Injectors>
	
	<!--Evento para obtener la información de las gráficas de ETy FT y las de nivel Partida-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_INFO_GRAFICAS_SECUNDARIAS}">
		<mate:RemoteObjectInvoker  destination="{Destinos.PARTIDA_COTIZACION}"
								   endpoint="{Destinos.END_POINT}"
								   method="obtenerPartidasCotizaGraficaETyFT"
								   arguments="{[event.finicio, event.ffin, null, event.objCotizacion.estado,event.objCotizacion.cotizo,event.objCotizacion.nombreCliente,event.objCotizacion.MSalida,event.objCotizacion.folioCotizacion,event.idEmpleado]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setCotizacionesParaETYFT"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors targets="{[GraficaCotizacionesETVsFT,GraficaCotizacionesAbiertasVsCerradas,GraficaCotizacionesClientes,GraficaCotizacionesEstado,
					GraficaCotizacionesMarcas,CotizacionGraficaMarca,CotizacionGraficaEstados,CotizacionGraficaAbiertosVsCerrado,
					CotizacionGraficaESAC,CotizacionGraficaTipo]}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="enviarCotizacionesETYFT"
							   targetKey="obtenerInfoGrafico"/>	
	</mate:Injectors>
	
	<!--Evento para pasar info a la grafica ETvsFTSecundaria-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.PASAR_INFO_A_ETVSFT_SECUNDARIA}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="pasarInfoAGraficaETvsFT"
							arguments="{event.cotizaciones}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GraficaCotizacionesETVsFTSecundaria}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="enviarInfoAGraficaETvsFT"
							   targetKey="obtenerInfoDeGraficaPrincipalETvsFT"/> 
	</mate:Injectors>
	<!--Evento Para settear los valores de los filtros de la consulta actual-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.SETTEAR_VALORES_DE_LA_BUSQUEDA_ACTUAL}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setSettearValoresDeLaConsultaActual"
							arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado]}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="regresaValoresFiltrosDelaBusquedaActual"
							   targetKey="filtrosConsultaActual"/> 
	</mate:Injectors>
	<!--Evento que inyecta la vista seleccionada en el menu-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.SETTEAR_CURRENT_VISTA_SELECTED}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setSettearSelectedVista"
							arguments="{event.selectedVista}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{MenuConsultaCotizacion}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="enviarVistaSeleccionadaActualmente"
							   targetKey="recibirLaVistaSeleccionada"/> 
	</mate:Injectors>
	<!--Evento que setea true o false para actualizar o no la información en la vista seleccionada actualmente-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.ACTUALIZAR_VISTA_ACTUAL}">
		<mate:MethodInvoker generator="{ModeloConsultaCotizaciones}"
							method="setActualizarDatosVistaActual"
							arguments="{event.actualizarVistaCurrent}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GridCotizaciones}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="actualizarLaVistaSeleccionada"
							   targetKey="actualizarVistaActual"/> 
	</mate:Injectors>
	
	<!--GRAFICA X Cotizacion-->
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_INFO_GRAFICA_X_COTIZACION}">
		<mate:RemoteObjectInvoker  destination="{Destinos.PARTIDA_COTIZACION}"
								   endpoint="{Destinos.END_POINT}"
								   method="obtenerPartidasCotizaGraficaETyFT"
								   arguments="{[event.finicio, event.ffin, null, event.objCotizacion.estado,event.objCotizacion.cotizo,event.objCotizacion.nombreCliente,event.objCotizacion.MSalida,event.objCotizacion.folioCotizacion,event.idEmpleado]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setGraficaXCotizacionesParaETYFT"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{GraficaXCotizacionETvsFT}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="enviarGraficaXCotizacionesETYFT"
							   targetKey="obtenerInfoGrafico"/> 
		</mate:Injectors>
	
	<!--Grafica Alta Producto-->
	
	<mate:EventHandlers type="{EventoConsultaCotizaciones.OBTENER_INFO_GRAFICAS_ALTA_PRODUCTO}">
		<mate:RemoteObjectInvoker  destination="{Destinos.CONSULTA_COTIZACION_SERVICE}"
								   endpoint="{Destinos.END_POINT}"
								   method="obtenerResumenAltaProducto"
								   arguments="{[event.finicio, event.ffin, event.objCotizacion,event.idEmpleado]}"
								   showBusyCursor="true">								   
			<mate:resultHandlers>
				<mate:MethodInvoker	generator="{ModeloConsultaCotizaciones}"
									method="setGraficaAltaProducto"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:Injectors target="{CotizacionGraficaAltaProducto}">
		<mate:PropertyInjector source="{ModeloConsultaCotizaciones}"
							   sourceKey="graficaAltaProducto"
							   targetKey="obtenerInfoGrafico"/> 
	</mate:Injectors>
	
</mate:EventMap>