<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" width="100%" height="100%" 
		 xmlns:graficas="skins.skin.graficas.*">
	

	<!--						  itemClick="selectedVs(event)"-->
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PermisoImportacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.utils.ObjectUtil;
			
			private var keys:Object;
			private var _graficoTipo:Boolean = false;
			[Bindable] private var _infoVsETFT:ArrayCollection = new ArrayCollection();
			
			public function set obtenerPermisos( arregloCopia:ArrayCollection ):void{
				if(arregloCopia == null) return ;
				var fehcaHoy:Date = new Date();
				var i:int = 0;
				var arregloAgrupado:ArrayCollection = new ArrayCollection();
				var $infoGrafica:Array = new Array();
				$infoGrafica = ObjectUtil.copy((arregloCopia) as ArrayCollection).source;
				$infoGrafica.sortOn("estado", Array.DESCENDING);
				for( i = 0; i < $infoGrafica.length; i++ ){
					if( i == 0 ){
						( $infoGrafica[i] as PermisoImportacion).totalesGrafica= 1;
						arregloAgrupado.addItem( $infoGrafica[i] );
					}else{
						var seAgrego:Boolean = false;
						for(var n:int = 0; n < arregloAgrupado.length; n++ ){
							if( !seAgrego ){
								if( ( arregloAgrupado[n] as PermisoImportacion).estado ==  ($infoGrafica[i] as PermisoImportacion).estado ){
									( arregloAgrupado[n] as PermisoImportacion).costo =  ( arregloAgrupado[n] as PermisoImportacion).costo + ($infoGrafica[i] as PermisoImportacion).costo;
									( arregloAgrupado[n] as PermisoImportacion).noProductos =  ( arregloAgrupado[n] as PermisoImportacion).noProductos + ($infoGrafica[i] as PermisoImportacion).noProductos;
									( arregloAgrupado[n] as PermisoImportacion).cantidad =  ( arregloAgrupado[n] as PermisoImportacion).cantidad + ($infoGrafica[i] as PermisoImportacion).cantidad;
									( arregloAgrupado[n] as PermisoImportacion).totalesGrafica++;
									seAgrego = true;
									n= arregloAgrupado.length;
								}
							}
						}
						if( !seAgrego ){
							( $infoGrafica[i] as PermisoImportacion).totalesGrafica= 1;
							arregloAgrupado.addItem( $infoGrafica[i] );
						}
						
					}
					
				}
				if(arregloAgrupado.length == 1 && ( arregloAgrupado[0] as PermisoImportacion ).estado == 'Abierto' ){
					var permiso:PermisoImportacion = new PermisoImportacion();
					permiso = ( arregloAgrupado[0] as PermisoImportacion );
					arregloAgrupado = new ArrayCollection();
					var permisoCerrado:PermisoImportacion = new PermisoImportacion();
					permisoCerrado.estado == 'Cerrado';
					permisoCerrado.costo = 0;
					permisoCerrado.noProductos = 0;
					permisoCerrado.cantidad = 0;
					permisoCerrado.totalesGrafica = 0;
					arregloAgrupado.addItem( permisoCerrado );
					arregloAgrupado.addItem( permiso );
				}
				var arregloREsumneConsulta:ArrayCollection = new ArrayCollection();
				for( i = 0; i < arregloAgrupado.length; i++ ){
					var itemResumenConsulta:ResumenConsulta = new ResumenConsulta();
					
					itemResumenConsulta.conceptoResultado = ( arregloAgrupado[i] as PermisoImportacion).estado;
					itemResumenConsulta.etiqueta =  ( arregloAgrupado[i] as PermisoImportacion).estado;
					itemResumenConsulta.totalPermisos = ( arregloAgrupado[i] as PermisoImportacion).totalesGrafica;
					
					itemResumenConsulta.total =  ( arregloAgrupado[i] as PermisoImportacion).costo;
					itemResumenConsulta.piezasTotal =  ( arregloAgrupado[i] as PermisoImportacion).cantidad;
					itemResumenConsulta.noProductos =  ( arregloAgrupado[i] as PermisoImportacion).noProductos;
					
					arregloREsumneConsulta.addItem( itemResumenConsulta );
				}
				myChart.dataProvider = myChart.aplicarFormatoEntregas(arregloREsumneConsulta, "ABIERTA vs CERRADA");
				
			}
			
			
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" gap="0">
		<s:Spacer width="100%" height="30%" />
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%"
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5">   
			<graficas:series>
				<graficas:pieSeriesVS field="totalPermisos"/> <!--totalPartidas-->
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="10%"/>
	</s:VGroup>
	
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" height="8%" verticalAlign="middle">
			<componentes:tituloChartTablero width="100%" text="ABIERTOS VS CERRADOS" textAlign="center" />
		</s:VGroup>
		<s:Spacer width="100%" height="2%"/>
	</s:VGroup>
</s:Group>