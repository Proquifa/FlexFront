<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:otros="skins.otros.*"
		 xmlns:input="skins.skin.textinput.*" 
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:dateField="skins.skin.dateField.*" 
		 xmlns:botoneraFlotante="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.botoneraFlotante.*"
		 xmlns:registrarConfirmacion="mx.com.proquifa.vista.vistas.registrarConfirmacion.*" 
		 xmlns:plantilla="mx.com.proquifa.vista.vistas.plantilla.*"
		 xmlns:Componentes="vista.vistas.EmbalarProductos.Componentes.*"
		 xmlns:textInput="mx.com.proquifa.vista.vistas.skin.textInput.*"
		 xmlns:boton="skins.skin.botones.boton.*"
		 width="100%" height="100%"
		 creationComplete="group1_creationCompleteHandler(event)"
		 click="enfocaALector(event)"
		 >
	<fx:Script>
		<![CDATA[	
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.BolsaParaEmbalar;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.despachos.PartidaInspeccion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.itemRenderer.DireccionIR_CatProClientes;
			import mx.com.proquifa.vista.vistas.tramitarCompra.operacion.popUp.skinpopUPAgregaBolsaEmbalaje;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.otros.sprite.ImageAnimated;
			
			import vista.IR.ListaBolsasParaEmbalar_IR;
			import vista.IR.ListaElementosPorEmbalar_IR;
			import vista.evento.EventoEmbalarProductos;
			import vista.vistas.EmbalarProductos.Componentes.PopUpEscaneaBolsa;
			
			
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				txtPedimentoBack.addEventListener(FlexEvent.ENTER,pedimentoListo);
				lstBolsasParaEmbalar.addEventListener('enfocaALector',enfocaALector);
				enfocaALector(event);
			}
			
			[Bindable] public var codigoS:String
			
			private function pedimentoListo(event:FlexEvent):void
			{
				setTimeout(lectorDeCodigo, 500);
			}
			
			private function lectorDeCodigo():void
			{					
				codigoS = txtPedimentoBack.text;
				txtPedimentoBack.text = '';
				agregaProductoEscaneado();
				enfocaALectorCodigo();
			}
			
			/* ------------------------------------------------------------------------------------  */
			
			[Bindable] var listaOrdenada:ArrayCollection = new ArrayCollection;
			[Bindable] var bolsaParaEmbalar:BolsaParaEmbalar = new BolsaParaEmbalar;
			[Bindable] var arrayBolsas:ArrayCollection = new ArrayCollection;
			[Bindable] var productoEscaneado:PartidaInspeccion = new PartidaInspeccion;
			[Bindable] var noPartidasIniciales:int;
			[Bindable] var noPartidasRestantes:int;
			[Bindable] var bolsaActual:int = -1;
			public function iniciarVista($listaOrdenada:ArrayCollection):void
			{
				noPartidasIniciales = 0;
				
				if($listaOrdenada.length > 0){
					listaOrdenada = ObjectUtil.copy($listaOrdenada) as ArrayCollection;
				
					lstElementosPorEmbalar.dataProvider = listaOrdenada;
					
					for(var i:int = 0; i < lstElementosPorEmbalar.dataProvider.length; i++){
						if(lstElementosPorEmbalar.dataProvider.getItemAt(i).cantidadCompra && lstElementosPorEmbalar.dataProvider.getItemAt(i).cantidadCompra != undefined){
							noPartidasIniciales ++;
						}
					}
					
					noPartidasRestantes = noPartidasIniciales;
					
				}
				
				enfocaALectorCodigo();
			}
			
			private var lista:ArrayCollection = new ArrayCollection();
			[Bindable] public var totalCongelacion: Number = 0;
			[Bindable] public var totalRefrigeracion: Number = 0;
			[Bindable] public var totalAmbiente: Number = 0;
			[Bindable] public var totalPiezasCongelacion: Number = 0;
			[Bindable] public var totalPiezasRefrigeracion: Number = 0;
			[Bindable] public var totalPiezasAmbiente: Number = 0;
			public function actualizaLista(part:ArrayCollection):void{
				if(!part){
					return
				}
				
				totalCongelacion = 0;
				totalRefrigeracion = 0;
				totalAmbiente = 0;
				
				lista = new ArrayCollection;
				listaOrdenada = new ArrayCollection;
				var tituloCongelacion = new Array;
				var tituloRefrigeracion = new Array;
				var tituloAmbiente = new Array;
				
				for(var i = 0; i < part.length; i++){
					
					if(part.getItemAt(i).manejo == 'Congelación'){
						totalCongelacion++;
						totalPiezasCongelacion += part.getItemAt(i).cantidadCompra;
						part.getItemAt(i).num = totalCongelacion;
					}
					
					if(part.getItemAt(i).manejo == 'Refrigeración'){
						totalRefrigeracion++;
						totalPiezasRefrigeracion += part.getItemAt(i).cantidadCompra;
						part.getItemAt(i).num = totalRefrigeracion;
					}
					
					if(part.getItemAt(i).manejo == 'Ambiente'){
						totalAmbiente++;
						totalPiezasAmbiente += part.getItemAt(i).cantidadCompra;
						part.getItemAt(i).num = totalAmbiente;
					}
					
					lista.addItem(part.getItemAt(i));
				}
				
				tituloCongelacion = ['Congelación', totalCongelacion];
				tituloRefrigeracion = ['Refrigeración', totalRefrigeracion];
				tituloAmbiente = ['Ambiente', totalAmbiente];
				
				if(tituloCongelacion[1] > 0){
					listaOrdenada.addItem(tituloCongelacion);
					var listaCongelacion = new ArrayCollection;
					listaCongelacion = armaLista('congelación', lista);
					if(listaCongelacion != undefined){
						for(var i : int = 0; i < listaCongelacion.length; i++){
							listaOrdenada.addItem(listaCongelacion.getItemAt(i));				
						}
					}
				}
				if(tituloRefrigeracion[1] > 0){
					listaOrdenada.addItem(tituloRefrigeracion);
					var listaRefrigeracion = new ArrayCollection;
					listaRefrigeracion = armaLista('refrigeración', lista);
					if(listaRefrigeracion != undefined){
						for(var i : int = 0; i < listaRefrigeracion.length; i++){
							listaOrdenada.addItem(listaRefrigeracion.getItemAt(i));	
						}
					}
				}
				if(tituloAmbiente[1] > 0){
					listaOrdenada.addItem(tituloAmbiente);
					var listaAmbiente = new ArrayCollection;
					listaAmbiente = armaLista('ambiente', lista);
					if(listaAmbiente != undefined){
						for(var i : int = 0; i < listaAmbiente.length; i++){
							listaOrdenada.addItem(listaAmbiente.getItemAt(i));				
						}
					}
				}
				
				lstElementosPorEmbalar.dataProvider = listaOrdenada;
				/*enfocaALectorCodigo();*/
			}
			
			private var listaAux:ArrayCollection = new ArrayCollection();
			private function armaLista(manejo:String, universo:ArrayCollection):ArrayCollection
			{
				var universoAux:ArrayCollection = ObjectUtil.copy(universo) as ArrayCollection;
				var sqlTipo:Query = new Query(universoAux,["manejo"],true);
				var punteros:Array;
				var partidas:ArrayCollection = new ArrayCollection();
				punteros = sqlTipo.getPunteros([manejo]);
				listaAux = sqlTipo.armarLista(punteros) as ArrayCollection;
				return listaAux;
				
			}

			public function agregaProductoEscaneado():void
			{
				if(lstBolsasParaEmbalar.dataProvider || popupEscaneaBolsa){
					var seEncuentraListado : Boolean = false;
					var manejoDiferente : Boolean = false;
					
					if(popupEscaneaBolsa == null){
						for(var i:int = 0; i < lstElementosPorEmbalar.dataProvider.length; i++){
							if(lstElementosPorEmbalar.dataProvider.getItemAt(i).folioEtiqueta && lstElementosPorEmbalar.dataProvider.getItemAt(i).folioEtiqueta == codigoS){
								
								if(lstBolsasParaEmbalar.dataProvider.length == 0 || (lstBolsasParaEmbalar.dataProvider.length > 0 && lstBolsasParaEmbalar.dataProvider.getItemAt(0).manejo == lstElementosPorEmbalar.dataProvider.getItemAt(i).manejo)){
									productoEscaneado = ObjectUtil.copy(lstElementosPorEmbalar.dataProvider.getItemAt(i)) as PartidaInspeccion;
									
									abreBolsaActual(-1, true);
									
									lstBolsasParaEmbalar.dataProvider.getItemAt(bolsaActual).arrayProductos.addItem(productoEscaneado as PartidaInspeccion);
									lstBolsasParaEmbalar.dataProvider.getItemAt(bolsaActual).noPartidas++;
									lstBolsasParaEmbalar.dataProvider.getItemAt(bolsaActual).noPiezas += productoEscaneado.cantidadCompra;
									
									/*lstBolsasParaEmbalar.heightCalculado += */
									
									lstElementosPorEmbalar.dataProvider.removeItemAt(i);
									noPartidasRestantes--;
									
									colorBtnAnadirPaquetes.color = 0x0C8893;
									btnAnadirPaquetes.buttonMode = true;
									
									actualizaLista(lstElementosPorEmbalar.dataProvider as ArrayCollection);
									
									dispatchEvent(new Event("actualizaTotalizador"));
									
									if(productoEscaneado.manejo == 'Congelación')
										imgManejo.source = catalogoIconosBotones.getInstance().congelacion;
									else if(productoEscaneado.manejo == 'Refrigeración')
										imgManejo.source = catalogoIconosBotones.getInstance().refrigeracion;
									if(productoEscaneado.manejo == 'Ambiente')
										imgManejo.source = catalogoIconosBotones.getInstance().ambiente;
									
									seEncuentraListado = true;
									
									
									if(lstElementosPorEmbalar.dataProvider.length == 0){
										var evt:EventoEmbalarProductos = new EventoEmbalarProductos( EventoEmbalarProductos.ACTIVA_BTN_CONTINUAR);
										dispatchEvent( evt );
									}
									
								}else{
									manejoDiferente = true;
									alertaSingleton.show("No es posible colocar productos de diferente manejo en la misma bolsa");
								}
								
								break;
								
							}
						}
						
						if(seEncuentraListado){
							if(productoEscaneado.manejo && productoEscaneado.manejo != null){
								vgProdSinPrimerEscaneo.visible = vgProdSinPrimerEscaneo.includeInLayout = false;
								vgProdEscaneado.visible = vgProdEscaneado.includeInLayout = true;
							}
							
							lbl_RefFact.text = productoEscaneado.referenciaFact && productoEscaneado.referenciaFact > 0 ? productoEscaneado.referenciaFact as String : 'N/D';
						}else if(!manejoDiferente){
							alertaSingleton.show("El producto escaneado no se encuentra en la lista de \"Productos por Embalar\"");
						}
						
					}else{
						popupEscaneaBolsa.codigoS = codigoS;
						popupEscaneaBolsa.pedimentoListoPopUp(true);
					}
				}else {
					alertaSingleton.show("Inicie el embalaje para continuar.");
				}
			}
			
			[Bindable] public var tamanioLetra14:Number;
			[Bindable] public var tamanioLetra16:Number;
			[Bindable] public var tamanioLetra20:Number;
			[Bindable] public var tamanioLetra21:Number;
			[Bindable] public var tamanioLetra25:Number;
			[Bindable] public var tamanioLetra30:Number;
			[Bindable] public var heightCalculado:Number;
			[Bindable] public var heightSpacerLineas:Number;
			[Bindable] public var paddingLeftEscaneaProdCaracteristicas:Number;
			[Bindable] public var widthImgManejo:Number;
			[Bindable] public var paddingDetProdEsc:Number;
			[Bindable] public var tamanioRowsListas:Number;
			[Bindable] public var unscaledWidthAnt:Number;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				trace(unscaledWidth);
				if(unscaledWidth != unscaledWidthAnt){
					
					widthImgManejo = (unscaledWidth / 1604) * 20;
					widthImgManejo = widthImgManejo > 20 ? 20: widthImgManejo;
					
					if(widthImgManejo < 10)
						widthImgManejo = 10;

					paddingLeftEscaneaProdCaracteristicas = (1604 * 20 ) / unscaledWidth;
					paddingLeftEscaneaProdCaracteristicas = paddingLeftEscaneaProdCaracteristicas < 20 ? 20: paddingLeftEscaneaProdCaracteristicas;
					
					if(paddingLeftEscaneaProdCaracteristicas > 30)
						paddingLeftEscaneaProdCaracteristicas = 30;
					
					tamanioLetra14 = (unscaledWidth / 1604) * 14;
					tamanioLetra14 = tamanioLetra14 > 14 ? 14: tamanioLetra14;
					
					if(tamanioLetra14 < 6)
						tamanioLetra14 = 6;
					
					
					tamanioLetra16 = (unscaledWidth / 1604) * 16;
					tamanioLetra16 = tamanioLetra16 > 16 ? 18 : tamanioLetra16;
					
					if(tamanioLetra16 < 7)
						tamanioLetra16 = 7;
					
					tamanioLetra20 = (unscaledWidth / 1604) * 20;
					tamanioLetra20 = tamanioLetra20 > 20 ? 20 : tamanioLetra20;
					
					if(tamanioLetra20 < 8)
						tamanioLetra20 = 8;
					
					tamanioLetra21 = (unscaledWidth / 1604) * 21;
					tamanioLetra21 = tamanioLetra21 > 21 ? 21 : tamanioLetra21;
					
					if(tamanioLetra21 < 8)
						tamanioLetra21 = 8;
					
					tamanioLetra25 = (unscaledWidth / 1604) * 25;
					tamanioLetra25 = tamanioLetra25 > 25 ? 25 : tamanioLetra25;
					
					if(tamanioLetra25 < 8)
						tamanioLetra25 = 8;
					
					tamanioLetra30 = (unscaledWidth / 1604) * 30;
					tamanioLetra30 = tamanioLetra30 > 30 ? 30 : tamanioLetra30;
					
					if(tamanioLetra30 < 12)
						tamanioLetra30 = 12;
					
					heightCalculado = (unscaledHeight / 915) * 27;
					heightCalculado = heightCalculado < 10 ? 2 : heightCalculado;
					
					if(heightCalculado > 27)
						heightCalculado = 27;
					
					
					lineaVertical1.paddingBottom = 0;
					lineaVertical2.paddingBottom = 0;
					
					heightSpacerLineas = (unscaledHeight / 915) * 27;
					heightSpacerLineas = heightSpacerLineas < 15 ? 2 : heightSpacerLineas;
					
					if(heightSpacerLineas > 27)
						heightSpacerLineas = 27;

					if(unscaledHeight < 400){
						heightSpacerLineas = 0;
						lineaVertical1.paddingBottom = 40;
						lineaVertical2.paddingBottom = 40;
					}
					
					tamanioRowsListas = (unscaledHeight / 922) * 69;
					tamanioRowsListas = tamanioRowsListas < 32 ? 32 : tamanioRowsListas;
					
					if(tamanioRowsListas > 69)
						tamanioRowsListas = 69;
					
					var array:ArrayCollection = lstBolsasParaEmbalar.dataProvider as ArrayCollection;
					lstBolsasParaEmbalar.dataProvider = new ArrayCollection;
					lstBolsasParaEmbalar.dataProvider = array;
					
					var array2:ArrayCollection = lstElementosPorEmbalar.dataProvider as ArrayCollection;
					lstElementosPorEmbalar.dataProvider = new ArrayCollection;
					lstElementosPorEmbalar.dataProvider = array2;
					
					paddingDetProdEsc = (unscaledWidth / 1604) * 50;
					paddingDetProdEsc = paddingDetProdEsc < 10 ? 10 : paddingDetProdEsc;
					
					if(paddingDetProdEsc>50)
						paddingDetProdEsc = 50;
					
				}
				
				unscaledWidthAnt = unscaledWidth;
				
				/*enfocaALectorCodigo();*/
				
			}
			
			private var popupEscaneaBolsa:PopUpEscaneaBolsa;
			protected function btnIniciarEmbalaje_clickHandler(event:MouseEvent):void
			{
				if(colorBtnAnadirPaquetes.color != 0xb3b3b3){
					if( popupEscaneaBolsa == null ){
						popupEscaneaBolsa = PopUpEscaneaBolsa(PopUpManager.createPopUp( this, PopUpEscaneaBolsa, true ) );
						PopUpManager.centerPopUp( popupEscaneaBolsa );
						popupEscaneaBolsa.texto = 'Escanea el código QR de la bolsa donde iniciarás el embalaje';
						(popupEscaneaBolsa.skin as skinpopUPAgregaBolsaEmbalaje).titulo = 'INICIAR EMBALAJE';
	 					(popupEscaneaBolsa.imgEsperar as ImageAnimated).play();
						popupEscaneaBolsa.addEventListener("cancelarpop",cerrarPopUpColectando);
						popupEscaneaBolsa.addEventListener("habilitaEmbalaje",habilitaEmbalaje);
						popupEscaneaBolsa.enfocaLector();
						
					}else{
						
						PopUpManager.addPopUp( popupEscaneaBolsa , this, true );
						
					}
				}
				/*enfocaALectorCodigo();*/
			}
			
			private function cerrarPopUpColectando(event:Event):void
			{
				PopUpManager.removePopUp( popupEscaneaBolsa );
				popupEscaneaBolsa = null;
				enfocaALector(event);
			}
			
			protected function habilitaEmbalaje(event:Event):void
			{
				if(vgTituloProdEmbaladosDesactivado.visible){
					vgTituloProdEmbaladosDesactivado.visible = vgTituloProdEmbaladosDesactivado.includeInLayout = false;
					vgTituloProdEscaneado.visible = vgTituloProdEscaneado.includeInLayout = true;
					vgTituloProdEmbaladosActivado.visible = vgTituloProdEmbaladosActivado.includeInLayout = true;
					gDesactivado.visible = gDesactivado.includeInLayout = false;
					vgProdSinPrimerEscaneo.visible = vgProdSinPrimerEscaneo.includeInLayout = true;
					vgProdsEmbalados.visible = vgProdsEmbalados.includeInLayout = true;
					lineaVertical2.visible = lineaVertical2.includeInLayout = true;
				}
				
				agregarBolsaParaEmbalar();
				
				lstBolsasParaEmbalar.dataProvider = arrayBolsas;
				
				PopUpManager.removePopUp( popupEscaneaBolsa );
				popupEscaneaBolsa = null;
				
				enfocaALector(event);
			}
			
			protected function agregarBolsaParaEmbalar():void
			{
				bolsaParaEmbalar = new BolsaParaEmbalar;
				
				bolsaParaEmbalar.idPack = "idPack";
				bolsaParaEmbalar.manejo = "Congelación";
				bolsaParaEmbalar.Serial = "Serial";
				
				arrayBolsas.addItem(bolsaParaEmbalar);
				bolsaActual++;
				
				colorBtnAnadirPaquetes.color = 0xb3b3b3;
				btnAnadirPaquetes.buttonMode = false;
			}
			
			protected function lstElementosPorEmbalar_clickHandler(event:MouseEvent):void
			{
				lstBolsasParaEmbalar.addEventListener("controlaBolsaAbierta", controlaBolsaAbierta);
				
				enfocaALectorCodigo();
			}
			
			protected function enfocaALector(event:Event):void
			{
				enfocaALectorCodigo();
			}
			
			protected function enfocaALectorCodigo():void
			{
				focusManager.setFocus(txtPedimentoBack);
			}
			
			protected function controlaBolsaAbierta(event:Event)
			{
				abreBolsaActual(lstBolsasParaEmbalar.selectedIndex, lstBolsasParaEmbalar.dataProvider.getItemAt(lstBolsasParaEmbalar.selectedIndex).mostrar);
				enfocaALector(event);
			}
			
			protected function abreBolsaActual(bolsaAAbrir:int, mostrarContenido:Boolean)
			{
				if(bolsaAAbrir == -1)
					bolsaAAbrir = bolsaActual;
				
				for(var i:int = 0; i < lstBolsasParaEmbalar.dataProvider.length; i++){
					
					if(bolsaAAbrir != i)
						lstBolsasParaEmbalar.dataProvider.getItemAt(i).mostrar = false;
					else
						lstBolsasParaEmbalar.dataProvider.getItemAt(i).mostrar = mostrarContenido;
					
				}
			}
			
			private function selectRenderer(item:Object):ClassFactory
			{
				var classFactory:ClassFactory = new ClassFactory(ListaBolsasParaEmbalar_IR);
				classFactory.properties = {heightRow: tamanioRowsListas};
				
				return classFactory;
			}
			
			private function selectRenderer2(item:Object):ClassFactory
			{
				var classFactory:ClassFactory = new ClassFactory(ListaElementosPorEmbalar_IR);
				classFactory.properties = {heightRow: tamanioRowsListas};
				
				return classFactory;
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" gap="0" paddingTop="12"> 
		<s:VGroup width="100%" height="100%" paddingTop="30" >
			
			<s:HGroup width="100%" gap="0">
				<s:VGroup width="37%" gap="0">
					<mx:Label text="PRODUCTOS POR EMBALAR" fontSize="{tamanioLetra30}" fontWeight="bold" color="#008895" fontFamily="Novecentowide-Bold" fontStyle="normal" width="100%"/>	
					<s:HGroup width="100%">					
						<s:Label text="Restante:" fontSize="{tamanioLetra16}" color="0x404040"/>						
						<s:Label text="{noPartidasRestantes}" fontSize="{tamanioLetra16}" color="0x404040"/>						
						<s:Label text="de" fontSize="{tamanioLetra16}" color="0x404040"/>						
						<s:Label text="{noPartidasIniciales}" fontSize="{tamanioLetra16}" color="0x404040"/>						
						<s:Label text="{lstElementosPorEmbalar.dataProvider.length == 1 ? 'Partida,' : 'Partidas,'}" fontSize="{tamanioLetra16}" color="0x404040"/>						
						<s:Label text="{totalPiezasAmbiente + totalPiezasCongelacion + totalPiezasRefrigeracion}" fontSize="{tamanioLetra16}" color="0x404040"/>						
						<s:Label text="{totalPiezasAmbiente + totalPiezasCongelacion + totalPiezasRefrigeracion == 1 ? 'Pieza' : 'Piezas'}" fontSize="{tamanioLetra16}" color="0x404040"/>					
					</s:HGroup>  
					
				</s:VGroup> 				
				
				<s:VGroup width="27.5%"  id="vgTituloProdEscaneado" visible="false" includeInLayout="false" paddingLeft="20">
					<!--paddingLeft="{paddingDetProdEsc}"-->
					<mx:Label text="PRODUCTO ESCANEADO" fontSize="{tamanioLetra30}" fontWeight="bold" color="#008895" fontFamily="Novecentowide-Bold" fontStyle="normal" width="100%"/>								
				</s:VGroup>
				
				<s:VGroup width="35.5%" paddingLeft="22" gap="0" id="vgTituloProdEmbaladosActivado" visible="false" includeInLayout="false">
					<mx:Label text="PRODUCTOS EMBALADOS" fontSize="{tamanioLetra30}" fontWeight="bold" color="#008895" fontFamily="Novecentowide-Bold" fontStyle="normal" width="100%"/>	
				</s:VGroup> 

				<s:VGroup width="63%" paddingLeft="20" gap="0" id="vgTituloProdEmbaladosDesactivado" horizontalAlign="center">
					<mx:Label text="PRODUCTOS EMBALADOS" fontSize="{tamanioLetra30}" fontWeight="bold" color="#008895" fontFamily="Novecentowide-Bold" fontStyle="normal" width="100%" textAlign="center"/>	
				</s:VGroup> 
			</s:HGroup>
			
			<s:HGroup width="100%" height="100%" gap="0">
				<s:VGroup width="37%" height="100%" >
					<!--<mx:Label text="PRODUCTOS POR EMBALAR" fontSize="{tamanioLetra20}" fontWeight="bold" color="#008895"/>		
					<mx:Label text="Restante: 9 de 9 Partidas, 56 Piezas" fontSize="{tamanioLetra16}"/>-->	
					<s:Spacer height="{heightCalculado}"/>
					<s:HGroup width="100%" gap="0">
						<s:Label width="5%" text="#" color="#999999" textAlign="center" fontSize="{tamanioLetra14}"/>
						<s:Label width="16%" text="Cant." color="#999999" textAlign="center" fontSize="{tamanioLetra14}"/>
						<s:Label width="50%" text="Producto" color="#999999" fontSize="{tamanioLetra14}"/>
						<s:Spacer width="4%"/>
						<s:Label width="25%" text="Referencia de Inspección" color="#999999" fontSize="{tamanioLetra14}"/>
					</s:HGroup>  
					
					<s:VGroup width="100%" paddingRight="20" >
						<otros:division colorLinea="grisObscuro" width="100%" grueso="2" />
					</s:VGroup> 
					
					<!--LISTA DE Productos por Embalar-->
					<s:VGroup width="100%" height="100%" paddingRight="20" >
						<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
								id="lstElementosPorEmbalar" contentBackgroundAlpha="0"  itemRendererFunction="selectRenderer2" click="lstElementosPorEmbalar_clickHandler(event)" />
					</s:VGroup>  
					
					
				</s:VGroup> 
				
				<s:VGroup id="lineaVertical1" height="100%" width="1" verticalAlign="middle">
					<s:Spacer height="{heightSpacerLineas}"/>
					<Componentes:divicionDegradadaDelgadaInspeccion height="90%" width="3" />
				</s:VGroup>
				
				<s:HGroup width="63%" height="100%" horizontalAlign="center" verticalAlign="middle" id="gDesactivado">
												
					<s:VGroup horizontalAlign="center" width="100%">
						
						<!--width="450">-->
						<s:Label width="45%" height="117" text="SELECCIONA UNA BOLSA PARA EMPAQUETAR" textAlign="center" verticalAlign="middle" fontFamily="Novecentowide-Bold" color="#C2C3CA" fontSize="{tamanioLetra30}" fontStyle="normal" paddingTop="-25"/>
						
						<!--width="261"-->
						<s:Group id="btnIniciarEmbalaje" width="26%" height="30" buttonMode="true" click="btnIniciarEmbalaje_clickHandler(event)">
							<s:Rect width="100%" height="100%">
								<s:fill>
									<s:SolidColor color="#008894"/>
								</s:fill>
							</s:Rect>
							<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="0">
								<s:Label text="INICIAR EMBALAJE" width="100%" fontSize="{tamanioLetra21}" textAlign="center" fontWeight="bold" color="#ffffff" verticalAlign="middle" paddingTop="1.5" fontFamily="Novecentowide-Bold" fontStyle="normal"/>
							</s:HGroup>  
						</s:Group>
						
					</s:VGroup>
		
				</s:HGroup>  
				
				<!--<textInput:textInputLinea textAlign="center" id="txtPedimento" focusIn="entraFocus(event)" visible="false" includeInLayout="false" />-->
				<textInput:textInputLinea textAlign="center" focusRect="false" id="txtPedimentoBack" width="100" height="30" maxHeight="100" visible="false" includeInLayout="false" />
				
				<s:VGroup width="27.5%" height="100%" id="vgProdSinPrimerEscaneo" paddingLeft="{paddingLeftEscaneaProdCaracteristicas}" paddingRight="20" visible="false" includeInLayout="false" verticalAlign="middle" horizontalAlign="center">
					<s:Label width="100%" height="100%" text="ESCANEA UN PRODUCTO PARA VISUALIZAR SUS CARACTERÍSTICAS" fontFamily="Novecentowide-Bold" fontSize="{tamanioLetra30}" fontWeight="bold" color="0xC2C3CA" textAlign="center" verticalAlign="middle" />  					
				</s:VGroup>
				
				<s:VGroup width="27.5%" height="100%" id="vgProdEscaneado" paddingLeft="20" visible="false" includeInLayout="false" >
					<!--<mx:Label text="PRODUCTO ESCANEADO" fontSize="{tamanioLetra20}" fontWeight="bold" color="#008895"/>	-->		
					<s:Spacer height="{heightCalculado}"/>
					<s:VGroup width="100%" height="100%" >
						<s:Label text="Nombre del producto:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
						<s:Label fontSize="{tamanioLetra25}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.concepto}" height="22%" width="100%" paddingRight="30"/> 						

						<s:Label text="Marca:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
						<s:Label fontSize="{tamanioLetra25}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.fabrica}" height="18%" width="100%"/>  
						
						<s:HGroup width="100%" height="16%" >
							<s:VGroup height="100%" >
								<s:Label text="Manejo:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
								<s:HGroup width="100%" height="100%" >
									<mx:Image id="imgManejo" width="{widthImgManejo}" />
									<s:Label fontSize="{tamanioLetra20}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.manejo}"/>
								</s:HGroup>  
								
							</s:VGroup>  
							<s:Spacer width="100%"/>
							<s:VGroup height="100%" >
								<s:Label text="Cantidad:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
								<s:HGroup width="100%" height="100%" >
									<s:Label fontSize="{tamanioLetra20}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.cantidadCompra}"/>
									<s:Label fontSize="{tamanioLetra20}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.cantidadCompra == 1 ? 'pieza' : 'piezas'}"/>
								</s:HGroup>  
								
							</s:VGroup>  
							<s:Spacer width="30"/>
						</s:HGroup>  
						
						<s:HGroup width="100%" height="44%" >
							<s:VGroup width="33.3%" height="100%" >
								<s:Label text="Ref. OC:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
								<s:Label fontSize="{tamanioLetra20}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.referenciaOC}" height="100%" width="100%"/>
							</s:VGroup>  
							<s:VGroup width="33.3%" height="100%" >
								<s:Label text="Ref. Factura:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
								<s:Label id="lbl_RefFact" fontSize="{tamanioLetra20}" fontFamily="Helvetica" fontWeight="bold" height="100%" width="100%"/>
							</s:VGroup>  
							<s:VGroup width="33.3%" height="100%" >
								<s:Label text="Pedido Entero:" color="#999999" fontFamily="Helvetica" fontWeight="bold" fontSize="{tamanioLetra16}"/>
								<s:Label fontSize="{tamanioLetra20}" fontFamily="Helvetica" fontWeight="bold" text="{productoEscaneado.cpedido}" height="100%" width="100%"/>
							</s:VGroup>  
						</s:HGroup>  
					</s:VGroup>  					
				</s:VGroup>
				
				<s:VGroup id="lineaVertical2" height="100%" width="1" verticalAlign="middle" paddingLeft="20" visible="false" includeInLayout="false" >
					<s:Spacer height="{heightSpacerLineas}"/>
					<Componentes:divicionDegradadaDelgadaInspeccion height="90%" width="3" />
				</s:VGroup> 
				
				<s:VGroup width="35.5%" height="100%" paddingLeft="40.5" id="vgProdsEmbalados" visible="false" includeInLayout="false" horizontalAlign="center" >
					<!--<mx:Label text="PRODUCTOS EMBALADOS" fontSize="{tamanioLetra20}" fontWeight="bold" color="#008895"/>		
					<mx:Label text="No. Packing List 050923" fontSize="{tamanioLetra16}"/>-->	
					<s:Spacer height="{heightCalculado}"/>
					
					<!--LISTA DE Bolsas para Embalar-->
					<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
							id="lstBolsasParaEmbalar" contentBackgroundAlpha="0" itemRendererFunction="selectRenderer" minWidth="32" />
					
					<s:HGroup id="btnAnadirPaquetes" width="45%" height="30" buttonMode="true" click="btnIniciarEmbalaje_clickHandler(event)">
						<s:Group width="100%" height="100%" >
							<s:Rect width="100%" height="100%">
								<s:fill>
									<s:SolidColor id="colorBtnAnadirPaquetes" color="#0C8893"/>
								</s:fill>
							</s:Rect>
							<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
								<s:Label id="lblContinuar" text="AÑADIR PAQUETE" fontSize="{tamanioLetra21}" color="0xffffff" fontFamily="Novecentowide-Bold"/>
							</s:HGroup>
						</s:Group>  
					</s:HGroup>
					
					<mx:Spacer height="19"/>
					
				</s:VGroup> 
				
			</s:HGroup>  
		</s:VGroup>  
		
	</s:VGroup>  
</s:Group>
