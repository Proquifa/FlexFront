<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*"
		 xmlns:label="skins.skin.label.*"  xmlns:otros="skins.otros.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SolidColor id="sc1" color="#0099FF" alpha=".5"/>
		<s:SolidColor id="scPorCobrar" color="red" alpha=".5"/>
		<s:SolidColor id="scVerdeEnTiempo" color="#32CD32" alpha=".5"/>
		<s:CurrencyFormatter id="formatomoneda" currencySymbol="$" useGrouping="true" useCurrencySymbol="true"  />
		<mx:CurrencyFormatter id="formatoNumbers" precision="2" currencySymbol="$" useThousandsSeparator="false"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.CategoryAxis;
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.chartClasses.CartesianTransform;
			import mx.charts.chartClasses.DataTransform;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.menu.menucontinuo.componentes.Item_BotonImagen;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.GridEvent;
			
			[Bindable]
			private var _pagosGrafica:ArrayCollection;
			[Bindable]
			private var _pagosTabla:ArrayCollection;
			[Bindable]
			private var _datoPago:ObjetoTabla;

			
			private function maxPagos():void{	
				//var evt:Event = new Event("maxPagos",true,false);
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO); 
				dispatchEvent(evt);			
			}
			
			private function gridItemClickEvent(event:ListEvent):void{	 	        	
				var tipoDocumento:String;
				var folioDocumento:String;
				var urlreq:URLRequest;
				var ruta:String;
				
				if (event.columnIndex == 3 ){
					ruta = "http://201.161.12.60:8080/SAP/Ordenes de compra/"+ this.gridPedidos.selectedItem.ordenCompra +"-P.pdf";
					urlreq = new URLRequest ( ruta );	
				}	
				if (event.columnIndex == 5 && gridPedidos.selectedItem.factura != "Pendiente" ){
					ruta = "http://201.161.12.60:8080/SAP/Facturas/Proveedor/"+ this.gridPedidos.selectedItem.folioFP +".pdf";
					urlreq = new URLRequest ( ruta );	
				}	
				if (event.columnIndex == 9 && gridPedidos.selectedItem.estado == "Pagada"){
					ruta = "http://201.161.12.60:8080/SAP/Pagos/"+ this.gridPedidos.selectedItem.folioPG +".pdf";
					urlreq = new URLRequest ( ruta );	
				}	          
				
				navigateToURL( urlreq );
			} 
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaTabla;
				}else{
					this.navegador.selectedChild = vistaGrafico;
				}
			}
			
			private function generaArchivo():void{ 
				var file2:File = new File();
				
				var dato0:Number = new Number;
				var dato1:String = new String;
				var dato2:String = new String;
				var dato3:String = new String;
				var dato4:String = new String;
				var dato5:String = new String;
				var dato6:String = new String;
				var dato7:String = new String;
				var dato8:String = new String;
				var dato9:String = new String;
				var dato10:String = new String;
				var dato11:String = new String;
				var dato12:String = new String;
				
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				//hoja = this.tablaVentasPeriodo.dataProvider as ArrayCollection;
				var longitud:int =  new int ;
				longitud = this._pagosTabla.length;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Empresa");
				fila1[2] = hoja.addItem("Proveedor");
				fila1[3] = hoja.addItem("OC");
				fila1[4] = hoja.addItem("Monto OC");
				fila1[5] = hoja.addItem("Factura");
				fila1[6] = hoja.addItem("Monto factura");
				fila1[7] = hoja.addItem("FEP");
				fila1[8] = hoja.addItem("FP");
				fila1[9] = hoja.addItem("Estado de pago");	         
				
				for(var i:int = 0 ; i<longitud ; i++ ){
					fila1 = new Array();	
					
					dato0 = (this.gridPedidos.dataProvider[i] ).numeroDeFila;
					dato1 = '"'+ (this.gridPedidos.dataProvider[i] ).empresa +'"';
					dato2 = (this.gridPedidos.dataProvider[i] ).nombreProveedor;
					dato3 = (this.gridPedidos.dataProvider[i] ).ordenCompra;
					dato4 = this.formatoExcel((this.gridPedidos.dataProvider[i] ).montoFormato);
					dato5 = (this.gridPedidos.dataProvider[i] ).noFactura;
					dato6 = this.formatoExcel((this.gridPedidos.dataProvider[i] ).montoFacturaFormato );
					dato7 = (this.gridPedidos.dataProvider[i] ).fechaEstimadaPagoFormato;
					dato8 = (this.gridPedidos.dataProvider[i] ).fechaFormato;
					dato9 = (this.gridPedidos.dataProvider[i] ).estado;

					fila1[0] = dato0;
					fila1[1] = dato1;
					fila1[2] = dato2;
					fila1[3] = dato3;
					fila1[4] = dato4;
					fila1[5] = dato5;
					fila1[6] = dato6;
					fila1[7] = dato7;
					fila1[8] = dato8;
					fila1[9] = dato9;
					
					hoja.addItem('\r' + fila1 );
					fila1 = null;
					
				}
				
				file2.save( hoja, "MaxPagosOC.csv");
				
			}
			
			public function set obtenerPagosGrafica(pagos:ArrayCollection):void{
				if(pagos == null){
					return;
				}
				this._pagosGrafica = pagos;
			}
			
			public function set cargaDatosPagos(datosPagos:ObjetoTabla):void{
				if(datosPagos == null){
					return;
				}
				this._datoPago = datosPagos;
				var evento:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.CARGA_DATOS_PAGOS);
				evento.idProveedor = _datoPago.idProveedor;
				evento.anioInt = _datoPago.anioInt;
				evento.periodo = _datoPago.periodo;
				evento.tipoPeriodo = _datoPago.tipoPeriodo;
				evento.mes = _datoPago.mes;
				dispatchEvent(evento);
			}
			
			public function set obtenerPagosTabla(pago:ArrayCollection):void{
				if(pago == null){
					return;
				}
				this._pagosTabla = pago;
			}
			
			public function formatoExcel(dato:Number):String{
				return formatoNumbers.format(dato).toString();
			}
			
			public function formatoMontoOC(objeto:Object,columna:DataGridColumn):String{
				var valor:String = "";
				valor = formatomoneda.format(objeto.monto) + " " + objeto.moneda;
				return valor;
			}
	
			public function formatoMontoFactura(objeto:Object, columna:DataGridColumn):String{
				var montoFactura:String = "";
				montoFactura = formatomoneda.format(objeto.montoFactura)+ " " + objeto.moneda;
				return montoFactura;
			}
			
			public function seleccionaTabla():void{
				this.navegador.selectedChild = this.vistaTabla;
			}
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}
		]]>
	</fx:Script>
	<!--<s:Panel width="100%" height="100%" title="PAGOS" dropShadowVisible="false">-->
		<!--<mx:CurrencyFormatter id="formateoMoneda" precision="2"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<label:labelSubtitulo text="Pagos"/>
				<mx:Legend id="idLegend" dataProvider="{myChart}" direction="vertical"/>
				<mx:ColumnChart width="100%" height="100%" id="myChart" 			
								showDataTips="true" mouseSensitivity="5" dataTipMode="multiple" dataProvider="{this._pagosGrafica}"> 
					<mx:series>
						<mx:ColumnSeries 						
							id="serieAET"
							xField="etiquetaMes" 
							yField="cantidadesT" 
							displayName="Cantidad Pagada"
							fills="{[scVerdeEnTiempo]}" 
							/>
						<mx:ColumnSeries 	                	
							id="serieAFT"
							xField="etiquetaMes" 
							yField="cantidadesFT" 
							displayName="Cantidad Por Pagar"
							fills="{[scPorCobrar]}" 
							/>	                
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="vMes" categoryField="etiquetaMes" title="Meses"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="vCantidad" baseAtZero="true" title="Cantidad de partidas"/>
					</mx:verticalAxis>			
				</mx:ColumnChart>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxPagos()" width="60"/>
				</mx:HBox>
			</mx:VBox>		
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<label:labelSubtitulo text="Pagos"/>
				<mx:DataGrid id="gridPedidos" width="100%" height="100%" itemClick="gridItemClickEvent(event)" variableRowHeight="true" 
							dataProvider="{this._pagosTabla}" textAlign="center"> 
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numeroDeFila" />
						<mx:DataGridColumn headerText="Empresa" dataField="empresa" />
						<mx:DataGridColumn headerText="Proveedor" dataField="nombreProveedor" />
						<mx:DataGridColumn headerText="OC" dataField="ordenCompra">
							<mx:itemRenderer>
								<fx:Component>
									<mx:LinkButton label="{data.ordenCompra}" color="blue" toolTip="Ver OC"/>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn  headerText="Monto OC" dataField="montoFormato"/>
						<mx:DataGridColumn headerText="Factura" dataField="noFactura" >
							<mx:itemRenderer>
								<fx:Component>
									<mx:LinkButton label="{data.noFactura}" color="blue" toolTip="Ver factura"/>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn  headerText="Monto factura"  dataField="montoFacturaFormato"/>
						<mx:DataGridColumn headerText="FEP" dataField="fechaEstimadaPagoFormato" />
						<mx:DataGridColumn headerText="FP" dataField="fechaFormato" />
						<mx:DataGridColumn headerText="Estado de pago" dataField="estado" >
							<mx:itemRenderer>
								<fx:Component>
									<mx:LinkButton label="{data.estado}" color="blue"/>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
					</mx:columns>
				</mx:DataGrid>
				<!--<s:DataGrid id="gridPedidos" 
							 width="100%" height="100%"  gridClick="gridItemClickEvent(event)"
							 variableRowHeight="true" 
							 dataProvider="{this._pagosTabla}"> 
					<s:columns>
						<s:ArrayList>
							<formato:GridColumnFormato formato="numfila" headerText="#" dataField="indice" guardarFormato="numeroDeFila" />
							<s:GridColumn headerText="Empresa" dataField="empresa" />
							<s:GridColumn headerText="Proveedor" dataField="nombreProveedor" />
							<s:GridColumn headerText="OC" dataField="ordenCompra" >
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<mx:LinkButton label="{data.ordenCompra}" color="blue" toolTip="Ver OC"/>	
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn headerText="Monto OC" labelFunction="formatoMontoOC" dataField="valor"/>
							<s:GridColumn headerText="Factura" dataField="noFactura" >
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<mx:LinkButton label="{data.noFactura}" color="blue" toolTip="Ver factura"/>
										</s:GridItemRenderer>							      
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn headerText="Monto factura" labelFunction="formatoMontoFactura"/>
							<formato:GridColumnFormato formato="fecha" headerText="FEP" dataField="fechaEstimadaPago" guardarFormato="fechaEstimadaP" />
							<formato:GridColumnFormato formato="fecha" headerText="FP" dataField="fecha" guardarFormato="fechaP"/>
							<s:GridColumn headerText="Estado de pago" dataField="estado" >
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<mx:LinkButton label="{data.estado}" color="blue"/>
										</s:GridItemRenderer>							      
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>-->
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxPagos()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" click="generaArchivo()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	<!--</s:Panel>-->
</s:Group>
