<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
		 xmlns:graficas="skins.skin.graficas.*"
		 width="100%" height="100%"
		 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PCotPharma;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			
			private var _listaPrioridad:ArrayCollection;
			private var keys:Object;
			
			public function set obtenerConfirmacionCotPharma($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) {
					return;
				}
				
				var arrayTemp:Array = new Array();
				_listaPrioridad = new ArrayCollection;
				myChart.dataProvider = new ArrayCollection();
				
				arrayTemp = (ObjectUtil.copy($infoGrafica)as ArrayCollection).source;
				arrayTemp.sortOn("prioridad");
				/**
				 * arreglo temporal para controlar el ciclo del for que se encargará de sumar las cantidades de cada estado
				 * quitando las duplicados
				 * */
				keys = new Object();
				var arrayEstado: Array = new Array();
				arrayEstado = arrayTemp.filter(quitaDuplicados);
				
				/**
				 * Se forman los objetos que serán enviados a la grafica, los totales de cada Estado
				 * */
				
				FormarLosNI(arrayEstado,arrayTemp,"PRIORIDAD",_listaPrioridad);
				
				myChart.dataProvider = myChart.aplicarFormatoEstadoConfirmacion(_listaPrioridad);
				
				//Para liberar Memoria
				arrayEstado = null;
				
			}
			
			private function FormarLosNI(TotalNIs:Array,NIsInfo:Array,etiqueta:String,infoNIs:ArrayCollection):void
			{
				var totalConfirmacion:int = 0;
				
				var currentPartidaConfirmacion:PCotPharma; 
				var j:int;
				var itemResumenConsulta:ResumenConsulta;
				for(var i:int =0; i<TotalNIs.length; i++){
					j=0;
					totalConfirmacion = 0;
					currentPartidaConfirmacion = NIsInfo[j] as PCotPharma;
					while( (TotalNIs[i] as PCotPharma).prioridad == currentPartidaConfirmacion.prioridad){
						
						totalConfirmacion++;
						NIsInfo.shift();
						
						if(NIsInfo.length >0)
							currentPartidaConfirmacion = NIsInfo[j] as PCotPharma;
						else
							currentPartidaConfirmacion = new PCotPharma();
					}
					
					itemResumenConsulta = new ResumenConsulta();
					itemResumenConsulta.conceptoResultado = (TotalNIs[i] as PCotPharma).prioridad.toLocaleUpperCase();
					itemResumenConsulta.etiqueta = (TotalNIs[i] as PCotPharma).prioridad.toLocaleUpperCase();
					itemResumenConsulta.partidas = totalConfirmacion;
					
					infoNIs.addItem(ObjectUtil.copy(itemResumenConsulta));
					
				}
			}
			
			public function quitaDuplicados(item:PCotPharma, id:uint, _array:Array):Boolean{
				if (keys.hasOwnProperty(item.prioridad)) {
					return false;
				} else {
					keys[item.prioridad] = item.prioridad;
					return true;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" verticalAlign="middle" gap="0">
		<s:Spacer width="100%" height="10%"/>
		<graficas:PieChartPqGris id="myChart" width="100%" height="100%" 
								 dataProvider="{null}"
								 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
								 showDataTips="false"  innerRadius=".5">   
			<graficas:series>
				<graficas:pieSeriesPqNet field="partidas"/>
			</graficas:series>
		</graficas:PieChartPqGris>
		<s:Spacer width="100%" height="10%"/>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" gap="0">
		<s:VGroup width="100%" height="8%" verticalAlign="middle">
			<componentes:tituloChartTablero width="100%" text="PRIORIDAD" textAlign="center"/>
		</s:VGroup>
		<s:Spacer width="100%" height="2%"/>
	</s:VGroup>
	
</s:Group>