<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorTableroMiniChart xmlns:fx="http://ns.adobe.com/mxml/2009" 
								  xmlns:s="library://ns.adobe.com/flex/spark" 
								  xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*" 
								  xmlns:mx="library://ns.adobe.com/flex/mx" 
								  xmlns:componentes = "mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*"
								  xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
								  informacion="{catalogoInfoGraficas.TABLERO_CLIENTES_COMPORTAMIENTO_PAGOS}" 
								  vistaTablaGrafica="{ new ComportaPagosMax() }" comparacion="{ new ComportaPagosComparacion()}"  
								  width="100%" height="100%" 
								  titulo="COMPORTAMIENTO PAGOS"
								  >
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="500"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import skins.catalogos.catalogoInfoGraficas;
			
			private const _tamanioMinimo:int = 170;
			
			public function set recibeLinealComportamientoPagos( $lista:ArrayCollection ):void
			{
				if($lista == null )
					return;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( $lista, "etiqueta", "COMPORTAMIENTO_PAGOS_0") );
			}
			
			private var _listaMensual:ArrayCollection = new ArrayCollection(["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"]);
			
			private function iniciarGrafica( $lista:ArrayCollection):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				objeto = new Object();
				objeto.mixmontoPorCobrar = 0;
				objeto.mixmontoCobrado = 0;
				objeto.tasaCobranza = 0;
				
				for( var m:int = 0; m < $lista.length;m++ )
				{
					var resumen:ResumenConsulta = $lista[m] as ResumenConsulta;
					if( resumen.conceptoResultado == "Por Cobrar")
					{
						objeto.mixmontoPorCobrar += resumen.total;
					}
					else if( resumen.conceptoResultado == "Cobrada")
					{
						objeto.mixmontoCobrado += resumen.total;
					}
				}
				objeto.mixmontoPorCobrarLabel =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objeto.mixmontoPorCobrar ) );
				objeto.mixmontoCobradoLabel =  '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objeto.mixmontoCobrado ) );
				objeto.tasaCobranza = ( objeto.mixmontoCobrado /(objeto.mixmontoCobrado+objeto.mixmontoPorCobrar))*100;
				arrReturn.addItem(objeto);
				return arrReturn;
			}
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			} 
			
		]]>
	</fx:Script>
	<graficaPie:contenido >
		<s:VGroup width="100%" height="100%" horizontalAlign="right" paddingTop="50" paddingBottom="10" >
			<mx:ColumnChart height="100%" width="100%" id="myChart" 
							mouseSensitivity="5" 
							showDataTips="true" showDataTipTargets="false" 
							dataTipMode="single"
							dataTipRenderer="{ComportaPagosToolTip}" 
							paddingRight="{ width > _tamanioMinimo ? 30 : 5}"
							paddingLeft="{ width > _tamanioMinimo ? 20 : 5}"
							seriesFilters="[]" 
							>
				<mx:horizontalAxis>
					<mx:CategoryAxis id="ventasMes" categoryField="mes" />
				</mx:horizontalAxis>
				<mx:verticalAxis>
					<mx:LinearAxis id="ventasDLS" labelFunction="formateoEje" />
				</mx:verticalAxis>
				<mx:horizontalAxisRenderers>
					<mx:AxisRenderer axis="{ventasMes}" showLine="false" showLabels="false"/>
				</mx:horizontalAxisRenderers>
				<mx:verticalAxisRenderers>
					<mx:AxisRenderer axis="{ventasDLS}" showLine="false" showLabels="{ width > _tamanioMinimo ? true : false}" tickPlacement="none" styleName="axisVerticalLabels"/>
				</mx:verticalAxisRenderers>
				<mx:series>
					<mx:ColumnSet type="stacked">
						<mx:ColumnSeries id="serieCantidad" 
										 yField="mixmontoPorCobrar" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="serieCobradas" 
										 yField="mixmontoCobrado"  
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:ColumnSet>
				</mx:series>
				
				<mx:backgroundElements>
					<mx:GridLines>
						<mx:horizontalStroke>
							<s:SolidColorStroke weight="0.5" color="{ width > _tamanioMinimo ? 0xeeeeee: 0xFFFFFF}"/>
						</mx:horizontalStroke>
					</mx:GridLines>
				</mx:backgroundElements>
			</mx:ColumnChart>
			<componentes:horizontalAxisChartPq text="VENTAS EN DLS" horizontalCenter="0" width="100%"
											   paddingRight="{ width > _tamanioMinimo ? 30 : 5}" paddingLeft="{ width > _tamanioMinimo ? 70 : 5}" />
			<s:Label width="100%" paddingLeft="15" styleName="axisVerticalLabels">
				<s:text>Los montos se refieren a precio de Venta</s:text>
			</s:Label>
		</s:VGroup>
	</graficaPie:contenido>
</comun:ContenedorTableroMiniChart>
