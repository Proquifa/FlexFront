package mx.com.proquifa.vista.modelo.gestorCompras.arriba
{
	import flash.events.Event;
	import flash.events.EventDispatcher;
	import flash.events.IEventDispatcher;
	
	import mx.collections.ArrayCollection;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
	import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
	import mx.utils.ObjectUtil;

	public class ModeloArriboGestorCompras extends EventDispatcher
	{
		private var listaArribo:ArrayCollection;
		public static var query:Query;
		private var total:Object;
		private var comprasPagarPie:ArrayCollection;
		private var i:int;
		
		public function setObtenerListadoDeArribo(data:ArrayCollection):void
		{
			listaArribo = new ArrayCollection;
			comprasPagarPie = new ArrayCollection();
			total = new Object();
			total.totalOC = 0;
			total.totalPiezas = 0;
			total.totalMontos = 0;
			total.et = 0;
			total.ft = 0;
			total.urgente = 0;
			
			total.etPiezasTotal = 0;
			total.ftPiezasTotal = 0;
			total.urgentePiezasTotal = 0;
			
			total.etPrecioTotal = 0;
			total.ftPrecioTotal = 0;
			total.urgentePrecioTotal = 0;
			
			total.etPartida = 0;
			total.ftPartida = 0;
			total.urgentePartida = 0;
			total.listaArribo = false;
			query = new Query(data,["nombreProveedor","compra"]);
			var punteroProveedores:Array = query.getPunteros(['nombreProveedor'],'nombreProveedor');
			total.totalProveedores = punteroProveedores.length;
			for each (var proveedor:String in punteroProveedores) 
			{
				var resumen:ResumenConsulta = new ResumenConsulta();
				var punteros:Array = query.getPunteros([proveedor]);
				var partida:PartidaCompra = ObjectUtil.copy(query.universo.getItemAt(punteros[0])) as PartidaCompra;
				partida.object = new Object();
				partida.object.ft = 0;
				partida.object.et = 0;
				partida.object.urgente = 0;
				
				for (i = 0; i < punteros.length; i++) 
				{
					if (query.universo.getItemAt(punteros[i]).diferenciaDias > 2 )
					{
						partida.object.et += query.universo.getItemAt(punteros[i]).cantidadCompra;
						/*partida.object.etPartida += 1;*/
					}
					else if (query.universo.getItemAt(punteros[i]).diferenciaDias < 0 )
					{
						partida.object.ft += query.universo.getItemAt(punteros[i]).cantidadCompra;
						/*partida.object.ftPartida += 1;*/
					}
					else
					{
						partida.object.urgente += query.universo.getItemAt(punteros[i]).cantidadCompra;
						/*partida.object.urgentePartida += 1;*/
					}
				}
				
				resumen.total = partida.precioTotal = query.getSumarCampo('precioTotal',punteros);
				/*resumen.piezasTotal = partida.totalPiezas = punteros.length;*/
				resumen.piezasTotal = query.getSumarCampo('cantidadCompra',punteros);
				partida.totalPiezas = query.getSumarCampo('cantidadCompra',punteros);
				/*var punteroProveedorOC:Array = query.getPunteros([proveedor,"compra"],'compra');*/
				var punteroProveedorOC:Array = query.getPunteros([proveedor,null],'compra');
				partida.object.oc = punteroProveedorOC;
				resumen.totalCompras = partida.ordenCompras  = punteroProveedorOC.length;
				/*partida.ordenCompras = query.getPunteros([proveedor,null],'compra');*/
				resumen.etiqueta = proveedor;
				resumen.clientes_proveedores = 1;
				comprasPagarPie.addItem(resumen);
				listaArribo.addItem(partida);
				total.totalOC += resumen.totalCompras;
				total.totalPiezas += partida.totalPiezas;
				total.totalMontos += partida.precioTotal;
				total.et += partida.object.et;
				total.ft += partida.object.ft;
				total.urgente += partida.object.urgente;
				
				/*total.etPartida += partida.object.etPartida;
				total.ftPartida += partida.object.ftPartida;
				total.urgentePartida += partida.object.urgentePartida;*/
				
			}
			for (var r:int = 0; r < data.length; r++) 
			{
				if (data[r].diferenciaDias > 2 )
				{
					total.etPrecioTotal += data[r].precioTotal;
					total.etPiezasTotal += data[r].cantidadCompra;
					total.etPartida += 1;
				}
				else if (data[r].diferenciaDias < 0 )
				{
					total.ftPrecioTotal += data[r].precioTotal;
					total.ftPiezasTotal += data[r].cantidadCompra;
					total.ftPartida += 1;
				}
				else
				{
					total.urgentePrecioTotal += data[r].precioTotal;
					total.urgentePiezasTotal += data[r].cantidadCompra;
					total.urgentePartida += 1;
				}
			}
			dispatchEvent(new Event("obtenerListadoDeArriboModeloArriboGestorCompras"));
			dispatchEvent(new Event("enviarTotalListadoDeArriboModeloArriboGestorCompras"));
			dispatchEvent(new Event("enviarResumenListadoDeArriboModeloArriboGestorCompras"));
		}
		
		public static function colorAsociado(valor:int):uint
		{
			if (valor > 2 )
			{
				return 0x70a83b;
			}
			else if (valor < 0 )
			{
				return 0xbf0411;
			}
			
			return 0xdb9600;
		}
		
		[Bindable(event="obtenerListadoDeArriboModeloArriboGestorCompras")]
		public function get obtenerListadoDeArribo():ArrayCollection
		{
			return listaArribo;
		}

		[Bindable(event="enviarResumenListadoDeArriboModeloArriboGestorCompras")]
		public function get enviarResumenListadoDeArribo():ArrayCollection
		{
			return comprasPagarPie;
		}

		[Bindable(event="enviarTotalListadoDeArriboModeloArriboGestorCompras")]
		public function get enviarTotalesListadoDeArribo():Object
		{
			return total;
		}
		
		public function ModeloArriboGestorCompras(target:IEventDispatcher=null)
		{
			super(target);
		}
		
		
		
		/*********************************Lista Arribo Publicaciones**************************************/
		private var listaArriboPub:ArrayCollection;
		public static var queryPub:Query;
		private var totalPub:Object;
		private var comprasPagarPiePub:ArrayCollection;
		
		public function setObtenerListadoDeArriboPublicaciones(data:ArrayCollection):void
		{
			listaArriboPub = new ArrayCollection;
			comprasPagarPiePub = new ArrayCollection();
			totalPub = new Object();
			totalPub.totalOC = 0;
			totalPub.totalPiezas = 0;
			totalPub.totalMontos = 0;
			totalPub.et = 0;
			totalPub.ft = 0;
			totalPub.urgente = 0;
			
			totalPub.etPiezasTotal = 0;
			totalPub.ftPiezasTotal = 0;
			totalPub.urgentePiezasTotal = 0;
			
			totalPub.etPrecioTotal = 0;
			totalPub.ftPrecioTotal = 0;
			totalPub.urgentePrecioTotal = 0;
			
			totalPub.etPartida = 0;
			totalPub.ftPartida = 0;
			totalPub.urgentePartida = 0;
			totalPub.listaArribo = false;
			queryPub = new Query(data,["nombreProveedor","compra"]);
			var punteroProveedores:Array = queryPub.getPunteros(['nombreProveedor'],'nombreProveedor');
			totalPub.totalProveedores = punteroProveedores.length;
			for each (var proveedor:String in punteroProveedores) 
			{
				var resumen:ResumenConsulta = new ResumenConsulta();
				var punteros:Array = queryPub.getPunteros([proveedor]);
				var partida:PartidaCompra = ObjectUtil.copy(queryPub.universo.getItemAt(punteros[0])) as PartidaCompra;
				partida.object = new Object();
				partida.object.ft = 0;
				partida.object.et = 0;
				partida.object.urgente = 0;
				
				for (i = 0; i < punteros.length; i++) 
				{
					if (queryPub.universo.getItemAt(punteros[i]).diferenciaDias > 2 )
					{
						partida.object.et += queryPub.universo.getItemAt(punteros[i]).cantidadCompra;
					}
					else if (queryPub.universo.getItemAt(punteros[i]).diferenciaDias < 0 )
					{
						partida.object.ft += queryPub.universo.getItemAt(punteros[i]).cantidadCompra;
					}
					else
					{
						partida.object.urgente += queryPub.universo.getItemAt(punteros[i]).cantidadCompra;
					}
				}
				
				resumen.total = partida.precioTotal = queryPub.getSumarCampo('precioTotal',punteros);
				resumen.piezasTotal = queryPub.getSumarCampo('cantidadCompra',punteros);
				partida.totalPiezas = queryPub.getSumarCampo('cantidadCompra',punteros);
				var punteroProveedorOC:Array = queryPub.getPunteros([proveedor,null],'compra');
				partida.object.oc = punteroProveedorOC;
				resumen.totalCompras = partida.ordenCompras  = punteroProveedorOC.length;
				resumen.etiqueta = proveedor;
				resumen.clientes_proveedores = 1;
				comprasPagarPiePub.addItem(resumen);
				listaArriboPub.addItem(partida);
				totalPub.totalOC += resumen.totalCompras;
				totalPub.totalPiezas += partida.totalPiezas;
				totalPub.totalMontos += partida.precioTotal;
				totalPub.et += partida.object.et;
				totalPub.ft += partida.object.ft;
				totalPub.urgente += partida.object.urgente;
				
				
			}
			for (var i:int = 0; i < data.length; i++) 
			{
				if (data[i].diferenciaDias > 2 )
				{
					totalPub.etPrecioTotal += data[i].precioTotal;
					totalPub.etPiezasTotal += data[i].cantidadCompra;
					totalPub.etPartida += 1;
				}
				else if (data[i].diferenciaDias < 0 )
				{
					totalPub.ftPrecioTotal += data[i].precioTotal;
					totalPub.ftPiezasTotal += data[i].cantidadCompra;
					totalPub.ftPartida += 1;
				}
				else
				{
					totalPub.urgentePrecioTotal += data[i].precioTotal;
					totalPub.urgentePiezasTotal += data[i].cantidadCompra;
					totalPub.urgentePartida += 1;
				}
			}
			dispatchEvent(new Event("obtenerListadoDeArriboModeloArriboGestorComprasPub"));
			dispatchEvent(new Event("enviarTotalListadoDeArriboModeloArriboGestorComprasPub"));
			dispatchEvent(new Event("enviarResumenListadoDeArriboModeloArriboGestorComprasPub"));
		}
		
		[Bindable(event="obtenerListadoDeArriboModeloArriboGestorComprasPub")]
		public function get obtenerListadoDeArriboPub():ArrayCollection
		{
			return listaArriboPub;
		}
		
		[Bindable(event="enviarResumenListadoDeArriboModeloArriboGestorComprasPub")]
		public function get enviarResumenListadoDeArriboPub():ArrayCollection
		{
			return comprasPagarPiePub;
		}
		
		[Bindable(event="enviarTotalListadoDeArriboModeloArriboGestorComprasPub")]
		public function get enviarTotalesListadoDeArriboPub():Object
		{
			return totalPub;
		}
		
		
		/*********************************Lista Arribo Materiales Nacionales**************************************/
		
		private var listaArriboNa:ArrayCollection;
		public static var queryNa:Query;
		private var totalNa:Object;
		private var comprasPagarPieNa:ArrayCollection;
		private var j:int;
		
		public function setObtenerListadoDeArriboNacional(data:ArrayCollection):void
		{
			listaArriboNa = new ArrayCollection;
			comprasPagarPieNa = new ArrayCollection();
			totalNa = new Object();
			totalNa.totalOC = 0;
			totalNa.totalPiezas = 0;
			totalNa.totalMontos = 0;
			totalNa.et = 0;
			totalNa.ft = 0;
			totalNa.urgente = 0;
			
			totalNa.etPiezasTotal = 0;
			totalNa.ftPiezasTotal = 0;
			totalNa.urgentePiezasTotal = 0;
			
			totalNa.etPrecioTotal = 0;
			totalNa.ftPrecioTotal = 0;
			totalNa.urgentePrecioTotal = 0;
			
			totalNa.etPartida = 0;
			totalNa.ftPartida = 0;
			totalNa.urgentePartida = 0;
			totalNa.listaArribo = false;
			queryNa = new Query(data,["nombreProveedor","compra"]);
			var punteroProveedores:Array = queryNa.getPunteros(['nombreProveedor'],'nombreProveedor');
			totalNa.totalProveedores = punteroProveedores.length;
			for each (var proveedor:String in punteroProveedores) 
			{
				var resumen:ResumenConsulta = new ResumenConsulta();
				var punteros:Array = queryNa.getPunteros([proveedor]);
				var partida:PartidaCompra = ObjectUtil.copy(queryNa.universo.getItemAt(punteros[0])) as PartidaCompra;
				partida.object = new Object();
				partida.object.ft = 0;
				partida.object.et = 0;
				partida.object.urgente = 0;
				
				for (j = 0; j < punteros.length; j++) 
				{
					if (queryNa.universo.getItemAt(punteros[j]).diferenciaDias > 2 )
					{
						partida.object.et += queryNa.universo.getItemAt(punteros[j]).cantidadCompra;
						/*partida.object.etPartida += 1;*/
					}
					else if (queryNa.universo.getItemAt(punteros[j]).diferenciaDias < 0 )
					{
						partida.object.ft += queryNa.universo.getItemAt(punteros[j]).cantidadCompra;
						/*partida.object.ftPartida += 1;*/
					}
					else
					{
						partida.object.urgente += queryNa.universo.getItemAt(punteros[j]).cantidadCompra;
						/*partida.object.urgentePartida += 1;*/
					}
				}
				
				resumen.total = partida.precioTotal = queryNa.getSumarCampo('precioTotal',punteros);
				resumen.piezasTotal = queryNa.getSumarCampo('cantidadCompra',punteros);
				partida.totalPiezas = queryNa.getSumarCampo('cantidadCompra',punteros);
				var punteroProveedorOC:Array = queryNa.getPunteros([proveedor,null],'compra');
				partida.object.oc = punteroProveedorOC;
				resumen.totalCompras = partida.ordenCompras  = punteroProveedorOC.length;
				resumen.etiqueta = proveedor;
				resumen.clientes_proveedores = 1;
				comprasPagarPieNa.addItem(resumen);
				listaArriboNa.addItem(partida);
				totalNa.totalOC += resumen.totalCompras;
				totalNa.totalPiezas += partida.totalPiezas;
				totalNa.totalMontos += partida.precioTotal;
				totalNa.et += partida.object.et;
				totalNa.ft += partida.object.ft;
				totalNa.urgente += partida.object.urgente;
				
				/*total.etPartida += partida.object.etPartida;
				total.ftPartida += partida.object.ftPartida;
				total.urgentePartida += partida.object.urgentePartida;*/
				
			}
			for (var r:int = 0; r < data.length; r++) 
			{
				if (data[r].diferenciaDias > 2 )
				{
					totalNa.etPrecioTotal += data[r].precioTotal;
					totalNa.etPiezasTotal += data[r].cantidadCompra;
					totalNa.etPartida += 1;
				}
				else if (data[r].diferenciaDias < 0 )
				{
					totalNa.ftPrecioTotal += data[r].precioTotal;
					totalNa.ftPiezasTotal += data[r].cantidadCompra;
					totalNa.ftPartida += 1;
				}
				else
				{
					totalNa.urgentePrecioTotal += data[r].precioTotal;
					totalNa.urgentePiezasTotal += data[r].cantidadCompra;
					totalNa.urgentePartida += 1;
				}
			}
			dispatchEvent(new Event("obtenerListadoDeArriboModeloArriboGestorComprasNacional"));
			dispatchEvent(new Event("enviarTotalListadoDeArriboModeloArriboGestorComprasNacional"));
			dispatchEvent(new Event("enviarResumenListadoDeArriboModeloArriboGestorComprasNacional"));
		}
	
		
		[Bindable(event="obtenerListadoDeArriboModeloArriboGestorComprasNacional")]
		public function get obtenerListadoDeArriboNacional():ArrayCollection
		{
			return listaArriboNa;
		}
		
		[Bindable(event="enviarResumenListadoDeArriboModeloArriboGestorComprasNacional")]
		public function get enviarResumenListadoDeArriboNacional():ArrayCollection
		{
			return comprasPagarPieNa;
		}
		
		[Bindable(event="enviarTotalListadoDeArriboModeloArriboGestorComprasNacional")]
		public function get enviarTotalesListadoDeArriboNacional():Object
		{
			return totalNa;
		}
		
		
		
		/*********************************Lista Arribo Publicaciones Nacionales**************************************/
		private var listaArriboPubNa:ArrayCollection;
		public static var queryPubNa:Query;
		private var totalPubNa:Object;
		private var comprasPagarPiePubNa:ArrayCollection;
		
		public function setObtenerListadoDeArriboPublicacionesNacionales(data:ArrayCollection):void
		{
			listaArriboPubNa = new ArrayCollection;
			comprasPagarPiePubNa = new ArrayCollection();
			totalPubNa = new Object();
			totalPubNa.totalOC = 0;
			totalPubNa.totalPiezas = 0;
			totalPubNa.totalMontos = 0;
			totalPubNa.et = 0;
			totalPubNa.ft = 0;
			totalPubNa.urgente = 0;
			
			totalPubNa.etPiezasTotal = 0;
			totalPubNa.ftPiezasTotal = 0;
			totalPubNa.urgentePiezasTotal = 0;
			
			totalPubNa.etPrecioTotal = 0;
			totalPubNa.ftPrecioTotal = 0;
			totalPubNa.urgentePrecioTotal = 0;
			
			totalPubNa.etPartida = 0;
			totalPubNa.ftPartida = 0;
			totalPubNa.urgentePartida = 0;
			totalPubNa.listaArribo = false;
			queryPubNa = new Query(data,["nombreProveedor","compra"]);
			var punteroProveedores:Array = queryPubNa.getPunteros(['nombreProveedor'],'nombreProveedor');
			totalPubNa.totalProveedores = punteroProveedores.length;
			for each (var proveedor:String in punteroProveedores) 
			{
				var resumen:ResumenConsulta = new ResumenConsulta();
				var punteros:Array = queryPubNa.getPunteros([proveedor]);
				var partida:PartidaCompra = ObjectUtil.copy(queryPubNa.universo.getItemAt(punteros[0])) as PartidaCompra;
				partida.object = new Object();
				partida.object.ft = 0;
				partida.object.et = 0;
				partida.object.urgente = 0;
				
				for (i = 0; i < punteros.length; i++) 
				{
					if (queryPubNa.universo.getItemAt(punteros[i]).diferenciaDias > 2 )
					{
						partida.object.et += queryPubNa.universo.getItemAt(punteros[i]).cantidadCompra;
					}
					else if (queryPubNa.universo.getItemAt(punteros[i]).diferenciaDias < 0 )
					{
						partida.object.ft += queryPubNa.universo.getItemAt(punteros[i]).cantidadCompra;
					}
					else
					{
						partida.object.urgente += queryPubNa.universo.getItemAt(punteros[i]).cantidadCompra;
					}
				}
				
				resumen.total = partida.precioTotal = queryPubNa.getSumarCampo('precioTotal',punteros);
				resumen.piezasTotal = queryPubNa.getSumarCampo('cantidadCompra',punteros);
				partida.totalPiezas = queryPubNa.getSumarCampo('cantidadCompra',punteros);
				var punteroProveedorOC:Array = queryPubNa.getPunteros([proveedor,null],'compra');
				partida.object.oc = punteroProveedorOC;
				resumen.totalCompras = partida.ordenCompras  = punteroProveedorOC.length;
				resumen.etiqueta = proveedor;
				resumen.clientes_proveedores = 1;
				comprasPagarPiePubNa.addItem(resumen);
				listaArriboPubNa.addItem(partida);
				totalPubNa.totalOC += resumen.totalCompras;
				totalPubNa.totalPiezas += partida.totalPiezas;
				totalPubNa.totalMontos += partida.precioTotal;
				totalPubNa.et += partida.object.et;
				totalPubNa.ft += partida.object.ft;
				totalPubNa.urgente += partida.object.urgente;
				
				
			}
			for (var i:int = 0; i < data.length; i++) 
			{
				if (data[i].diferenciaDias > 2 )
				{
					totalPubNa.etPrecioTotal += data[i].precioTotal;
					totalPubNa.etPiezasTotal += data[i].cantidadCompra;
					totalPubNa.etPartida += 1;
				}
				else if (data[i].diferenciaDias < 0 )
				{
					totalPubNa.ftPrecioTotal += data[i].precioTotal;
					totalPubNa.ftPiezasTotal += data[i].cantidadCompra;
					totalPubNa.ftPartida += 1;
				}
				else
				{
					totalPubNa.urgentePrecioTotal += data[i].precioTotal;
					totalPubNa.urgentePiezasTotal += data[i].cantidadCompra;
					totalPubNa.urgentePartida += 1;
				}
			}
			dispatchEvent(new Event("obtenerListadoDeArriboModeloArriboGestorComprasPubNacional"));
			dispatchEvent(new Event("enviarTotalListadoDeArriboModeloArriboGestorComprasPubNacional"));
			dispatchEvent(new Event("enviarResumenListadoDeArriboModeloArriboGestorComprasPubNacional"));
		}
		
		[Bindable(event="obtenerListadoDeArriboModeloArriboGestorComprasPubNacional")]
		public function get obtenerListadoDeArriboPubNacional():ArrayCollection
		{
			return listaArriboPubNa;
		}
		
		[Bindable(event="enviarResumenListadoDeArriboModeloArriboGestorComprasPubNacional")]
		public function get enviarResumenListadoDeArriboPubNacional():ArrayCollection
		{
			return comprasPagarPiePubNa;
		}
		
		[Bindable(event="enviarTotalListadoDeArriboModeloArriboGestorComprasPubNacional")]
		public function get enviarTotalesListadoDeArriboPubNacional():Object
		{
			return totalPubNa;
		}
		
				
		
		
	}
}