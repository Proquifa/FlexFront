<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:botoneraFlotante="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.botoneraFlotante.*"
		 xmlns:requerimientos="vista.vistas.reporte.visita.requerimientos.*" 
		 xmlns:boton="skins.skin.botones.boton.*"
		 xmlns:otros="skins.otros.*"
		 creationComplete="group1_creationCompleteHandler(event)"
		 width="100%" height="100%" xmlns:valoracion="skins.valoracion.*" 
		 >
	
	
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayList;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.ReportarVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.itemRenderer.vistaPrincipal.CatClientes_IR_Item_imagen;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.visitaVentas.detalle.cotizaciones.CotizacionesReportarVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.visitaVentas.detalle.hallazgos.HallazgoReportarVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.visitaVentas.detalle.pendientes.PendientesReportarVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.visitaVentas.detalle.requerimientos.RequerimientrosReportarVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.visitaVentas.detalle.requisitar.RequisitarReportarVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.visitaVentas.detalle.resumen.ResumenReportarVisita;
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosBotones;			
			
			
			
			private var _currentCliente:VisitaCliente;
			private var _indexVisita:int;
			private var timeLineData:ArrayList = new ArrayList(['REQUERIMIENTOS', 'PENDIENTES',
				'HALLAZGOS', 'REQUISITAR', 'COTIZAR', 'REPORTE FINAL']);
			
			private var requerimientos:RequerimientrosReportarVisita;
			private var pendientes:PendientesReportarVisita;
			private var hallazgos:HallazgoReportarVisita;
			private var requisitar:RequisitarReportarVisita;
			private var cotizar:CotizacionesReportarVisita;
			private var reporteFinal:ResumenReportarVisita;
			
			[Bindable] public var widthDatos:Number;
			[Bindable] public var unscaledWidthAnt:Number;
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				trace(unscaledWidth);
				if(unscaledWidth != unscaledWidthAnt){	
					
					widthDatos = (unscaledWidth / 2005) * 230;
					widthDatos = widthDatos < 0 ? 0 : widthDatos;				
					if(unscaledWidth<815)
						widthDatos=50;
					if(unscaledWidth>2005)
						widthDatos=230;
					
				}
				
				unscaledWidthAnt = unscaledWidth;
				
			}
			
			public function recibeCliente(idCliente:int):void{
				var item:CatClientes_IR_Item_imagen = new CatClientes_IR_Item_imagen();
				
				try
				{
					imagenAct.source = 	imgCliente.getInstance()["cliente_"+ idCliente ];
				}
				catch (error:Error)
				{
					imagenAct.source = imgCliente.getInstance().default_Select;
					
				}
			}
			
			public static var reportarVisita:ReportarVisita;
			public function set recibeReportarVisitasCliente(reportarVisita:ReportarVisita):void{
				if (!reportarVisita)
					return;
				if (vieneDe != "guardar" ) {
					VistaOperacionReportarVisita.reportarVisita = reportarVisita;
					timeLine.dispatchEvent(new Event("avanzarVista"));
				}
				else {
					VistaOperacionReportarVisita.reportarVisita.pendientes = reportarVisita.pendientes;
					VistaOperacionReportarVisita.reportarVisita.requisicion = reportarVisita.requisicion;
					VistaOperacionReportarVisita.reportarVisita.cotizacion = reportarVisita.cotizacion;
					
					if (pendientes)
						pendientes.iniciaVista(reportarVisita.pendientes, currentCliente);
					if (requisitar)
						requisitar.iniciaVista(reportarVisita.requisicion, currentCliente);
					if (cotizar)
						cotizar.iniciaVista(reportarVisita.cotizacion, currentCliente);
					if (reporteFinal)
						reporteFinal.iniciaVista(reportarVisita, currentCliente);
				}
				vieneDe = ""
			}
			
			[Bindable]
			public function get currentCliente():VisitaCliente
			{
				return _currentCliente;
			}
			
			public function set currentCliente(value:VisitaCliente):void
			{
				zonaTrabajoTimeLine.removeAllElements();
				timeLine.selectedIndex = -1;
				_currentCliente = value;
				recibeCliente(value.cliente.idCliente);
				timeLine.selectedIndex = 0;
				
				if (!requerimientos)
					requerimientos = new RequerimientrosReportarVisita();
				zonaTrabajoTimeLine.addElement(requerimientos);
				
			}
			
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				timeLine.data = timeLineData;
				timeLine.conPalomita = false;
			}
			
			
			protected function timeLine_cambiarVista(event:Event):void
			{
				zonaTrabajoTimeLine.removeAllElements();
				switch(timeLineData.source[timeLine.selectedIndex])
				{
					case 'REQUERIMIENTOS':
					{
						if (!requerimientos)
							requerimientos = new RequerimientrosReportarVisita();
						zonaTrabajoTimeLine.addElement(requerimientos);
						requerimientos.iniciaVista(reportarVisita.requerimientos);
						break;
					}
					case 'PENDIENTES':
					{
						if(!pendientes)
							pendientes = new PendientesReportarVisita();
						zonaTrabajoTimeLine.addElement(pendientes);
						pendientes.iniciaVista(reportarVisita.pendientes, currentCliente);
						break;
					}
					case 'HALLAZGOS':
					{
						if (!hallazgos)
							hallazgos = new HallazgoReportarVisita();
						zonaTrabajoTimeLine.addElement(hallazgos);
						hallazgos.iniciaVista(reportarVisita.hallazgos, currentCliente);
						break;
					}
					case 'REQUISITAR':
					{
						if (!requisitar)
							requisitar = new RequisitarReportarVisita();
						zonaTrabajoTimeLine.addElement(requisitar);
						requisitar.iniciaVista(reportarVisita.requisicion, currentCliente);
						break;
					}
					case 'COTIZAR':
					{
						if (!cotizar)
							cotizar = new CotizacionesReportarVisita();
						zonaTrabajoTimeLine.addElement(cotizar);
						cotizar.iniciaVista(reportarVisita.cotizacion, currentCliente);
						break;
					}
					case 'REPORTE FINAL':
					{
						if (!reporteFinal)
							reporteFinal = new ResumenReportarVisita();
						zonaTrabajoTimeLine.addElement(reporteFinal);
						reporteFinal.iniciaVista(reportarVisita, currentCliente);
						break;
					}
						
					default:
					{
						break;
					}
				}
			}
			
			protected function guardadoGeneral(event:MouseEvent):void
			{				
				var eventEsperar:EventoEsperar = new EventoEsperar(EventoEsperar.CONFIGURAR_ESPERA);
				eventEsperar.mensaje = "iniciarEspera";
				eventEsperar.idButtons = [];
				eventEsperar.tipoEventos  = [];
				eventEsperar.idButtons.push("btnGuardar");
				eventEsperar.tipoEventos.push("GUARDADO_GENERAL");
				dispatchEvent(eventEsperar);
				
				setTimeout(dispararEvento, 500);
			}
			
			private function dispararEvento():void{

			}
			
			private var vieneDe:String = "";
			public function set recibeRespuestaReportarVisitasCliente(respuesta:Boolean):void {

			}
			
			protected function btnmenu_clickHandler(event:MouseEvent):void
			{
				var evento:EventoTableroClientes = new EventoTableroClientes(EventoTableroClientes.CAMBIAR_VISTA);
				dispatchEvent(evento);
			}

			[Bindable]
			public function get indexVisita():int
			{
				return _indexVisita;
			}

			public function set indexVisita(value:int):void
			{
				_indexVisita = value;
			}

		]]>
	</fx:Script>
	
	<s:HGroup width="100%" height="45" id="vgHeader" verticalAlign="middle" paddingLeft="-5" gap="3">
		<s:Image id="btnmenu" click="btnmenu_clickHandler(event)"
				 source="{catalogoIconosBotoneras.getInstance().flechaIzquierdaupdown}" verticalCenter="0"
				 mouseOver="{ btnmenu.source = catalogoIconosBotoneras.getInstance().flechaIzquierdaover}"
				 mouseOut="{ btnmenu.source = catalogoIconosBotoneras.getInstance().flechaIzquierdaupdown}"/>
		<s:Label id="lblTitulo" styleName="cat_pro_titulo_bgothl_30" text="Visita #{currentCliente.noVisita}" />
		<s:Label styleName="cat_pro_titulo_bgothl_30" text="Â·" />
		<s:Label styleName="cat_pro_titulo_bgothl_30" text="{currentCliente.nombreCliente}" color="#0C8893" />
	</s:HGroup> 
	
	<s:HGroup width="100%">
		<otros:divisionGruesa width="100%"/>		
	</s:HGroup>
	
	<s:HGroup width="100%" height="100%" >  
		<s:Group width="100%" height="100%" >
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#FFFFFF" />
				</s:fill>
			</s:Rect>
			
			<s:VGroup width="100%" height="100%" padding="20" >
				<s:HGroup width="100%" verticalAlign="middle">
					<s:HGroup width="25%" height="100%" gap="15" verticalAlign="middle">
						<s:Image id="imagenAct" visible="true" includeInLayout="true" smoothingQuality="default" smooth="true"/>
						<s:VGroup width="100%" >
							<s:Label text="{currentCliente.cliente.nombre}" />
							<s:Label text="Cliente" />
						</s:VGroup>  
						
					</s:HGroup>  
					
					
					<s:VGroup width="25%" verticalAlign="middle" gap="10">
						<s:HGroup width="100%" >
							<mx:Image source="{catalogoIconosBotones.getInstance().contacto_svg}" />
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.contacto.nombre}"
									 fontSize="20" color="#008894" fontWeight="bold"/>
						</s:HGroup>  
						<s:HGroup width="100%" >
							<mx:Image source="{catalogoIconosBotones.getInstance().mail_svg}" />
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.contacto.EMail}"
									 fontSize="16" fontWeight="bold"/>
						</s:HGroup>  
						<s:HGroup width="100%" >
							<mx:Image source="{catalogoIconosBotones.getInstance().telefono_svg}" />
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.contacto.telefono} Â· EXT. {currentCliente.contacto.telefono}"
									 fontSize="16" fontWeight="bold"/>
						</s:HGroup>  
					</s:VGroup>  
					
					<s:Spacer width="{widthDatos}" />
					
					<s:VGroup width="170" verticalAlign="middle" gap="10">
						<s:HGroup width="100%" >
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.reqRealizados}/{currentCliente.totalReq}" fontSize="16" color="#008894"/>
							<s:Label styleName="tab_texto_12_Helvetica" text="Requerimientos" fontSize="16" color="#000000"/>
						</s:HGroup>  
						<s:HGroup width="100%" >
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.noPendientes}" fontSize="16" color="#008894"/>
							<s:Label styleName="tab_texto_12_Helvetica" text="Pendientes" fontSize="16" color="#000000"/>
						</s:HGroup>  
						<s:HGroup width="100%" >
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.noHallazgosVisita}" fontSize="16" color="#008894"/>
							<s:Label styleName="tab_texto_12_Helvetica" text="Hallazgos" fontSize="16" color="#000000"/>
						</s:HGroup>  
					</s:VGroup>  
					
					<s:Spacer width="1%"/>
					
					<s:VGroup maxWidth="250" verticalAlign="middle" gap="10">
						<s:HGroup width="100%" >
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.noRequisiciones}" fontSize="16" color="#008894"/>
							<s:Label styleName="tab_texto_12_Helvetica" text="Requisiciones" fontSize="16" color="#000000"/>
						</s:HGroup>  
						<s:HGroup width="100%" >
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.noCotizaciones}" fontSize="16" color="#008894"/>
							<s:Label styleName="tab_texto_12_Helvetica" text="Cotizaciones" fontSize="16" color="#008894"/>
						</s:HGroup>  
						<s:HGroup width="100%" >
							<s:Label styleName="tab_texto_12_Helvetica" text="{currentCliente.noProductos}" fontSize="16" color="#008894"/>
							<s:Label styleName="tab_texto_12_Helvetica" text="Productos Â· ${UtilsFormatosNumericos.precisionADosDecimalesConComas(currentCliente.totalProductos)}" fontSize="16" color="#000000"/>
						</s:HGroup>  
					</s:VGroup>  
					
					<s:Spacer width="7%"/>
					
					<s:VGroup width="160" verticalAlign="middle" gap="10">
						<s:HGroup width="100%" horizontalAlign="right">
							<s:Label styleName="tab_texto_12_Helvetica" text="AutoevaluaciÃ³n" fontSize="16" color="#000000" fontWeight="bold"/>
						</s:HGroup>  
						<s:HGroup width="100%" buttonMode="false" >
							<valoracion:Valoracion id="autoEvaluacion" calificacion="{currentCliente.calificacion}" readOnly="true" buttonMode="false"/>
						</s:HGroup>   
					</s:VGroup>  
				</s:HGroup> 
				
				<s:VGroup width="100%" paddingTop="20" >
					<otros:division	width="100%" />	
				</s:VGroup>  
				
				<s:VGroup width="100%" paddingTop="28" paddingBottom="28"> 
					<botoneraFlotante:botonSecciones id="timeLine" width="100%" avanzarVista="timeLine_cambiarVista(event)" regresarVista="timeLine_cambiarVista(event)" />
				</s:VGroup> 
				
				<s:Group id="zonaTrabajoTimeLine" width="100%" height="100%" />
				
				<s:HGroup width="100%" height="90" verticalAlign="middle" horizontalAlign="right" >
					
				</s:HGroup>  
				
				
			</s:VGroup>  
			
			
		</s:Group>  
		
	</s:HGroup>  
	
</s:VGroup>
