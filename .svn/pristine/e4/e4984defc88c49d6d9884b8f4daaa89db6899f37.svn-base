<?xml version="1.0" encoding="utf-8"?>
<mx:VBox verticalGap="0" xmlns:mx="http://www.adobe.com/2006/mxml" 
		 xmlns:vistas="mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.*"
		 xmlns:mapaIncidente="mx.com.proquifa.proquifanet.rsl.vista.mapas.incidentes.*"	
		 xmlns:mapaPopUp = "mx.com.proquifa.proquifanet.rsl.vista.mapas.popup.*"
		 xmlns:catalogos="mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.catalogos.*"
		 xmlns:gestion="mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.gestion.*"
		 xmlns:espera="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
		 creationPolicy="all"  width="100%" height="100%"  paddingBottom="15" paddingLeft="20" paddingRight="20" creationComplete="inicio()" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:boton="skins.plantillaproquifa.menu.boton.*" xmlns:barratitulo="skins.plantillaproquifa.barratitulo.*" >
	<mx:states >
		<mx:State name="VistaAdmonComunicacion" id="vistaAdmonComunicacion" >
			<mx:AddChild relativeTo="{hbox1}" position="after">
				<mx:VBox height="100%" width="100%" label="Documentos" id="boxDocumentacion" >
					<vistas:Documentos id="idDocumentos" />
				</mx:VBox>
			</mx:AddChild>
			<mx:AddChild relativeTo="{boxDocumentacion}" position="after">
				<mx:HBox height="100%" width="100%" label="Llamadas" id="boxLlamadas">
					<vistas:LamadasAdmonComunicacion id="idLlamadasAdmonComunicacion"/>
				</mx:HBox>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoGenerico;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaContactoService;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoGestionIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.InformacionVentana;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Usuario;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.alertPqNet.alertPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.VistaEspera;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.RegistroIncidenteInterior;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.contactos.ObtenerContacto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.catalogos.VistaDefaultCatalogos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.gestion.VistaDefaultBonos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.gestion.VistaDefaultGestion;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			
			import skins.plantillaproquifa.menu.botonanimar.btnFlechaderecha;
			import skins.plantillaproquifa.menu.botonanimar.btnFlechaizq;
			
			import spark.events.IndexChangeEvent;
			
			private var alerta:alertPqNet = null;
			//
			
			private var _componentePopUpContactos:ObtenerContacto = null;
			
			private var registraIncidente:RegistroIncidenteInterior =  null;
			
			private var vEspera:VistaEspera = new VistaEspera();
			
			private var vistaGestion:VistaDefaultGestion = null;
			private var vistaCatalogos:VistaDefaultCatalogos = null;
			
			[Bindable]
			private var _userName:String = "";
			
			
			public function get userName():String
			{
				return _userName;
			}
			
			public function set userName(value:String):void{
				_userName = value;
				this.arrayMenu[0].etiqueta = value;
				this.arrayMenu.refresh();
				
			}
			
			[Bindable]
			public var puesto:String = "";
			
			[Bindable]
			private var _usuarioLogueado:Empleado = new Empleado();
			/**
			 * Funcion para asignar usuario Logueado
			 */ 
			public function init():void{
				this._usuarioLogueado = DatosGlobales.getInstance()._usuario;
				// para maximizar/fullscreen ventana con F14 y F15 y ocultar menu con F13
				stage.addEventListener(KeyboardEvent.KEY_DOWN, keyDownListener);
				stage.addEventListener(Event.RESIZE, resizeHandler);
			}
			/**
			 * Envia Evento al Padre de Documentos
			 */ 
			public function iniciaDocumentos():void{			 	
				if(this.tabNvgPlantillaProquifa.selectedChild.label == "Documentos"){
					var evento:EventoGenerico = new EventoGenerico( EventoGenerico.MOSTRAR_DATOS_EN_PESTANAS_DOCUMENTACION);
					var infoVentana:InformacionVentana = new InformacionVentana();
					infoVentana.idVentana = "EnviarDocumentacion";
					evento.informacion = infoVentana;	
					this.parentApplication.mostarDatosEnPestanasDocumentacion(evento);
				}else if(this.tabNvgPlantillaProquifa.selectedChild.label == "Llamadas"){
					var evento2:EventoGenerico = new EventoGenerico( EventoGenerico.MOSTARA_DATOS_EN_PESTANA_LLAMADAS);
					var infoVentana2:InformacionVentana = new InformacionVentana();
					infoVentana2.idVentana = "LlamadasAdmonComunicaion";
					evento2.informacion = infoVentana2;	
					this.parentApplication.mostarDatosEnPestanasLlamadas(evento2);
				}
			}
			
			/**
			 * Funcion para esconder los pendientes de AIESC y dejar un espacio vacio para cualquier componente Vista Default
			 * Se tendra q mandar a llamar esta funcion en todos los componentes principales a exepcion de AIESC
			 */ 
			public function muestraEspacioVistaDefaultPendientes(ventana:IVisualElement):void{
				this.vBoxPendientesAIESC.height = 0;
				this.vistaDefaultEspacioVacioPendientes.percentHeight = 100;
				this.agregaComponentesAEspacioVistaDefault( ventana );
			}
			/**
			 * Funcion q agrega al espacioVitaDefaul los componentes enviados
			 */ 
			private function agregaComponentesAEspacioVistaDefault( ventana:IVisualElement):void{
				this.vistaDefaultEspacioVacioPendientes.addElement( ventana );
			}
			
			private function inicio():void{
				vEspera = PopUpManager.createPopUp(this,VistaEspera) as VistaEspera;
				vEspera.visible = false;
				//this.addEventListener(EventoEsperar.INICIA_ESPERA,entro);
				//this.addEventListener(EventoEsperar.TERMINA_ESPERA,entro);
				PopUpManager.centerPopUp(vEspera);
				
				//this._componentePopUpContactos = PopUpManager.createPopUp(this, ObtenerContacto,true) as ObtenerContacto;
				
				this.addEventListener(EventoParaContactoService.HAS_VISIBLE_POPUP_CONTACTOS, muestraPopUpContactos);
				//this.addEventListener(EventoAlertaPqNet.MOSTRAR_ALERTA,muestraAlertaPqNet);
				alertaSingleton.elDisplayObject = UIComponent(this.parentApplication);
			}
			
			private function muestraAlertaPqNet($event:EventoAlertaPqNet):void{
				if(this.alerta == null){
					this.alerta = new alertPqNet();
					this.alerta = PopUpManager.createPopUp(this,alertPqNet,true) as alertPqNet;
					this.alerta.configurar($event.mensaje,$event.encabezado,$event.vieneD,$event.labelOk,$event.labelCancel,$event.labelYes,$event.labelNo);
				}
				else{
					this.alerta.visible = true;
					this.alerta.configurar($event.mensaje,$event.encabezado,$event.vieneD,$event.labelOk,$event.labelCancel,$event.labelYes,$event.labelNo);
				}
				PopUpManager.centerPopUp(this.alerta);
			}
			
			private function cierraPopUpContactos(event:EventoParaContactoService):void{
				this._componentePopUpContactos.visible = false; 

			}
			private function regresaDatosAlPadre($evento:EventoParaContactoService):void{
				var evento:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.RECIBIR_DATOS_CONTACTO_DE_PLANTILLA);
				//evento.actividad = $event
				//dispatchEvent(evento);
			}
			
			private function muestraPopUpContactos(event:EventoParaContactoService):void{
				if(this._componentePopUpContactos == null){
					this._componentePopUpContactos = new ObtenerContacto();
					this._componentePopUpContactos = PopUpManager.createPopUp(this, ObtenerContacto,true) as ObtenerContacto;
					this._componentePopUpContactos.addEventListener(EventoParaContactoService.CIERRA_POPUP, cierraPopUpContactos);
					this._componentePopUpContactos.addEventListener(EventoParaContactoService.RECIBIR_DATOS_CONTACTO, regresaDatosAlPadre);
					this._componentePopUpContactos.addEventListener(EventoParaContactoService.OCULTAR_CHECKBOX, this._componentePopUpContactos.ocultaCheck );
					this._componentePopUpContactos.addEventListener(EventoAlertaPqNet.MOSTRAR_ALERTA,muestraAlertaPqNet);
					this._componentePopUpContactos.btnasociarEnabled = event.asociar;
					this._componentePopUpContactos.compBuscaContacto.tipoConsulta( event.consulta, event.busquedaPorEmpresa);
					this._componentePopUpContactos.vieneD = event.vieneD;
					this._componentePopUpContactos._checkBox = false;
				}
				else{
					this._componentePopUpContactos.visible = true; 
					this._componentePopUpContactos.btnasociarEnabled = event.asociar;
					this._componentePopUpContactos.addEventListener(EventoParaContactoService.OCULTAR_CHECKBOX, this._componentePopUpContactos.ocultaCheck );
					this._componentePopUpContactos.compBuscaContacto.tipoConsulta( event.consulta, event.busquedaPorEmpresa);
					this._componentePopUpContactos.vieneD = event.vieneD;
					this._componentePopUpContactos._checkBox = false;
					/* var evt:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.OBTENER_TIPO_CONSULTA);
					evt.consulta = "cliente";
					dispatchEvent(evt);
					var evtt:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.AGREGA_BOTON);
					evtt.asociar = event.asociar;
					dispatchEvent(evtt); */
				}
				PopUpManager.centerPopUp(this._componentePopUpContactos);
			}
			/* private function entro(evento:EventoEsperar):void{
			if(evento.type == EventoEsperar.INICIA_ESPERA){
			PopUpManager.centerPopUp(vEspera);
			this.MenuAccion.enabled = false;
			this.stackAcciones.enabled = false;
			this.controlInferior.enabled = false;
			this.vEspera.visible = true;
			}
			if(evento.type == EventoEsperar.TERMINA_ESPERA){
			this.MenuAccion.enabled = true;
			this.stackAcciones.enabled = true;
			this.controlInferior.enabled = true;
			this.vEspera.visible = false;
			}
			} */
			
			private var ComboMedio:Array = new Array();
			/**
			 * Abre el componente Llamadas de Recepcion en la pestaña Llamadas
			 */ 
			public function agregarComponenteLlamadas (menu:DisplayObject):void{
				this.idLlamadasAdmonComunicacion.agregaComponente( menu );
			}
			
			/**
			 * Recibe Documentacion para el apartado de Documentos
			 */ 
			public function agregarComponenteDocumentacion (menu:DisplayObject):void{
				this.idDocumentos.agregaComponente( menu );
			}
			/**
			 * Recibe el Menu para el apartado Pendientes.
			 */
			public function agregarMenuPendientes( menu:DisplayObject ):void{
				this.menuRoles.agregaMenu(menu);
			}
			
			/**
			 * Agrega Ventana en el apartado de Pendientes.
			 */
			public function agregarVentanaEnPendientes( ventana:DisplayObject ):void{
				if(ventana == null){
					return;
				}
				this.espacioTrabajoPendientes.removeAllChildren();
				this.espacioTrabajoPendientes.addChild( ventana );
			}
			
			/**
			 * Cerrar Ventana en el apartado de Pendientes.
			 */
			public function cerrarVentanaEnPendientes( ventana:DisplayObject ):void{
				if(ventana == null){
					return;
				}
				this.espacioTrabajoPendientes.removeChild(ventana);			
			}
			
			/**
			 * Funcion para poder Cambiar de Estado
			 */
			public function funcionParaCambiarEstado( tipoEstado:String ):void{
				if(tipoEstado == null){
					return;
				}
				this.currentState = tipoEstado;		
			}
			/**
			 * Metod para seleccionar el hijo del ViewStack (Escritorio, Pendientes)
			 */ 
			private function seleccionaPendientes():void{
				this.stackAcciones.selectedChild = this.vBoxTabNvgPlantillaProquifa;
			}
			/**
			 * Metodo para invocar mejoras
			 */ 
			private function seleccionaMejoras():void{
				var evento:EventoGestionIncidente = new EventoGestionIncidente(EventoGestionIncidente.RESET_A_REGISTRO_INCIDENTE);
				dispatchEvent( evento );
				this.stackAcciones.selectedChild = this.hbxMejoras; 
			}
			/**
			 * Metodo para seleccionar e hijo del ViewStack (Incidente, para registrar Incidentes)
			 */ 
			private function seleccionaIncidente():void{
				var evento:EventoGestionIncidente = new EventoGestionIncidente(EventoGestionIncidente.RESET_A_REGISTRO_INCIDENTE);
				dispatchEvent( evento );
				this.stackAcciones.selectedChild = this.hbxIncidente;
				if( this.registraIncidente == null){
					this.registraIncidente = new RegistroIncidenteInterior();
				}
				this.hbxIncidenteInterno.addChild( registraIncidente )				
				this._usuarioLogueado = parentApplication.datosUsuarioLogueado;
				this.registraIncidente._empleadoLogueado = this._usuarioLogueado;
				this.registraIncidente.iniciaIncidente(); 
			}
			/**
			 * Metodo que abre Cajon
			 */ 
			/*private function abreCajonClick():void{	
			this.formMenu.percentWidth = 100;
			this.btnCierraCajon.width = 30;
			this.btnCierraCajon.visible = true;
			this.btnabreCajon.width = 0;
			this.btnabreCajon.visible = false;
			this.muestraResize.play();
			}*/
			/**
			 * Metodo que cierraCajon
			 */ 
			/*private function cierraCajonClick():void{				
			this.formMenu.width = 0;
			this.btnCierraCajon.width = 0;
			this.btnCierraCajon.visible =false
			this.btnabreCajon.width = 30;
			this.btnabreCajon.visible = true
			this.oculataResize.play();
			}*/
			
			private function animarCajo(event:MouseEvent):void{
				//this.MenuAccion.width > 150 ? (this.resizeOculta.end(); this.resizeOculta.play() ) : (this.resizeMuestra.end(); this.resizeMuestra.play() );
				
				/* if(this.MenuAccion.width < 150){
					this.resizeOculta.end();
					this.resizeOculta.play();
				}else{
					this.resizeMuestra.end();
					this.resizeMuestra.play();
				} */
				//Alert.show(this.btnCajon.getStyle("skinClass").toString());
				//this.btnCajon.setStyle("skinClass",btnFlechaderecha);
				if(event.target.getStyle("skinClass").toString() == "[class btnFlechaizq]"){
					//btnCajon.label = ">";
					 this.btnCajon.setStyle("skinClass",btnFlechaderecha);
					this.vBotones.visible = false;
					this.oculataResize.play();
					return; 
				}
				if(event.target.getStyle("skinClass").toString() == "[class btnFlechaderecha]")
				{
					//btnCajon.label = "<";
					 this.btnCajon.setStyle("skinClass",btnFlechaizq);
					this.muestraResize.play();
					//this.vBotones.visible = true;
					return; 
				} 
			}
			
			public function menuMuestraOculta():void{
				if(this.btnCajon.getStyle("skinClass").toString() == "[class btnFlechaizq]"){
					//btnCajon.label = ">";
					this.btnCajon.setStyle("skinClass",btnFlechaderecha);
					this.vBotones.visible = false;
					this.oculataResize.play();
					return; 
				}
				if(this.btnCajon.getStyle("skinClass").toString() == "[class btnFlechaderecha]")
				{
					//btnCajon.label = "<";
					this.btnCajon.setStyle("skinClass",btnFlechaizq);
					this.muestraResize.play();
					//this.vBotones.visible = true;
					return; 
				} 
			}
			
			public function selecionarCatalogos():void{
				if(this.vistaCatalogos == null){
					this.vistaCatalogos = new VistaDefaultCatalogos();
					this.espacioTrabajoCatalogos.addChild(vistaCatalogos);
				}
				this.stackAcciones.selectedChild = hbxCatalogos;
				
			}
			
			public function seleccionarGestion():void{
				if( this.vistaGestion == null){
					this.vistaGestion = new VistaDefaultGestion();
					this.espacioTrabajoGestion.addChild( vistaGestion )
				}
				//this.stage.fullScreenSourceRect = new Rectangle(200,0,this.stackAcciones.width,this.stackAcciones.height);
				//this.stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
				this.stackAcciones.selectedChild = hbxGestion;
			}
			
			public function agregarVentanaEnCatalogos( ventana:DisplayObject ):void{
				if(ventana == null){
					return;
				}
				this.espacioTrabajoCatalogos.removeAllChildren();
				this.espacioTrabajoCatalogos.addChild(ventana);
				this.stackAcciones.selectedChild = hbxCatalogos;
			}
			
			[Bindable]
			public var arrayMenu:ArrayCollection = new ArrayCollection([
				{etiqueta:"USUARIO",funcion:"",imagen:"USUARIO"},
				{etiqueta:"PENDIENTES",funcion:"seleccionaPendientes",imagen:"PENDIENTES"},
				{etiqueta:"MEJORAS",funcion:"seleccionaMejoras",imagen:"MEJORAS"},
				{etiqueta:"INCIDENTE",funcion:"seleccionaIncidente",imagen:"INCIDENTE"},
				{etiqueta:"SOLICITUD",funcion:"",imagen:"SOLICITUD"},
				{etiqueta:"GESTIÓN",funcion:"seleccionarGestion",imagen:"GESTION"},
				{etiqueta:"CATÁLOGOS",funcion:"selecionarCatalogos",imagen:"CATALOGOS"}]);

			protected function cambio(event:IndexChangeEvent):void
			{
				if(event.currentTarget.selectedItem.funcion == ""){
					return;
				}
				else{
					this[event.currentTarget.selectedItem.funcion]();	
				}
				
			}
			
			private function resizeHandler(event:Event):void {
				trace("resizeHandler: " + event);
				trace("stageWidth: " + stage.stageWidth + " stageHeight: " + stage.stageHeight);
				this.MenuAccion.percentHeight = 100;
				this.vbxEscritorio.percentHeight = 100;
			}
			
			private function keyDownListener(e:KeyboardEvent):void{
				if (e.keyCode == 125){ // F14
					this.stage.nativeWindow.maximize();
				} 
				if (e.keyCode == 126){ // F15
					this.stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
				}
				if(e.keyCode == 124){ //F13
					menuMuestraOculta();
				}
			}
		]]>
	</mx:Script>
	<mapaIncidente:MapaAnalisisIncidente/>
	<mapaIncidente:MapaGestionIncidentes/>
	<mapaIncidente:MapaRegistroIncidente/>
	<mapaIncidente:MapaIncidenteProgramarAccion/>
	<mapaIncidente:MapaIncidenteAsociado/>
	<mapaIncidente:MapaIncidenteRechazado/>
	<mapaIncidente:MapaIncidenteConsulta/>
	<mapaPopUp:MapaPopUp/>
	
	<!--<mx:Resize target="{this.MenuAccion}" widthFrom="180" widthTo="0" id="oculataResize" duration="300"/>
	<mx:Resize target="{this.MenuAccion}" widthFrom="0" widthTo="180" id="muestraResize" duration="300"/>-->
	
	<!--<s:Resize id="resizeAjusta" duration="300" widthTo="180"/>-->
	
	<!--<s:Resize id="resizeOculta" duration="300" widthTo="0" target="{this.MenuAccion}"/>
	<s:Resize id="resizeMuestra" duration="300" widthTo="0" target="{this.MenuAccion}"/>-->
	<s:Resize target="{this.MenuAccion}" widthFrom="180" widthTo="0" id="oculataResize" duration="300"/>
	<s:Resize effectEnd="{this.vBotones.visible = true;}" target="{this.MenuAccion}" widthFrom="0" widthTo="180" id="muestraResize" duration="300"/>
	
	<barratitulo:tituloPlantilla width="100%" x="0" y="0" puesto="{this.puesto}"/>
	<mx:HBox width="100%" height="100%" horizontalGap="0" paddingTop="0">  
		<s:Group id="MenuAccion" height="100%">
			<s:Rect x="0" y="0" width="100%" height="100%">
				<s:fill>
					<s:SolidColor alpha="0.5" color="#FFFFFF"/>
				</s:fill>
			</s:Rect>
			<s:VGroup width="100%" height="100%" gap="0" id="vBotones">
				<s:ButtonBar change="cambio(event)" dataProvider="{arrayMenu}" labelField="etiqueta" skinClass="skins.plantillaproquifa.menu.buttonbar.skinMenuButtonBar">
					<s:layout>
						<s:VerticalLayout gap="0"/>
					</s:layout>
				</s:ButtonBar>
			</s:VGroup>
			
			
		</s:Group>
		
		
		<!--<mx:VBox paddingTop="27" height="100%" id="MenuAccion"  >							
		<mx:VBox backgroundColor="#585B5C" height="100%" borderStyle="solid" id="vbxPrueba" backgroundAlpha="1.0" >
		<mx:Form width="180" id="formMenu" horizontalScrollPolicy="off" >
		<mx:HBox width="100%">
		<mx:LinkButton label="PENDIENTES" textDecoration="none" fontSize="16" fontWeight="bold"  id="linkbutton1"  color="#FFFFFF" click="seleccionaPendientes()"/>
		</mx:HBox>
		<mx:HBox width="100%">
		<mx:LinkButton label="MEJORAS" textDecoration="none" fontSize="16" fontWeight="bold" id="linkMejoras" color="#FFFFFF" click="seleccionaMejoras()"/>
		</mx:HBox>
		<mx:HBox width="100%">
		<mx:LinkButton label="INCIDENTE" textDecoration="none" fontSize="16" fontWeight="bold"  id="linkbutton2"  color="#FFFFFF" click="seleccionaMejoras()"/>
		</mx:HBox>
		<mx:HBox width="100%">
		<mx:LinkButton label="SOLICITUD" textDecoration="none" fontSize="16" fontWeight="bold" id="linkbutton3"  color="#FFFFFF"/>
		</mx:HBox>
		<mx:HBox width="100%">
		<mx:LinkButton label="GESTIÓN" textDecoration="none" fontSize="16" fontWeight="bold" id="linkbutton4"  color="#FFFFFF" click="seleccionarGestion()"/>
		</mx:HBox>	
		<mx:HBox width="100%">
		<mx:LinkButton label="CATÁLOGOS" textDecoration="none" fontSize="16" fontWeight="bold" id="linkbutton5" click="this.seleccionarGestion()"  color="#FFFFFF"/>
		</mx:HBox>						
		</mx:Form>
		</mx:VBox>	
		
		</mx:VBox>-->
		
		
		<mx:HBox id="vbxEscritorio" width="100%" height="100%">
			<mx:ViewStack id="stackAcciones" backgroundColor="#FFFFFF"  width="100%" height="100%" >			
<!--  ///////////////////////////////////////////////////////////////////////// Pendintes ////////////////////////////////////////////////////////////////////////-->
				<mx:VBox verticalGap="0" id="vBoxTabNvgPlantillaProquifa"> 
					<!--id="vBoxTabNvgPlantillaProquifa" id comentado pertenece al -->
					<mx:VBox verticalGap="0"  width="100%" height="100%" id="vBoxPendientesAIESC">
						<s:TabBar width="100%" dataProvider="{tabNvgPlantillaProquifa}">
							
						</s:TabBar>
						
						<mx:ViewStack  id="tabNvgPlantillaProquifa"  width="100%" change="iniciaDocumentos()"  height="100%">
							<mx:HBox width="100%" height="100%" label="Pendientes" id="hbox1">		
								<vistas:MenuRoles id="menuRoles" paddingTop="27" paddingLeft="10" />
								<vistas:EspacioTrabajo id="espacioTrabajoPendientes" paddingRight="10" />
							</mx:HBox>
						</mx:ViewStack>
					</mx:VBox>
					<s:Scroller width="100%" height="100%">
						<s:HGroup>
							<s:NavigatorContent width="100%" height="0" id="vistaDefaultEspacioVacioPendientes" />
						</s:HGroup>
					</s:Scroller>
				</mx:VBox>
				
				<!--<mx:VBox verticalGap="0"  width="100%" height="100%" id="vBoxTabNvgPlantillaProquifa" >
					<s:TabBar width="100%" dataProvider="{tabNvgPlantillaProquifa}">
						
					</s:TabBar>
					
					<mx:ViewStack  id="tabNvgPlantillaProquifa"  width="100%" change="iniciaDocumentos()"  height="100%">
						<mx:HBox width="100%" height="100%" label="Pendientes" id="hbox1">		
							<vistas:MenuRoles id="menuRoles" paddingTop="27" paddingLeft="10" />
							<vistas:EspacioTrabajo id="espacioTrabajoPendientes" paddingRight="10" />
						</mx:HBox>
					</mx:ViewStack>
				</mx:VBox>-->
				
				
				<mx:HBox id="hbxCatalogos" width="100%" height="100%" label="Catálogos" visible="false" >
					<mx:HBox backgroundColor="#ffffff" width="100%" height="100%" id="espacioTrabajoCatalogos">
						<!--<catalogos:VistaDefaultCatalogos width="100%" height="100%">
						
						</catalogos:VistaDefaultCatalogos>-->
					</mx:HBox>
				</mx:HBox>
				
				<mx:HBox id="hbxGestion" width="100%" height="100%" label="Gestión">
					<mx:HBox backgroundColor="#ffffff" width="100%" height="100%" id="espacioTrabajoGestion">
						<!--<gestion:VistaDefaultGestion width="100%" height="100%">
						
						</gestion:VistaDefaultGestion>-->
					</mx:HBox>
				</mx:HBox>
				
				<mx:HBox id="hbxIncidente" width="100%" height="100%"  >				
					<mx:HBox id="hbxIncidenteInterno" backgroundColor="#ffffff"  width="100%" height="100%" paddingTop="20"  paddingLeft="20" paddingRight="20" paddingBottom="5" borderStyle="solid">				
					</mx:HBox>
				</mx:HBox>
				<mx:HBox id="hbxMejoras" width="100%" height="100%" >
					<mx:HBox backgroundColor="#ffffff"  width="100%" height="100%" paddingTop="20">
						<vistas:Mejoras id="idMejoras"/>
					</mx:HBox>
				</mx:HBox>
				<mx:HBox id="hbxDatosPersonales" width="100%" height="100%" >
					<mx:HBox backgroundColor="#ffffff"  width="100%" height="100%" paddingTop="17">
					</mx:HBox>
				</mx:HBox>
			</mx:ViewStack>
		</mx:HBox>
			
	</mx:HBox>
	
	<s:Group width="100%" height="38">
			<barratitulo:barraTitulo width="100%"/>
			<mx:HBox height="38" id="controlInferior" width="100%"  borderAlpha="0.0" 	 horizontalGap="0" verticalAlign="middle">
				<s:Spacer width="15"/>
				<s:Button left="15" width="30" height="28" label="&lt;" id="btnCajon" click="animarCajo(event)" skinClass="skins.plantillaproquifa.menu.botonanimar.btnFlechaizq"/><!--click="animarCajo(event)"-->
				<mx:Spacer width="100%"/>        
			</mx:HBox>
	</s:Group>
	
</mx:VBox>