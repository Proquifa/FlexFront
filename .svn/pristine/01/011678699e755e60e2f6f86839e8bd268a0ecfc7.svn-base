<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"				
				xmlns:consultas="skins.skin.comun.consultas.*" xmlns:skins="flatspark.skins.*" xmlns:chekbox="skins.skin.chekbox.*"
				xmlns:label="skins.skin.label.*" xmlns:evento="skins.skin.chekbox.evento.*" xmlns:otros="skins.otros.*"
				width="100%" maxWidth="300"
				creationComplete="inicio(event)" xmlns:panelCtaDetalle="skins.skin.comun.consultas.panelCtaDetalle.*"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.productos.EventoTableroProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Producto;
			import mx.events.FlexEvent;
			
			
			protected function inicio(event:FlexEvent):void
			{
			//rbtnProducto.seleccionaColor("radioAzul"); RadioButton
			}
			override public function set data(value:Object):void
			{
				super.data = value;
				this.autoDrawBackground= true;
				
				if(data.unico == true)
					LineaFinal.visible = false;
				else
					LineaFinal.visible = true;
					
				
				if((data as Producto).vigente){
					(data as Producto).estatus = "Habilitado";
				}else{
					(data as Producto).estatus = "Deshabilitado";
				}				
			}
			
			protected function rbtnProducto_clickHandler(event:MouseEvent):void
			{
				if(!( data as Producto ).isCheck){
					( data as Producto ).isCheck = true; // Cuando es False cambia a True por que se inhabilita para que estando seleccionado lo deselecciones con Click, esto para que funcione como RadioButton	
				}
				else{
					//rbtnProducto.selected = true; // No se permite deseleccionar lo vuelve a poner seleccionar
				}
				
				var evt:EventoTableroProductos = new EventoTableroProductos(EventoTableroProductos.DESELECCIONA_RADIO_PRODUCTOS);
				evt.idProducto = (data as Producto).idProducto;
				dispatchEvent(evt);
			}
			
			private function quitarVacios(value:Array, separador:String = "·",espacio:String = " "):String
			{			
				var sTexto:String = "";
				for (var i:int = 0; i < value.length; i++) 
				{
					//Primer Item
					if (i == 0 ){
						if (value[i] != null && value[i] != ""){
							sTexto += value[i];
						}
					}
					else{
						if (sTexto != ""){
							if (value[i] != null && value[i] != ""){
								sTexto += espacio + separador + espacio + value[i];
							}
						}
						else{
							if (value[i] != null && value[i] != ""){
								sTexto += value[i];
							}
						}
					}
				}
				return sTexto;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<!--SelectItem-->
	<s:Rect width="100%" height="100%" visible="false" visible.selected="true"> 
		<s:fill>
			<s:SolidColor color="#dfdfe0" />
		</s:fill>
	</s:Rect>
	<!--SelectItem-->
	
	<s:VGroup width="100%" height="100%" id="vgp0" gap="0">	
		
		<s:HGroup width="100%" height="100%" >
			<consultas:LineaItemSeleccionado visible.selected="true"/>
			
			<s:VGroup width="92%" paddingRight="10" paddingTop="10" paddingBottom="10">			
				
				<!-- Catálogo · Descripción · Marca -->		
				<s:Label fontFamily="Helvetica" fontWeight="bold" fontStyle="normal" fontSize="10" text="{(data as Producto).descripcion}" maxDisplayedLines="2" width="100%" paddingTop="0" 
						 toolTip="{(data as Producto).descripcion}"/>
				
				<s:Label fontFamily="Helvetica" fontWeight="normal" fontStyle="normal" fontSize="10" text="{quitarVacios([(data as Producto).tipo,(data as Producto).subtipo,(data as Producto).control])}" maxDisplayedLines="2"/>
				<s:Label fontFamily="Helvetica" fontWeight="normal" fontStyle="normal" fontSize="10" text="{(data as Producto).disponibilidad + ' · ' + (data as Producto).estatus}" maxDisplayedLines="2" />
				
			</s:VGroup>
			
			<s:HGroup horizontalAlign="center" verticalAlign="middle" height="100%" width="8%">	
				<!--<chekbox:checkBoxRadio id="rbtnProducto" selected="{( data as Producto ).isCheck}" click="rbtnProducto_clickHandler(event)" />RadioButton -->
				<!--<chekbox:radioDefaultPQNet id="rbtnProducto" selected="{( data as Producto ).isCheck}" click="rbtnProducto_clickHandler(event)"/>-->				
			</s:HGroup>
			
		</s:HGroup>		
		
		<otros:division id="LineaFinal"  width="100%" visible.selected="false" visible.normal="{EventoTableroProductos.indiceBusqueda == this.itemIndex ? false:true}"
						visible.hovered="{EventoTableroProductos.indiceBusqueda == this.itemIndex ? false:true}"/> 
	</s:VGroup>
	
</s:ItemRenderer>
