<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx"  
		 xmlns:otros="skins.otros.*" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:input="skins.skin.textinput.*" 
		 xmlns:pqNet="skins.botones.pqNet.*" 
		 xmlns:chekbox="skins.skin.chekbox.*" 
		 xmlns:contenedores="skins.skin.contenedores.*"
		 xmlns:numericStepper="skins.skin.numericStepper.*" 
		 xmlns:textarea="skins.skin.textarea.*"
		 xmlns:botonesToggle="skins.botonesToggle.*"
		 creationComplete="creation(event)"
		 width="100%" height="100%" xmlns:toggleButton="skins.skin.botones.toggleButton.*"   
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.agenteAduanal.EventoCatAgenteAduanalGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.AgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.LugarAgenteAduanal;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.agenteAduanal.LugarConcepto;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable]	private var _agente:AgenteAduanal;
			private var _agenteRespaldo:AgenteAduanal;
			private var _universo:ArrayCollection;
			private var _idAgente:Number;
			private var _aeropuerto:LugarAgenteAduanal;
			private var _laredo:LugarAgenteAduanal;
			private var _sanDiego:LugarAgenteAduanal;
			private var _aeropuertoResp:LugarAgenteAduanal;
			private var _laredoResp:LugarAgenteAduanal; 
			private var _sanDiegoResp:LugarAgenteAduanal;
			private var _eliminarConcepto:Boolean = false;
			
			
			
			private var lugarInsercion:String = 'AEROPUERTO';
			private var seGuarda:Boolean = true;
			private var indice:Number = 0;
			
			private var _arrButton:ArrayCollection = new ArrayCollection( [ 
				{ valor:' AEROPUERTO', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14, icono:'avion', lugar:'AEROPUERTO' }, 
				{ valor:' LAREDO', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14, icono:'avion', lugar:'LAREDO' },
				{ valor:' SAN DIEGO', colorBase: catalogoColores.LABEL_VERDE_AZUL, fontSize:14, icono:'avion', lugar:'SAN DIEGO' }] );
			
			
			
			protected function creation(event:FlexEvent):void{
				botoneraBarra.dataProvider = _arrButton;
				botoneraBarra.selectedIndex = 0;
				
				addEventListener(EventoCatAgenteAduanalGeneral.MODIFICAR_CONCEPTOS_LUGAR_AGENTE,modificar,false,0,true);
				addEventListener(EventoCatAgenteAduanalGeneral.REUBICAR_PANEL_MODIFICACION,reubicarPanel,false,0,true);
				addEventListener("pasarInfoListaEdicion",pasarInfo,false,0,true);
				addEventListener("cancelarEliminacionRegistro",cancelarEliminacion,false,0,true);
				addEventListener("eliminacionConceptoLugarAA",eliminarConceptoLugar,false,0,true);
			}
			
			private function reubicarPanel($reub:EventoCatAgenteAduanalGeneral):void
			{
				lstConceptos.ensureIndexIsVisible(lstConceptos.selectedIndex);
			}
			
			private function modificar($evt:EventoCatAgenteAduanalGeneral):void
			{
				var newArray:ArrayCollection = new ArrayCollection();
				newArray = lstConceptos.dataProvider as ArrayCollection;
				newArray[lstConceptos.selectedIndex] = $evt.lugarConcepto;
				
			}	
			
			public function set recibeAgenteSeleccionado($agente:AgenteAduanal):void{
				
				_idAgente = $agente.idAgenteAduanal;
				_aeropuerto = new LugarAgenteAduanal();
				_laredo = new LugarAgenteAduanal();
				_sanDiego = new LugarAgenteAduanal();
				
				if (indice == 0)
				{
					botoneraBarra.selectedIndex = 0;
					lugarInsercion = 'AEROPUERTO';
				}
				else
				{
					botoneraBarra.selectedIndex = indice;
					if (indice==1)
						lugarInsercion = 'LAREDO';
					if (indice==2)
						lugarInsercion = 'SAN DIEGO';
					indice = 0;
					
				}
				
				
				
				for (var i:Number = 0; i<_universo.length; i++){
					var current:LugarAgenteAduanal = (_universo[i] as AgenteAduanal).lugar;
					
					if ((_universo[i] as AgenteAduanal).idAgenteAduanal == _idAgente){
						
						if (current.lugarAgente == 'AEROPUERTO'){
							_aeropuerto = current;
							_aeropuertoResp = ObjectUtil.copy(_aeropuerto) as LugarAgenteAduanal;
						}
						if (current.lugarAgente == 'LAREDO'){
							_laredo = current;
							_laredoResp = ObjectUtil.copy(_laredo) as LugarAgenteAduanal;
						}
						if (current.lugarAgente == 'SAN DIEGO'){
							_sanDiego = current;
							_sanDiegoResp = ObjectUtil.copy(_sanDiego) as LugarAgenteAduanal;
						}
					}
				}
				recibeAgenteFlujo( $agente );
			}
			
			
			public function set recibeAgentes($datos:ArrayCollection):void{
				if( $datos == null || $datos.length == 0 ){
					return;
				}
				_universo = new ArrayCollection();
				_universo = ObjectUtil.copy( $datos ) as ArrayCollection;
				
				if (_idAgente > 0){
					var evt:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.ENVIA_AGENTE_ADUANAL);
					evt.agenteSeleccionado = this._agente;
					dispatchEvent( evt );
				}
			}
			
			
			public function recibeAgenteFlujo($age:AgenteAduanal):void{
				if ($age.lugar == null || $age.lugar.lugarConceptos == null)
					lstConceptos.dataProvider = new ArrayCollection();
				
				habilitaTextos(false);
				_agente = $age;
				_agenteRespaldo = ObjectUtil.copy( $age ) as AgenteAduanal;
				grpBotonEditar.visible = true;
				cargaPais();
				grpBotonesAgrgar.visible = grpBotonesAgrgar.includeInLayout = flecha_abajo.visible = false;
				grpBotones.visible = this.grpBotones.includeInLayout = false;
				
				if(lugarInsercion != null){
					if (lugarInsercion == 'SAN DIEGO'){
						_agente.lugar = ObjectUtil.copy( _sanDiego ) as LugarAgenteAduanal;
					}else if (lugarInsercion == 'LAREDO'){
						_agente.lugar = ObjectUtil.copy( _laredo ) as LugarAgenteAduanal;
					}else if (lugarInsercion == 'AEROPUERTO'){
						_agente.lugar = ObjectUtil.copy( _aeropuerto ) as LugarAgenteAduanal;
					}
					cargaPais();
					lugarInsercion = null;
				}
				
				if (_agente.lugar != null){
					
					if (_agente.lugar.monto>0){
						chkMonto.selected = true;
						chkPorcentaje.selected = false;
					}else{
						chkMonto.selected = false;
						chkPorcentaje.selected = true;
					}
					if(isNaN (_agente.lugar.id_lugarAgente) || _agente.lugar.id_lugarAgente == 0){ //es nuevo proveedor por agregar
						grpBotonesAgrgar.visible = grpBotonesAgrgar.includeInLayout = flecha_abajo.visible = true;
						this.cmbPais.selectedIndex = 0;
						seEstaEditando = true;
						conceptosLugar.includeInLayout = conceptosLugar.visible = true;
						divDireccion.includeInLayout = divDireccion.visible = true;
						habilitaTextos(true);
					}else{
						grpBotones.visible = this.grpBotones.includeInLayout = true;
						conceptosLugar.includeInLayout = conceptosLugar.visible = false;
						divDireccion.includeInLayout = divDireccion.visible = false;
					} 
				}
			}
			
			
			
			private function cargaPais():void{
				if( _agente == null || _agente.lugar == null || _agente.lugar.pais == null || _agente.lugar.pais == '' ){
					cmbPais.selectedIndex = 0;
				}else if( cmbPais.dataProvider != null && cmbPais.dataProvider.length > 0 ){
					this.cmbPais.selectedIndex = Util.indiceSeleccionadoComoObjetoConString( cmbPais.dataProvider as ArrayCollection , _agente.lugar.pais );
				}else{
					setTimeout( cargaPais, 500 );
				}
			}
			
			
			/* private function advertenciaGuardar():void{
			alertaSingleton.show(catalogoAlertas.compradorPhs_guardaCambiosPartidaRequisicion,catalogoAlertas.TIT_ADV_atencion,"Cat_Pro_Empresa_Guardar","","","SI","NO");
			} */
			
			
			private function enviaIdSeleccionado():void{
				var evtd:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.ACTUALIZA_AGENTES_ADUANALES );
				evtd.idAgente = _agente.idAgenteAduanal;
				evtd.habilitado = _agente.habilitado;
				dispatchEvent( evtd ); 
				guardaCambios();
				var $evtP:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.OBTENER_AGENTES_ADUANALES );
				dispatchEvent($evtP);
			}
			
			private function guardaCambios( vieneDe:String = '' ):void{
				//se dispara el evento que regresa el proveedor al componente CatProMenu.mxml para guardar
				if (vieneDe == 'actualiza'){
					var id:Number;
					indice = botoneraBarra.selectedIndex;
					if (botoneraBarra.selectedItem.lugar == 'AEROPUERTO'){
						id =_aeropuertoResp.id_lugarAgente;
					}else if (botoneraBarra.selectedItem.lugar == 'LAREDO'){
						id =_laredoResp.id_lugarAgente;	
					}else {
						id =_sanDiegoResp.id_lugarAgente;	
					}
					
					var evtUpd:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.ACTUALIZA_LUGAR_AGENTE );
					if( cmbPais.selectedIndex == 0  ){
						alertaSingleton.show("Es necesario indicar indicar un pa√≠s.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return
					}
					if( txtCiudad.text == "" ){
						alertaSingleton.show("Es necesario indicar la ciudad.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					if( txtEstado.text == "" ){
						alertaSingleton.show("Es necesario indicar el estado.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					if( txtCP.text == "" ){
						alertaSingleton.show("Es necesario indicar el CP.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					if( txtDireccion.text == "" ){
						alertaSingleton.show("Es necesario indicar la direcci√≥n.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					else{
						if(!lstConceptos.dataProvider || lstConceptos.dataProvider.length == 0)
						{
							alertaSingleton.show("Es necesario agregar al menos un concepto",catalogoAlertas.TIT_ADV_informacionIncompleta);
							return;
						}
					}
					evtUpd.lugarAgente = new LugarAgenteAduanal();
					evtUpd.lugarAgente.id_lugarAgente = id;
					evtUpd.lugarAgente.lugarAgente = botoneraBarra.selectedItem.lugar; 
					evtUpd.lugarAgente.pais = cmbPais.selectedItem.valor; 
					evtUpd.lugarAgente.ciudad = txtCiudad.text;
					evtUpd.lugarAgente.cp = txtCP.text;
					evtUpd.lugarAgente.direccion1  = txtDireccion.text;
					evtUpd.lugarAgente.estado = txtEstado.text;
					evtUpd.lugarAgente.direccion2 = txtSegundaDireccion.text;
					evtUpd.lugarAgente.limiteConsolidacion = Number(txtConsolidacionMax.text);
					/*evtUpd.lugarAgente.limiteConsolidacion = Number(txtConsolidacionMin.text);*/
					
					if (chkMonto.selected == true){
						evtUpd.lugarAgente.monto = Number(txtPrecio.text);
						evtUpd.lugarAgente.porcentaje = 0;
					}else{
						evtUpd.lugarAgente.monto = 0;
						evtUpd.lugarAgente.porcentaje = Number(numericsteper.value);
					}
					lugarInsercion = botoneraBarra.selectedItem.lugar;
					evtUpd.lugarAgente.lugarConceptos = lstConceptos.dataProvider as ArrayCollection;
					evtUpd.ventana = "CatAgenteAduanal_Desaduanaje ( idAgente:"+_idAgente+", idLugar: "+id+" )";
					dispatchEvent( evtUpd );
					lstConceptos.dataProvider = null;
					guardarLimites();
				}
				
				if (vieneDe == 'inserta'){
					indice = botoneraBarra.selectedIndex;
					var evtInsert:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.INSERTA_NUEVO_LUGAR_AGENTE );
					if( cmbPais.selectedIndex == 0  ){
						alertaSingleton.show("Es necesario indicar indicar un pa√≠s.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return
					}
					if( txtCiudad.text == "" ){
						alertaSingleton.show("Es necesario indicar la ciudad.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					if( txtEstado.text == "" ){
						alertaSingleton.show("Es necesario indicar el estado.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					if( txtCP.text == "" ){
						alertaSingleton.show("Es necesario indicar el CP.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					if( txtDireccion.text == "" ){
						alertaSingleton.show("Es necesario indicar la direcci√≥n.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
					else{
						if(!lstConceptos.dataProvider || lstConceptos.dataProvider.length == 0)
						{
							alertaSingleton.show("Es necesario agregar al menos un concepto",catalogoAlertas.TIT_ADV_informacionIncompleta);
							return;
						}
					}
					evtInsert.idAgente = this._agenteRespaldo.idAgenteAduanal;
					evtInsert.lugarAgente = new LugarAgenteAduanal();
					evtInsert.lugarAgente.lugarAgente = botoneraBarra.selectedItem.lugar; 
					evtInsert.lugarAgente.pais = cmbPais.selectedItem.valor; 
					evtInsert.lugarAgente.ciudad = txtCiudad.text;
					evtInsert.lugarAgente.cp = txtCP.text;
					evtInsert.lugarAgente.direccion1  = txtDireccion.text;
					evtInsert.lugarAgente.estado = txtEstado.text;
					evtInsert.lugarAgente.direccion2 = txtSegundaDireccion.text;
					evtInsert.lugarAgente.limiteConsolidacion = Number(txtConsolidacionMax.text);
					/*evtInsert.lugarAgente.limiteConsolidacion = Number(txtConsolidacionMin.text);*/
					
					if (chkMonto.selected == true){
						evtInsert.lugarAgente.monto = Number(txtPrecio.text);
						evtInsert.lugarAgente.porcentaje = 0;
					}else{
						evtInsert.lugarAgente.monto = 0;
						evtInsert.lugarAgente.porcentaje = Number(numericsteper.value);
					}
					lugarInsercion = botoneraBarra.selectedItem.lugar;
					evtInsert.lugarAgente.lugarConceptos = lstConceptos.dataProvider as ArrayCollection;
					evtInsert.ventana = "CatAgenteAduanal_Desaduanaje nuevo( idAgente:"+evtInsert.idAgente+", Lugar: "+evtInsert.lugarAgente.lugarAgente+" )";
					dispatchEvent( evtInsert );
					lstConceptos.dataProvider = null;
					guardarLimites();
				}
			}
			
			private function guardarLimites():void
			{
				
				var limit:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.GUARDAR_LIMITES_CONSOLIDADOS_CORREO);
				limit.agenteSeleccionado = new AgenteAduanal();
				limit.agenteSeleccionado.idAgenteAduanal = _agenteRespaldo.idAgenteAduanal;
				limit.agenteSeleccionado.limiteConsolidacionMax = Number(txtConsolidacionMax.text)
				limit.agenteSeleccionado.limiteConsolidacionMin = Number(txtConsolidacionMin.text)
				limit.agenteSeleccionado.facturasComerciales = chkFacturas.selected;
				limit.agenteSeleccionado.PL = chkPacking.selected;
				limit.agenteSeleccionado.certificados = chkCertificado.selected;
				limit.agenteSeleccionado.NAFTA = chkNafta.selected;
				limit.agenteSeleccionado.cartaUso = chkCarta.selected;
				limit.agenteSeleccionado.correoElectronico = txtCorreo.text;
				dispatchEvent( limit );
			}
			
			
			public function set confirmaGuardadoLimite(confirmaGuardado:Boolean):void{
				if( confirmaGuardado == true)
				{
					var $evtP:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.OBTENER_AGENTES_ADUANALES );
					dispatchEvent($evtP);
				}
			}
			public function set confirmaGuardado(confirmaGuardado:Boolean):void{
				if( confirmaGuardado == true){
					var $evtP:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.OBTENER_AGENTES_ADUANALES );
					dispatchEvent($evtP);
					seEstaEditando=true;editarInfo('cancelar')
				}
			}
			
			public function set confirmaInsertar( $dato:Number ):void{
				if( isNaN( $dato ) )
					return;
				
				var $evtPq:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.OBTENER_AGENTES_ADUANALES );
				dispatchEvent($evtPq);
				seEstaEditando=true;editarInfo('cancelar')
			}
			
			
			
			private var seEstaEditando:Boolean = false;
			
			protected function editarInfo($vieneDe:String = ''):void {
				flecha_abajo.visible = false;
				flecha_arriba.visible = false;
				
				if( seEstaEditando )
				{
					//spcHonorarios.includeInLayout = false;
					if( $vieneDe == 'cancelar')
					{
						setTimeout( acomodaTiempo, 400 );
						lnkAgregarConcepto.visible = lnkAgregarConcepto.includeInLayout = false;
						grpAplicar.visible = grpAplicar.includeInLayout = true;
						lnkAgregarConcepto.visible = lnkAgregarConcepto.includeInLayout = true;
					}
					else
					{
						
						grpGuardarCancelar.visible = false; 
						this.lnkEditar.visible = this.lnkEditar.includeInLayout = true;
					}
				}else{
					flecha_abajo.visible = true;
					//spcHonorarios.includeInLayout = false;
					
					lstConceptos.selectedItem = undefined;
					if (lstConceptos.selectedItem != undefined)
					{
						lnkAgregarConcepto.visible = lnkAgregarConcepto.includeInLayout = true;
						grpAplicar.visible = grpAplicar.includeInLayout = false;
					}
					else
					{
						lnkAgregarConcepto.visible = lnkAgregarConcepto.includeInLayout = true;
						grpAplicar.visible = grpAplicar.includeInLayout = false;
					}
					
					for (var m:Number=0; m < _agente.lugar.lugarConceptos.length; m++)
					{
						(_agente.lugar.lugarConceptos[m] as LugarConcepto).edicion = true;
						
					}
					setTimeout( muestraLinkCancelar, 250 );
				}  
			}
			
			private function muestraLinkCancelar():void{
				grpGuardarCancelar.visible = true; 
				conceptosLugar.includeInLayout = conceptosLugar.visible = true;
				divDireccion.includeInLayout = divDireccion.visible = true;
				this.lnkEditar.visible = this.lnkEditar.includeInLayout = false;
				habilitaTextos(true);
			} 
			
			private function acomodaTiempo():void{
				grpGuardarCancelar.visible = false; 
				this.lnkEditar.visible = this.lnkEditar.includeInLayout = true;
				conceptosLugar.includeInLayout = conceptosLugar.visible = false;
				divDireccion.includeInLayout = divDireccion.visible = false;
				habilitaTextos(false);
			}
			
			private function habilitaTextos( $seHabilita:Boolean):void{
				txtCiudad.editable = $seHabilita;
				txtCP.editable = $seHabilita;
				txtDireccion.editable = $seHabilita;
				txtSegundaDireccion.editable = $seHabilita;
				txtEstado.editable = $seHabilita;
				cmbPais.openButton.enabled= $seHabilita;
				cmbPais.textInput.enabled = $seHabilita;
				txtPrecio.enabled = $seHabilita;
				numericsteper.enabled = $seHabilita;
				chkMonto.enabled = $seHabilita;
				chkPorcentaje.enabled = $seHabilita;
				cmbPais.focusEnabled = $seHabilita;
				txtCorreo.editable = $seHabilita;
				txtConsolidacionMax.editable = $seHabilita;
				txtConsolidacionMin.editable = $seHabilita;
				chkFacturas.enabled = $seHabilita;
				chkPacking.enabled = $seHabilita;
				chkCertificado.enabled = $seHabilita;
				chkNafta.enabled = $seHabilita;
				chkCarta.enabled = $seHabilita;
			}
			
			public function cancelaGuardado():void{
				
				if (_agente.lugar.lugarConceptos)
				{
					for (var m:Number=0; m < _agente.lugar.lugarConceptos.length; m++)
					{
						(_agente.lugar.lugarConceptos[m] as LugarConcepto).edicion = false;
					}
				}
				
				if(_agente.lugar.lugarAgente == null)
				{
					_agente.lugar.lugarConceptos = new ArrayCollection();
				}
				
				if (botoneraBarra.selectedItem.lugar == 'AEROPUERTO'){
					_agenteRespaldo.lugar =_aeropuertoResp;
					recibeAgenteFlujo( _agenteRespaldo );
				}else if (botoneraBarra.selectedItem.lugar == 'LAREDO'){
					_agenteRespaldo.lugar =_laredoResp;
					recibeAgenteFlujo( _agenteRespaldo );	
				}else{
					_agenteRespaldo.lugar =_sanDiegoResp;
					recibeAgenteFlujo( _agenteRespaldo );	
				}
				
				regresarNuevo();
			}
			
			
			public function cambioLugar():void{
				
				cancelaGuardado();
				seEstaEditando=true;
				editarInfo();
				//spcHonorarios.includeInLayout = true;
				
				if (botoneraBarra.selectedIndex == 0){
					_agente.lugar = _aeropuerto;
					if ( isNaN(_agente.idAgenteAduanal)){
						acomodaTiempo();
					}
				}
				if (botoneraBarra.selectedIndex == 1){
					_agente.lugar = _laredo;
					if ( isNaN(_agente.idAgenteAduanal)){
						acomodaTiempo();
					}
				}
				if (botoneraBarra.selectedIndex == 2) {
					_agente.lugar = _sanDiego;
					if ( isNaN(_agente.idAgenteAduanal)){
						acomodaTiempo();
					}
				}
				recibeAgenteFlujo(_agente);
			}
			
			
			protected function lnkAgregarConcepto_clickHandler(event:MouseEvent):void
			{
				var newConceptoLugar:LugarConcepto = new LugarConcepto();
				newConceptoLugar.concepto = txtConcepto.text;
				
				if(txtConcepto.text == ''){
					alertaSingleton.show("Es necesario que se agregue un Concepto.",catalogoAlertas.TIT_ADV_informacionIncompleta);
					return;
				}
				if (chkMonto.selected == true){
					if(txtPrecio.text == '0'){
						alertaSingleton.show("Es necesario que el Monto sea mayor a 0.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
				}else{
					if(numericsteper.value == 0){
						alertaSingleton.show("Es necesario que el Porcentaje sea mayor a 0.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
				}
				
				if (chkMonto.selected == true){
					newConceptoLugar.monto = Number(txtPrecio.text);
					newConceptoLugar.porcentaje = 0;
				}else{
					newConceptoLugar.monto = 0;
					newConceptoLugar.porcentaje = Number(numericsteper.value);
				}
				
				newConceptoLugar.edicion = true;
				
				if (_agente.lugar.lugarConceptos == null)
					_agente.lugar.lugarConceptos = new ArrayCollection();
				
				_agente.lugar.lugarConceptos.addItem(newConceptoLugar);
				
				if (_agente.lugar.lugarConceptos.length > 0)
					lstConceptos.selectedIndex = 0;
				
				regresarNuevo();
				
				var num:int = lstConceptos.dataProvider.length-1;
				lstConceptos.selectedIndex = num;
				if (num > 2)
					lstConceptos.ensureIndexIsVisible(lstConceptos.selectedIndex);
				
			}
			
			protected function numericsteper_focusOutHandler(event:FocusEvent):void
			{
				if(!numericsteper.value)
				{
					numericsteper.value = 0;
				}
			}
			
			protected function txtPrecio_focusOutHandler(event:FocusEvent):void
			{
				if(!txtPrecio.text)
				{
					txtPrecio.text = '0';
				}
			}
			
			
			protected function pasarInfo($event:Event):void
			{
				flecha_arriba.visible = true;
				flecha_abajo.visible = false;
				tituloModif.includeInLayout = tituloModif.visible = true;
				
				tituloNuevo.includeInLayout = tituloNuevo.visible = false;
				lnkAgregarConcepto.visible = lnkAgregarConcepto.includeInLayout = false;
				grpAplicar.visible = grpAplicar.includeInLayout = true;
				editBloqueInfo((lstConceptos.selectedItem as LugarConcepto));
			}
			
			private function editBloqueInfo($info:LugarConcepto):void
			{
				var lugar:LugarConcepto = ObjectUtil.copy( $info ) as LugarConcepto; 
				
				txtConcepto.text =  lugar.concepto;
				txtPrecio.text = lugar.monto.toString();
				numericsteper.value = lugar.porcentaje;
				txtConcepto.setFocus();
				if (lugar.monto > 0 && lugar.porcentaje == 0)
				{
					chkMonto.selected = true;
					chkPorcentaje.selected = false;
				}
				else
				{
					chkMonto.selected = false;
					chkPorcentaje.selected = true ;
				}
			}
			
			protected function changeRadios(event:MouseEvent):void
			{
				if (event.currentTarget.id == 'chkMonto' || event.currentTarget.id == 'txtPrecio' 
					|| event.currentTarget.id == 'txtDls' )
				{
					chkPorcentaje.selected = false;
					chkMonto.selected = true;
					txtPrecio.setFocus();
					numericsteper.value = 0;
				}
				else
				{
					chkPorcentaje.selected = true;
					chkMonto.selected = false;
					numericsteper.setFocus();
					txtPrecio.text = '0';
				}
			}
			
			protected function cancelarEvent(event:MouseEvent):void
			{
				flecha_abajo.visible = true;
				flecha_arriba.visible = false;
				regresarNuevo();
				lstConceptos.selectedIndex = -1;
				
			}
			
			protected function aplicarEvent(event:MouseEvent):void
			{
				if(txtConcepto.text == ''){
					alertaSingleton.show("Es necesario que se agregue un Concepto.",catalogoAlertas.TIT_ADV_informacionIncompleta);
					return;
				}
				if (chkMonto.selected == true){
					if(txtPrecio.text == '0'){
						alertaSingleton.show("Es necesario que el Monto sea mayor a 0.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
				}else{
					if(numericsteper.value == 0){
						alertaSingleton.show("Es necesario que el Porcentaje sea mayor a 0.",catalogoAlertas.TIT_ADV_informacionIncompleta);
						return;
					}
				}
				modificarInfo();
				regresarNuevo();
			}
			
			
			protected function modificarInfo():void
			{
				var modif:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.MODIFICAR_CONCEPTOS_LUGAR_AGENTE);
				modif.lugarConcepto = new LugarConcepto();
				modif.lugarConcepto = (lstConceptos.selectedItem as LugarConcepto);
				
				if (chkMonto.selected == true){
					modif.lugarConcepto.monto = Number(txtPrecio.text);
					modif.lugarConcepto.porcentaje = 0;
					numericsteper.value=0;
				}else{
					txtPrecio.text='0';	
					modif.lugarConcepto.monto = 0;
					modif.lugarConcepto.porcentaje = Number(numericsteper.value);
				}
				modif.lugarConcepto.concepto = txtConcepto.text;
				dispatchEvent(modif);
			}
			
			
			
			protected function lstConceptos_changingHandler(event:IndexChangeEvent):void
			{
				tituloModif.includeInLayout = tituloModif.visible = false;
				tituloNuevo.includeInLayout = tituloNuevo.visible = true;
				regresarNuevo();
			}
			
			protected function cancelarEliminacion($event:Event):void
			{
				lstConceptos.selectedIndex = -1;
			}
			
			private function regresarNuevo():void
			{
				txtConcepto.text = '';
				chkMonto.selected = true;
				chkPorcentaje.selected = false;
				txtPrecio.text='0';
				numericsteper.value = 0;
				tituloNuevo.visible = tituloNuevo.includeInLayout = true;
				tituloModif.visible = tituloModif.includeInLayout = false; 
				
				lnkAgregarConcepto.visible = lnkAgregarConcepto.includeInLayout = true;
				grpAplicar.visible = grpAplicar.includeInLayout = false;
			}
			
			protected function eliminarConceptoLugar($event:Event):void
			{
				indice = botoneraBarra.selectedIndex;
				(lstConceptos.selectedItem as LugarConcepto).borrar = true;
				var eveDel:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral(EventoCatAgenteAduanalGeneral.ELIMINAR_CONCEPTO_LUGAR_AGENTE_ADUANAL);
				eveDel.lugarAgente = ObjectUtil.copy(_agenteRespaldo.lugar) as LugarAgenteAduanal;
				eveDel.lugarAgente.lugarConceptos = lstConceptos.dataProvider as ArrayCollection;
				_eliminarConcepto = true;
				eveDel.ventana = "CatAgenteAduanal_Desaduanaje eliminaConcepto( idAgente:"+_idAgente+", idLugar:"+eveDel.lugarAgente.id_lugarAgente+" )"
				dispatchEvent( eveDel );
			}
			
			public function set confirmaBorradoConcepto(confirmaBorrado:Boolean):void
			{
				if (_eliminarConcepto)
				{
					if( confirmaBorrado)
					{
						var $evtP:EventoCatAgenteAduanalGeneral = new EventoCatAgenteAduanalGeneral( EventoCatAgenteAduanalGeneral.OBTENER_AGENTES_ADUANALES );
						dispatchEvent($evtP);
						seEstaEditando=true;editarInfo('cancelar')
					}
					else
					{
						_eliminarConcepto = false;
						alertaSingleton.show( 'No es posible elminar el concepto, debido a que esta siendo utilizado en alguna configuraci√≥n.' ,catalogoAlertas.TIT_ADV_operacionImposible);
					}
				}
			}
			
			protected function txtConsolidacion_focusOutHandler(event:FocusEvent):void
			{
				if(!txtConsolidacionMax.text)
				{
					txtConsolidacionMax.text = '0';
				}
			}
			
		]]>
		
		
	</fx:Script>
	
	<s:HGroup width="100%" height="100%" gap="0" id="grpContenedorPrincipal">
		<contenedores:VGroupConPaddingStandardPqNet width="100%" height="100%" id="grpInfo">
			<s:BorderContainer borderVisible="false" width="100%" height="100%" backgroundColor="white" backgroundAlpha="0">
				<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
					<s:HGroup width="100%" verticalAlign="bottom">
						<s:Image source="{ catalogoIconosEtiquetas.getInstance().etiquetas_AgenteDesaduanajeGris }"/>
						<label:TituloBankGothic_30 text="DESADUANAJE"/>
						<s:Spacer width="100%"/>
						<s:HGroup visible="{ ( isNaN(_agente.idAgenteAduanal) ? false : true )}" >
							<label:Texto_13_VerdeAzul text="Ultima actualizaci√≥n: "/>
							<label:Fecha_13_VerdeAzul  fecha="{ _agente.lugar.fua}"/>
						</s:HGroup>
					</s:HGroup>
					<otros:divisionGruesa width="100%"/>
					<s:Spacer height="70"/>
					<s:Scroller id="sclGeneral" maxWidth="1050" width="100%" height="100%" minWidth="340">
						<s:VGroup width="100%" height="100%" horizontalCenter="0"  id="grpGeneral" >
							
							
							
							<s:VGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="3" paddingRight="3" gap="10" >
								<s:VGroup width="100%" gap="5" paddingBottom="0">									
									<s:HGroup width="100%" >
										<label:Titulo_16_pTop10 textAlign="left" text="IMPORTACI√ìN" />
										<s:Spacer width="100%"/>
										<s:Group width="100%" id="grpBotones">
											<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" id="grpBotonEditar"  >
												<pqNet:botonPqNetLargo id="lnkEditar" icono="editar_lapiz" colorBase="0x{catalogoColores.LABEL_ROJO }" 
																	   minWidth="34" click="seEstaEditando=false;editarInfo()" />
											</s:HGroup>
											<s:HGroup width="100%" id="grpGuardarCancelar" visible="false" >
												<s:Spacer width="100%"/>
												<pqNet:botonPqNetLargo label="Guardar" id="lnkGuardar" 
																	   click="seEstaEditando=true;editarInfo('guardar');guardaCambios('actualiza')" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}"
																	   />
												
												<pqNet:botonPqNetLargo label="Cancelar" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO }" 
																	   click="seEstaEditando=true;editarInfo('cancelar');cancelaGuardado()"
																	   id="lnkCancelar" />
											</s:HGroup>
										</s:Group>
										<s:HGroup id="grpBotonesAgrgar" width="100%">
											<s:Spacer width="100%"/>
											<pqNet:botonPqNetLargo icono="guardar"  click="guardaCambios('inserta')" label="AGREGAR" id="btnAgregar" />
										</s:HGroup>
									</s:HGroup>
									<otros:division width="100%"/>
									<s:HGroup width="100%" verticalAlign="middle" gap="0" paddingTop="25">
										<!--<label:Titulo text="L√≠mite de consolidaci√≥n m√≠nimo:" paddingTop="0"/>
										<s:HGroup verticalAlign="middle">									
										<input:txtInputBlancoDefaultPQNet id="txtConsolidacionMin" textAlign="right" text="{ _agente.lugar.limiteConsolidacion }" width="170" focusOut="txtConsolidacion_focusOutHandler(event)"  restrict="0-9."/>
										<label:Texto id="txtConDlsMin" text="Dls"/>
										</s:HGroup>
										<s:Spacer width="100%"/>
										<label:Titulo text="L√≠mite de consolidaci√≥n m√°ximo:" paddingTop="0"/>
										<s:HGroup verticalAlign="middle">									
										<input:txtInputBlancoDefaultPQNet id="txtConsolidacion" textAlign="right" text="{ _agente.lugar.limiteConsolidacion }" width="170" focusOut="txtConsolidacion_focusOutHandler(event)"  restrict="0-9."/>
										<label:Texto id="txtConDlsMax" text="Dls"/>
										</s:HGroup>-->
										<s:VGroup width="45%" height="100%" >
											<label:Titulo_16_pTop10 width="100%" textAlign="left" text="L√≠mite de Consolidaci√≥n" paddingTop="0" />
											<s:VGroup width="100%" height="100%" gap="20" verticalAlign="middle" paddingTop="20">
												<s:HGroup width="100%" height="50%" verticalAlign="middle">
													<label:Titulo_16_pTop10 textAlign="left" text="Min" paddingTop="0" paddingRight="55"/>
													<label:Titulo_16_pTop10 textAlign="left" text="$" paddingTop="0" />
													<input:txtInputBlancoDefaultPQNet id="txtConsolidacionMin" textAlign="left" text="{ UtilsFormatosNumericos.precisionADosDecimalesConComas(_agente.limiteConsolidacionMin) }" width="170" focusOut="txtConsolidacion_focusOutHandler(event)"  restrict="0-9."/>
													<label:Titulo_16_pTop10 textAlign="left" text="Dls" paddingTop="0" />	
												</s:HGroup>  
												
												
												<!--<s:Spacer height="100%"/>-->
												<s:HGroup width="100%" height="100%" verticalAlign="middle">
													<label:Titulo_16_pTop10 textAlign="left" text="Max" paddingTop="0" paddingRight="51"/>
													<label:Titulo_16_pTop10 textAlign="left" text="$" paddingTop="0" />
													<input:txtInputBlancoDefaultPQNet id="txtConsolidacionMax" textAlign="left" text="{ UtilsFormatosNumericos.precisionADosDecimalesConComas(_agente.limiteConsolidacionMax) }" width="170" focusOut="txtConsolidacion_focusOutHandler(event)"  restrict="0-9."/>
													<label:Titulo_16_pTop10 textAlign="left" text="Dls" paddingTop="0" />												
												</s:HGroup>  
											</s:VGroup>  
										</s:VGroup>
										<s:VGroup width="55%" height="100%" gap="20" verticalAlign="middle">
											<label:Titulo_16_pTop10 width="100%" textAlign="left" text="Documentaci√≥n requerida" paddingTop="0" />
											<s:VGroup width="100%" height="100%" verticalAlign="middle">
												<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="left">
													<s:HGroup width="33%" height="100%" horizontalAlign="left" verticalAlign="middle" gap="5">
														<label:Titulo_16_pTop10 width="80" textAlign="left" text="Facturas" paddingTop="0" />
														<chekbox:radioDefaultPQNet id="chkFacturas" selected="{_agente.facturasComerciales}" tipoCheck="cuadradoRadio" width="20" height="20"/>
													</s:HGroup>
													<s:HGroup width="33%" height="100%" horizontalAlign="center" verticalAlign="middle" gap="5">
														<label:Titulo_16_pTop10 width="110" textAlign="left" text="Packing List" paddingTop="0" />
														<chekbox:radioDefaultPQNet id="chkPacking" selected="{_agente.PL}" tipoCheck="cuadradoRadio" width="20" height="20"/>
													</s:HGroup>
													<s:HGroup width="33%" height="100%" horizontalAlign="right" verticalAlign="middle" gap="5">
														<label:Titulo_16_pTop10 width="100" textAlign="left" text="Certificado" paddingTop="0" />
														<chekbox:radioDefaultPQNet id="chkCertificado" selected="{_agente.certificados}" tipoCheck="cuadradoRadio" width="20" height="20"/>														
													</s:HGroup>  
												</s:HGroup>  
												<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="left">
													<s:HGroup width="33%" height="100%" horizontalAlign="left" verticalAlign="middle" gap="5">
														<label:Titulo_16_pTop10 width="80" textAlign="left" text="Nafta" paddingTop="0" />
														<chekbox:radioDefaultPQNet id="chkNafta" selected="{_agente.NAFTA}" tipoCheck="cuadradoRadio" width="20" height="20"/>
													</s:HGroup> 
													<s:HGroup width="33%" height="100%" horizontalAlign="center" verticalAlign="middle" gap="5">
														<label:Titulo_16_pTop10 width="110" textAlign="left" text="Carta de uso" paddingTop="0" />
														<chekbox:radioDefaultPQNet id="chkCarta" selected="{_agente.cartaUso}" tipoCheck="cuadradoRadio" width="20" height="20"/>
													</s:HGroup>  
													<s:HGroup width="33%" height="100%" />
												</s:HGroup>  
											</s:VGroup>
										</s:VGroup>
									</s:HGroup> 
									<s:Spacer  height="40" />
									<label:Titulo_16_pTop10 width="100%" textAlign="left" text="CORREO" paddingTop="0" paddingBottom="5"/>
									<otros:division width="100%"/>
									<label:Titulo_16_pTop10 width="100%" textAlign="left" text="Correo de documentaci√≥n" />
									<input:txtInputBlancoDefaultPQNet textAlign="left" id="txtCorreo" text="{_agente.correoElectronico}" width="462" focusOut="txtConsolidacion_focusOutHandler(event)" />
								</s:VGroup>
								
								<s:Spacer  height="20" />
								<s:HGroup width="100%" >
									<label:Titulo_16_pTop10 textAlign="left" text="LUGARES" />
									<!--<s:Spacer width="100%"/>
									<s:Group width="100%" id="grpBotones">
									<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" id="grpBotonEditar"  >
									<pqNet:botonPqNetLargo id="lnkEditar" icono="editar_lapiz" colorBase="0x{catalogoColores.LABEL_ROJO }" 
									minWidth="34" click="seEstaEditando=false;editarInfo()" />
									</s:HGroup>
									<s:HGroup width="100%" id="grpGuardarCancelar" visible="false" >
									<s:Spacer width="100%"/>
									<pqNet:botonPqNetLargo label="Guardar" id="lnkGuardar" 
									click="seEstaEditando=true;editarInfo('guardar');guardaCambios('actualiza')" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}"
									/>
									
									<pqNet:botonPqNetLargo label="Cancelar" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO }" 
									click="seEstaEditando=true;editarInfo('cancelar');cancelaGuardado()"
									id="lnkCancelar" />
									</s:HGroup>
									</s:Group>
									<s:HGroup id="grpBotonesAgrgar" width="100%">
									<s:Spacer width="100%"/>
									<pqNet:botonPqNetLargo icono="guardar"  click="guardaCambios('inserta')" label="AGREGAR" id="btnAgregar" />
									</s:HGroup>-->
								</s:HGroup>
								
								<otros:division width="100%"/>
								<botonesToggle:ButtonBarColores width="100%" height="40" id="botoneraBarra" horizontalCenter="0" click="cambioLugar()" requireSelection="true" />
								
								
								<s:Spacer  height="30" />
								
								<s:HGroup width="100%" gap="40">
									<s:VGroup  id="conceptosLugar" width="40%" height="100%" gap="10" visible="true" includeInLayout="true" >
										<label:Titulo_16_pTop10 id="tituloNuevo" width="100%" textAlign="left" text="CONCEPTO NUEVO" paddingTop="0"/>
										<label:Titulo_16_pTop10 id="tituloModif" width="100%" textAlign="left" text="MODIFICAR CONCEPTO" paddingTop="0" includeInLayout="false" visible="false"/>
										<otros:division width="100%"/>
										<label:Titulo text="Concepto:" paddingTop="0"/>
										<input:txtInputBlancoDefaultPQNet id="txtConcepto" width="100%" />
										
										<s:HGroup width="100%" verticalAlign="middle" gap="10" horizontalAlign="left">
											
											<s:VGroup  height="100%"  verticalAlign="middle" gap="30"  id="grpMonto" >
												<chekbox:radioDefaultPQNet id="chkMonto"  label="Monto" click="changeRadios(event)"  />
												<chekbox:radioDefaultPQNet id="chkPorcentaje" label="Porcentaje"  click="changeRadios(event)" />
											</s:VGroup>
											<s:VGroup width="70%" height="100%" horizontalAlign="center" gap="25" id="grpPorcentaje">
												<s:HGroup  verticalAlign="middle">
													<input:txtInputBlancoDefaultPQNet width="100" textAlign="right" id="txtPrecio" click="changeRadios(event)"  focusOut="txtPrecio_focusOutHandler(event)" restrict="0-9."/>
													<label:Texto id="txtDls" text="Dls" click="changeRadios(event)"/>
												</s:HGroup>
												<s:HGroup  verticalAlign="middle" width="100%">
													<numericStepper:NumericStepperDefaultPQNet id="numericsteper" width="100" maximum="100" textAlign="right" click="changeRadios(event)" focusOut="numericsteper_focusOutHandler(event)" color="gris"/>
													<label:Texto text=" %" click="changeRadios(event)" />
												</s:HGroup>
											</s:VGroup>
											<s:Group width="30%" height="100%">
												<pqNet:botonPqNetLargo width="100%"  height="100%" icono="agregar" click="lnkAgregarConcepto_clickHandler(event)"
																	   id="lnkAgregarConcepto" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" />
												<s:VGroup id="grpAplicar" width="100%" height="100%" visible="false" includeInLayout="false">
													<pqNet:botonPqNetLargo label="APLICAR" id="btnAplicar" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" click="aplicarEvent(event)"/>
													<s:Spacer height="100%" />
													<pqNet:botonPqNetLargo label="CANCELAR"  id="btnCancelar"  colorBase="0x{catalogoColores.LABEL_ROJO_CLARO }" click="cancelarEvent(event)" />
												</s:VGroup>
											</s:Group>
										</s:HGroup>
										<s:VGroup height="100%" width="100%" >
											<s:Group width="100%" height="100%">
												<s:Image id="flecha_arriba" source="{catalogoIconosBotones.getInstance().flecha_arriba}"  visible="false" />
												<s:Image id="flecha_abajo" source="{catalogoIconosBotones.getInstance().flecha_abajo}" visible="false" />
											</s:Group>
										</s:VGroup>
										
									</s:VGroup>
									
									<otros:vDivisionGruesa  id="divDireccion" height="100%"  visible="false" includeInLayout="false"/>
									
									
									<s:VGroup width="100%" height="100%" gap="10" paddingBottom="20">
										
										<label:Titulo_16_pTop10 width="100%" textAlign="left" text="DIRECCI√ìN" paddingTop="0" />
										<otros:division width="100%"/>
										<s:HGroup width="100%" height="100%">
											
											<s:VGroup  id="vBoxCidad" width="45%" height="100%" gap="10">
												<label:Titulo text="Pa√≠s:" paddingTop="0"/>
												<cmbCat:ComboCatalogos  fontSize="14" width="100%" height="28" id="cmbPais" creationComplete="{ cmbPais.cargaPaises('--NINGUNO--') }"/>
												<label:Titulo text="Ciudad:" paddingTop="0"/>
												<input:txtInputBlancoDefaultPQNet  text="{ _agente.lugar.ciudad }" id="txtCiudad" width="100%" />
												<label:Titulo text="Estado:" paddingTop="0"/>
												<input:txtInputBlancoDefaultPQNet text="{ _agente.lugar.estado }" id="txtEstado"  width="100%" />
												<label:Titulo text="CP:" paddingTop="0"/>
												<input:txtInputBlancoDefaultPQNet  text="{ _agente.lugar.cp }" id="txtCP" restrict="0-9" width="100%" />
											</s:VGroup>
											<s:Spacer width="10"/>
											<s:VGroup width="55%" height="100%" gap="10">
												
												<label:Titulo text="1¬∫ linea de direcci√≥n:" paddingTop="0"/>
												<textarea:txtAreaBlancoDefaultPQNet  width="100%" height="90" text="{ _agente.lugar.direccion1 }" id="txtDireccion" />
												<label:Titulo text="2¬∫ linea de direcci√≥n:" paddingTop="0"/>
												<textarea:txtAreaBlancoDefaultPQNet width="100%" height="90" text="{ _agente.lugar.direccion2 }"  id="txtSegundaDireccion" />
											</s:VGroup>
										</s:HGroup>
									</s:VGroup>
								</s:HGroup>
								<s:Spacer id="spcHonorarios" height="30" />
								<label:Titulo_16_pTop10  width="100%" textAlign="left" text="HONORARIOS" />
								<otros:division width="100%"/>
								
								<s:VGroup  id="listasConceptos" width="100%" height="150" maxHeight="300" gap="10">
									<s:HGroup width="100%" verticalAlign="middle">
										<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_menulineas}"/>
										<label:Titulo text="CAT√ÅLOGO DE CONCEPTOS" paddingTop="0"/> 
									</s:HGroup>
									<s:List id="lstConceptos" borderVisible="false" horizontalScrollPolicy="off" width="100%" height="100%"
											changing="lstConceptos_changingHandler(event)"
											itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.agenteAduanal.itemRenderer.desaduanaje.CatAgenteIR_ConceptosLugar"
											dataProvider="{_agente.lugar.lugarConceptos}" >
									</s:List>
								</s:VGroup>
								
								
							</s:VGroup>
						</s:VGroup>
					</s:Scroller>
					
					<s:VGroup width="100%" gap="10">
						<otros:divisionGruesa width="100%"/>
						<s:HGroup id="groupDummy" width="100%" horizontalAlign="right" visible="false"  >
							<pqNet:botonPqNetLargo id="dummy" visible="false"/>
						</s:HGroup>
					</s:VGroup>  
				</s:VGroup>
			</s:BorderContainer>
		</contenedores:VGroupConPaddingStandardPqNet>
	</s:HGroup>
</s:Group>