<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" 
					   xmlns:titlebar="skins.titlebar.eventos.*"
					   xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*" 
					   showStatusBar="false" 
					   width="100%" height="100%"
					   creationComplete="checkForUpdate()"
					   applicationComplete="maximizaVentana()" xmlns:plantilla="plantilla.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Style source="skinDefaultEvento.css"/>
	
	<fx:Script>
		<![CDATA[
			import air.update.ApplicationUpdaterUI;
			import air.update.events.UpdateEvent;
			
			import mx.controls.Alert;
			import mx.controls.Button;
			
			
			[Bindable]
			[Embed (source='/rsl/src/main/flex/assets/background/fondoEvento.jpg')]
			public var fondoEvento:Class;
			
			[Bindable]
			[Embed (source='/rsl/src/main/flex/skins/imagenes/iconos/etiquetas/logoproquifaevento.png')]
			public var logo:Class;
			public var fullscreenButton:Button;
			
			private var appUpdater:ApplicationUpdaterUI = new ApplicationUpdaterUI();
			
			private function checkForUpdate():void {
				setApplicationVersion(); // Encuentra la versi—n actual para que podamos mostrar a continuaci—n   
				//appUpdater.updateURL = "http://tourdeflex.adobe.com/blogfiles/AIRAutoUpdateSample/server/update.xml"; // Server-side XML file describing update
				appUpdater.updateURL = "http://201.161.12.60:51725/Reportes/ProquifaNet/ArchivosXML/updateEventos.xml"; // Del lado del servidor el archivo XML que describe actualizaci—n
				//  192.168.1.99:8080
				//  www.proquifa.com.mx:8080
				appUpdater.addEventListener(UpdateEvent.INITIALIZED, onUpdate); // Una vez iniciado, ejecute onUpdate
				appUpdater.addEventListener(ErrorEvent.ERROR, onError); // Si algo sale mal onError, ejecute
				appUpdater.isCheckForUpdateVisible = false; // No vamos a pedir permiso para verificar si hay una actualizaci—n
				appUpdater.initialize(); // Inicializar el marco de actualizaci—n
			}
			
			// Encuentra la versi—n actual de nuestro sello a continuaci—n
			private function setApplicationVersion():void {
				var appXML:XML = NativeApplication.nativeApplication.applicationDescriptor;
				var ns:Namespace = appXML.namespace();
			}
			
			private function onUpdate(event:UpdateEvent):void {
				appUpdater.checkNow(); // ir a ver una actualizaci—n ahora
			}
			
			private function onError(event:ErrorEvent):void {
				Alert.show(event.toString());
			}
			
			private function maximizaVentana():void{
				this.stage.displayState = StageDisplayState.FULL_SCREEN_INTERACTIVE;
				this.barra.addEventListener(MouseEvent.CLICK,cambioIconos);
			}
			
			private function cambioIconos(event:MouseEvent):void{
			
				if(event.target.id == "fullscreenButton"){
					barra.maximiza();
				}
				
				if(event.target.id == "maximizeButton"){
					barra.restaura();
				}  
			}
		 	
			
			
			
		]]>
	</fx:Script>
	
	
	<s:layout>
		<s:VerticalLayout>
		</s:VerticalLayout>
	</s:layout>
	
	<s:BorderContainer id="fondo" width="100%" height="100%" backgroundImage="{fondoEvento}">
		
		<titlebar:titleBarDefaultEventos id="barra" width="100%" top="20" right="10" />
		<s:VGroup width="100%" height="100%" gap="25" >
			
			<s:HGroup width="100%" height="100" verticalAlign="middle" paddingTop="40" paddingLeft="10">
				<s:Image source="{logo}" />
			</s:HGroup>
			
			<pq:MobViewStack width="100%" height="100%" creationPolicy="all" id="mvsPrincipal" >
				<s:NavigatorContent width="100%" height="100%">
					<plantilla:PlantillaEventoProquifa id="plantillaEvento" width="100%" height="100%" />
				</s:NavigatorContent>
				
			</pq:MobViewStack>
		</s:VGroup>
		<mx:VBox width="100%" height="100%">
			<s:Spacer height="100%"/>
			<s:Label mouseDown="{this.nativeWindow.startResize()}" id="lblRedimensionar" width="100%" />
		</mx:VBox>
	</s:BorderContainer>
	
</s:WindowedApplication>
