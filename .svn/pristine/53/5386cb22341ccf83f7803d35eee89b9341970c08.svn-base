<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns="*"
			   xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.productos.EventoTableroProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Parametros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.ModeloTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.productos.ModeloTableroProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.PlantillaTableroProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.TableroClientesCheckPeriodicoLineal;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.cancelacionCotizacion.CancelacionCotizacionComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocRecibida.ProveedorOCRecibidasComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.ocTransito.ProveedorOCTransitoComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.rechazos.ProveedorRechazosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.compras.proveedores.componentes.top10Cliente.ProveedorTop10ClientesComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.PanelBusuqedaTabProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.TabProductosMenu;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.TableroProductosCheckPeriodicoLineal;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.avisoDeCambio.MaxAvisoDeCambioTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.avisoDeCambio.MiniAvisoDeCambioTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.avisoDeCambio.ProductoAvisoDeCambiosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.cancelacionCotizacion.CancelacionCotTabProdComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.cancelacionCotizacion.MaxCancelacionCotTapProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.cancelacionCotizacion.MiniCancelacionCotTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.clientes.MaxCliente_Producto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.clientes.MiniCliente_Producto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.clientes.ProductosClientes_Comparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.compras.MaxComprasTabProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.compras.MinComprasTabProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.compras.ProductoComprasComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.cotPed.MaxCotPed_Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.cotPed.MiniCotPed_Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.cotPed.ProductoCotPetComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.formula.DefaultFormulaTabProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.formula.InfoFormula_TabProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ocRecibida.MaxOCRecibidas_Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ocRecibida.MiniOCRecibidas_Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ocRecibida.ProductosOCRecibidaComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ocTransito.MaxOCTransito_Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ocTransito.MiniOCTransito_Productos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ocTransito.ProductosOCTransitoComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.pagos.MaxPagosTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.pagos.MiniPagosTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.pagos.ProductoPagosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.rechazos.MaxRechazosTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.rechazos.MiniRechazosTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.rechazos.ProductosRechazosComparacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ventasDelPeriodo.MaxVentasPeriodoTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ventasDelPeriodo.MiniVentasPeriodoTabProd;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.productos.componentes.ventasDelPeriodo.analisisVentasPeriodo.AnalisisVentasPeriodo_DefaultProd;
		]]>
	</mx:Script>
	

	
	<!-- ================================================ ESTO APARTADO ES PARA CONTROLAR LA VENTANA DE BLOQUEO/ESPERA ================================================-->
	<mate:EventHandlers type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
		<mate:MethodInvoker generator="{ModeloTableroProductos}"
							method="setServiciosConsultados"
							arguments="{event.metodoConsultado}"/>  
	</mate:EventHandlers>
	
	<!--Evento para la Espera y bloqueo de Pantalla-->
	<mate:EventHandlers type="{EventoEsperar.CONFIGURAR_ESPERA}">
		<mate:MethodInvoker generator="{ModeloTableroProductos}"
							method="setControlDeBloqueoPantalla"
							arguments="{[currentEvent.mensaje, currentEvent.tipoEventos,currentEvent.idButtons,currentEvent.error]}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{TabProductosMenu}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="actualizarEstadoDeEsperaYBloqueo"
							   targetKey="actualizarEsperaYBloqueo"/> 
	</mate:Injectors>	
	
	
	<!-- ================================================ Obtener el DATOS FILTROS ================================================ -->	
	<mate:EventHandlers type="{EventoTableroProductos.ENVIAR_DATOS_FILTROS_TABPROD}">
		<mate:MethodInvoker generator="{ModeloTableroProductos}"
							method="setObtenerFiltros"
							arguments="{[event.parametros]}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[MinComprasTabProducto, MiniPagosTabProd, MaxPagosTabProd,MiniOCTransito_Productos,MiniOCRecibidas_Productos,MaxOCTransito_Productos,MaxOCRecibidas_Productos]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerFiltro"
							   targetKey="recibeFiltros"/> 
	</mate:Injectors>
	
	<!-- ================================================ Evento para recibir etiqueta de periodo y Parametros de busqueda para MaxComprasTabProducto ================================================ -->
	<mate:EventHandlers type="{EventoTableroProductos.PASAR_EVENTO_GENERAL_Y_PARA_LABELS}">
		<mate:MethodInvoker generator="{ModeloTableroProductos}"
							method="setEventoParaSacarLabelsPeriodos"
							arguments="{event.copiaEvento}" />
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxComprasTabProducto,ProductosOCTransitoComparacion,ProductosOCRecibidaComparacion,ProductosClientes_Comparacion,ProductosRechazosComparacion,TableroProductosCheckPeriodicoLineal,MiniVentasPeriodoTabProd, MaxVentasPeriodoTabProd,CancelacionCotTabProdComparacion,
					ProductoAvisoDeCambiosComparacion, ProductoComprasComparacion, ProductoPagosComparacion, MaxCotPed_Productos, AnalisisVentasPeriodo_DefaultProd, ProductoCotPetComparacion,MaxCliente_Producto]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="eventoFiltros"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ================================================ Obtener lista de Productos ================================================ -->
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_LISTA_PRODUCTOS}">		
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}" method="obtenerProductosTablero"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker arguments="{[resultObject]}"
									generator="{ModeloTableroProductos}" method="setProductos"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer generator="{EventoEsperar}"
									 type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties error="{fault}" mensaje="error"
									 tipoEventos="{['obtenerProductosTablero']}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[PanelBusuqedaTabProducto]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" sourceKey="listarProductos"
							   targetKey="recibeProductos"/>
	</mate:Injectors>
	
	<!-- ================================================ Obtener Compras Realizadas ================================================ -->
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcRealizadas"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}" method="obtenerPeriodicoLinealOcRealizadas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker arguments="{[resultObject]}"
									generator="{ModeloTableroProductos}" method="setComprasRealizadas"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer generator="{EventoEsperar}"
									 type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties error="{fault}" mensaje="error"
									 tipoEventos="{['obtenerPeriodicoLinealOcRealizadas']}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MinComprasTabProducto, MaxComprasTabProducto,ProductoComprasComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listarComprasRealizadas"
							   targetKey="recibeComprasRealizadas"/>
	</mate:Injectors>
	<!-- ================================================ Obtener Compras Realizadas Grid Compras ================================================ -->
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerComprasRealizadasPorProductoGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}" method="obtenerComprasRealizadasPorProductoGrid"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker arguments="{[resultObject]}"
									generator="{ModeloTableroProductos}" method="setComprasRealizadasGrid"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer generator="{EventoEsperar}"
									 type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties error="{fault}" mensaje="error"
									 tipoEventos="{['obtenerComprasRealizadasPorProductoGrid']}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxComprasTabProducto]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="enviarComprasRealizadasGrid"
							   targetKey="recibeComprasRealizadasGrid"/>
	</mate:Injectors>
	
	<!-- ============ Compartiva Compras ============ -->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_COMPRAS_REALIZADAS_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRealizadas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComprasRealizadas"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaCompra"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MinComprasTabProducto,MaxComprasTabProducto,ProductoComprasComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listarComprasRealizadas"
							   targetKey="recibeComprasRealizadas"/>
	</mate:Injectors>
	
	<mate:Injectors target="{ProductoComprasComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosComprasRealizadasComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ================================================ Obtener aviso de cambios ================================================ -->	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerAvisosDeCambiosPorProducto"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerAvisosDeCambiosPorProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaAC"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerAvisosDeCambiosPorProducto']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniAvisoDeCambioTabProd, MaxAvisoDeCambioTabProd,ProductoAvisoDeCambiosComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaAC"
							   targetKey="resumenComparativaAC"/>
	</mate:Injectors>
	
	<!--============ Compartiva Aviso de Cambios ============ -->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_AVISO_CAMBIOS_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerAvisosDeCambiosPorProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaAC"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaCliente"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniAvisoDeCambioTabProd, MaxAvisoDeCambioTabProd,ProductoAvisoDeCambiosComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaAC"
							   targetKey="resumenComparativaAC"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProductoAvisoDeCambiosComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosAvisoDeCambiosComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ============ Obtener Aviso de Cambios para GRID ============ -->		
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerAvisosDeCambiosPorProductoGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerAvisosDeCambiosPorProductoGrid"  
									arguments="{[event.parametros]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setAvisoDeCambiosGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerAvisosDeCambiosPorProductoGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxAvisoDeCambioTabProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerAvisoDeCambiosGrid"
							   targetKey="obtenerAvisoDCambios"/>
	</mate:Injectors>
	
	<!-- ================================================ Obtener rechazos del Producto ================================================ -->	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerRechazosProductos"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerRechazosProductos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaRechazo"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerRechazosProductos']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniRechazosTabProd,MaxRechazosTabProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaRechazo"
							   targetKey="resumenComparativaRechazo"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores rechazo-->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_OC_RECHAZADA_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerRechazosProductos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaRechazo"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaRechazo"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniRechazosTabProd,MaxRechazosTabProd,ProductosRechazosComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaRechazo"
							   targetKey="resumenComparativaRechazo"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProductosRechazosComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosRechazosComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	<!-- ============ obtener rechazos para GRID ============ -->	
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesRechazadasGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerOrdenesRechazadasGrid"  
									arguments="{[event.parametros]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setOCRechazadasGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerOrdenesRechazadasGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxRechazosTabProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="ocRechazadasGrid"
							   targetKey="obtenerOCRechazados"/>
	</mate:Injectors>
	
	<!-- ================================================ Pagos ================================================ -->	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcPagos"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcPagos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaPagos"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcPagos']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniPagosTabProd,MaxPagosTabProd,ProductoPagosComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaPagos"
							   targetKey="recibePagos"/>
	</mate:Injectors>
	
	<!-- ============== Compartiva Pagos ============== -->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_PAGOS_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcPagos"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaPagos"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaPagos"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniPagosTabProd,MaxPagosTabProd,ProductoPagosComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaPagos"
							   targetKey="recibePagos"/>
	</mate:Injectors>
	
	<mate:Injectors target="{ProductoPagosComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosPagosComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ============ obtener pagos para GRID ============ -->	
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesPagosGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerOrdenesPagosGrid"  
									arguments="{[event.parametros]}"
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setPagosGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerOrdenesRechazadasGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxPagosTabProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="pagosGrid"
							   targetKey="obtenerPagosTabla"/> 
	</mate:Injectors>
	<!-- ================================================ Transito ================================================ -->	
		<!--Compartiva Info Proveedores Transito-->	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcTransito"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcTransito"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaTransitoProd"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcTransito']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCTransito_Productos,MaxOCTransito_Productos,ProductosOCTransitoComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaTransitoProd"
							   targetKey="resumenComparativaTransitoProd"/>
	</mate:Injectors>
	
	<!--Compartiva Info Proveedores Transito-->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_OC_TRANSITO_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcTransito"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaTransitoProd"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaTransito"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCTransito_Productos,MaxOCTransito_Productos,ProductosOCTransitoComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaTransitoProd"
							   targetKey="resumenComparativaTransitoProd"/>
	</mate:Injectors>
	<mate:Injectors target="{ProductosOCTransitoComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosOCTransitoComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ============ Obtener OCTransito para Grid ============ -->		
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerOrdenesTransitoGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerOrdenesTransitoGrid"  
									arguments="{[event.parametros]}"  
									showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setOCenTransitoGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerOrdenesTransitoGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxOCTransito_Productos]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="ocEnTransitoGrid"
							   targetKey="obtenerOCEnTransito"/>
	</mate:Injectors>
	
	<!-- ================================================ Recibida ================================================ -->	
	<!--Compartiva Info Proveedores oc Recibida-->	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealOcRecibidas"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRecibidas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaOCRecibidaProd"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealOcRecibidas']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCRecibidas_Productos,MaxOCRecibidas_Productos]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaOCRecibidaProd"
							   targetKey="resumenComparativaOCRecibidaProd"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores oc Recibida-->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_OC_RECIBIDAS_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealOcRecibidas"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaOCRecibidaProd"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativAOCRecibida"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniOCRecibidas_Productos,MaxOCRecibidas_Productos,ProductosOCRecibidaComparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaOCRecibidaProd"
							   targetKey="resumenComparativaOCRecibidaProd"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProductosOCRecibidaComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosOCRecibidasComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ============= OCRecibidas Grid ============= -->	
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="ObtenerOrdenesRecibidasGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="ObtenerOrdenesRecibidasGrid"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setOCRecibidasGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['ObtenerOrdenesRecibidasGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxOCRecibidas_Productos]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="ocRecibidasGrid"
							   targetKey="obtenerPartidasEnTiempo"/>
	</mate:Injectors>
	
	<!-- ================================================ Clientes ================================================ -->	
	<!--Compartiva Info Proveedores Clientes-->	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerConsumoClientePorProducto"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerConsumoClientePorProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaClientesProd"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealTopClientes']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCliente_Producto,MaxCliente_Producto,ProductosClientes_Comparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaClientesProd"
							   targetKey="resumenComparativaClientesProd"/>
	</mate:Injectors>	
	
	<!--Compartiva Info Proveedores Clientes-->	
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_CLIENTES_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerConsumoClientePorProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setComparativaClientesProd"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaCliente"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCliente_Producto,MaxCliente_Producto,ProductosClientes_Comparacion]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="comparativaClientesProd"
							   targetKey="resumenComparativaClientesProd"/>
	</mate:Injectors>	
	
	<mate:Injectors target="{ProductosClientes_Comparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosClientesComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- ============ Obtener Clientes de un producto para el Grid ============ -->
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="ObtenerConsumoClientesPorProductoGrid"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="ObtenerConsumoClientesPorProductoGrid"  
									arguments="{[event.parametros]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setClientesGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['ObtenerConsumoClientesPorProductoGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxCliente_Producto]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="clientesGrid"
							   targetKey="obtenerClientesGrid"/>
	</mate:Injectors>

	<!--  ================================================  CANCELACIONES COTIZACION  ================================================  -->
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealCancelaciones"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealCancelaciones"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setLinealCancelacionCot"
									arguments="{[resultObject, event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealCancelaciones']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCancelacionCotTabProd, MaxCancelacionCotTapProd ]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listaLinealCancelacionCot"
							   targetKey="recibeLinealCancelacionCot"/>
	</mate:Injectors>
	
	<!-- CANCELACIONES COTIZACION LINEAL -->
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_CANCELACION_COT_TAB_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealCancelaciones"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setLinealCancelacionCot"
									arguments="{[resultObject, event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealCancelaciones']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCancelacionCotTabProd, MaxCancelacionCotTapProd, CancelacionCotTabProdComparacion ]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listaLinealCancelacionCot"
							   targetKey="recibeLinealCancelacionCot"/>
	</mate:Injectors>
	
	<mate:Injectors target="{CancelacionCotTabProdComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularCancelacionCotizacionComparacion"
							   targetKey="recibeFiltros"/>
	</mate:Injectors>
	
	<!-- CANCELACIONES COTIZACION GRID -->
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerRazonesCancelacionesPCotizacionPorProducto"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setCancelacionCotizacionGrid"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerRazonesCancelacionesPCotizacionPorProducto']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxCancelacionCotTapProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="enviaListaCancelacionCotGrid"
							   targetKey="recibeSeguimientoCotizacionCancelacion"/>
	</mate:Injectors>
	
	<!--  ================================================  VENTAS DEL PERIODO DE UN PRODUCTO  ================================================  -->
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealVentasPeriodo"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealVentasPeriodo"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setLinealVentasPeriodo"	
									arguments="{[resultObject, event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealVentasPeriodo']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[ MiniVentasPeriodoTabProd, MaxVentasPeriodoTabProd ]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listaLinealVentasPeriodo"
							   targetKey="recibeLinealVentasPeriodo"/>
	</mate:Injectors>
	
	<!--        ////////////  Analisis de Ventas del Periodo el producto, agrupada por Clientes    ////////////       -->
	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTAR_RESUMEN_CLIENTES}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerVentasProductoPorCliente"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setAgrupadosClientes"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[AnalisisVentasPeriodo_DefaultProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="agrupadosClientes"
							   targetKey="recibeAgrupadosCliente"/>
	</mate:Injectors>
	
	<!--        ////////////  Analisis de Ventas del Periodo el producto, agrupada por ESAC    ////////////       -->
	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTAR_RESUMEN_AGRUPADAS_ESAC}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerVentasProductoPorESACoEV"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setAgrupadosEsac"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[AnalisisVentasPeriodo_DefaultProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="agrupadosEsac"
							   targetKey="recibeAgrupadosESAC"/>
	</mate:Injectors>
	
	<!--        ////////////  Analisis de Ventas del Periodo el producto, agrupada por EV    ////////////       -->
	
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTAR_RESUMEN_AGRUPADAS_EV}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerVentasProductoPorESACoEV"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setAgrupadosEV"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[AnalisisVentasPeriodo_DefaultProd]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="agrupadosEV"
							   targetKey="recibeAgrupadosEV"/>
	</mate:Injectors>
	
	<!--  ================================================  LAS COTIZACIONES = PEDIDOS DE UN PRODUCTO  ================================================  -->
	<mate:EventHandlers type="{EventoTableroProductos.CONSULTA_PRODUCTO_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerPeriodicoLinealCotizadaPedido"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealCotizadaPedido"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setLinealCotPedido"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealCotizadaPedido']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[ MiniCotPed_Productos, MaxCotPed_Productos, ProductoCotPetComparacion ]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="listaLinealCotPedido"
							   targetKey="recibeCotPedido"/>
	</mate:Injectors>
	
	<!-- COTIZACIONES = PEDIDOS LINEAL -->
	<mate:EventHandlers type="{EventoTableroProductos.BUSCA_COMPARATIVA_COT_PED_TAB_PROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealCotizadaPedido"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setLinealCotPedido"
									arguments="{[resultObject, event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerPeriodicoLinealCotizadaPedido']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[MiniCotPed_Productos, MaxCotPed_Productos, ProductoCotPetComparacion ]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listaLinealCotPedido"
							   targetKey="recibeCotPedido"/>
	</mate:Injectors>
	
	<mate:Injectors target="{ProductoCotPetComparacion}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="obtenerLabelsParticularProductosCotPedComparacion"
							   targetKey="recibirFiltrosIndividual"/>
	</mate:Injectors>
	
	<!-- ============= COTIZACION = PEDIDO SWITCH ============= -->
	<mate:EventHandlers type="{EventoTableroProductos.TOTAL_COTIZACION_PEDIDO_TABPROD}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPeriodicoLinealCotizadaPedido"
								  arguments="{[event.parametros]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setTotalCotPedido"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="error"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors targets="{[ MaxCotPed_Productos, ProductoCotPetComparacion ]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="listaTotalCotPedido"
							   targetKey="recibeCotPedido"/>
	</mate:Injectors>
	
	<!-- ============ Obtener CotPed de un producto para el Grid ============ -->
	<mate:EventHandlers type="{EventoTableroProductos.LLENAR_GRIDS_GRAL_TABPROD}">
		<mate:EventAnnouncer  generator="{EventoTableroProductos}" type="{EventoTableroProductos.SERVICIOS_CONSULTADOS}">
			<mate:Properties metodoConsultado="obtenerRazonesCancelacionesPCotizacionPorProducto"/>
		</mate:EventAnnouncer>
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerRazonesCancelacionesPCotizacionPorProducto"  
									arguments="{[event.parametros]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setCotPed"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['ObtenerComsumoClientesPorProductoGrid']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{[MaxCotPed_Productos]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="enviaCotPed"
							   targetKey="recibeListaCotizaPedidoCliente"/>
	</mate:Injectors>
	
	<!-- ============ Ficha Tenica de configuracion de precios ============ -->
	<mate:EventHandlers type="{EventoTableroProductos.FICHA_TECNICA_CONFIGURACION_PRECIOS}">
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerConfiguracionPrecioProducto"  
									arguments="{[event.parametros.idProducto]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setConfigPrecios"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerConfiguracionPrecioProducto']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{DefaultFormulaTabProducto}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="enviarPrecios"
							   targetKey="recibeConfigPrecios"/>
	</mate:Injectors>
	
	<!-- ============ Obtener configuracion de precio para la ficha tecnica ============ -->
	<mate:EventHandlers type="{EventoTableroProductos.FICHA_TECNICA_CONFIGURACION_PRECIOS}">
		<mate:RemoteObjectInvoker   destination="{Destinos.TABLERO_PRODUCTO_SERVICE}" 
									endpoint="{Destinos.END_POINT}"
									method="obtenerInformacionFormulaPrecio"  
									arguments="{[event.parametros.idProducto]}"
									showBusyCursor="true"> 
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setInformacionFormulaPrecio"
									arguments="{resultObject}"/>
			</mate:resultHandlers> 
			<mate:faultHandlers>
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{['obtenerInformacionFormulaPrecio']}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>    
	</mate:EventHandlers>
	<mate:Injectors targets="{InfoFormula_TabProductos}">
		<mate:PropertyInjector source="{ModeloTableroProductos}"
							   sourceKey="enviarFormula"
							   targetKey="recibeInfoFormulaPrecio"/>
	</mate:Injectors>
	
	
	
	<!-- ============ OBTENER INFORMACION DEL PRODUCTO ============ -->	
	<mate:EventHandlers type="{EventoTableroProductos.OBTENER_INFORMACION_PRODUCTO}">
		<mate:RemoteObjectInvoker destination="{Destinos.TABLERO_PRODUCTO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerConfiguracionPrecioProducto"
								  arguments="{[event.idProductoString]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="setObtieneInformacionProducto"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloTableroProductos}"
									method="faultComparativaCompra"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
		
	</mate:EventHandlers>
	<mate:Injectors targets="{[PlantillaTableroProducto]}">
		<mate:PropertyInjector source="{ModeloTableroProductos}" 
							   sourceKey="obtenerInformacionProducto"
							   targetKey="recibeInformacionProducto"/>
	</mate:Injectors>
	
	
</mate:EventMap>

	
