<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:otros="skins.otros.*"
		 xmlns:label="skins.skin.label.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:pqNet="skins.botones.pqNet.*"   creationComplete="iniciaComponente()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoReferencias;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Accion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Gestion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.IncidenteLineaDeTiempo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.CambioDeOrigen;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Incidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Ponderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Reformulacion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorCambioOrigen;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorGestion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorRealizacionVerificacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorRechazo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorReformulacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.gestion.ConsultaInspectorRegistro;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.consultaIncidentes.ConsultaIncidenteRegistro;
			import mx.managers.PopUpManager;
			
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import spark.events.IndexChangeEvent;
			[Bindable]
			private var _cargaReferencia:String;
			[Bindable]
			private var _incidente:IncidenteLineaDeTiempo;
			[Bindable]
			private var _gestion:Gestion;
			[Bindable]
			private var listaLineaTiempo:ArrayCollection;
			[Bindable]
			private var listaLineaDeTiempoXIncidente:ArrayCollection;
			[Bindable]
			private var _inspectorRegistroIncidente:ConsultaInspectorRegistro = null;
			[Bindable]
			private var _inspectorReformulacion:ConsultaInspectorReformulacion = null;
			[Bindable]
			private var _inspectorCambioOrigen:ConsultaInspectorCambioOrigen = null;
			[Bindable]
			private var _inspectorGestion:ConsultaInspectorGestion = null;
			[Bindable]
			private var _inspectorAccion:ConsultaInspectorRealizacionVerificacion = null;
			[Bindable]
			private var _inspectorPonderacion:ConsultaInspectorPonderacion = null;
			[Bindable]
			private var _inspectorRechazo:ConsultaInspectorRechazo = null;
			[Bindable]
			private var popReferencias:CargaReferencias = new CargaReferencias();
			
			private function cerrarComponente(event:Event):void{
				var evt:EventoIncidente = new EventoIncidente(EventoIncidente.CERRAR_COMPONENTE);
				dispatchEvent(evt);
			}
			
			private function iniciaComponente():void{
				this.addEventListener(EventoReferencias.REFERENCIA_LINEA_DTIEMPO, cargaReferencia);
			}
			private function cargaReferencia(evt:EventoReferencias):void{
				this._cargaReferencia = evt.vieneD;
				
				popReferencias = PopUpManager.createPopUp(alertaSingleton.elDisplayObject, CargaReferencias,true) as CargaReferencias; 
				popReferencias.vieneD = "lineaDTiempo";
				popReferencias._idIncidente = this.listaincidentes.selectedItem.idIncidente;
				/* PopUpManager.centerPopUp(popReferencias); */
				var evto:EventoReferencias = new EventoReferencias(EventoReferencias.CARGA_LISTA_REFERENCIA);
				evto.listaReferencia = this.listapendientes.selectedItem.referencias;
				evto.vieneD = "lineaDTiempo";
				dispatchEvent(evto);	
			}
			
			private function elegirUbicacion(datos:IndexChangeEvent):void{
				
				if(datos.currentTarget.selectedIndex == 0 ){
					return;
				}
				
				if(datos.currentTarget.selectedIndex == this.listaLineaDeTiempoXIncidente.length - 1 ){
					return;
				}
				
				if(datos.currentTarget.selectedItem != null){
					if(datos.currentTarget.selectedItem.etiquetaLineaDTiempo == "REGISTRO" ){
						this.visualizaRegistro(datos.currentTarget.selectedItem as IncidenteLineaDeTiempo);
					}else if(datos.currentTarget.selectedItem.etiquetaLineaDTiempo == "REFORMULACIÓN" ){
						this.visualizaReformulacion(datos.currentTarget.selectedItem as Reformulacion);
					}else if(datos.currentTarget.selectedItem.etiquetaLineaDTiempo == "CAMBIO DE ORIGEN" ){
						this.visualizaCambioOrigen(datos.currentTarget.selectedItem as CambioDeOrigen);
					}else if(datos.currentTarget.selectedItem.etiquetaLineaDTiempo == "GESTIÓN" ){
						this.visualizaGestion(datos.currentTarget.selectedItem as Gestion);
					}else if(datos.currentTarget.selectedItem.etiquetaLineaDTiempo == "PONDERACIÓN" ){
						this.visualizaPonderacion(datos.currentTarget.selectedItem as Ponderacion);
					}else{
						this.visualizaAccion(datos.currentTarget.selectedItem as Accion);
					}	
				}
			}
			
			private function visualizaRegistro(datos:IncidenteLineaDeTiempo):void{
				this.espacioConsultaUbicacion.removeAllChildren();
				if( this._inspectorRegistroIncidente == null ){
					this._inspectorRegistroIncidente = new ConsultaInspectorRegistro;
				}
				this.espacioConsultaUbicacion.addChild( this._inspectorRegistroIncidente); 
				this._inspectorRegistroIncidente._incidente = datos;
			}
			private function visualizaReformulacion(datos:Reformulacion):void{
				this.espacioConsultaUbicacion.removeAllChildren();
				if( this._inspectorReformulacion == null ){
					this._inspectorReformulacion = new ConsultaInspectorReformulacion;
				}
				this.espacioConsultaUbicacion.addChild( this._inspectorReformulacion); 
				this._inspectorReformulacion._reformulacion = datos;
			}
			private function visualizaCambioOrigen(datos:CambioDeOrigen):void{
				this.espacioConsultaUbicacion.removeAllChildren();
				if( this._inspectorCambioOrigen == null ){
					this._inspectorCambioOrigen = new ConsultaInspectorCambioOrigen;
				}
				this.espacioConsultaUbicacion.addChild( this._inspectorCambioOrigen); 
				this._inspectorCambioOrigen._cambioOrigen = datos;
				this._inspectorCambioOrigen._incidente = this._incidente;
			}
			private function visualizaGestion(datos:Gestion):void{
				this.espacioConsultaUbicacion.removeAllChildren();
				if( this._inspectorGestion == null ){
					this._inspectorGestion = new ConsultaInspectorGestion;
				}
				this.espacioConsultaUbicacion.addChild( this._inspectorGestion); 
				this._inspectorGestion._gestion = datos;
				this._inspectorGestion._incidente = this._incidente;
				this._inspectorGestion.init();
			}
			private function visualizaPonderacion(datos:Ponderacion):void{
				if(this._gestion.aceptado == true ){
					this.espacioConsultaUbicacion.removeAllChildren();
					if( this._inspectorPonderacion == null ){
						this._inspectorPonderacion = new ConsultaInspectorPonderacion;
					}
					this.espacioConsultaUbicacion.addChild( this._inspectorPonderacion); 
					this._inspectorPonderacion._ponderacion = datos;
					this._inspectorPonderacion._incidente = this._incidente;
					this._inspectorPonderacion.init();	
				}else{
					this.espacioConsultaUbicacion.removeAllChildren();
					if( this._inspectorRechazo == null ){
						this._inspectorRechazo = new ConsultaInspectorRechazo;
					}
					this.espacioConsultaUbicacion.addChild( this._inspectorRechazo); 
					this._inspectorRechazo._gestion = this._gestion;
					this._inspectorRechazo._incidente = this._incidente;
					this._inspectorRechazo._ponderacion = datos;
					this._inspectorRechazo.inicia();
				} 
			}
			private function visualizaAccion(datos:Accion):void{
				this.espacioConsultaUbicacion.removeAllChildren();
				if( this._inspectorAccion == null ){
					this._inspectorAccion = new ConsultaInspectorRealizacionVerificacion;
				}
				this.espacioConsultaUbicacion.addChild( this._inspectorAccion); 
				this._inspectorAccion._accion = datos;
			}
			
			private function incidenteSelccionado(evt:IndexChangeEvent):void{
				var d:int = 0;
				this.listaLineaDeTiempoXIncidente = new ArrayCollection();
				this._incidente = evt.currentTarget.selectedItem;
				this._gestion = evt.currentTarget.selectedItem.gestion;
				/* this.incidente.text = evt.currentTarget.selectedItem.folio; */
				var objeto:Object = new Object();
				objeto.folioIncidente = evt.currentTarget.selectedItem.folio;
				objeto.etiquetaLineaDTiempo = "FOLIO";
				objeto.tiempoTotal = 0;
				this.listaLineaDeTiempoXIncidente.addItem(objeto); //Folio
				(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).etiquetaLineaDTiempo = "REGISTRO";
				
				this.listaLineaDeTiempoXIncidente.addItem(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo); //REGISTRo
				if((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).reformulaciones != null){
					for(d = 0 ; d<((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).reformulaciones).length ; d++ ){
						(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).reformulaciones[d].etiquetaLineaDTiempo = "REFORMULACIÓN";
						this.listaLineaDeTiempoXIncidente.addItem(( evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).reformulaciones[d]); //REFORMULACION
					}	
				}
				if((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).cambiosDeOrigen != null){
					for(d = 0 ; d<((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).cambiosDeOrigen).length ; d++){
						(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).cambiosDeOrigen[d].etiquetaLineaDTiempo = "CAMBIO DE ORIGEN";     
						this.listaLineaDeTiempoXIncidente.addItem(( evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).cambiosDeOrigen[d]);	//CAMBIO DE ORIGEN
					}	
				}
				if((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).gestion != null){
					(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).gestion.etiquetaLineaDTiempo = "GESTIÓN";
					this.listaLineaDeTiempoXIncidente.addItem(( evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).gestion); //GESTION
				}
				if((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).acciones != null){
					for(d = 0 ; d<((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).acciones).length ; d++){
						(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).acciones[d].etiquetaLineaDTiempo = "REALIZACIÓN + VERIFICACIÓN";
						this.listaLineaDeTiempoXIncidente.addItem(( evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).acciones[d]); //ACCIONES
					}	
				}
				if((evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).ponderacion != null){
					(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).ponderacion.etiquetaLineaDTiempo = "PONDERACIÓN";
					this.listaLineaDeTiempoXIncidente.addItem(( evt.currentTarget.selectedItem as IncidenteLineaDeTiempo).ponderacion); //PONDERACION
				}
				
				visualizaRegistro(evt.currentTarget.selectedItem as IncidenteLineaDeTiempo);
				this.listapendientes.selectedIndex = 1;
				
				for(d = 0 ; d<listaLineaDeTiempoXIncidente.length ; d++){
					var total:int = total + listaLineaDeTiempoXIncidente[d].tiempoTotal;
				}
				
				var objeto2:Object = new Object();
				objeto2.etiquetaLineaDTiempo = "TOTAL";
				objeto2.tiempoTotal = total;
				this.listaLineaDeTiempoXIncidente.addItem(objeto2);
				
			}
			
			public function set recibeLineaDeTiempo(lineaTiempo:ArrayCollection):void{
				this.listaLineaTiempo = new ArrayCollection();
				this.listaLineaTiempo = lineaTiempo;
				this.listaLineaTiempo[0].primero = true;
				this.listaincidentes.selectedIndex = 0;
				/* this.incidente.text = this.listaLineaTiempo[0].folio; */
				this._incidente = this.listaLineaTiempo[0] as IncidenteLineaDeTiempo;
				this._gestion = this.listaLineaTiempo[0].gestion as Gestion;
				var d:int = 0;
				this.listaLineaDeTiempoXIncidente = new ArrayCollection();
				var objeto:Object = new Object();
				objeto.folioIncidente = this.listaLineaTiempo[0].folio;
				objeto.etiquetaLineaDTiempo = "FOLIO";
				objeto.tiempoTotal = 0;
				this.listaLineaDeTiempoXIncidente.addItem(objeto);
				(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).etiquetaLineaDTiempo = "REGISTRO";
				
				this.listaLineaDeTiempoXIncidente.addItem(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo);
				if((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).reformulaciones != null){
					for(d = 0 ; d<((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).reformulaciones).length ; d++ ){
						(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).reformulaciones[d].etiquetaLineaDTiempo = "REFORMULACIÓN";
						this.listaLineaDeTiempoXIncidente.addItem(( this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).reformulaciones[d]);
					}	
				}
				if((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).cambiosDeOrigen != null){
					for(d = 0 ; d<((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).cambiosDeOrigen).length ; d++){
						(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).cambiosDeOrigen[d].etiquetaLineaDTiempo = "CAMBIO DE ORIGEN";     
						this.listaLineaDeTiempoXIncidente.addItem((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).cambiosDeOrigen[d]);	
					}	
				}
				if((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).gestion != null){
					(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).gestion.etiquetaLineaDTiempo = "GESTIÓN";
					this.listaLineaDeTiempoXIncidente.addItem(( this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).gestion);
				}
				if((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).acciones != null){
					for(d = 0 ; d<((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).acciones).length ; d++){
						(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).acciones[d].etiquetaLineaDTiempo = "REALIZACIÓN + VERIFICACIÓN";
						this.listaLineaDeTiempoXIncidente.addItem(( this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).acciones[d]);
					}	
				}
				if((this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).ponderacion != null){
					(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).ponderacion.etiquetaLineaDTiempo = "PONDERACIÓN";
					this.listaLineaDeTiempoXIncidente.addItem(( this.listaLineaTiempo[0] as IncidenteLineaDeTiempo).ponderacion);
				}
				
				visualizaRegistro(this.listaLineaTiempo[0] as IncidenteLineaDeTiempo);
				this.listapendientes.selectedIndex = 1;
				for(d = 0 ; d<listaLineaDeTiempoXIncidente.length ; d++){
					var total:int = total + listaLineaDeTiempoXIncidente[d].tiempoTotal;
				}
				
				var objeto2:Object = new Object();
				objeto2.etiquetaLineaDTiempo = "TOTAL";
				objeto2.tiempoTotal = total;
				this.listaLineaDeTiempoXIncidente.addItem(objeto2);
				
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" >
		<s:HGroup width="100%">
			<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_lineadeltiempo}"/>
			<label:labelSubtitulo text="Linea de Tiempo"/> 
		</s:HGroup>
		<otros:divisionGruesa width="100%"/>
		<s:HGroup width="100%" height="100%">
			<s:VGroup width="80%" height="100%" paddingLeft="10" paddingRight="10">
				<s:List height="100%" width="100%" id="listaincidentes" borderVisible="false"  dataProvider="{listaLineaTiempo}" change="incidenteSelccionado(event)"
						itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.vistaincidente.ListaIncidenteLineaDTiempo">
				</s:List>
			</s:VGroup>
			<otros:VDivisionClaro height="100%"/>
			<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
				<!--<label:labelTitulo id="incidente" color="#999999" textAlign="center"/>-->
				<s:List height="100%" width="100%" id="listapendientes" borderVisible="false" dataProvider="{listaLineaDeTiempoXIncidente}" change="elegirUbicacion(event)"
						itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.vistaincidente.ListaPendientes">
					
				</s:List>
				<!--<s:FormItem label="TIEMPO TOTAL : " width="100%" textAlign="left">
				<s:Label id="tiempototal" width="100%" fontSize="13"/>
				</s:FormItem>-->
			</s:VGroup>
			<otros:VDivisionClaro height="100%"/>
			<mx:VBox id="espacioConsultaUbicacion" width="100%" height="100%" paddingLeft="10" paddingRight="10"/>
		</s:HGroup>
		<otros:divisionGruesa width="100%"/>
		<!--<s:Button styleName="botonNegroOld" label="salir" click="cerrarComponente(event)" />-->
		<pqNet:botonPqNetLargo icono="iconosalir" label="Salir" id="salir" click="cerrarComponente(event)"/>
	</s:VGroup>
	
</s:Group>
