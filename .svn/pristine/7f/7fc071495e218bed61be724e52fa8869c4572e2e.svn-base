<?xml version="1.0" encoding="utf-8"?>
<graficas:PieChartPqGris xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark" 
						 xmlns:mx="library://ns.adobe.com/flex/mx" 
						 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
						 xmlns:graficas="skins.skin.graficas.*" width="100%" height="100%"
						 dataProvider="{null}"
						 lineasHabilitadas="true" etiquetasHabilitadas="true" habilitarResumen="true"
						 fondoCircular="true" fondoCircularRadius="7"
						 showDataTips="false"  innerRadius=".5" 
						 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.ChartItem;
			import mx.charts.series.items.PieSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.graphics.GradientEntry;
			import mx.graphics.IFill;
			import mx.graphics.LinearGradient;
			
			private var _infoETvsFT:ArrayCollection;
			private var _totalesClientes:Number=0;
			
			public function obtenerInfoGrafico($infoGrafica:ArrayCollection):void{
				if($infoGrafica == null) return;
				
				_infoETvsFT = new ArrayCollection();
				
				var _cancelada:ArrayCollection = new ArrayCollection();
				var _cancelable:ArrayCollection = new ArrayCollection();
				var _seguimiento:ArrayCollection = new ArrayCollection();
				var _arrayTemp:ArrayCollection = aplicarFormatoTableroCotNoPed($infoGrafica); 
				
				var valor:Number = 0;
				for(var i:int = 0; i <_arrayTemp.length; i++)
				{
					if((_arrayTemp[i] as ResumenConsulta).conceptoResultado == "Cancelada")
					{
						_cancelada.addItem(_arrayTemp[i]);
					}
					if((_arrayTemp[i] as ResumenConsulta).conceptoResultado == "Cancelable")
					{
						_cancelable.addItem(_arrayTemp[i]);
					}
					if((_arrayTemp[i] as ResumenConsulta).conceptoResultado == "Seguimiento")
					{
						_seguimiento.addItem(_arrayTemp[i]);
					}
					if((_arrayTemp[i] as ResumenConsulta).conceptoResultado == "TOTALES")
					{
						_totalesClientes = (_arrayTemp[i] as ResumenConsulta).totalClientes;
					}
				}	
				
				var con:ResumenConsulta = new ResumenConsulta();
				if (_seguimiento.length == 0)
				{
					con = new ResumenConsulta();
					con.conceptoResultado = "Seguimiento";
					con.totalPedidos = 0;
					_seguimiento.addItem(con);
				}
				if (_cancelada.length == 0)
				{
					con = new ResumenConsulta();
					con.conceptoResultado = "Cancelada";
					con.totalPedidos = 0;
					_cancelada.addItem(con);
				}
				if (_cancelable.length == 0)
				{
					con = new ResumenConsulta();
					con.conceptoResultado = "Cancelable";
					con.totalPedidos = 0;
					_cancelable.addItem(con);
				}
				
				_infoETvsFT.addItem(_seguimiento[0]);
				_infoETvsFT.addItem(_cancelable[0]);
				_infoETvsFT.addItem(_cancelada[0]);
				
				//dataProvider = aplicarFormatoTableroCotNoPed(_infoETvsFT); 
				dataProvider = _infoETvsFT; 
			}
			
			public function chartFillFunction(item:ChartItem, index:Number):IFill
			{
				var curItem:PieSeriesItem = PieSeriesItem(item);
				var linear:LinearGradient = new LinearGradient();
				var color1:GradientEntry = new GradientEntry();
				var color2:GradientEntry = new GradientEntry();
				var color3:GradientEntry = new GradientEntry();
				var colores:Array = new Array();
				linear.rotation = 90;
				
				switch(curItem.item.conceptoResultado)
				{
					case "Seguimiento":
					{
						color1.alpha = 1;
						color1.color = 0xA7C16C;
						color1.ratio = 0;
						color2.alpha = 1;
						color2.color = 0x6F9133;
						color2.ratio = 1;
						colores.push(color1);
						colores.push(color2);
						linear.entries = colores
						return linear;
						break;
					}
					case "Cancelable":
					{
						color1.alpha = 1;
						color1.color = 0xDDBA3B;
						color1.ratio = 0;
						color2.alpha = 1;
						color2.color = 0xAE922C;
						color2.ratio = 1;
						colores.push(color1);
						colores.push(color2);
						linear.entries = colores
						return linear;
						break;
					}
					case "Cancelada":
					{
						color1.alpha = 1;
						color1.color = 0xC06163;
						color1.ratio = 0;
						color2.alpha = 1;
						color2.color = 0xA53639;
						color2.ratio = .4980392156862745;
						color3.alpha = 1;
						color3.color = 0x831C1F;
						color3.ratio = 1;
						colores.push(color1);
						colores.push(color2);
						colores.push(color3);
						linear.entries = colores
						return linear;
						break;
					}
					default:
					{
						return null;
						break;
					}
				}
				
				
			}
			
		]]>
	</fx:Script>
	<graficas:series>
		<graficas:pieSeriesCancelableSeguimiento field="total" fillFunction="chartFillFunction"/>  <!--piezasTotal-->
	</graficas:series>
</graficas:PieChartPqGris>
