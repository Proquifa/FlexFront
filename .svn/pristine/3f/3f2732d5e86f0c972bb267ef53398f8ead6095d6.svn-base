<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mate="http://mate.asfusion.com/" >
	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.ActionListEvent;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.EventoCatProLogistica;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ModeloCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.acuerdos.ModeloCatProLogistica;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Modificacion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.oferta.CatPro_Barra_tipoControl;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.generales.CatProveedoresEmpresa;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.operativos.logistica.CatProveedoresLogistica;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.operativos.logistica.itemRender.CatProIR_ConceptoFletes;
			
			[Bindable] private var modifi:Modificacion;
			
			protected function guardarValores(event:ActionListEvent):void
			{
				modifi = new Modificacion();
				modifi.idEmpleado = DatosGlobales.getInstance()._usuario.idEmpleado;
				modifi.metodo =  (event.originalEvent as EventoCatProLogistica).metodo;
				modifi.servicio =  (event.originalEvent as EventoCatProLogistica).servicio;
				modifi.ventana = (event.originalEvent as EventoCatProLogistica).ventana;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		
		<!--++++++++++++++++++++++++++++++++++++++++++ INSERTAR LA MODIFICACION DATOS ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		
		<mate:EventHandlers start="guardarValores(event)" type="{EventoCatProLogistica.INSERTAR_MODIFICACION_LOGISTICA_PROVEEDOR}">
			
			<mate:RemoteObjectInvoker destination="{Destinos.EMPLEADO_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="guardarModificacion"
									  arguments="{modifi}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProGeneral}"
										method="setUpdateModificaiones"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProGeneral}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors				targets="{[CatProveedoresEmpresa]}">
			<mate:PropertyInjector 	source="{ModeloCatProGeneral}" 
									sourceKey="updateModificaciones"
									targetKey="confirmaModificacion"/>
		</mate:Injectors>
		
		<!--++++++++++++++++++++++++++++++++++++++++++ ACTUALIZAR LOGISTICA ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		<mate:EventHandlers type="{EventoCatProLogistica.ACTUALIZAR_LOGISTICA_SERVICE}" >
			
			<mate:EventAnnouncer  generator="{EventoCatProLogistica}" type="{EventoCatProLogistica.INSERTAR_MODIFICACION_LOGISTICA_PROVEEDOR}">
				<mate:Properties metodo = "actualizarLogistica"
								 servicio = "{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
								 ventana = "{event.ventana}" />
			</mate:EventAnnouncer>
			
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="actualizarLogistica"
									  arguments="{[event.logistica]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="setEditaLogistica"
										arguments="{resultObject}" />
				</mate:resultHandlers>
				<mate:faultHandlers >
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="error"
										arguments="{fault}" />
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors target="{CatProveedoresLogistica}">
			<mate:PropertyInjector source="{ModeloCatProLogistica}"
								   sourceKey="editaLogistica"
								   targetKey="confirmaUpdateLogistica" />
		</mate:Injectors>
		
		
		<!--++++++++++++++++++++++++++++++++++++++++++ OBTIENE VALORES DE LOGISTICA ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		<mate:EventHandlers type="{EventoCatProLogistica.OBTENER_LOGISTICA_PROVEEDOR_SERVICE}" >
			<mate:RemoteObjectInvoker destination="{Destinos.CATALOGO_PROVEEDOR_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="obtenerLogisticaProveedor"
									  arguments="{[event.idProveedor]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="setObtenerLogistica"
										arguments="{resultObject}" />
				</mate:resultHandlers>
				<mate:faultHandlers >
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="error"
										arguments="{fault}" />
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[CatProveedoresLogistica,CatPro_Barra_tipoControl]}">
			<mate:PropertyInjector source="{ModeloCatProLogistica}"
								   sourceKey="obtenerLogistica"
								   targetKey="recibeLogistica" />
		</mate:Injectors>
		
		
		<!--++++++++++++++++++++++++++++++++++++++ VERIFICA SI EXISTE EL CONCEPTO EN PRODUCTOS ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		<mate:EventHandlers type="{EventoCatProLogistica.VERIFICAR_EXISTE_CODIGO_PRODUCTO}" >
			<mate:RemoteObjectInvoker destination="{Destinos.PRODCTO_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="existeCodigoProducto"
									  arguments="{[event.codigo,event.fabrica]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="setExisteConcepto"
										arguments="{resultObject}" />
				</mate:resultHandlers>
				<mate:faultHandlers >
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="error"
										arguments="{fault}" />
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[CatProveedoresLogistica]}">
			<mate:PropertyInjector source="{ModeloCatProLogistica}"
								   sourceKey="obtenerExisteConcepto"
								   targetKey="recibeExisteConcepto" />
		</mate:Injectors>
		
		
		<!--++++++++++++++++++++++++++++++++++++++ VERIFICA SI EXISTE EL CONCEPTO (MODIFICACION DE FLETE) ++++++++++++++++++++++++++++++++++++++++++ -->	
		
		<mate:EventHandlers type="{EventoCatProLogistica.VERIFICAR_EXISTE_CODIGO_MODIFICACION_FLETE}" >
			<mate:RemoteObjectInvoker destination="{Destinos.PRODCTO_SERVICE}"
									  endpoint="{Destinos.END_POINT}"
									  method="existeCodigoProducto"
									  arguments="{[event.codigo,event.fabrica]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="setExisteConceptoModificacion"
										arguments="{resultObject}" />
				</mate:resultHandlers>
				<mate:faultHandlers >
					<mate:MethodInvoker generator="{ModeloCatProLogistica}"
										method="error"
										arguments="{fault}" />
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors targets="{[CatProIR_ConceptoFletes]}">
			<mate:PropertyInjector source="{ModeloCatProLogistica}"
								   sourceKey="obtenerExisteConceptoModificacion"
								   targetKey="recibeExisteConceptModificacion" />
		</mate:Injectors>
		
	</fx:Declarations>
	
</mate:EventMap>
