<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 >
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600" />
		<mx:SolidColorStroke id = "s1" color="0x3b98af" weight="2"/>
		<mx:SolidColorStroke id = "s2" color="0xdd9c12" weight="2"/>
		<mx:SolidColorStroke id = "s3" color="0x4fa835" weight="2"/>
		<mx:SolidColor id="sc3" color="0x{catalogoColores.LABEL_NARANJA}" alpha="1"/>
		<s:SolidColorStroke id="stroke2" color="0x{catalogoColores.LABEL_NARANJA}" weight="5"/>
		<mx:SolidColorStroke id = "sObj" color="0xC54B8C" weight="3"/>
		<mx:SolidColor id="sc4" color="0xC54BCC" alpha="1"/>
		<s:SolidColorStroke id="stroke4" color="0xC54B8C" weight="5"/>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			
			import vista.vistas.reporte.visita.cotizar.componentes.popUpCotizacion;
			
			private const _tamanioMinimo:int = 170;
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			private var _listaMontoObjetivo:ArrayCollection = new ArrayCollection();
			private var _listaMontoObjetivoFundamental:ArrayCollection = new ArrayCollection();
			private var totalLegend:Number = 0;
			private var _montoFundamental:Number = 0;
			
			private var yallegaronlosMontosObjetivos:Boolean = false;
			private var yallegaronlosMontosObjetivosFundamentales:Boolean = false;
			private var yallegaronLasVentas:Boolean = false;
			
			
			[Bindable] public var intervalo:Number = 0;
			[Bindable] public var precioMin:Number = 0;
			[Bindable] public var precioMax:Number = 0;
			[Bindable] public var promedioCantidad:Number = 0;
			[Bindable] public var promedio:Number = 0;
			public const ESPACIO_MINIMO:int = 2;
			
			private var _listaMensual:ArrayCollection = new ArrayCollection(["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"]);
			
			
			public function iniciarGrafica($lista:ArrayCollection,tipo:String,tipoMoneda:String):void
			{
				totalLegend = 0;
				var m:int = 0;
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				var contador:int = 0;
				var contadorFundamental:int = 0;
				var cuenta:int = 1;
				var resumen:ResumenConsulta;
				var cuantasVecesEntro:int = 0;
				var montoTotal:Number = 0;
			
				while (cuenta < 13) {
					
					objeto = new Object();
					objeto.numeroMes = cuenta;
					objeto.mes = _listaMensual[cuenta-1];
					objeto.cantidad = 0;
					objeto.precio = 0;
					objeto.precioReal = 0;
					objeto.total = 0;
					objeto.cantidadPieza = 0;
					objeto.precioUnitario = 0;
					objeto.cantidadNoP = 0;
					objeto.precioNoP = 0;
					objeto.precioUnitario = 0;
					
					for (var i:int = 0; i < $lista.length; i++) 
					{
						
						if($lista[i].mes == cuenta && $lista[i].grafica == tipo )
						{
							
							
							cuantasVecesEntro++;
							
							if(tipoMoneda == "Dolares")
							{
								montoTotal += $lista[i].precioDolares;
								objeto.total += $lista[i].precioDolares;
								objeto.precioUnitario = $lista[i].precioDolares;
							}
								
							else if(tipoMoneda == "Pesos")
							{
								montoTotal += $lista[i].precioPesos;
								objeto.total += $lista[i].precioPesos;
								objeto.precioUnitario = $lista[i].precioPesos;
							}
								
							else if(tipoMoneda == "Euros")
							{
								montoTotal += $lista[i].precioEuros;
								objeto.total += $lista[i].precioEuros;
								objeto.precioUnitario = $lista[i].precioEuros;
							}
							
							objeto.cantidadPieza += $lista[i].cant;
								
							if($lista[i].estado == 'Pedido')
							{
								
								objeto.cantidad += $lista[i].cant;
								if(tipoMoneda == "Dolares")
									objeto.precio += $lista[i].precioDolares;
								else if(tipoMoneda == "Pesos")
									objeto.precio += $lista[i].precioPesos;
								else if(tipoMoneda == "Euros")
									objeto.precio += $lista[i].precioEuros;
								
								objeto.precioReal = objeto.precio;
							}
							else{
								
								
								if(tipoMoneda == "Dolares")
									objeto.precioNoP += $lista[i].precioDolares;
								else if(tipoMoneda == "Pesos")
									objeto.precioNoP+= $lista[i].precioPesos;
								else if(tipoMoneda == "Euros")
									objeto.precioNoP += $lista[i].precioEuros;
								objeto.cantidadNoP += $lista[i].cant;
							
								objeto.precioReal = objeto.precioNoP;
							}
							
						}
						
					}
					
					
					
					arrReturn.addItem( objeto );
					
					cuenta ++;
				}
				
				promedioCantidad = (montoTotal / cuantasVecesEntro);
				promedio =  (((precioMax-promedioCantidad)/(precioMax-precioMin)) * 134 ) + 24;
				
				(this.parentDocument as popUpCotizacion).vgLinePromedio.y = promedio;
				
				myChart.dataProvider = arrReturn;
				
				myChart.invalidateProperties()
				
				
			}
			
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="right" paddingTop="20" paddingBottom="10" >
		<!--<s:VGroup width="100%" height="100%" horizontalAlign="right" paddingTop="50" paddingBottom="10" >-->
		<mx:LineChart height="100%" width="100%" id="myChart"
					  mouseSensitivity="5" 
					  showDataTips="true" 
					  dataTipRenderer="{toolTipGraficasReporte}"
					  showDataTipTargets="false"  
					  dataTipMode="single" 
					  paddingRight="{ width > _tamanioMinimo ? 30 : 5}"
					  paddingLeft="{ width > _tamanioMinimo ? 20 : 5}"
					  seriesFilters="[]"
					  >
			<mx:series>
				<!--Punto Verde-->
				<mx:LineSeries yField="precio" xField="numeroMes" form="segment"  lineStroke="{s3}" showDataEffect="{fxInterpolateIn}" />
				<mx:PlotSeries id="montoActual" yField="precio" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
					<mx:itemRenderer> <!--los datos que va pintar-->
						<fx:Component>
							<s:MXItemRenderer>
								<fx:Script>
									<![CDATA[
									]]>
								</fx:Script>
								<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
									<s:fill>
										<s:SolidColor color="0x4fa835"/>
									</s:fill>		
								</s:Ellipse>
							</s:MXItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:PlotSeries>
				
				<!--Punto Rojo-->
				<mx:LineSeries yField="precioNoP" xField="numeroMes" form="segment"  lineStroke="{s1}" showDataEffect="{fxInterpolateIn}" />
				<mx:PlotSeries id="montoNoPedido" yField="precioNoP" xField="numeroMes" displayName="Ventas" showDataEffect="{fxInterpolateIn}">
					<mx:itemRenderer> <!--los datos que va pintar-->
						<fx:Component>
							<s:MXItemRenderer>
								<fx:Script>
									<![CDATA[
										
									]]>
								</fx:Script>
								<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0">
									<s:fill>
										<s:SolidColor color="0xd10c0c"/>
									</s:fill>		
								</s:Ellipse>
							</s:MXItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:PlotSeries>
			</mx:series>
			
			<mx:horizontalAxis>
				<mx:DateTimeAxis id="ventasMes" alignLabelsToUnits="true" displayLocalTime="true" dataUnits="months"  /> <!--muestra abajo-->
			</mx:horizontalAxis>
			<mx:horizontalAxisRenderers>
				<mx:AxisRenderer axis="{ventasMes}" showLine="false" showLabels="false" />
			</mx:horizontalAxisRenderers>
			
			<mx:verticalAxis>
				<mx:LinearAxis id="ventasDLS" labelFunction="formateoEje" minimum="0" /> 
			</mx:verticalAxis>
			<mx:verticalAxisRenderers>
				<mx:AxisRenderer axis="{ventasDLS}" showLine="false" showLabels="{ width > _tamanioMinimo ? true : false}" tickPlacement="none" styleName="axisVerticalLabels"/>
			</mx:verticalAxisRenderers>
			
			<mx:backgroundElements>
				<mx:GridLines visible="false">
					<mx:horizontalStroke>
						<s:SolidColorStroke weight="0" color="0xeeeeee" alpha="0" />
					</mx:horizontalStroke>
				</mx:GridLines>
			</mx:backgroundElements>
		</mx:LineChart>
	</s:VGroup>
</s:Group>
