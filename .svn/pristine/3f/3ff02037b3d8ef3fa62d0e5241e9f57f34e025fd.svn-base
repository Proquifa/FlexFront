<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:label="skins.skin.label.*" width="100%" height="100%" >
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("spark.components.ToggleButton")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			
			import spark.filters.BevelFilter;
			
			private var _selectTriangle:Boolean = false;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				
				var wtriangulo:Number = unscaledWidth/2;
				
				var htriangulo:Number = unscaledHeight;
				
				if (labelDisplay.text == 'PROX EVENTOS' ){
					selectTriangle = true;
				}
				
				graphics.clear();
				
				if (selectTriangle && ( currentState == 'upAndSelected' || currentState == 'overAndSelected' || currentState == 'downAndSelected' ) ){
					// Background
					if (currentState == 'upAndSelected')
						graphics.beginFill(0x378899);	
					else
						graphics.beginFill(0x378899,0.8);
					
					graphics.moveTo(wtriangulo,htriangulo+15);
					graphics.lineTo(wtriangulo-20,htriangulo);
					graphics.lineTo(wtriangulo+20,htriangulo);
					graphics.lineTo(wtriangulo,htriangulo+15); 
					graphics.endFill();
				}
				var sha:spark.filters.BevelFilter = new spark.filters.BevelFilter; 
			}
			
			public function get selectTriangle():Boolean
			{
				return _selectTriangle;
			}
			
			public function set selectTriangle(value:Boolean):void
			{
				_selectTriangle = value;
			}
			
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" stateGroups="normalUp" />
		<s:State name="over" stateGroups="selected" />
		<s:State name="down" stateGroups="selected" />
		<s:State name="disabled" />
		<s:State name="disabledAndSelected" />
		<s:State name="downAndSelected" stateGroups="selected" />
		<s:State name="overAndSelected" stateGroups="selected" />
		<s:State name="upAndSelected" stateGroups="normalUp" />
	</s:states>
	
	
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#C8C8C8" alpha="1"
						  color.selected="#378899"
						  alpha.selected="0.8"
						  color.up="#C8C8C8"
						  color.upAndSelected="#378899" 
						  alpha.normalUp="1"
						  />
		</s:fill>
	</s:Rect>
	
	<s:HGroup width="100%" height="100%" horizontalAlign="center" horizontalCenter="0" verticalAlign="middle">
		
		<s:Label textAlign="center" id="labelDisplay" width="100%" horizontalCenter="0" verticalCenter="0" fontFamily="MyriadProProqui" fontWeight="bold" fontStyle="normal" fontSize="16" paddingTop="3"
				 color="#FFFFFF" 
				 color.normalUp="#FFFFFF"
				 color.selected="#FFFFFF"  
				 alpha="0.9" alpha.disabled="0.5" alpha.disabledAndSelected="0.5" />
		
	</s:HGroup>
</s:Skin>
