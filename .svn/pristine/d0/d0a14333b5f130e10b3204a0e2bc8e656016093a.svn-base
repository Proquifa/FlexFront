<?xml version="1.0" encoding="utf-8"?>
<popUp:PopUpDefaultPQNet xmlns:fx="http://ns.adobe.com/mxml/2009" 
						 xmlns:AdvancedDataGrid="skins.skin.AdvancedDataGrid.*"
						 xmlns:s="library://ns.adobe.com/flex/spark" 
						 xmlns:mx="library://ns.adobe.com/flex/mx" 
						 xmlns:pqNet="skins.botones.pqNet.*"
						 xmlns:label="skins.skin.label.*"
						 xmlns:popUp="skins.popUp.*"
						 xmlns:otros="skins.otros.*"
						 colorPopUp="gris"
						 width="800" height="700" xmlns:linkButton="skins.skin.linkButton.*"   
						 >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.NotaCredito;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			[Bindable]
			private var datosBtnAbiertoCerrado:ArrayCollection = new ArrayCollection([{valor:'Por Aplicar',llave:0},{valor:'Aplicadas',llave:1}] );
			
			protected function btnCerrar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("CerrarElPopUpVerNotasDeCredito_CatClientesCredito",true,false));
			}
			
			private var notasAplicadas:Array;
			private var notasPorAplicar:Array;
			public function set recibeNotasDeCreditoDelCliente($notasCredito:ArrayCollection):void
			{
				if($notasCredito == null)
					return;
				
				notasAplicadas = new Array;
				notasPorAplicar = new Array;
				
				var tempArray:Array;
				if($notasCredito.length > 0)
				{
					tempArray = $notasCredito.source;
					
					notasAplicadas = tempArray.filter(buscarNotasAplicadas);
					
					enumerarLista(notasPorAplicar);
					enumerarLista(notasAplicadas);
					
					if(btneraNotasXEstado.selectedIndex == 0)
						gridCredito.dataProvider = new ArrayCollection(notasPorAplicar);
					else
						gridCredito.dataProvider = new ArrayCollection(notasAplicadas);
				}
			}
			
			private function enumerarLista($array:Array):void
			{
				var currItem:NotaCredito;
				for (var i:int = 0; i < $array.length; i++) 
				{
					currItem = NotaCredito($array[i]);
					currItem.numFila = i+1;
				}
			}
			
			private function buscarNotasAplicadas(item:NotaCredito, idx:uint, _notasCredito:Array):Boolean
			{
				if(item.estado.toLowerCase() == "aplicada")
				{
					return true;
				}
				else
				{
					notasPorAplicar.push(item);
					return false;
				}
			}
			
			protected function btneraNotasXEstado_changingHandler(event:IndexChangeEvent):void
			{
				if(ButtonBar(event.currentTarget).selectedItem == null)
				{
					event.preventDefault();
				}
				else
				{
					if(ButtonBar(event.currentTarget).selectedIndex == 1)
					{
						gridCredito.dataProvider = new ArrayCollection(notasAplicadas);
					}
					else
					{
						gridCredito.dataProvider = new ArrayCollection(notasPorAplicar);
					}
				}
			}
			
			private function compareFunction_HeaderMonto(item1:Object,item2:Object):int
			{
				return ObjectUtil.numericCompare(item1.importe,item2.importe); 
			}
			
			private function compareFunction_HeaderFecha(item1:Object,item2:Object):int
			{
				return ObjectUtil.dateCompare(item1.fecha,item2.fecha); 
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
		<label:TituloBankGothic_22 text="NOTAS DE CRÉDITO" width="100%"/>
		<otros:division width="100%"/>
		<s:ButtonBar id="btneraNotasXEstado" width="300" height="30" dataProvider="{datosBtnAbiertoCerrado}" labelField="valor" selectedIndex="0" requireSelection="true" horizontalCenter="0" changing="btneraNotasXEstado_changingHandler(event)"/>
		<otros:divisionHueca width="100%"/>
		<AdvancedDataGrid:PQNetAdvanceDataGridFooter width="100%" height="100%" id="gridCredito" anchoColumnas="{['45','=','70','=','=','=']}" tipoDeConsulta="notasCreditoAbiertasOCerradas" backGroundColor="0xEAEAEA"
													 disableDragableColumns="{[0]}" disableResizableColumns="{[0]}" dataProvider="{new ArrayCollection}" sumableAtributos="{['importe']}" showSumaDelAtributo="importe">
			<AdvancedDataGrid:columns>
				<mx:AdvancedDataGridColumn headerText="#" dataField="numFila"/>
				<mx:AdvancedDataGridColumn headerText="Fecha" dataField="fechaFormato" sortCompareFunction="{compareFunction_HeaderFecha}"/>
				
				<mx:AdvancedDataGridColumn headerText="Folio" >
					<mx:itemRenderer>
						<fx:Component>
							<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
								<fx:Script>
									<![CDATA[
										import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
										
										protected function lnkbVerNotaCredito_clickHandler(event:MouseEvent):void
										{
											var ruta:String;
											var urlreq:URLRequest;
											ruta = RutasPdF.GENERAL_RUTA + RutasPdF.NOTA_CREDITO + data.fpor+ "/"+lnkbVerNotaCredito.label + ".pdf";
											urlreq = new URLRequest( ruta );
											navigateToURL(urlreq);
										}
									]]>
								</fx:Script>
								<linkButton:LinkButtonPQNet id="lnkbVerNotaCredito" label="{data.folio}" click="lnkbVerNotaCredito_clickHandler(event)" horizontalCenter="0"/>
							</s:MXAdvancedDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:AdvancedDataGridColumn>
				
				<mx:AdvancedDataGridColumn headerText="Emitió" dataField="fpor"/>
				<mx:AdvancedDataGridColumn headerText="Monto" dataField="montoFormato" sortCompareFunction="{compareFunction_HeaderMonto}"/>
				<mx:AdvancedDataGridColumn headerText="Tipo" dataField="tipo" />
			</AdvancedDataGrid:columns>
		</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
		<otros:division width="100%"/>
		<pqNet:botonPqNetLargo id="btnCerrar" label="Cerrar" click="btnCerrar_clickHandler(event)" />
	</s:VGroup>  
	
</popUp:PopUpDefaultPQNet>
