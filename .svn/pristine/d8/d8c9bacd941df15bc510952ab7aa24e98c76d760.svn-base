<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 implements="mx.managers.IFocusManagerContainer"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" 
		 xmlns:textoBorde="skins.skin.textInputBordeadopPQNet.*"
		 xmlns:textarea="skins.skin.textarea.*"
		 xmlns:pqNet="skins.botones.pqNet.*"
		 xmlns:popUp="skins.popUp.*" 
		 xmlns:otros="skins.otros.*" 
		 width="391" height="620" 
		 >
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.CatalogoItem;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.requisicion.PRequisicion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.core.IFlexDisplayObject;
			import mx.managers.ISystemManager;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			
			import spark.events.IndexChangeEvent;
			
			import vista.evento.EventoEVReqMovil;
			
			private var tipo:String;
			
			[Bindable]
			private var _pRequisicon:PRequisicion;
			
			public function get defaultButton():IFlexDisplayObject{
				// TODO Auto Generated method stub
				return txtCantidad; // <-- PLACE THE REFERENCE FOR SOME DEFAULT FOCUSABLE COMPONENT HERE (DEFAULT BUTTON OR WHATEVER)
			}
			public function set defaultButton(value:IFlexDisplayObject):void{
				// TODO Auto Generated method stub
				
			}
			override public function get systemManager():ISystemManager{
				return super.systemManager;
				// TODO Auto Generated method stub
				//return null;
			}
			
			public function inicia():void{
				this.cmbMarca.cargarMarcas('--NINGUNO--');
				this.cmbUnidad.cargarUnidades('No Disponible');
				tipo = 'crea';
				this.txtMarcaNueva.enabled = true;
				this.txtdescripcion.prompt = "Registra aquí la descripcion del producto";
				
				seleccionaMarca();
				seleccionaUnidad();
				
			}
			
			private function seleccionaMarca():void{
				if (cmbMarca.dataProvider != null && cmbMarca.dataProvider.length > 0){
					cmbMarca.selectedIndex = 0;
				}
				else{
					setTimeout(seleccionaMarca,500);
				}
			}
			
			private function seleccionaUnidad():void{
				if (cmbUnidad.dataProvider != null && cmbUnidad.dataProvider.length > 0){
					cmbUnidad.selectedIndex = 0;
				}
				else{
					setTimeout(seleccionaUnidad,500);
				}
			}
			
			public function edita( $pRequisicion:PRequisicion ):void{
				tipo = 'edita';
				_pRequisicon = ObjectUtil.copy( $pRequisicion ) as PRequisicion;
				var indice:int = 0;
				indice = Util.indiceSeleccionadoComoObjetoConString( cmbMarca.dataProvider as ArrayCollection, _pRequisicon.marca ); 
				if( indice == -1  ){
					cmbMarca.selectedIndex = 0;
					this.txtMarcaNueva.text = _pRequisicon.marca;
					this.txtMarcaNueva.enabled  = true;
				}else{
					cmbMarca.selectedIndex = indice;
					this.txtMarcaNueva.text = "";
					this.txtMarcaNueva.enabled  = false;
				}
				this.cmbUnidad.selectedIndex = Util.indiceSeleccionadoComoObjetoConString( cmbUnidad.dataProvider as ArrayCollection, _pRequisicon.unidad ); 
				txtdescripcion.text = _pRequisicon.concepto;
			}
			private function cierraPopUp():void{
				this.cmbMarca.selectedIndex = 0;
				this.cmbUnidad.selectedIndex = 0;
				this.txtMarcaNueva.text = "";
				this.txtMarcaNueva.enabled = true;
				this.txtCantidad.text = "";
				this.txtdescripcion.text = "";
				this.txtPiezas.text = "";
				this.txtPrecioConocido.text = "";
				var evt:EventoEVReqMovil = new EventoEVReqMovil( EventoEVReqMovil.CANCELA_PARTIDA_REQUISICION );
				dispatchEvent( evt );
			}
			private function valida():Boolean{
				var pasaValidacion:Boolean = true;
				/* if( this.cmbMarca.selectedIndex == 0 && this.txtMarcaNueva.text == "" ){
					alertaSingleton.show( 'Es necesario una marca',catalogoAlertas.TIT_ADV_operacionImposible );
					pasaValidacion = false;
					return pasaValidacion; 
				} */
				if( txtCantidad.text == '' ){
					if( (cmbUnidad.selectedItem as CatalogoItem).valor == 'No Disponible' ){
						txtCantidad.text = '';
					}else{
						alertaSingleton.show( 'Es necesario asignar una cantidad',catalogoAlertas.TIT_ADV_operacionImposible );
						pasaValidacion = false;
						return pasaValidacion;
					}
				}
				 if( txtdescripcion.text == '' ){
					alertaSingleton.show( 'Es necesario una descripcón',catalogoAlertas.TIT_ADV_operacionImposible );
					pasaValidacion = false;
					return pasaValidacion;
				} 
				if( txtPiezas.text == '' ){
					alertaSingleton.show( 'Es necesario agregar piezas',catalogoAlertas.TIT_ADV_operacionImposible );
					pasaValidacion = false;
					return pasaValidacion;
				}
				/* if( txtPrecioConocido.text == '' ){
					alertaSingleton.show( 'Es necesario agregar el precio',catalogoAlertas.TIT_ADV_operacionImposible );
					pasaValidacion = false;
					return pasaValidacion;
				} */
				return pasaValidacion;
			}
			private function enviaPartidaRequisicion():void{
				var marca:String = "";
				if ( !valida() ){
					return;
				}
				var evt:EventoEVReqMovil = null;
				if(tipo == 'crea'){
					evt = new EventoEVReqMovil( EventoEVReqMovil.RECIBE_PARTIDA_REQUISICION );
					evt.partidaReq = new PRequisicion();
				}else{
					evt = new EventoEVReqMovil( EventoEVReqMovil.EDITA_PARTIDA_REQUISICION );
					evt.partidaReq = ObjectUtil.copy( _pRequisicon ) as PRequisicion;
				}
				if( this.cmbMarca.selectedIndex > 0){
					evt.partidaReq.marca =  (this.cmbMarca.selectedItem as CatalogoItem).valor;
				}else{
					evt.partidaReq.marca = this.txtMarcaNueva.text;
				}
				if(this.txtdescripcion.text != null  ){
					evt.partidaReq.concepto = this.txtdescripcion.text;
				}else{
					evt.partidaReq.concepto = '';
				}
				evt.partidaReq.piezasACotizar = parseInt( this.txtPiezas.text );
				if( (cmbUnidad.selectedItem as CatalogoItem).valor == 'No Disponible' ){
					evt.partidaReq.cantidad =  0;
				}else{
					evt.partidaReq.cantidad =  parseInt( this.txtCantidad.text );
					
				}
				if( txtPrecioConocido.text == '' ){
					evt.partidaReq.precioU = 0;
				}else{
					evt.partidaReq.precioU = parseFloat( this.txtPrecioConocido.text );
				}
				evt.partidaReq.unidad = ( this.cmbUnidad.selectedItem as CatalogoItem).valor;
				dispatchEvent( evt );
				cierraPopUp();
			}
			
			protected function cmbMarca_changeHandler():void{
				if( cmbMarca.selectedIndex == 0){
					this.txtMarcaNueva.enabled = true;
				}else{
					this.txtMarcaNueva.enabled = false;					
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<popUp:PopUpBlanco width="100%" height="100%"/>
	<s:VGroup width="100%" height="100%" paddingTop="15" paddingLeft="15" paddingRight="15" paddingBottom="15" gap="10" horizontalAlign="center">
		<s:Label fontSize="16" fontWeight="bold" color="0x{catalogoColores.LABEL_CASI_NEGRO}" text="Partidas" width="100%" textAlign="left"/>
		<otros:division width="100%"/>
		<s:VGroup paddingLeft="15" paddingRight="15" width="100%" height="100%" gap="10">
			<s:Label text="Marca:" fontWeight="bold"/>
			<cmbCat:ComboCatalogos width="100%"  id="cmbMarca" creationComplete="{cmbMarca.cargarMarcas('--NINGUNO--')}" selectedIndex="0" labelField="valor" change="cmbMarca_changeHandler()"/>
			<s:Label text="Marca Nueva:" fontWeight="bold"/>
			<s:TextInput width="100%" id="txtMarcaNueva" fontStyle="normal"/>
			<s:Label text="Descripción:" fontWeight="bold"/>
			<textoBorde:TextInputConBordePunteado  width="100%" height="165" id="txtdescripcion" fontStyle="normal" />
			<s:Label text="Piezas a Cotizar:" fontWeight="bold"/>
			<s:TextInput width="100%" id="txtPiezas" restrict="0-9" fontStyle="normal" text="{_pRequisicon.piezasACotizar}"/>
			<s:HGroup width="100%">
				<s:Label text="Cantidad:" fontWeight="bold" width="50%"/>
				<s:Spacer width="15"/>
				<s:Label text="Unidades:" fontWeight="bold" width="50%"/>
			</s:HGroup>
			<s:HGroup width="100%">
				<s:TextInput width="50%" id="txtCantidad" fontStyle="normal" text="{_pRequisicon.cantidad}" restrict="0-9."/>
				<s:Spacer width="15"/>
				<cmbCat:ComboCatalogos id="cmbUnidad" creationComplete="{cmbUnidad.cargarUnidades('No Disponible')}" width="50%" selectedIndex="0" labelField="valor"/>
			</s:HGroup>
			<s:HGroup width="100%">
				<s:Label text="Precio unitario conocido:" fontWeight="bold" width="50%"/>
				<s:Spacer width="15"/>
				<s:Label text="Moneda:" fontWeight="bold" width="50%"/>
			</s:HGroup>
			<s:HGroup width="100%" verticalAlign="middle">
				<s:TextInput width="50%" id="txtPrecioConocido" restrict="0-9." fontStyle="normal"  text="{_pRequisicon.precioU}"/>
				<s:Spacer width="15"/>
				<s:Label text="Dólares" fontWeight="bold" width="50%" />
			</s:HGroup>
		</s:VGroup>
		<otros:division width="100%" click="enviaPartidaRequisicion()"/>
		<s:HGroup width="100%">
			<pqNet:botonPqNetLargo label="Cancelar" click="cierraPopUp()"/>
			<s:Spacer width="100%"/>
			<pqNet:botonPqNetLargo label="Agregar" click="enviaPartidaRequisicion()" id="btnAgregar"/>
		</s:HGroup>
	</s:VGroup>
	
</s:Group>
