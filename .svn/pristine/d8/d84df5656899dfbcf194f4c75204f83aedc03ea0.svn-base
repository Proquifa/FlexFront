<?xml version="1.0" encoding="utf-8"?>
<contenedores:VGroupConPaddingStandardPqNet xmlns:fx="http://ns.adobe.com/mxml/2009" 
											xmlns:s="library://ns.adobe.com/flex/spark"  creationComplete="vistaDefaultPrevioImpor_CreationComplete(event)"
											xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:contenedores="skins.skin.contenedores.*" xmlns:otros="skins.otros.*" 
											xmlns:pqNet="skins.skin.datagrid.pqNet.*" xmlns:componentes="skins.skin.combobox.componentes.*" xmlns:mapa="vista.mapa.*" xmlns:label="skins.skin.label.*">
	<fx:Declarations>
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import vista.evento.EventoDirectorGralPrevioImportacion;
			import vista.vistas.previoImportacion.graficas.ChartPrevioImportacionProveedor;
			import vista.vistas.previoImportacion.graficas.ChartPrevioImportacionTipoPermiso;
			import vista.vistas.previoImportacion.graficas.ChartPrevioImportacionTipoProducto;
			private var graficaProveedor:ChartPrevioImportacionProveedor = new ChartPrevioImportacionProveedor();
			private var graficaTipoProducto:ChartPrevioImportacionTipoProducto = new ChartPrevioImportacionTipoProducto();
			private var graficaTipoPermiso:ChartPrevioImportacionTipoPermiso = new ChartPrevioImportacionTipoPermiso();
			
			private var _arrayGrid:ArrayCollection;
			
			[Bindable]
			private var totales:Object;
			
			protected function vistaDefaultPrevioImpor_CreationComplete(event:FlexEvent):void
			{
				grpGraficas.addElement(graficaProveedor);
				grpGraficas.addElement(graficaTipoProducto);
				grpGraficas.addElement(graficaTipoPermiso);
				
			}
			
			public function set recibeListaParaGrid($lista:ArrayCollection):void
			{
				if($lista == null) return;
				totales = $lista.removeItemAt($lista.length-1);
				$lista.refresh();
				gridPrevioImportacion.dataProvider = $lista;
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" >
		<label:TextoBankGothic_24 text="PREVIO DE IMPORTACIÓN" fontWeight="bold" paddingBottom="5"/>	 
	</s:HGroup>
	<otros:divisionHueca width="100%"/>
	<s:HGroup width="100%" height="30" verticalAlign="middle">
		<label:TituloBankGothic_20 width="30%" text="Listado" textAlign="left" />
		<label:TituloBankGothic_20  width="100%" textAlign="right" text="{totales.totProveedores +' Proveedores : ' +totales.totPartidas+' Partidas · '+totales.totEnSistema+' ES · '+totales.totFueraSistema+' FS'}" />
	</s:HGroup>  
	<otros:divisionGruesa width="100%"/>
	
	<pqNet:dataGridPqNet width="100%" height="100%" id="gridPrevioImportacion" rowHeight="70" horizontalScrollPolicy="auto" textAlign="center" porcentajesColumnasPq="[4,33,14,14,14,13,5]" 
						 sortableColumns="false">
		<pqNet:columns>
			<mx:DataGridColumn headerText="#" fontSize="12" dataField="numFila"/>
			<mx:DataGridColumn headerText="Proveedor"  fontSize="12">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false"  >
							<fx:Script>
								<![CDATA[
									import skins.catalogos.catalogoColores;
								]]>
							</fx:Script>
							<s:VGroup width="100%" >
								<s:Label text="{data.nombreProveedor}" width="100%"  fontWeight="bold" textAlign="center"/>	
								<s:Label text="{data.paisProveedor}" width="100%" color="0x{catalogoColores.LABEL_GRIS}"  textAlign="center"/>
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Número de Partidas" fontSize="12">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false"  >
							<fx:Script>
								<![CDATA[
									import skins.catalogos.catalogoIconosBotoneras;
								]]>
							</fx:Script>
							<s:VGroup width="100%" >
								<s:Label text="{data.numPartidasString}" width="100%"  fontWeight="bold" textAlign="center"/>
								<s:HGroup width="100%" horizontalAlign="center" visible="{data.numFueraSistema >0 ? true:false}" includeInLayout="{data.numFueraSistema >0 ? true:false}">
									<s:Label text="{data.numFueraSistema + ' FS' }"/>
									<s:Image source="{catalogoIconosBotoneras.getInstance().indicadorMorado}"/>
								</s:HGroup>  
								<s:HGroup width="100%" horizontalAlign="center" visible="{data.numEnSistema >0 ? true:false}" includeInLayout="{data.numEnSistema >0 ? true:false}">
									<s:Label text="{data.numEnSistema + ' ES'}"/>	
									<s:Image source="{catalogoIconosBotoneras.getInstance().indicadorv}"/>
								</s:HGroup>  
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Tipo Producto" fontSize="12">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<s:VGroup width="100%" >
								<s:Label text="{data.numEstandares + ' Estándares'}" width="100%" textAlign="center" visible="{data.numEstandares >0 ? true:false}" includeInLayout="{data.numEstandares >0 ? true:false}"/>	
								<s:Label text="{data.numMedicamentos + ' Medicamentos'}" width="100%" textAlign="center" visible="{data.numMedicamentos >0 ? true:false}" includeInLayout="{data.numMedicamentos >0 ? true:false}"/>	
								<s:Label text="{data.numPublicaciones + ' Publicaciones'}" width="100%" textAlign="center" visible="{data.numPublicaciones > 0 ? true:false}" includeInLayout="{data.numPublicaciones >0 ? true:false}"/>	
								<s:Label text="{data.numReactivos + ' Reactivos'}" width="100%" textAlign="center" visible="{data.numReactivos >0 ? true:false}" includeInLayout="{data.numReactivos >0 ? true:false}"/>	
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Tipo Permiso" fontSize="12">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<s:VGroup width="100%" horizontalAlign="center">
								<s:Label text="{data.numAlopaticos + ' Alopático'}" visible="{data.numAlopaticos >0 ? true:false}" includeInLayout="{data.numAlopaticos >0 ? true:false}"/>	
								<s:Label text="{data.numPlafest + ' Plafest'}" visible="{data.numPlafest >0 ? true:false}" includeInLayout="{data.numPlafest >0 ? true:false}"/>	
								<s:Label text="{data.numPsicotropico + ' Psicotrópico'}" visible="{data.numPsicotropico >0 ? true:false}" includeInLayout="{data.numPsicotropico >0 ? true:false}"/>
								<s:Label text="{data.numSinTipoSoliPermiso + ' ND '}" visible="{data.numSinTipoSoliPermiso >0 ? true:false}" includeInLayout="{data.numSinTipoSoliPermiso >0 ? true:false}"/>
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="¿Requieren permiso?" fontSize="12">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false" >
							<s:VGroup width="100%" >
								<s:Label text="{'SI : ' + data.numReqPermiso}" width="100%" textAlign="center" visible="{data.numReqPermiso >0 ? true:false}" includeInLayout="{data.numReqPermiso >0 ? true:false}"/>	
								<s:Label text="{'NO : '+ data.numNoReqPermiso}" width="100%" textAlign="center" visible="{data.numNoReqPermiso >0 ? true:false}" includeInLayout="{data.numNoReqPermiso >0 ? true:false}"/>
								<s:Label text="{'ND :' + data.numNingunoReqPermiso}" width="100%" textAlign="center" visible="{data.numNingunoReqPermiso >0 ? true:false}" includeInLayout="{data.numNingunoReqPermiso >0 ? true:false}"/>
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import skins.catalogos.catalogoIconosGrid;
									
									import vista.evento.EventoDirectorGralPrevioImportacion;
									import vista.evento.EventoGralDirectorGral;
									
									protected function imgDetallePrevioImportacion_clickHandler(event:MouseEvent):void
									{
										var seleccionProveedor:EventoGralDirectorGral = new EventoGralDirectorGral(EventoGralDirectorGral.SELECCIONA_SUB_ACTIVIDAD);
										seleccionProveedor.subAtividadSeleccionada = "PrevioImportacionPorProveedor";
										dispatchEvent(seleccionProveedor);
										
										var obtenerProductos:EventoDirectorGralPrevioImportacion= new EventoDirectorGralPrevioImportacion(EventoDirectorGralPrevioImportacion.OBTENER_PRODUCTOS_POR_PROVEEDOR);
										obtenerProductos.nombreProveedor = data.nombreProveedor;
										dispatchEvent(obtenerProductos);
									}
								]]>
							</fx:Script>
							<s:Image id="imgDetallePrevioImportacion" source="{catalogoIconosGrid.getInstance().render_flechitacirculo}" click="imgDetallePrevioImportacion_clickHandler(event)" horizontalCenter="0"/>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</pqNet:columns>
	</pqNet:dataGridPqNet>
	<otros:divisionGruesa width="100%"/>
	<s:HGroup width="100%" height="100%" paddingTop="10" id="grpGraficas" gap="0"/>
	
</contenedores:VGroupConPaddingStandardPqNet>
