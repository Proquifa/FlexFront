<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:otros="skins.otros.*"
				autoDrawBackground="false"
				width="100%" height="100%"
				resize="resizeHandler(event)" xmlns:ns="vista.vistas.ev_AtenderPoolDeVisitas.Componentes.checkBox.*" xmlns:ns1="vista.vistas.ev_AgendarVisita.Componentes.*" xmlns:label="skins.skin.label.*" xmlns:textinput="skins.skin.textinput.*" xmlns:generales="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.*"
				>
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.EventoCatClientesContratos;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.comerciales.oferta.EventoCatClientes_Oferta;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.comerciales.oferta.ParametrosOfertaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ClasificacionConfiguracionPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecioProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.CatClientesContratos;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable] public var sizeFont:Number;
			[Bindable] public var sizeFontLittle:Number;
			[Bindable] public var sizeFontBig:Number;
			[Bindable] public var widthLogo:Number = 20;
			[Bindable] public var heightLogo:Number = 20;
			[Bindable] public var gapVertical:Number = 20;
			
			[Bindable] public var sizeFontHidden:Number = 14;
			[Bindable] public var checkMedida:Number;
			[Bindable] public var paddingSegundo:Number = 20;
			[Bindable] public var current:SolicitudVisita;
			
			[Bindable] public var conDocumentos:Boolean = false;
			[Bindable] public var sinDocumento:Boolean = false;
			
			override public function set data(value:Object):void{
				
				
				if(value == null)
					return;
				
				super.data = value;
					vistaSecundariaEstado(data.vistaAbierta)
				
			}
			
			
			
			protected function resizeHandler(event:ResizeEvent):void
			{
				sizeFontBig = (22 / 1370) * (unscaledWidth);
				
				sizeFont = (17 / 1370) * (unscaledWidth);
				sizeFont = sizeFont > 17 ? 17:sizeFont;
				sizeFont = sizeFont < 11 ? 11:sizeFont;
				
				widthLogo = (20 / 1370) * (grpVistaPrincipal.width);
				widthLogo = widthLogo > 20 ? 20:widthLogo;
				widthLogo = widthLogo < 15 ? 15:widthLogo;
				
				heightLogo = widthLogo;
				
				sizeFontLittle = (17 / 1370) * (unscaledWidth);
				sizeFontLittle = sizeFontLittle > 17 ? 17:sizeFontLittle;
				sizeFontLittle = sizeFontLittle < 9 ? 9:sizeFontLittle;
				
				checkMedida = (20 / 1370) * (unscaledWidth);
				checkMedida = checkMedida > 20 ? 20:checkMedida;
				checkMedida = checkMedida < 15 ? 15:checkMedida;
				
				sizeFontHidden = (14 / 1370) * (unscaledWidth);
				sizeFontHidden = sizeFontHidden > 14 ? 14:sizeFontHidden;
				sizeFontHidden = sizeFontHidden < 8 ? 8:sizeFontHidden;
				
				paddingSegundo = (40 / 1370) * (unscaledWidth);
				paddingSegundo = paddingSegundo > 40 ? 40:paddingSegundo;
				paddingSegundo = paddingSegundo < 20 ? 20:paddingSegundo;
				
				lineaInterior.x = unscaledWidth/2;
				setTimeout(cambiarResize,300);
			}
			
			private function cambiarResize():void
			{
				widthLogo = (20 / 1370) * (grpVistaPrincipal.width);
				widthLogo = widthLogo > 20 ? 20:widthLogo;
				widthLogo = widthLogo < 15 ? 15:widthLogo;
				
				heightLogo = widthLogo;
			}
			
			
			protected function cambiarVista(event:MouseEvent,abrir:Boolean):void
			{
				var eventSegundo:EventoCatClientesContratos = new EventoCatClientesContratos(EventoCatClientesContratos.SEGUNDA_VISTA_ACTIVA);
				eventSegundo.indiceActual = itemIndex;
				dispatchEvent(eventSegundo);
			}
			
			private function vistaSecundariaEstado(abrir:Boolean):void
			{
				if(abrir){
					infoVistaSecundaria.cargarInformacionSeccionPreEntrega(data.confPrecioProducto as ConfiguracionPrecioProducto,CatClientesContratos.nivelActual_Contrato,CatClientesContratos.ProveedorActual_Contratos)
					grpVistaSecundaria.visible = grpVistaSecundaria.includeInLayout = true;
					flechaAbajo.visible = flechaAbajo.includeInLayout = false;					
					flechaArriba.visible = flechaArriba.includeInLayout = true;
				}
				else{
					grpVistaSecundaria.visible = grpVistaSecundaria.includeInLayout = false;
					flechaAbajo.visible = flechaAbajo.includeInLayout = true;					
					flechaArriba.visible = flechaArriba.includeInLayout = false;
				}
			}
			
		
			
			protected function cancelar(event:MouseEvent):void
			{
				data.vistaAbierta = false;
				vistaSecundariaEstado(false);
			}
			
			
			private function defaultLabel(valor:String):String
			{
				if(valor == null || valor=="" || valor=="Pendiente")
					return "ND"
				else 
					return valor;
			}
			
			private var _idProveedorGuardado:int;
			protected function infoVistaSecundaria_actualizarDataClasificacionyCostoHandler(event:EventoCatClientesContratos):void
			{
				data.confPrecioProducto.costoFactorProducto.factorCliente = event.factorCliente;
				data.confPrecioProducto.costoFactorProducto.factorCostoFijo = event.factorCostoFijo;
				data.confPrecioProducto.tiempoEntregaRuta = event.configuracionPrecioProducto.tiempoEntregaRuta;
				
				var evt:EventoCatClientes_Oferta;
				var lista:ArrayCollection = new ArrayCollection();
				_idProveedorGuardado = 0;
				
			/*	evt = new EventoCatClientes_Oferta( EventoCatClientes_Oferta.GUARDAR_FACTOR_CLIENTE_SERVICIO );*/
				var idFamilia:int = data.parametrosOferta.idConfigFamilia;
				data.parametrosOferta = new ParametrosOfertaCliente();
				data.parametrosOferta.idConfigFamilia = idFamilia;
				data.parametrosOferta.temporal = false;
				data.parametrosOferta.duracionTemp = 0;
				
				_idProveedorGuardado = CatClientesContratos.ProveedorActual_Contratos.idProveedor; 
				
				
				if( CatClientesContratos.nivelActual_Contrato == 'Producto' )
				{
					data.parametrosOferta.idConfigPrecioProd = event.configuracionPrecioProducto.idConfiguracionPrecioProducto;
					data.parametrosOferta.idCliente = CatClientesContratos.clienteActual.idCliente;
					data.parametrosOferta.nivelConfigPrecio = 'Producto';
					data.parametrosOferta.tipoNivelIngreso = CatClientesContratos.clienteActual.nivelIngreso;
					data.parametrosOferta.factor = event.factorCliente;
					data.parametrosOferta.restablecer = event.solicitarRestablecer;
					
				}
				else if( CatClientesContratos.nivelActual_Contrato== 'Precio lista' )
				{
					data.parametrosOferta.idConfigPrecioProd = event.configuracionPrecioProducto.idConfiguracionPrecioProducto;
					data.parametrosOferta.idCliente = CatClientesContratos.clienteActual.idCliente;
					data.parametrosOferta.nivelConfigPrecio = 'Costo';
					data.parametrosOferta.tipoNivelIngreso = CatClientesContratos.clienteActual.nivelIngreso;
					data.parametrosOferta.factor = event.factorCliente;
					data.parametrosOferta.restablecer = event.solicitarRestablecer;
					
				}
				else if( CatClientesContratos.nivelActual_Contrato == 'Clasificacion' )
				{
					data.parametrosOferta.idConfigPrecioProd = event.IdConfiguracionPProducto;
					data.parametrosOferta.idCliente = CatClientesContratos.clienteActual.idCliente;
					data.parametrosOferta.nivelConfigPrecio = 'Clasificacion';
					data.parametrosOferta.tipoNivelIngreso = CatClientesContratos.clienteActual.nivelIngreso;
					data.parametrosOferta.factor = event.factorCliente;
					data.parametrosOferta.restablecer = event.solicitarRestablecer;
					
				}
				else if( CatClientesContratos.nivelActual_Contrato == 'Generales' )
				{
					data.parametrosOferta.idConfigPrecioProd = event.IdConfiguracionPProducto;
					data.parametrosOferta.idCliente = CatClientesContratos.clienteActual.idCliente;
					data.parametrosOferta.nivelConfigPrecio = 'Familia';
					data.parametrosOferta.tipoNivelIngreso = CatClientesContratos.clienteActual.nivelIngreso;
					data.parametrosOferta.factor = event.factorCliente;
					data.parametrosOferta.restablecer = event.solicitarRestablecer;
					
				}
				
				
				
				data.parametrosOferta.temporal = false;
				data.parametrosOferta.precioListaAnterior = event.precioListaAnterior; 
				data.parametrosOferta.costoFijo = event.factorCostoFijo;
				data.parametrosOferta.compuestaCostoF = event.checkCostoFijo;
				data.parametrosOferta.compuestaFactorU = event.checkFactorUtilidad;
				data.parametrosOferta.idAgente = event.configuracionPrecioProducto.costoFactorProducto.idAgenteAduanal;
				data.parametrosOferta.idLugar = event.configuracionPrecioProducto.costoFactorProducto.idLugarAgenteAduanal;
				data.parametrosOferta.idConcepto = event.configuracionPrecioProducto.costoFactorProducto.idLugarConcepto;
				data.parametrosOferta.tiemposEntregaRuta = event.configuracionPrecioProducto.tiempoEntregaRuta; 
				data.parametrosOferta.idProveedor = _idProveedorGuardado;
				
				data.vistaAbierta = false;
				vistaSecundariaEstado(false);
				
			   /* evt.parametrosOferta = data.parametrosOferta;
				
				if (event.solicitarRestablecer)
					
					evt.ventana = "CatClientes_Oferta_Restablecer "+evt.nivel+"( idCliente:"+CatClientesContratos.clienteActual.idCliente+", idProveedor:"+_idProveedorGuardado+", IdConfiguracionPProducto:"+evt.IdConfiguracionPProducto+" )";
				else
					evt.ventana = "CatClientes_Oferta "+evt.nivel+"( idCliente:"+CatClientesContratos.clienteActual.idCliente+", idProveedor:"+_idProveedorGuardado+", IdConfiguracionPProducto:"+evt.IdConfiguracionPProducto+" )";
			dispatchEvent(evt);*/
				
				
			}
			
			protected function eliminarConf_clasificacion(event:MouseEvent):void
			{
			
				dispatchEvent(new Event("EliminarConfClasificacionContratos",true));
			}
			
			protected function infoVistaSecundaria_cerrarVistaAuxContratosHandler(event:EventoCatClientesContratos):void
			{
				data.vistaAbierta = false;
				vistaSecundariaEstado(false);
				
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:Group width="100%" height="100%" >
		
		<otros:LineaDivision id="linea" width="100%" height="2" color="#f4f4f4" bottom="0" /> 
		<s:VGroup width="100%" height="100%"  verticalAlign="middle" gap="0">
			 
			
			
			<s:HGroup width="95%" height="100%"  paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10" id="grpVistaPrincipal" maxHeight="70">
				
				<s:VGroup width="100%" paddingTop="10" paddingBottom="10" paddingRight="5" gap="10">
					<s:HGroup width="100%" >
						<label:Titulo text="#{(data as ClasificacionConfiguracionPrecio).numFila} · " paddingTop="0"/>
						<label:Titulo text=" {(data as ClasificacionConfiguracionPrecio).totalProductos}" color="#257d92"  paddingTop="0"/>
						<label:Titulo text=" {(data as ClasificacionConfiguracionPrecio).totalProductos==1?'Producto':'Productos'}" paddingTop="0"/>
						
					</s:HGroup>  
					<label:Texto text="{(data as ClasificacionConfiguracionPrecio).concepto}" color="0xcccbcc"  width="100%"/>
				</s:VGroup>
				
				<s:HGroup height="100%" width="5%" verticalAlign="top" click="eliminarConf_clasificacion(event)" buttonMode="true">
					<s:Image id="imgBoteBasura" source="{catalogoIconosEtiquetas.getInstance().bote}" height="20" width="20	" horizontalAlign="right"  />	
				</s:HGroup>  
				
			
				
				<s:HGroup height="100%" id="flechaAbajo" verticalAlign="top" click="cambiarVista(event,true)" buttonMode="true">
					<mx:Image source="{catalogoIconosBotoneras.getInstance().flecha_abajo}" smoothBitmapContent="true"/>
				</s:HGroup>
				<s:HGroup height="100%" id="flechaArriba" verticalAlign="top" mouseDown="cancelar(event)" includeInLayout="false" visible="false" buttonMode="true">
					<mx:Image source="{catalogoIconosBotoneras.getInstance().flecha_arriba}" smoothBitmapContent="true"/>
				</s:HGroup>
				<!--grupro principal-->
			</s:HGroup>  
			
			
			
			<s:Group width="100%" height="100%" id="grpVistaSecundaria" visible="false" includeInLayout="false">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="#f6f6f7" /> 
					</s:fill>
				</s:Rect>
				
				<s:Rect id="recta" width="100%" height="1" depth="2">
					<s:fill>
						<s:SolidColor id="solidC" color="#f3f3f3"/>
					</s:fill>
					<s:filters>
						<s:DropShadowFilter alpha="{grpVistaSecundaria.visible==true?0.5:0}" angle="90" blurX="4" blurY="4" color="#000000" 
											distance="2" knockout="false" 
											quality="{BitmapFilterQuality.HIGH}" strength="1"/>
					</s:filters>
				</s:Rect>
				
				<s:VGroup height="100%" verticalAlign="bottom" x="{(unscaledWidth/2) +  20}" id="lineaInterior" paddingBottom="20" >
					
					<s:Rect width="1" height="85%">
						<s:fill>
							<s:SolidColor color="#f4f4f4" />
						</s:fill>
					</s:Rect>
				</s:VGroup> 
				
				<s:Group width="100%" height="100%" id="grpConContacto" >
					
				<generales:CatCLientes_VistaAuxClasificacionContratos width="100%" height="370" id="infoVistaSecundaria" actualizarDataClasificacionyCosto="infoVistaSecundaria_actualizarDataClasificacionyCostoHandler(event)"  cerrarVistaAuxContratos ="infoVistaSecundaria_cerrarVistaAuxContratosHandler(event)"  />
					
				</s:Group>  
			
				<s:Group mouseDown="cancelar(event)" width="100%" >
					<mx:Image smoothBitmapContent="true" source="{catalogoIconosBotones.getInstance().cerrar_verde_claro}" id="imgCerrar"  buttonMode="true" 
							  width="10" height="10" right="25" top="20"/></s:Group >

			</s:Group>		
		
		
		</s:VGroup>
		
	</s:Group>
	
</s:ItemRenderer>
