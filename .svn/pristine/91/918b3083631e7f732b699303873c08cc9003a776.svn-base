<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorComparacionVentasPer xmlns:fx="http://ns.adobe.com/mxml/2009" 
									  xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									  xmlns:s="library://ns.adobe.com/flex/spark"
									  xmlns:mx="library://ns.adobe.com/flex/mx" 
									  xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" 
									  xmlns:graf="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.ventasDelPeriodo.*" 
									  xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*" 
									  xmlns:label="skins.skin.label.*" 
									  xmlns:otros="skins.otros.*" 
									  xmlns:arrow="skins.skin.arrow.*"
									  width="100%" height="100%" 
									  titulo="VENTAS DEL PERIODO" titulo2="COMPARATIVA" 
									  >
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="600"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<mx:SolidColorStroke id = "sA" color="0x3b98af" weight="6"/>
		<mx:SolidColorStroke id = "sB" color="0x666666" weight="4"/>
		<mx:SolidColorStroke id = "sC" color="0x660099" weight="2"/>
		<mx:SolidColorStroke id = "sD" color="0xCC9900" weight="2"/>
		<mx:SolidColorStroke id = "sE" color="0xCC3333" weight="2" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			
			
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			private var totalLegend1:Number = 0;
			private var totalLegend2:Number = 0;
			private var totalLegend3:Number = 0;
			private var totalLegend4:Number = 0;
			private var totalLegend5:Number = 0;
			
			private var _desempeno_0:Number = 0;
			private var _desempeno_1:Number = 0;
			private var _desempeno_2:Number = 0;
			private var _desempeno_3:Number = 0;
			private var _desempeno_4:Number = 0;
			private var _desempeno_5:Number = 0;
			private var _anio_0:Number = 0;
			private var _anio_1:Number = 0;
			private var _anio_2:Number = 0;
			private var _anio_3:Number = 0;
			private var _anio_4:Number = 0;
			private var _anio_5:Number = 0;
			private var _mesesTrabajados:Number = 0;
			private var _mesesActuales:Number = 0;
			private var fecha:Date = new Date();
			private var _valoresGrafica:ArrayCollection;
			
			public function set recibeLinealVentasPeriodo( $lista:ArrayCollection ):void{
				if($lista == null )
					return;
				_linealArrGrafica = ObjectUtil.copy($lista) as ArrayCollection;
				myChart1.dataProvider = iniciarGrafica( _linealArrGrafica );
			}
			
			private var _listaMensual:ArrayCollection = new ArrayCollection(["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"]);
			
			private var _listaQuincenal:ArrayCollection = new ArrayCollection([{11:"11",valor:"1ra. Enero"},{12:"12",valor:"2da. Enero"},{21:"21",valor:"1ra. Febrero"},{22:"22",valor:"2da. Febrero"},{31:"31",valor:"1ra. Marzo"},{32:"32",valor:"2da. Marzo"},{41:"41",valor:"1ra. Abril"},
				{42:"42",valor:"2da. Abril"},{51:"51",valor:"1ra. Mayo"},{52:"52",valor:"2da. Mayo"},{61:"61",valor:"1ra. Junio"},{62:"62",valor:"2da. Junio"},{71:"71",valor:"1ra. Julio"},{72:"72",valor:"2da. Julio"},{81:"81",valor:"1ra. Agosto"},{82:"82",valor:"2da. Agosto"},
				{91:"91",valor:"1ra. Septiembre"},{92:"92",valor:"2da. Septiembre"},{101:"101",valor:"1ra. Octubre"},{102:"102",valor:"2da. Octubre"},{111:"111",valor:"1ra. Noviembre"},{112:"112",valor:"2da. Noviembre"},{121:"121",valor:"1ra. Diciembre"},{122:"122",valor:"2da. Diciembre"}]);
			
			
			private function iniciarGrafica( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				if(_event != null)
				{
					totalLegend1 = 0;
					totalLegend2 = 0;
					totalLegend3 = 0;
					totalLegend4 = 0;
					totalLegend5 = 0;
					var m:int = 0;
					var objeto:Object;
					var cuenta:int = 1;
					arrReturn.addItem( new Object() );
					var resumen:ResumenConsulta;
					var mes:Number = fecha.month + 1;
					_desempeno_0 = 0;
					_desempeno_1 = 0;
					_desempeno_2 = 0;
					_desempeno_3 = 0;
					_desempeno_4 = 0;
					_desempeno_5 = 0;
					
					
					
					if(_event.parametros.periodo.toLowerCase() == "quincenal")
					{
						while(cuenta < 24)
						{
							objeto = new Object();
							objeto.numeroMes = cuenta;
							objeto.mes = _listaQuincenal[cuenta -1].valor;
							objeto.montoUSD_0 = 0;
							objeto.montoUSD_1 = 0;
							objeto.montoUSD_2 = 0;
							objeto.montoUSD_3 = 0;
							objeto.montoUSD_4 = 0;
							
							for( m = 0; m < $lista.length;m++ )
							{
								resumen = $lista[m] as ResumenConsulta;
								if(cuenta == resumen.mes)
								{
									if( resumen.etiqueta == "VENTAS_0" || resumen.etiqueta == "NOTA_0" )
									{
										objeto.montoUSD_0 += resumen.total;
										totalLegend1 += resumen.total;
										_desempeno_0 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_1" || resumen.etiqueta == "NOTA_1" )
									{
										objeto.montoUSD_1 += resumen.total;
										totalLegend2 += resumen.total;
										_desempeno_1 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_2" || resumen.etiqueta == "NOTA_2" )
									{
										objeto.montoUSD_2 += resumen.total;
										totalLegend3 += resumen.total;
										_desempeno_2 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_3" || resumen.etiqueta == "NOTA_3" )
									{
										objeto.montoUSD_3 += resumen.total;
										totalLegend4 += resumen.total;
										_desempeno_3 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_4" || resumen.etiqueta == "NOTA_4" )
									{
										objeto.montoUSD_4 += resumen.total;
										totalLegend5 += resumen.total;
										_desempeno_4 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_5" || resumen.etiqueta == "NOTA_5" )
									{
										_desempeno_5 += resumen.total;	
									}
								}
							}
							arrReturn.addItem(objeto);
							cuenta++;
						}
					}
					else 
					{
						while(cuenta < 13)
						{
							objeto = new Object();
							objeto.numeroMes = cuenta;
							objeto.mes = _listaMensual[cuenta -1];
							objeto.montoUSD_0 = 0;
							objeto.montoUSD_1 = 0;
							objeto.montoUSD_2 = 0;
							objeto.montoUSD_3 = 0;
							objeto.montoUSD_4 = 0;
							
							for( m = 0; m < $lista.length;m++ )
							{
								resumen = $lista[m] as ResumenConsulta;
								if(cuenta == resumen.mes)
								{
									if( resumen.etiqueta == "VENTAS_0" || resumen.etiqueta == "NOTA_0" )
									{
										objeto.montoUSD_0 += resumen.total;
										totalLegend1 += resumen.total;
										//if(_event.parametros.anio < fecha.fullYear|| resumen.mes < mes)
										{
											_desempeno_0 += resumen.total;	
											_mesesActuales = ObjectUtil.copy(resumen.mes) as int;
										}
									}
									else if( resumen.etiqueta == "VENTAS_1" || resumen.etiqueta == "NOTA_1" )
									{
										objeto.montoUSD_1 += resumen.total;
										totalLegend2 += resumen.total;
										_desempeno_1 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_2" || resumen.etiqueta == "NOTA_2" )
									{
										objeto.montoUSD_2 += resumen.total;
										totalLegend3 += resumen.total;
										_desempeno_2 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_3" || resumen.etiqueta == "NOTA_3" )
									{
										objeto.montoUSD_3 += resumen.total;
										totalLegend4 += resumen.total;
										_desempeno_3 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_4" || resumen.etiqueta == "NOTA_4" )
									{
										objeto.montoUSD_4 += resumen.total;
										totalLegend5 += resumen.total;
										_desempeno_4 += resumen.total;	
									}
									else if( resumen.etiqueta == "VENTAS_5" || resumen.etiqueta == "NOTA_5" )
									{
										_desempeno_5 += resumen.total;	
									}
								}
							}
							arrReturn.addItem(objeto);
							cuenta++;
						}
					}
					
					if(_anioFiltro == fecha.fullYear)
					{
						if (_mesesTrabajados > _maximoMeses)
						{
							_mesesTrabajados = _maximoMeses;
						}
						else
						{
							_mesesTrabajados =  _mesesActuales;
						}
					}
					else
					{
						_mesesTrabajados = _maximoMeses;
					}
					
					arrReturn.addItem( new Object() );
					establecerObjetivosPeriodos();
					
					lblPer1.text = _event.labelPeriodo1 + ' · $ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( totalLegend1 ) + ' ·';
					lblPer2.text = _event.labelPeriodo2 + ' · $ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( totalLegend2 ) + ' ·';
					lblPer3.text = _event.labelPeriodo3 + ' · $ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( totalLegend3 ) + ' .';
					//lblPer4.text = _event.labelPeriodo4 + ' · $ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( totalLegend4 ) + ' .';
					//lblPer5.text = _event.labelPeriodo5 + ' · $ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( totalLegend5 ) ;
					
					var crecimientoActual:Number = comparaPeriodos( totalLegend1, totalLegend2 );
					var crecimientoPasado:Number = comparaPeriodos( totalLegend2, totalLegend3 );
					var crecimientoPosPasado:Number = comparaPeriodos( totalLegend3, totalLegend4 );
					var crecimientoUltraPasado:Number = comparaPeriodos( totalLegend4, totalLegend5 );
					
					var prefijo:String = (crecimientoActual > 0 ? '+': '' );
					if( crecimientoActual == 0 )
						prefijo = '';
					//tendencia1.text = prefijo + crecimientoActual.toString() + ' % ·';
					
					prefijo = (crecimientoPasado > 0 ? '+':  '' );
					if( crecimientoPasado == 0 )
						prefijo = '';
					//tendencia2.text = prefijo + crecimientoPasado.toString() + ' % ·';
					
					prefijo = (crecimientoPosPasado > 0 ? '+':  '' );
					if( crecimientoPosPasado == 0 )
						prefijo = '';
					//tendencia3.text = prefijo + crecimientoPosPasado.toString() + ' % ·';
					
					prefijo = (crecimientoUltraPasado > 0 ? '+':  '' );
					if( crecimientoUltraPasado == 0 )
						prefijo = '';
					//tendencia4.text = prefijo + crecimientoUltraPasado.toString() + ' % ·';
					
					var colorRojo:uint = uint('0x' + catalogoColores.LABEL_ROJO );
					var colorVerde:uint = uint('0x' + catalogoColores.LABEL_VERDE );
					
					/* tendencia1.setStyle('color', (crecimientoActual > 0 ? colorVerde: colorRojo ) );
					tendencia2.setStyle('color', (crecimientoPasado > 0 ? colorVerde: colorRojo ) );
					tendencia3.setStyle('color', (crecimientoPosPasado > 0 ? colorVerde: colorRojo ) );
					tendencia4.setStyle('color', (crecimientoUltraPasado > 0 ? colorVerde: colorRojo ) ); */
					/*  evaluo si el periodo actual es mayor que la media de los 2 anteriores */
					
					/* if( totalLegend1 > (totalLegend5 + totalLegend4 + totalLegend3 + totalLegend2) /4 )
					{
					imgTendencia.source = catalogoIconosEtiquetas.getInstance().etiquetas_verdeflecha;
					}
					else
					{
					imgTendencia.source = catalogoIconosEtiquetas.getInstance().etiquetas_rojoflecha;
					}
					if( totalLegend2 > (totalLegend5 + totalLegend4 + totalLegend3 ) /3 )
					{
					imgTendencia2.source = catalogoIconosEtiquetas.getInstance().etiquetas_verdeflecha;
					}else
					{
					imgTendencia2.source = catalogoIconosEtiquetas.getInstance().etiquetas_rojoflecha;
					}
					
					if( totalLegend3 > (totalLegend5 + totalLegend4 ) / 2 )
					{
					imgTendencia3.source = catalogoIconosEtiquetas.getInstance().etiquetas_verdeflecha;
					}else
					{
					imgTendencia3.source = catalogoIconosEtiquetas.getInstance().etiquetas_rojoflecha;
					}
					
					if( totalLegend4 > (totalLegend5 )  )
					{
					imgTendencia4.source = catalogoIconosEtiquetas.getInstance().etiquetas_verdeflecha;
					}else
					{
					imgTendencia4.source = catalogoIconosEtiquetas.getInstance().etiquetas_rojoflecha;
					} */
				}
				
				return arrReturn;
			}
			
			private function establecerObjetivosPeriodos():void
			{
				var _meses:Number = _maximoMeses == 0 ? 1:_maximoMeses;
				var promFacPer_0:Number = _desempeno_0 / (_mesesTrabajados == 0 ? 1:_mesesTrabajados);
				var promFacPer_1:Number = _desempeno_1 / _meses;
				var promFacPer_2:Number = _desempeno_2 / _meses;
				var promFacPer_3:Number = _desempeno_3 / _meses;
				var promFacPer_4:Number = _desempeno_4 / _meses;
				var promFacPer_5:Number = _desempeno_5 / _meses;
				var proyecPeriodo_0:Number = (promFacPer_0 * _meses);
				var proyecPeriodo_1:Number = (promFacPer_1 * _meses);
				var proyecPeriodo_2:Number = (promFacPer_2 * _meses);
				var proyecPeriodo_3:Number = (promFacPer_3 * _meses);
				var proyecPeriodo_4:Number = (promFacPer_4 * _meses);
				var proyecPeriodo_5:Number = (promFacPer_5 * _meses);
				var obj:Object = new Object();
				_valoresGrafica = new ArrayCollection();
				
				lblAnio_0.text = (_anioFiltro).toString();
				lblDesempenoPeriodo_0.text =  "US $"+ UtilsFormatosNumericos.precisionADosDecimalesConComas(_desempeno_0);
				lblPromedioFactPeriodo_0.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(promFacPer_0);
				lblDiferencial_0.text =   UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_0/promFacPer_1)-1)*100).toString()+"%";
				lblProyecPeriodo_0.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(proyecPeriodo_0);
				lblProyecCrecimiento_0.text = UtilsFormatosNumericos.precisionADosDecimales(((proyecPeriodo_0/_desempeno_1)-1)*100).toString()+"%";
				
				
				lblAnio_1.text = (_anioFiltro-1).toString();
				lblDesempenoPeriodo_1.text =  "US $"+ UtilsFormatosNumericos.precisionADosDecimalesConComas(_desempeno_1);
				lblPromedioFactPeriodo_1.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(promFacPer_1);
				lblDiferencial_1.text =   UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_1/promFacPer_2)-1)*100).toString()+"%";
				lblProyecPeriodo_1.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(proyecPeriodo_1);
				lblProyecCrecimiento_1.text = UtilsFormatosNumericos.precisionADosDecimales(((proyecPeriodo_1/_desempeno_2)-1)*100).toString()+"%";
				
				lblAnio_2.text = (_anioFiltro-2).toString();
				lblDesempenoPeriodo_2.text =  "US $"+ UtilsFormatosNumericos.precisionADosDecimalesConComas(_desempeno_2);
				lblPromedioFactPeriodo_2.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(promFacPer_2);
				lblDiferencial_2.text =   UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_2/promFacPer_3)-1)*100).toString()+"%";
				lblProyecPeriodo_2.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(proyecPeriodo_2);
				lblProyecCrecimiento_2.text = UtilsFormatosNumericos.precisionADosDecimales(((proyecPeriodo_2/_desempeno_3)-1)*100).toString()+"%";
				
				lblAnio_3.text = (_anioFiltro-3).toString();
				lblDesempenoPeriodo_3.text =  "US $"+ UtilsFormatosNumericos.precisionADosDecimalesConComas(_desempeno_3);
				lblPromedioFactPeriodo_3.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(promFacPer_3);
				lblDiferencial_3.text =   UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_3/promFacPer_4)-1)*100).toString()+"%";
				lblProyecPeriodo_3.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(proyecPeriodo_3);
				lblProyecCrecimiento_3.text = UtilsFormatosNumericos.precisionADosDecimales(((proyecPeriodo_3/_desempeno_4)-1)*100).toString()+"%";
				
				lblAnio_4.text = (_anioFiltro-4).toString();
				lblDesempenoPeriodo_4.text =  "US $"+ UtilsFormatosNumericos.precisionADosDecimalesConComas(_desempeno_4);
				lblPromedioFactPeriodo_4.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(promFacPer_4);
				//lblDiferencial_4.text =  "ND";
				lblDiferencial_4.text =  promFacPer_5 == 0 ? "ND" : UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_4/promFacPer_5)-1)*100).toString()+"%";
				lblProyecPeriodo_4.text = "US $" + UtilsFormatosNumericos.precisionADosDecimalesConComas(proyecPeriodo_4);
				lblProyecCrecimiento_4.text = "ND";
				
				
				_valoresGrafica.addItem(new Object);
				
				obj = new Object();
				obj.anio = lblAnio_4.text;
				obj.monto = promFacPer_5 == 0 ? 0 : UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_4/promFacPer_5)-1)*100);
				obj.posicion = "";
				obj.valor = UtilsFormatosNumericos.precisionADosDecimales(_desempeno_4);
				_valoresGrafica.addItem(obj);
				
				obj = new Object();
				obj.anio = lblAnio_3.text;
				obj.monto = UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_3/promFacPer_4)-1)*100);
				obj.valor = UtilsFormatosNumericos.precisionADosDecimales(_desempeno_3);
				_valoresGrafica.addItem(obj);
				
				obj = new Object();
				obj.anio = lblAnio_2.text;
				obj.monto = UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_2/promFacPer_3)-1)*100);
				obj.valor = UtilsFormatosNumericos.precisionADosDecimales(_desempeno_2);
				_valoresGrafica.addItem(obj);
				
				obj = new Object();
				obj.anio = lblAnio_1.text;
				obj.monto = UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_1/promFacPer_2)-1)*100);
				obj.posicion = "origen";
				obj.valor = UtilsFormatosNumericos.precisionADosDecimales(_desempeno_1);
				_valoresGrafica.addItem(obj);
				
				obj = new Object();
				obj.anio = lblAnio_0.text;
				obj.monto = UtilsFormatosNumericos.precisionADosDecimales(((promFacPer_0/promFacPer_1)-1)*100);
				obj.posicion = "ultimo";
				obj.valor = UtilsFormatosNumericos.precisionADosDecimales(_desempeno_0);
				_valoresGrafica.addItem(obj);
				
				_valoresGrafica.addItem(new Object);
				
				graficasTendencias.recibeDatosGrafica(_valoresGrafica);
				lblPeriodo_0.text = obtenerMes(_minimoMeses).toUpperCase()+" - "+obtenerMes(_mesesTrabajados).toUpperCase();
				
			}
			
			public function obtenerMes($mes:Number):String
			{
				var valor:String="";
				switch($mes)
				{
					case 1:	{valor ="ENERO"; break;}
					case 2:	{valor ="FEBRERO"; break;}
					case 3:	{valor ="MARZO"; break;}
					case 4:	{valor ="ABRIL"; break;}
					case 5:	{valor ="MAYO";	break;}
					case 6:	{valor ="JUNIO"; break;}
					case 7:	{valor ="JULIO"; break;}
					case 8:	{valor ="AGOSTO"; break;}
					case 9:	{valor ="SEPTIEMBRE"; break;}
					case 10:{valor ="OCTUBRE"; break;}
					case 11:{valor ="NOVIEMBRE"; break;}
					case 12:{valor ="DICIEMBRE"; break;}
				}
				return valor;
			}
			
			protected function comparaPeriodos( $current:Number, $previo:Number ):Number
			{
				var porcentaje:Number = 0;
				
				if ($current == 0 && $previo==0){
					porcentaje = 0;
				}else{
					var _valor:Number = $previo == 0 ? 1 : $previo;
					porcentaje = ( ($current * 100 ) / _valor ) - 100;
					trace( porcentaje.toString() );
					if( porcentaje == Infinity || porcentaje == -Infinity || isNaN(Number(porcentaje)) )
						porcentaje = 0;
					return Math.round( porcentaje );
				}
				return Math.round( porcentaje );
			}
			
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			private var _anioFiltro:Number;
			
			public function set recibirFiltros( $event:EventoTableroClientes ):void{
				if( $event == null )
					return;
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				_anioFiltro = _event.parametros.anio;
				lblPer1.text = _event.labelPeriodo1;
				lblPeriodo_1.text = lblPer2.text = _event.parametros.periodo.toUpperCase();
				lblPeriodo_2.text = lblPer3.text = _event.parametros.periodo.toUpperCase();
				lblPeriodo_3.text = _event.parametros.periodo.toUpperCase();
				lblPeriodo_4.text =_event.parametros.periodo.toUpperCase();
				var Lineal:int = _event.parametros.lineal;
				
				myChart1.dataProvider = iniciarGrafica( _linealArrGrafica );
			}
			
			public function set recibirFiltrosIndividual( $event:EventoTableroClientes ):void{
				if( $event == null )
					return;
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				_anioFiltro = _event.parametros.anio;
				lblPer1.text = _event.labelPeriodo1;
				lblPeriodo_1.text = lblPer2.text = _event.parametros.periodo.toUpperCase();
				lblPeriodo_2.text = lblPer3.text = _event.parametros.periodo.toUpperCase();
				lblPeriodo_3.text =  _event.parametros.periodo.toUpperCase();
				lblPeriodo_4.text =  _event.parametros.periodo.toUpperCase();
				var Lineal:int = _event.parametros.lineal;
				
				myChart1.dataProvider = iniciarGrafica( _linealArrGrafica );
			}
			
			private function formateoEje($valor:Number, valorPrevio:Object, eje:Object):String{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String
			{
				var temp:String;
				
				if(_event && _event.parametros.periodo.toLowerCase() == "quincenal")
				{
					temp = _listaQuincenal[ int($etiqueta) -1 ].valor.toUpperCase();
				}
				else
				{
					temp = _listaMensual[ int($etiqueta) -1 ].toUpperCase();
				}
				return temp;
			}
			
			private function labelAxisFunc( $value:Object, $etiqueta:Object ):String
			{
				var temp:String;
				/* 				
				if(_event && _event.periodo.toLowerCase() == "quincenal")
				{
				temp = "";
				}
				else
				{ */
				temp = $etiqueta.toString().toUpperCase(); 
				/* } */
				
				return temp; 
			}
			
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}
			
			private var valoresGrafica:ArrayCollection = new ArrayCollection();
			public function guardarValores(valorX:Number, valorY:Number):void
			{
				var valor:Point = new Point();
				valor.x = valorX;
				valor.y = valorY;
				valoresGrafica.addItem(valor);
			}
			
			private var valoresX:Array = new Array();
			private var valoresY:Array = new Array();
			
			public function obtenerValoresOrigen():Point
			{
				var valor:Point = new Point();
				if(valoresGrafica.length > 2)
				{
					var posicion:Number = valoresGrafica.length;
					valor = valoresGrafica[posicion - 2];
				}
				return valor;
			}
			
			public function obtenerValoresFinal():Point
			{
				var valor:Point = new Point();
				if(valoresGrafica.length > 2)
				{
					var posicion:Number = valoresGrafica.length;
					valor = valoresGrafica[posicion - 1];
				}
				return valor;
			}
		]]>
	</fx:Script>
	<graficaPie:contenido>
		<!-- CHART COMPARACION -->
		<s:VGroup width="100%" height="100%" paddingTop="-15" >
			<!--<s:HGroup paddingLeft="10" >
			<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
			<s:fill>
			<s:SolidColor color="0x3b98af"/>
			</s:fill>		
			</s:Ellipse>
			<pq:TituloChartMaxTablero id="lblPer1" />
			<pq:TituloChartMaxTablero id="tendencia1" />
			<s:Image id="imgTendencia" />
			</s:HGroup>
			<s:HGroup paddingLeft="10" >
			<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
			<s:fill>
			<s:SolidColor color="0x666666"/>
			</s:fill>		
			</s:Ellipse>
			<pq:TituloChartMaxTablero id="lblPer2" />
			<pq:TituloChartMaxTablero id="tendencia2" />
			<s:Image id="imgTendencia2" />
			</s:HGroup>
			<s:HGroup paddingLeft="10" >
			<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
			<s:fill>
			<s:SolidColor color="0x660099"/>
			</s:fill>		
			</s:Ellipse>
			<pq:TituloChartMaxTablero id="lblPer3" />
			<pq:TituloChartMaxTablero id="tendencia3" />
			<s:Image id="imgTendencia3" />
			</s:HGroup>
			<s:HGroup paddingLeft="10" >
			<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
			<s:fill>
			<s:SolidColor color="0xCC9900"/>
			</s:fill>		
			</s:Ellipse>
			<pq:TituloChartMaxTablero id="lblPer4" />
			<pq:TituloChartMaxTablero id="tendencia4" />
			<s:Image id="imgTendencia4" />
			</s:HGroup>
			<s:HGroup paddingLeft="10" >
			<s:Ellipse width="10" height="10" horizontalCenter="0" verticalCenter="0" depth="50">
			<s:fill>
			<s:SolidColor color="0xCC3333"/>
			</s:fill>		
			</s:Ellipse>
			<pq:TituloChartMaxTablero id="lblPer5" />
			</s:HGroup>-->
			<s:HGroup width="100%" height="100%">
				
				
				<mx:LineChart height="100%" width="100%" id="myChart1"
							  mouseSensitivity="5" 
							  dataTipRenderer="{PeriodoToolTip}" 
							  showDataTips="true" 
							  showDataTipTargets="false"  
							  dataTipMode="single" 
							  paddingRight="30" paddingLeft="20" paddingTop="20"
							  seriesFilters="[]"
							  >
					<mx:series>
						<!-- CURRENT -->
						<mx:LineSeries yField="montoUSD_0" xField="numeroMes" form="segment" lineStroke="{sA}" width="100%" showDataEffect="{fxInterpolateIn}" />
						<mx:PlotSeries id="montoObjetivo1" yField="montoUSD_0" xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
							<mx:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer>
										<fx:Script>
											<![CDATA[
												import skins.catalogos.catalogoColores;
											]]>
										</fx:Script>
										<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
											<s:fill>
												<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
											</s:fill>		
										</s:Ellipse>
									</s:MXItemRenderer>
								</fx:Component>
							</mx:itemRenderer>
						</mx:PlotSeries>
						<!-- AYER -->
						<mx:LineSeries yField="montoUSD_1" xField="numeroMes" form="segment" lineStroke="{sB}" width="100%" showDataEffect="{fxInterpolateIn}" />
						<mx:PlotSeries id="montoObjetivo2" yField="montoUSD_1" xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
							<mx:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer>
										<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
											<s:fill>
												<s:SolidColor color="0x666666"/>
											</s:fill>		
										</s:Ellipse>
									</s:MXItemRenderer>
								</fx:Component>
							</mx:itemRenderer>
						</mx:PlotSeries>
						<!-- PASADO -->
						<mx:LineSeries yField="montoUSD_2" xField="numeroMes" form="segment" lineStroke="{sC}" width="100%" showDataEffect="{fxInterpolateIn}" />
						<mx:PlotSeries id="montoObjetivo3" yField="montoUSD_2" xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
							<mx:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer>
										<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
											<s:fill>
												<s:SolidColor color="0xBABABA"/>
											</s:fill>		
										</s:Ellipse>
									</s:MXItemRenderer>
								</fx:Component>
							</mx:itemRenderer>
						</mx:PlotSeries>
						<!-- POSPASADO -->
						<mx:LineSeries yField="montoUSD_3" xField="numeroMes" form="segment" lineStroke="{sD}" width="100%" showDataEffect="{fxInterpolateIn}" />
						<mx:PlotSeries id="montoObjetivo4" yField="montoUSD_3" xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
							<mx:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer>
										<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
											<s:fill>
												<s:SolidColor color="0xBABABA"/>
											</s:fill>		
										</s:Ellipse>
									</s:MXItemRenderer>
								</fx:Component>
							</mx:itemRenderer>
						</mx:PlotSeries>
						<!-- ULTRAPASADO -->
						<mx:LineSeries yField="montoUSD_4" xField="numeroMes" form="segment" lineStroke="{sE}" width="100%" showDataEffect="{fxInterpolateIn}" />
						<mx:PlotSeries id="montoObjetivo5" yField="montoUSD_4" xField="numeroMes" displayName="Ventas" width="100%" showDataEffect="{fxInterpolateIn}">
							<mx:itemRenderer>
								<fx:Component>
									<s:MXItemRenderer>
										<s:Ellipse width="8" height="8" horizontalCenter="0" verticalCenter="0" depth="50">
											<s:fill>
												<s:SolidColor color="0xBABABA"/>
											</s:fill>		
										</s:Ellipse>
									</s:MXItemRenderer>	
								</fx:Component>
							</mx:itemRenderer>
						</mx:PlotSeries>
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="ventasMes" categoryField="numeroMes"  />
					</mx:horizontalAxis>
					<mx:horizontalAxisRenderers>
						<mx:AxisRenderer axis="{ventasMes}" axisStroke="{trazoGruezo}" tickPlacement="none" showLine="true" showLabels="true" 
										 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction" />
					</mx:horizontalAxisRenderers>
					<mx:verticalAxis>
						<mx:LinearAxis id="ventasDLS1" labelFunction="formateoEje" autoAdjust="false" padding="1"  minimum="0"/>
					</mx:verticalAxis>
					<mx:verticalAxisRenderers>
						<mx:AxisRenderer axis="{ventasDLS1}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels"/>
					</mx:verticalAxisRenderers>
				</mx:LineChart>
				
				<graf:PeriodoMax_GraficaTendencias id="graficasTendencias" width="100%" height="100%" />
				
			</s:HGroup>
		</s:VGroup>
	</graficaPie:contenido>
	
</comun:ContenedorComparacionVentasPer>