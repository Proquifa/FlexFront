<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 xmlns:vista="vista.*" xmlns:mapa="vista.mapa.*"
		 creationComplete="init(event)"
		 >
	
	<fx:Declarations>
		<mapa:MapaAsginarSprint />
		<mapa:MapaVentasGV />
		<mapa:MapaRealizarDailyScrum />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import vista.AsignarSprintGV.VistaAsignarSprint;
			import vista.ev_RealizarDailyScrum.VistaRealizarDailyScrum;
			import vista.evento.EventoAsignarSprint;
			import vista.evento.EventoRealizarDailyScrum;
			import vista.evento.EventoVentasGV;
			
			[Bindable] 
			private var listaPendiente:ArrayCollection = new ArrayCollection([
				{pendiente:'Asginar Sprint',conteo:0, subMenu:false,submenu3:false, tipo:'asignarSprint',sprint:false},
				{pendiente:'Realizar Daily Scrum',conteo:0, subMenu:false,submenu3:false, tipo:'realizarDailyScrum',sprint:true}
			]);
			
			private var asignarSprint:VistaAsignarSprint;
			private var realizarDailyScrum:VistaRealizarDailyScrum;
			
			protected function plantilla_pendienteSeleccionadoHandler(event:vista.evento.EventoVentasGV):void
			{
				switch(event.pendiente)
				{
					case "asignarSprint":
					{
						if (!asignarSprint)
							asignarSprint = new VistaAsignarSprint();
						plantilla.agregarContenido(asignarSprint);
						var evento:EventoAsignarSprint = new EventoAsignarSprint(EventoAsignarSprint.OBTENER_VISITAS_ASIGNAR_SPRINT);
						dispatchEvent(evento);
						break;
					}
					case "realizarDailyScrum":
					{
						if (!realizarDailyScrum)
							realizarDailyScrum = new VistaRealizarDailyScrum();
						plantilla.agregarContenido(realizarDailyScrum);
						var eventRDS:EventoRealizarDailyScrum = new EventoRealizarDailyScrum(EventoRealizarDailyScrum.OBTENER_TODAS_VISITAS);
						dispatchEvent(eventRDS);
						break;
					}
					
				}
				dispatchEvent(new Event("recargarPendientes",true));
			}
			
			protected function init(evento:FlexEvent):void
			{
				addEventListener("recargarPendientes",recargarContadorPendientes,false,0,true);
				plantilla.listaPendientes = listaPendiente;
				obtenerPendientes();
			}
			
			private function obtenerPendientes():void
			{
				/*var eventComprador:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.CARGAR_NUMERO_PENDIENTES_MENU);
				eventComprador.usuario = DatosGlobales.getInstance()._usuario.usuario;
				eventComprador.rol = "";
				dispatchEvent(eventComprador);
				
				var event:EventoComprasCompradorMaster = new EventoComprasCompradorMaster(EventoComprasCompradorMaster.CARGAR_NUMERO_PENDIENTES_MENU);
				event.usuario = DatosGlobales.getInstance()._usuario.usuario;
				event.rol = "";
				event.empleado = DatosGlobales.getInstance()._usuario;
				dispatchEvent(event);*/
				
				/*addEventListener(EventoGestorCompras.CARGAR_PENDIENTE_MENU, plantilla_pendienteSeleccionadoHandler);*/
				
				var eventoPendientes:EventoVentasGV = new EventoVentasGV(EventoVentasGV.OBTENER_CONTADOR_PENDIENTES);
				eventoPendientes.usuario = DatosGlobales.getInstance()._usuario.clave;
				dispatchEvent(eventoPendientes);
			}
			
			private function recargarContadorPendientes(evt:Event):void
			{
				obtenerPendientes();
			}
			
			public function set recibeContadorVisitaCliente(pendientes:ArrayCollection):void
			{
				var listaAux:ArrayCollection = ObjectUtil.copy(listaPendiente) as ArrayCollection;
				for each (var object:Object in pendientes) 
				{
					if(object.pendiente == "asignarSprint")
						listaAux[0].conteo = object.valor;
					else if(object.pendiente == "numerpoSprint")
						listaAux[1].conteo = object.valor;
					
				}
				if(listaAux.length > 0){
					var indice:int = plantilla.lstPendientes.selectedIndex;
					plantilla.listaPendientes = listaAux;
					
					plantilla.lstPendientes.selectedIndex = indice;
				}
			}
			
		]]>
	</fx:Script>
	
	<vista:PlantillaVentasGV id="plantilla" width="100%" height="100%" listaPendientes="{listaPendiente}" pendienteSeleccionado="plantilla_pendienteSeleccionadoHandler(event)" />
</s:Group>
