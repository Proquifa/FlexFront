package skins.skin.graficas
{
	import com.asfusion.mate.core.mate;
	
	import flash.display.Sprite;
	import flash.events.MouseEvent;
	import flash.filters.BitmapFilterQuality;
	import flash.filters.DropShadowFilter;
	import flash.text.TextLineMetrics;
	import flash.utils.setTimeout;
	
	import mx.charts.HitData;
	import mx.charts.PieChart;
	import mx.charts.events.ChartItemEvent;
	import mx.charts.series.items.PieSeriesItem;
	import mx.collections.ArrayCollection;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
	import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
	import mx.core.ClassFactory;
	import mx.core.FlexGlobals;
	import mx.core.UIComponent;
	import mx.events.CollectionEvent;
	import mx.events.CollectionEventKind;
	import mx.events.FlexEvent;
	
	import spark.collections.Sort;
	import spark.collections.SortField;
	import spark.components.Image;
	import spark.components.Label;
	
	import flashx.textLayout.tlf_internal;
	
	import skins.catalogos.catalogoIconosBotones;
	
	[Event(name="clickImagen",type="flash.events.MouseEvent")]
	public class PieChartPqGris extends PieChart
	{
		private const _VACIO:String = "VOIDITEM"; //+ Math.random().toString();
		private const _SERIE_GRIS:String = "serieChartGris";
		private const _SERIE_NORMAL:String = "serieChartNormal";
		
		private var bCambiarSerie:Boolean = false;
		private var sSerieOrigen:String = "gris";
		private var _proposedSerie:String = "VACIO";
		
		private var bCambiarDataProvider:Boolean = false;
		private var _providerVacio:ArrayCollection = new ArrayCollection();
		private var _proposedDataProvider:ArrayCollection = null;
		
		private var _serieGris:pieSeriesGris = new pieSeriesGris();
		private var _serieOrigen:* = null;
		private var _fieeeld:String = "";
		private var _cambioProvTotales:Boolean = false;
		private var _vieneRollover:Boolean = false;
		
		private var _esConRealse:Boolean = false;
		private var _esConAutoseleccion:Boolean = false;
		private var _esConSombreadoCambioNormal:Boolean=false;
		
		private var _icono:String = "";
		
		private var _sinOver:Boolean = false;
		private var noQuitarOver:Boolean = false;
		
		//HandCursor
		private var _useCursorHand:Boolean = false;
		
		public function PieChartPqGris()
		{
			super();
			var item:Object = new Object();
			item.total = 10000;
			item.nombre = "";
			item.etiquetaEncabezado = _VACIO;
			item.etiqueta = _VACIO;
			_providerVacio.addItem( item );
			
			if( lineasHabilitadas ){
				addEventListener( ChartItemEvent.ITEM_ROLL_OVER, rollOverGrafica );
				addEventListener( ChartItemEvent.ITEM_ROLL_OUT, rollOutGrafica );
			}
			
			
			
			// todas las propiedades deben iniciar en -1, no son seteadas directamente en la clase debido a que puede generar conflictos al momento de hacer sumas o restas en otros desarrollos
			_resumenTotal.total = -1;
			_resumenTotal.monto = -1;
			_resumenTotal.totalClientes = -1;
			_resumenTotal.totalContactos = -1;
			_resumenTotal.totalProveedores = -1;
			_resumenTotal.totalPedidos = -1;
			_resumenTotal.partidas = -1;
			_resumenTotal.productos = -1;
			_resumenTotal.piezasTotal = -1;
			_resumenTotal.clientes = -1;
			_resumenTotal.clientes_proveedores = -1;
			_resumenTotal.provedorIndividual = -1;
			_resumenTotal.cotizacionesTotal = -1;
			_resumenTotal.factura = -1;
			_resumenTotal.totalFolios = -1;
			_resumenTotal.totalCompras = -1;
			_resumenTotal.totalCobros =-1;
			_resumenTotal.totalPagos =-1;
			_resumenTotal.totalDocumentos=-1;
			_resumenTotal.totalLlamadas = -1;
			_resumenTotal.totalEntregas = -1;
			_resumenTotal.totalTiempoRealizacion = -1;
			_resumenTotal.totalET = -1;
			_resumenTotal.totalFT = -1;
			_resumenTotal.urgenciaAlta = -1;
			_resumenTotal.urgenciaMedia = -1;
			_resumenTotal.urgenciaBaja = -1;
			_resumenTotal.totalPermisos = -1;
			_resumenTotal.rankingCliente = -1;
			_resumenTotal.rankingProveedor = -1;
			_resumenTotal.rankingTableroCliente = -1;
			_resumenTotal.registro = -1;
			_resumenTotal.noProductos = -1;
			_resumenTotal.totalColaboradores = -1;
			_resumenTotal.totalChecadas = -1;
			_resumenTotal.notaDeCredito = -1;
			_resumenTotal.totalAsistencia = -1;
			_resumenTotal.totalInasistencia = -1;
			_resumenTotal.totalCancelaciones = -1;
			_resumenTotal.totalIncidentes = -1;
			_resumenTotal.totalTiempoProceso = -1;
			_resumenTotal.totalMarcas = -1;
			_resumenTotal.total_fletera = -1;
			_resumenTotal.total_guias = -1;
			_resumenTotal.total_bultos = -1;
			_resumenTotal.total_arribadas = -1;
			_resumenTotal.total_porArribar= -1;
			
			_resumenTotal.totalIngresosPorcentaje = -1;
			_resumenTotal.totalComprasPorcentaje = -1;
			_resumenTotal.totalClientesPorcentaje = -1;
			_resumenTotal.totalProveedoresPorcentaje = -1;
			_resumenTotal.avisoCambios = -1;
			_resumenTotal.requisicion = -1;
			_resumenTotal.confirmaciones = -1;
			_resumenTotal.monitoreo = -1;
			_resumenTotal.inspeccion = -1;
			_resumenTotal.cierreRuta = -1;
			_resumenTotal.facturacion = -1;
			_resumenTotal.entregasTabOp = -1;
			_resumenTotal.cobro = -1;
			_resumenTotal.pago = -1;
			_resumenTotal.revision = -1;
			_resumenTotal.cargarFactura = -1;
			
			_resumenTotal.totalPacking = -1;
			_resumenTotal.totalCartaUso = -1;
			_resumenTotal.totalCertificado = -1;
			_resumenTotal.totalNafta = -1;
			_resumenTotal.totalfactura = -1;
			_resumenTotal.totalAdicional = -1;
			
			_resumenTotal.porcentajeDistribucion = -1;
			
			_resumenTotal.totalAgentesAduanales = -1;
			_resumenTotal.totalOrdenesDespacho = -1;
			_resumenTotal.totalAcuseRecibo = -1;
			_resumenTotal.totalSolicitudes = -1;
			_resumenTotal.noTipoTransito = -1;
			_resumenTotal.cantFamilia = -1;
			_resumenTotal.totalValorAduanal = -1;
			
			_resumenTotal.totalPedimentos = -1;
			_resumenTotal.activarRankingTableroProductos = -1;
			_resumenTotal.rankingTableroProductos = -1;
			_resumenTotal.ocompras = -1;
			_resumenTotal.tipoFletera = -1;
			_resumenTotal.totalFleteNormal = -1;
			_resumenTotal.totalFleteExpress = -1;
			_resumenTotal.tipoEntrega = -1;
			_resumenTotal.totalEntregaUnica = -1;
			_resumenTotal.totalEntregaProgramada = -1;
			_resumenTotal.totalVisita = -1;
			_resumenTotal.totalCRM = -1;
			_resumenTotal.numEjecutivoVentas = -1;
			_resumenTotal.totalCreditos = -1;
			_resumenTotal.totalValores = -1;
		}
		
		public function get resumenTotal():ResumenConsulta
		{
			return _resumenTotal;
		}
		
		public function set resumenTotal(value:ResumenConsulta):void
		{
			_resumenTotal = value;
		}
		
		private function itemclick_LISTENER(event:ChartItemEvent):void
		{
			var item:PieSeriesItem = event.hitData.chartItem as PieSeriesItem;
			item.element.filters = null;
			itemsAlpha(event.hitData); 
			
			if (icono != ""){
				image.visible = image.includeInLayout = true;
			}
			if (noQuitarOver){
				if( habilitarResumen ){
					var sItem:PieSeriesItem = event.hitData.chartItem as PieSeriesItem;
					if( sItem.item is ResumenConsulta ){
						var resumen:ResumenConsulta = sItem.item as ResumenConsulta;
						var stitulo:String = resumen.etiqueta + ' ' + sItem.percentValue.toFixed(2) + ' %';
						_vieneRollover = true;
						mostrarTotales( resumen, stitulo );
					}
				}
			}
			quitarOver();
		}
		
		private function quitarOver():void
		{
			if (sinOver)
			{
				removeEventListener( ChartItemEvent.ITEM_ROLL_OVER, rollOverGrafica );
				noQuitarOver = true;
			}
		}
		
		private function itemsAlpha(hitData:HitData):void
		{
			if(hitData.element is pieSeriesPqNet)
			{
				for each (var item:PieSeriesItem in (hitData.element as pieSeriesPqNet).items) 
				{
					if(item.itemRenderer)
					{
						if (hitData.chartItem.index != item.index){
							item.itemRenderer.alpha = 0.8;
							item.itemRenderer.filters = null;
						}
						else
						{
							item.itemRenderer.alpha = 1;
							var filters:Array = new Array();
							filters.push(shadow(item));
							item.itemRenderer.filters = filters; 
						}
					}
				}
			}
		}
		
		private function shadow(item:PieSeriesItem):DropShadowFilter{
			var distance:Number = 5;
			var color:Number = 0x525252;
			var alpha:Number = 1;
			var blurX:Number = 6;
			var blurY:Number = 6;
			var strength:Number = 1;
			var quality:Number = BitmapFilterQuality.HIGH;
			var inner:Boolean = false;
			var knockout:Boolean = false;
			
			var total:Number = 0;
			for (var i:int = 0; i < item.index; i++) 
			{
				var item1:PieSeriesItem = (item.element as pieSeriesPqNet).items[i];
				total += item1.percentValue;
			}
			total += ((item.element as pieSeriesPqNet).items[i] as PieSeriesItem).percentValue/2;
			
			var angle:Number = 190 - ((total * 360 )/100) ;
			
			var dropShadow:DropShadowFilter = new DropShadowFilter(distance,angle,color,alpha,
				blurX,blurY,strength,quality,inner,knockout);
			
			return dropShadow;
		}
		
		/**
		 * Esta propiedad sirve para mostrar las lineas que van hacia el centro del chart. 
		 * Para agregar informacion al chart revise las siguientes propiedades: etiquetasHabilitadas:Bool y etiquetasSiempreVisibles:Bool 
		 */
		public function get lineasHabilitadas():Boolean
		{
			return _lineasHabilitadas;
		}
		
		public function set lineasHabilitadas(value:Boolean):void
		{
			_lineasHabilitadas = value;
			if( value ){
				addEventListener( ChartItemEvent.ITEM_ROLL_OVER, rollOverGrafica );
				addEventListener( ChartItemEvent.ITEM_ROLL_OUT, rollOutGrafica );
				
			}else{
				removeEventListener( ChartItemEvent.ITEM_ROLL_OVER, rollOverGrafica );
				removeEventListener( ChartItemEvent.ITEM_ROLL_OUT, rollOutGrafica );
			}
		}
		
		
		private var yOrigen:Number = 0;
		private var yValorCero:Number = 0;
		private var xValorCero:Number = 0;
		
		override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void{
			super.updateDisplayList( unscaledWidth, unscaledHeight );
			/* llamo este metodo en caso de que el dataProvider sea una variable Bindable*/
			commitProvider();
			
			var xOrigen:Number = unscaledWidth/2;
			yOrigen = unscaledHeight/2;
			
			//Resumen
			measureTextWidthAndResizeComponent( lblDataTip.text, lblDataTip);
			lblDataTip.x = xOrigen - ( lblDataTip.width/2 ) + 0;
			lblDataTip.y = yOrigen - (lblDataTip.measuredHeight/2) - 5;
			yValorCero = yOrigen - (lblDataTip.measuredHeight/2) - 5;
			//Titulo
			measureTextWidthAndResizeComponent( lblDataTipBold.text, lblDataTipBold, true);
			lblDataTipBold.x = xOrigen - lblDataTipBold.width/2;
			
			lblDataTipBold.y = lblDataTip.y - 10;
			
			var small:Number = (yOrigen + lblDataTip.measuredHeight/2);
			var big:Number = (yOrigen + yOrigen/6)
			if ( small >= big )
				image.y = yOrigen + lblDataTip.measuredHeight/2 + 2;
			else
				image.y = yOrigen + yOrigen/6;
			
			image.x = xOrigen - image.width/2;
			
			//Se toma el lado mas pequeño
			if( unscaledWidth < 300 || unscaledHeight < 300 ){
				var innerRad:Number;
				if (unscaledWidth <= unscaledHeight )
					innerRad = 0.5 + (( 300 - unscaledWidth ) * 0.2)/ 100;
				else
					innerRad = 0.5 + (( 300 - unscaledHeight ) * 0.2)/ 100;
				
				setStyle( 'innerRadius', innerRad );
				lblDataTip.styleName = "titulo_HelveticaRegular_10_chart";
				lblDataTipBold.styleName = "titulo_HelveticaRegular_10_chart";
				/*lblDataTip.styleName = "text_Helvetica_10_chart";
				lblDataTipBold.styleName = "titulo_Helvetica_10_chart";*/
			}else{
				setStyle( 'innerRadius', 0.5 );
				lblDataTip.styleName = "titulo_HelveticaRegular_10_chart";
				lblDataTipBold.styleName = "titulo_HelveticaRegular_10_chart";
				/*lblDataTip.styleName = "text_Helvetica_11_chart";
				lblDataTipBold.styleName = "titulo_Helvetica_11_chart";*/
			}
			rollOutGrafica( null );
			if( fondoCircular ){
				/* al parecer la medida mas cercana al tamaño real del chart es el de la serie (width, height), por lo tanto tomo el valor mas pequeño de dicha serie */
				var ladoMasCorto:Number = series[0].width < series[0].height ? series[0].width: series[0].height;
				var radioChart:Number = ( ladoMasCorto/2 - 15 ) + fondoCircularRadius;
				
				if( _fondoCirculo != null )
					removeChild( _fondoCirculo );
				_fondoCirculo = new Sprite();
				_fondoCirculo.graphics.beginFill( fondoCircularColor, 1 );
				
				_fondoCirculo.graphics.drawCircle( xOrigen, yOrigen, radioChart );
				_fondoCirculo.graphics.endFill();
				addChildAt( _fondoCirculo, 0 );
			}
		}
		
		//		BLOQUE SERIE GRIS
		override public function set dataProvider(value:Object):void
		{
			value.removeEventListener( CollectionEvent.COLLECTION_CHANGE, dataProviderChangedHandler );
			value.addEventListener( CollectionEvent.COLLECTION_CHANGE, dataProviderChangedHandler );
			//		seteamos la serie de origen que podria ser normal o versus
			if( series != null && series.length > 0 && !(series[0] is pieSeriesGris) &&  _serieOrigen == null ){
				if( series[0] is pieSeriesPqNet ){
					if( sSerieOrigen == "gris" )	sSerieOrigen = "normal";
					_serieOrigen = new pieSeriesPqNet();
				}else if( series[0] is pieSeriesVS ){
					if( sSerieOrigen == "gris" )	sSerieOrigen = "vs";
					_serieOrigen = new pieSeriesVS();
				}else if( series[0] is pieSeriesPqNetPrioridades ){
					if( sSerieOrigen == "gris" )	sSerieOrigen = "prioridad";
					_serieOrigen = new pieSeriesPqNetPrioridades();
				}else if( series[0] is pieSeriesPqNetPrioridad1 ){
					if( sSerieOrigen == "gris" )	sSerieOrigen = "prioridad1";
					_serieOrigen = new pieSeriesPqNetPrioridad1();
				}else if( series[0] is pieSeriesPqNetPrioridad2 ){
					if( sSerieOrigen == "gris" )	sSerieOrigen = "prioridad2";
					_serieOrigen = new pieSeriesPqNetPrioridad2();
				}else if( series[0] is pieSeriesPqNetPrioridad3 ){
					if( sSerieOrigen == "gris" )	sSerieOrigen = "prioridad3";
					_serieOrigen = new pieSeriesPqNetPrioridad3();
				}
				_serieOrigen = series[0];
				_serieOrigen.field = _fieeeld = series[0].field;
			}
			// se evalua si el campo conteo/total/cantidad  en el provider da como resultado algo mayor de 0, en caso contrario se setea la serie gris y se declara un arreglo de 1 item para el vacio
			var campoStr:String;
			if( _serieOrigen != null )
				campoStr = _serieOrigen.field;
			
			if( checarTotalField(value as ArrayCollection, campoStr )
				|| checarTotalField(_proposedDataProvider, campoStr ) ){// el provider esta lleno y la suma de su field es mayor de 0
				_proposedSerie = _SERIE_NORMAL;
				
			}
			else{
				// la suma del field dio 0 entonces debemos aplicar la serie gris
				_proposedSerie = _SERIE_GRIS;
				value = _providerVacio;
			}
			
			if( _proposedSerie == _SERIE_NORMAL && sSerieOrigen  != "vs" && sSerieOrigen != 'prioridad' && value is ArrayCollection )
			{
				if(_serieOrigen.nameField == "")
				{
					var numericDataSort:Sort = new Sort();
					numericDataSort.fields = [new SortField( _fieeeld, true )];
					value.sort = numericDataSort;
					value.refresh();
				}
			}
			
			commitSeries();
			super.dataProvider = value;
			
			if(esConAutoseleccion)
				setTimeout(selectedFirst,500);
			
		}
		
		
		private function selectedFirst():void
		{
			
			if (this.series[0] is pieSeriesPqNet && (this.series[0] as pieSeriesPqNet).items != null )
			{
				(this.series[0] as pieSeriesPqNet).filters = null;
				
				for each (var item:PieSeriesItem in (this.series[0] as pieSeriesPqNet).items) 
				{
					if (item.itemRenderer){
						if (0 != item.index){
							item.itemRenderer.alpha = 0.8;
							item.itemRenderer.filters = null;
						}
						else
						{
							item.itemRenderer.alpha = 1;
							var filters:Array = new Array();
							filters.push(shadow(item));
							item.itemRenderer.filters = filters; 
						}
					}
				}
			}
		}
		
		/**
		 * Este metodo solo aplica cuando el dataProvider es una variable del tipo ArrayCollection BINDABLE.
		 */
		private function dataProviderChangedHandler( $event:CollectionEvent ):void{
			if( $event.kind == CollectionEventKind.REFRESH
				|| $event.kind == CollectionEventKind.ADD ){
				var campoStr:String;
				if( _serieOrigen != null )
					campoStr = _serieOrigen.field;
				
				if( checarTotalField( $event.currentTarget as ArrayCollection, campoStr ) ){// el provider esta lleno y la suma de su field es mayor de 0
					_proposedSerie = _SERIE_NORMAL;
					_proposedDataProvider = $event.currentTarget as ArrayCollection;
					
					/* marco la bandera para cambiar el dataProvider en algun evento ADD o REFRESH del data binding*/
					bCambiarDataProvider = true;
				}else{// la suma del field dio 0 entonces debemos aplicar la serie gris
					_proposedSerie = _SERIE_GRIS;
				}
			}
		}
		
		override protected function commitProperties():void{
			super.commitProperties(); 
			
			if(!_esConSombreadoCambioNormal)
			{
				if(esConRealse)
					addEventListener(ChartItemEvent.ITEM_CLICK,itemclick_LISTENER);
				
				if(esConAutoseleccion)
				{
					if((this.series[0] is pieSeriesPqNet))
						(this.series[0] as pieSeriesPqNet).addEventListener(FlexEvent.UPDATE_COMPLETE,escucharSeries_UPDATE_COMPLETE_HANDLER);
				}
			}
		}
		
		private function escucharSeries_UPDATE_COMPLETE_HANDLER(e:FlexEvent):void
		{
			if(esConAutoseleccion)
			{
				selectedFirst();
				//trace("PieChartPqGris.escucharSeries_UPDATE_COMPLETE_HANDLER(e)");
			}
		}
		
		protected function commitProvider():void{
			if( bCambiarDataProvider ){
				if( _proposedDataProvider != null ){
					dataProvider = _proposedDataProvider;
					_proposedDataProvider = null;
				}
				commitSeries();
				bCambiarDataProvider = false;
			}
		}
		
		protected function commitSeries():void{
			if( _proposedSerie == _SERIE_NORMAL ){
				if( _serieOrigen != null && _fieeeld != "" && series.length > 0 ){
					if( sSerieOrigen == "normal" ){
						var newNormal:pieSeriesPqNet = new pieSeriesPqNet();
						newNormal.field = _fieeeld;
						series = [newNormal];
					}else if( sSerieOrigen == "vs" ){
						var newVS:pieSeriesVS = new pieSeriesVS();
						newVS.field = _fieeeld;
						series = [newVS];
					}else if( sSerieOrigen == "prioridad" ){
						var newPrioridad:pieSeriesPqNetPrioridades = new pieSeriesPqNetPrioridades();
						newPrioridad.field = _fieeeld;
						series = [newPrioridad];
					}else if( sSerieOrigen == "prioridad1" ){
						var newPrioridad1:pieSeriesPqNetPrioridad1 = new pieSeriesPqNetPrioridad1();
						newPrioridad1.field = _fieeeld;
						series = [newPrioridad1];
					}else if( sSerieOrigen == "prioridad2" ){
						var newPrioridad2:pieSeriesPqNetPrioridad2 = new pieSeriesPqNetPrioridad2();
						newPrioridad2.field = _fieeeld;
						series = [newPrioridad2];
					}else if( sSerieOrigen == "prioridad3" ){
						var newPrioridad3:pieSeriesPqNetPrioridad3 = new pieSeriesPqNetPrioridad3();
						newPrioridad3.field = _fieeeld;
						series = [newPrioridad3];
					}
				}
				mouseChildren = mouseEnabled = true;
			}else if( _proposedSerie == _SERIE_GRIS ){
				var newGris:pieSeriesGris = new pieSeriesGris();
				newGris.field = "total";
				series = [newGris];
				mouseChildren = mouseEnabled = false;
			}
		}
		
		private function checarTotalField( $data:ArrayCollection, $field:String ):Boolean{
			var total:Number = 0;
			if( $data != null && $data.length > 0 ){
				for( var f:int = 0; f < $data.length; f++ ){
					if( $data[f].hasOwnProperty( $field ) && $data[f][$field] != null )
						total += $data[f][$field];
					if( total > 0 ) return true;
				}
			}
			return false;
		}
		//		/BLOQUE SERIE GRIS
		//		LINEA OVER
		private var _lineasHabilitadas:Boolean = false;
		private var _linea:Sprite = null;
		private var _circulo:Sprite = null;
		
		public var fondoCircular:Boolean = false;
		public var fondoCircularRadius:Number = 10;
		private var _fondoCirculo:Sprite = null;
		public var fondoCircularColor:uint = 0xd9d9d9;
		
		protected function rollOutGrafica( event:ChartItemEvent = null ):void
		{
			//Quita HandCursor 
			this.useHandCursor = false;
			this.buttonMode = false;
			//this.mouseChildren = true;
			
			_vieneRollover = false;
			if( _linea != null){
				removeChild(_linea);
				removeChild(_circulo);
				_linea = null;
			}
			if ( !noQuitarOver )
			{
				if( etiquetasHabilitadas ){
					lblDataTipBold.visible = false;
					lblDataTip.visible = false;
				}
				mostrarResumen();
			}
		}
		
		protected function rollOverGrafica(event:ChartItemEvent):void
		{
			this.useHandCursor = useCursorHand;
			this.buttonMode = useCursorHand;
			//this.mouseChildren = !useCursorHand;
			
			if(_linea != null){
				removeChild(_linea);
				removeChild(_circulo);
				_linea = null;
			}
			_linea = new Sprite();
			_linea.graphics.lineStyle(3,0x424242,1);
			_linea.graphics.moveTo(event.hitData.x,event.hitData.y);
			var radioLinea:Number = 50; //( (event.currentTarget as PieChartPqGris).width/5);
			var xOrigen:Number = (event.currentTarget as PieChartPqGris).width/2;
			var yOrigen:Number = (event.currentTarget as PieChartPqGris).height/2;
			var catetoA:Number = yOrigen - event.hitData.y;
			var catetoC:Number = event.hitData.x - xOrigen;
			var tanAnguloRad:Number = (Math.atan( catetoA/catetoC ));
			var yVirtual:Number =(Math.sin( tanAnguloRad) *  radioLinea);
			var xVirtual:Number = (Math.cos( tanAnguloRad) *  radioLinea);
			var xNew:Number = catetoC > 0 ? xOrigen + xVirtual: xOrigen - xVirtual;
			yVirtual = yVirtual > 0 ? yVirtual: -1 * yVirtual;
			var yNew:Number = catetoA > 0 ? yOrigen - yVirtual: yOrigen + yVirtual;
			_linea.graphics.lineTo( xNew,  yNew);
			addChildAt(_linea, fondoCircular ? 3: 2 );
			_circulo = new Sprite();
			_circulo.graphics.beginFill(0x424242,1);
			_circulo.graphics.drawCircle(event.hitData.x, event.hitData.y, 5);	
			_circulo.graphics.endFill();
			addChild(_circulo);
			//
			if( etiquetasHabilitadas ){
				lblDataTipBold.visible = true;
				lblDataTip.visible = true;
			}
			if( habilitarResumen ){
				var sItem:PieSeriesItem = event.hitData.chartItem as PieSeriesItem;
				if( sItem.item is ResumenConsulta ){
					var resumen:ResumenConsulta = sItem.item as ResumenConsulta;
					var stitulo:String = resumen.etiqueta + ' ' + sItem.percentValue.toFixed(2) + ' %';
					_vieneRollover = true;
					mostrarTotales( resumen, stitulo );
					//invalidateDisplayList()
				}
			}
		}
		//		/LINEA OVER
		//		LABELS
		/**
		 * Esta propiedad solo muestra las etiquetas en el evento RollOver, la informacion debe ser inyectada desde vista. 
		 *  Ver etiquetasHabilitadas:Bool y lineasHabilitadas:Bool 
		 */
		public var etiquetasHabilitadas:Boolean = false;
		/**
		 * Si la propiedad es true entonces las etiquetas se muestran en todo momento y no se ocultan en el rollOut Event.
		 *  Ver etiquetasHabilitadas:Bool y lineasHabilitadas:Bool
		 */
		public var etiquetasSiempreVisibles:Boolean = false;
		public var lblDataTipBold:Label = null;
		public var lblDataTip:Label = null;
		public var image:Image = null;
		private var factorScale:int = 1;
		
		override protected function createChildren():void{
			super.createChildren();
			if(FlexGlobals.topLevelApplication.applicationDPI == 240)
			{
				factorScale = 2;
			}
			
			if( lblDataTipBold == null ){
				lblDataTipBold = new Label();
				lblDataTipBold.mouseEnabled = false;
				lblDataTipBold.percentWidth = 100;
				lblDataTipBold.height = 25 * factorScale;
				lblDataTipBold.maxDisplayedLines = 4;
				lblDataTipBold.styleName = "titulo_HelveticaRegular_10_chart";
				lblDataTipBold.setStyle("fontSize",fontTitulo);
				lblDataTipBold.visible = etiquetasSiempreVisibles;
				addChild( lblDataTipBold );
			}
			if( lblDataTip == null ){
				lblDataTip = new Label();
				lblDataTip.mouseEnabled = false;
				//lblDataTip.width = 150;
				lblDataTip.height = 85 * factorScale;
				
				try
				{
					if(this.parentApplication && this.parentApplication.applicationID && this.parentApplication.applicationID == 'ResponsableAE')
						lblDataTip.height = 60 * factorScale;
				} 
				catch(error:Error) 
				{
					trace(error);
				}
				
				//lblDataTip.minWidth = 130;
				lblDataTip.maxDisplayedLines = 7;
				lblDataTip.styleName = "titulo_HelveticaRegular_10_chart";
				lblDataTip.visible = etiquetasSiempreVisibles;
				addChild( lblDataTip );
			}
			
			if ( image == null ){
				image = new Image;
				image.visible = false;
				image.includeInLayout = false;
				if (icono != ""){
					image.source = catalogoIconosBotones.getInstance()[icono];
					image.addEventListener(MouseEvent.MOUSE_DOWN, clearSelected, true);
					image.addEventListener(MouseEvent.MOUSE_OVER, imageOver )
					image.addEventListener(MouseEvent.MOUSE_OUT, imageOut )
					
				}	
				else{
					image.removeEventListener(MouseEvent.MOUSE_DOWN, clearSelected,true);
					image.removeEventListener(MouseEvent.MOUSE_OVER, imageOver )
					image.removeEventListener(MouseEvent.MOUSE_OUT, imageOut )
				}
				image.height = 29;
				image.width = 43;
				image.depth = 0;
				addChild(image);
			}
		}
		
		[Bindable] private var fontTitulo:Number = 11;
		protected function measureTextWidthAndResizeComponent(text:String, container:UIComponent, titulo:Boolean = false):void
		{
			var _measuredWidth:Number = 0;
			var  _paddingLeft:uint = 0;
			var _paddingRight:uint = 0;
			var _horizontalGap:uint = 0;
			var _addedToWidth:int;
			if(text == null)
				return;
			if(text.length <= 1)
				return;
			_paddingLeft = container.getStyle("paddingLeft");
			_paddingRight = container.getStyle("paddingRight");
			_horizontalGap = container.getStyle("horizontalGap");
			_addedToWidth = int(_horizontalGap + _paddingLeft + _paddingRight);
			var lineMetrics:TextLineMetrics = container.measureText(findBigText(text));
			_measuredWidth = (lineMetrics.width + _addedToWidth) + 20;
			if( _measuredWidth < 120 )
				_measuredWidth = 100;
			if( _measuredWidth > width - 10 )
				_measuredWidth = width - 20;
			
			if (titulo){
				//Se toma el lado mas pequeño
				fontTitulo = (14 / _measuredWidth ) * width;
				
				
				if (width < 300 || height < 300 )
					_measuredWidth = 100;
				else if (width <= height && width < 780)
					_measuredWidth = (width / 2 ) - (width * .25);
				else if (height <= width && height < 780)
					_measuredWidth = (height / 2 ) - (height * .22);
				else if (width <= height)
					_measuredWidth = (width / 2 ) - (width * .15);
				else
					_measuredWidth = (height / 2) - (height * .15);
				
			}
			
			container.width = _measuredWidth;
		}
		
		private function findBigText(text:String):String{
			var bigText:String = "";
			if (text != null && text.length > 0){
				var array:Array = text.split("\n");
				for (var i:int = 0; i < array.length; i++) 
				{
					if (array[i].toString().length > bigText.length ){
						bigText = array[i].toString();
					}
				}
				
			}
			return bigText;
		}
		
		//		/LABELS
		//		FUNCIONES DE RESUMEN
		public var habilitarResumen:Boolean = false;
		private var _resumenTotal:ResumenConsulta = new ResumenConsulta();
		
		private function mostrarResumen():void{
			if( habilitarResumen ){
				lblDataTip.visible = true;
				lblDataTipBold.visible = true;
				if( _proposedSerie == _SERIE_GRIS ){
					mostrarTotales( _resumenTotal, _resumenTotal.etiquetaEncabezado==null ? "Totales" : _resumenTotal.etiquetaEncabezado);
					return;
				}
				if( dataProvider == null )
					return;
				var totalClientes:Number = 0;
				var totalContactos:Number = 0;
				var totalProveedores:Number = 0;
				var clientes:Number = 0;
				var clientes_proveedores:Number = 0;
				var provedorIndividual:Number = 0;
				var totalPedidos:Number = 0;
				var cotizacionesTotal:Number = 0;
				var factura:Number = 0;
				var partidas:Number = 0;
				var productos:Number = 0;
				var avisoCambios:Number = 0;
				var requisicion:Number = 0;
				var confirmaciones:Number = 0;
				var monitoreo:Number = 0;
				var inspeccion:Number = 0;
				var cierreRuta:Number = 0;
				var facturacion:Number = 0;
				var entregasTabOp:Number = 0;
				var cobro:Number = 0;
				var pago:Number = 0;
				var revision:Number = 0;
				var cargarFactura:Number = 0;
				var piezasTotal:Number = 0;
				var total:Number = 0;
				var monto:Number = 0;
				var totalFolios:Number = 0;
				var totalCompras:Number = 0;
				var totalCobros:Number =0;
				var totalPagos:Number =0;
				var totalDocumentos:Number =0;
				var totalLlamadas:Number =0;
				var totalEntregas:Number =0;
				var totalTiempoRealizacion:Number = 0;
				var totalET:Number = 0;
				var totalFT:Number = 0;
				var urgenciaAlta:Number = 0;
				var urgenciaMedia:Number = 0;
				var urgenciaBaja:Number = 0;
				var registro:Number = 0;
				var noProductos:Number = 0;
				var totalPermisos:Number = 0;
				var totalColaboradores:Number = 0;
				var totalChecadas:Number = 0;
				var notaDeCredito:Number = 0;
				var totalAsistencia:Number = 0;
				var totalInasistencia:Number = 0;
				var totalCancelaciones:Number = 0;
				var totalIncidentes:Number = 0;
				var totalTiempoProceso:Number = 0;
				var rankingCliente:Number = 0;
				var rankingProveedor:Number = 0;
				var rankingTableroCliente:Number = 0;
				var totalMarcas:Number = 0;
				var total_fletera:int = 0;
				var total_guias:int = 0;
				var total_bultos:int = 0;
				var total_arribadas:int = 0;
				var total_porArribar:int = 0;
				var totalPacking:Number = 0;
				var totalCartaUso:Number = 0;
				var totalCertificado:Number = 0;
				var totalNafta:Number = 0;
				var totalfactura:Number = 0;
				var totalAdicional:Number = 0;
				
				
				var totalIngresosPorcentaje:Number = 0;
				var totalComprasPorcentaje:Number = 0;
				var totalClientesPorcentaje:Number = 0;
				var totalProveedoresPorcentaje:Number = 0;
				var porcentajeDistribucion:Number = 0;
				
				var totalAgentesAduanales:Number = 0;
				var totalOrdenesDespacho:Number = 0;
				var totalAcuseRecibo:Number = 0;
				var totalSolicitudes:Number = 0;
				var noTipoTransito:Number = 0;
				var cantFamilia:Number = 0;
				var totalValorAduanal:Number = 0;
				
				var totalPedimentos:Number =0;
				var activarRankingTableroProductos:Number =0;
				var rankingTableroProductos:Number =0;
				var ocompras:Number =0;
				var tipoFletera:Number =0;
				var totalFleteNormal:Number =0;
				var totalFleteExpress:Number =0;
				var tipoEntrega:Number =0;
				var totalEntregaUnica:Number =0;
				var totalEntregaProgramada:Number =0;
				var totalVisita:Number =0;
				var totalCRM:Number =0;
				var numEjecutivoVentas:Number =0;
				var totalCreditos:Number =0;
				var totalValores:Number =0;
				
				for( var f:int = 0; f <  dataProvider.length; f++ ){
					/* valido si cItem tiene la propiedad que quiero sumar */
					var cItem:* = dataProvider[f];
					if( cItem.hasOwnProperty("totalClientes") )
						totalClientes += cItem.totalClientes;
					
					if( cItem.hasOwnProperty("clientes") )
					{
						if(totalCliente_Canc > 0)
						{
							clientes = totalCliente_Canc;
						}
						else
						{
							clientes += cItem.clientes;
						}
					}
					
					
					if (cambioProvTotales){
						if( cItem.hasOwnProperty("provedorIndividual") ){
							provedorIndividual = cItem.provedorIndividual;
						}
					}else{
						if( cItem.hasOwnProperty("clientes_proveedores") ){
							clientes_proveedores += cItem.clientes_proveedores;
						}
					}
					
					if( cItem.hasOwnProperty("totalProveedores") )
						totalProveedores += cItem.totalProveedores;
					if( cItem.hasOwnProperty("totalPedidos") )
						totalPedidos += cItem.totalPedidos;
					if( cItem.hasOwnProperty("cotizacionesTotal") )
						cotizacionesTotal += cItem.cotizacionesTotal;
					if( cItem.hasOwnProperty("totalCobros") )
						totalCobros += cItem.totalCobros;
					if( cItem.hasOwnProperty("totalPagos") )
						totalPagos += cItem.totalPagos;
					if( cItem.hasOwnProperty("totalDocumentos") )
						totalDocumentos += cItem.totalDocumentos;
					if( cItem.hasOwnProperty("totalLlamadas") )
						totalLlamadas += cItem.totalLlamadas;
					if( cItem.hasOwnProperty("factura") )
						factura += cItem.factura;
					if( cItem.hasOwnProperty("partidas") )
						partidas += cItem.partidas;
					if( cItem.hasOwnProperty("productos") )
						productos += cItem.productos;
					if( cItem.hasOwnProperty("avisoCambios") )
						avisoCambios += cItem.avisoCambios;
					if( cItem.hasOwnProperty("requisicion") )
						requisicion += cItem.requisicion;
					if( cItem.hasOwnProperty("confirmaciones") )
						confirmaciones += cItem.confirmaciones;
					if( cItem.hasOwnProperty("monitoreo") )
						monitoreo += cItem.monitoreo;
					if( cItem.hasOwnProperty("inspeccion") )
						inspeccion += cItem.inspeccion;
					if( cItem.hasOwnProperty("cierreRuta") )
						cierreRuta += cItem.cierreRuta;
					if( cItem.hasOwnProperty("facturacion") )
						facturacion += cItem.facturacion;
					if( cItem.hasOwnProperty("entregas") )
						entregasTabOp += cItem.entregasTabOp;
					if( cItem.hasOwnProperty("cobro") )
						cobro += cItem.cobro;
					if( cItem.hasOwnProperty("pago") )
						pago += cItem.pago;
					if( cItem.hasOwnProperty("revision") )
						revision += cItem.revision;
					if( cItem.hasOwnProperty("cargarFactura") )
						cargarFactura += cItem.cargarFactura;
					if( cItem.hasOwnProperty("piezasTotal") )
						piezasTotal += cItem.piezasTotal;
					if( cItem.hasOwnProperty("total") )
						total += cItem.total;
					if( cItem.hasOwnProperty("monto") )
						monto += cItem.monto;
					if( cItem.hasOwnProperty("totalFolios") )
						totalFolios += cItem.totalFolios;
					if( cItem.hasOwnProperty("totalCompras") )
						totalCompras += cItem.totalCompras;
					if( cItem.hasOwnProperty("totalEntregas") )
						totalEntregas += cItem.totalEntregas;
					if( cItem.hasOwnProperty("registro") )
						registro += cItem.registro;
					
					if( cItem.hasOwnProperty("noProductos") )
						noProductos += cItem.noProductos;
					
					if( cItem.hasOwnProperty("totalPermisos") )
						totalPermisos += cItem.totalPermisos;
					
					if( cItem.hasOwnProperty("totalTiempoRealizacion") )
						totalTiempoRealizacion += cItem.totalTiempoRealizacion;
					if( cItem.hasOwnProperty("totalET") )
						totalET += cItem.totalET;
					if( cItem.hasOwnProperty("totalFT") )
						totalFT += cItem.totalFT;
					if( cItem.hasOwnProperty("urgenciaAlta") )
						urgenciaAlta += cItem.urgenciaAlta;
					if( cItem.hasOwnProperty("urgenciaMedia") )
						urgenciaMedia += cItem.urgenciaMedia;
					if( cItem.hasOwnProperty("urgenciaBaja") )
						urgenciaBaja += cItem.urgenciaBaja;
					if( cItem.hasOwnProperty("totalColaboradores") ) 
						totalColaboradores = cItem.total;
					if( cItem.hasOwnProperty("totalChecadas") )
						totalChecadas += cItem.totalChecadas;
					if( cItem.hasOwnProperty("notaDeCredito") )
						notaDeCredito += cItem.notaDeCredito;
					
					if( cItem.hasOwnProperty("totalAsistencia") )
						totalAsistencia += cItem.totalAsistencia;
					if( cItem.hasOwnProperty("totalInasistencia") )
						totalInasistencia += cItem.totalInasistencia;
					
					if( cItem.hasOwnProperty("totalCancelaciones") )
						totalCancelaciones += cItem.totalCancelaciones;
					
					if( cItem.hasOwnProperty("totalIncidentes") )
						totalIncidentes += cItem.totalIncidentes;
					
					if( cItem.hasOwnProperty("totalTiempoProceso") )
						totalTiempoProceso += cItem.totalTiempoProceso;
					
					if( cItem.hasOwnProperty("totalIngresosPorcentaje") )
						totalIngresosPorcentaje += cItem.totalIngresosPorcentaje;
					
					if( cItem.hasOwnProperty("totalComprasPorcentaje") )
						totalComprasPorcentaje += cItem.totalComprasPorcentaje;
					
					if( cItem.hasOwnProperty("totalClientesPorcentaje") )
						totalClientesPorcentaje += cItem.totalClientesPorcentaje;
					
					if( cItem.hasOwnProperty("totalProveedoresPorcentaje") )
						totalProveedoresPorcentaje += cItem.totalProveedoresPorcentaje;
					
					if( cItem.hasOwnProperty("porcentajeDistribucion") )
						porcentajeDistribucion += cItem.porcentajeDistribucion;
					
					if( cItem.hasOwnProperty("rankingCliente") )
						rankingCliente = cItem.rankingCliente;
					
					if( cItem.hasOwnProperty("rankingProveedor") )
						rankingProveedor = cItem.rankingProveedor;
					
					if( cItem.hasOwnProperty("rankingTableroCliente") )
						rankingCliente = cItem.rankingTableroCliente;
					
					if( cItem.hasOwnProperty("totalMarcas") )
						totalMarcas += cItem.totalMarcas;
					
					if( cItem.hasOwnProperty("total_fletera") )
						total_fletera += cItem.total_fletera;
					
					if( cItem.hasOwnProperty("total_guias") )
						total_guias += cItem.total_guias;
					
					if( cItem.hasOwnProperty("total_bultos") )
						total_bultos += cItem.total_bultos;
					
					if( cItem.hasOwnProperty("total_arribadas") )
						total_arribadas += cItem.total_arribadas;
					
					if( cItem.hasOwnProperty("total_porArribar") )
						total_porArribar += cItem.total_porArribar;
					
					if( cItem.hasOwnProperty("totalPacking") )
						totalPacking += cItem.totalPacking;
					
					if( cItem.hasOwnProperty("totalCartaUso") )
						totalCartaUso += cItem.totalCartaUso;
					
					if( cItem.hasOwnProperty("totalCertificado") )
						totalCertificado += cItem.totalCertificado;
					
					if( cItem.hasOwnProperty("totalNafta") )
						totalNafta += cItem.totalNafta;
					
					if( cItem.hasOwnProperty("totalfactura") )
						totalfactura += cItem.totalfactura;
					
					if( cItem.hasOwnProperty("totalAdicional") )
						totalAdicional += cItem.totalAdicional;
					
					if( cItem.hasOwnProperty("totalAgentesAduanales") )
						totalAgentesAduanales += cItem.totalAgentesAduanales;
					
					if( cItem.hasOwnProperty("totalOrdenesDespacho") )
						totalOrdenesDespacho += cItem.totalOrdenesDespacho;
						
					if( cItem.hasOwnProperty("totalAcuseRecibo") )
						totalAcuseRecibo += cItem.totalAcuseRecibo;
					
					if( cItem.hasOwnProperty("totalSolicitudes") )
						totalSolicitudes += cItem.totalSolicitudes;
					
					if( cItem.hasOwnProperty("noTipoTransito") )
						noTipoTransito += cItem.noTipoTransito;
					
					if( cItem.hasOwnProperty("cantFamilia") )
						cantFamilia += cItem.cantFamilia;
					
					if( cItem.hasOwnProperty("totalValorAduanal") )
						totalValorAduanal += cItem.totalValorAduanal;
						
					if( cItem.hasOwnProperty("totalPedimentos") )
						totalPedimentos += cItem.totalPedimentos;
					
					if( cItem.hasOwnProperty("activarRankingTableroProductos") )
						activarRankingTableroProductos += cItem.activarRankingTableroProductos;
					
					if( cItem.hasOwnProperty("rankingTableroProductos") )
						rankingTableroProductos = cItem.rankingTableroProductos;
					
					if( cItem.hasOwnProperty("ocompras") )
						ocompras += cItem.ocompras;
					
					if( cItem.hasOwnProperty("tipoFletera") )
						tipoFletera += cItem.tipoFletera;
					
					if( cItem.hasOwnProperty("totalFleteNormal") )
						totalFleteNormal += cItem.totalFleteNormal;
					
					if( cItem.hasOwnProperty("totalFleteExpress") )
						totalFleteExpress += cItem.totalFleteExpress;
					
					if( cItem.hasOwnProperty("tipoEntrega") )
						tipoEntrega += cItem.tipoEntrega;
					
					if( cItem.hasOwnProperty("totalContactos") )
						totalContactos += cItem.totalContactos;
					
					if( cItem.hasOwnProperty("totalEntregaUnica") )
						totalEntregaUnica += cItem.totalEntregaUnica;
					
					if( cItem.hasOwnProperty("totalEntregaProgramada") )
						totalEntregaProgramada += cItem.totalEntregaProgramada;
					
					if( cItem.hasOwnProperty("totalVisita") )
						totalVisita += cItem.totalVisita;
					
					if( cItem.hasOwnProperty("totalCRM") )
						totalCRM += cItem.totalCRM;
					
					if( cItem.hasOwnProperty("numEjecutivoVentas") )
						numEjecutivoVentas += cItem.numEjecutivoVentas;
					
					if( cItem.hasOwnProperty("totalCreditos") )
						totalCreditos += cItem.totalCreditos;
					
					if( cItem.hasOwnProperty("totalValores") )
						totalValores += cItem.totalValores;
					
				}
				var tmpResumen:ResumenConsulta = new ResumenConsulta();
				tmpResumen.totalClientes 				= _resumenTotal.totalClientes > -1 ? totalClientes: -1;
				tmpResumen.totalProveedores 				= _resumenTotal.totalProveedores > -1 ? totalProveedores: -1;
				if( _resumenTotal.clientes > 0 ){
					clientes = _resumenTotal.clientes;
				}
				tmpResumen.clientes 					= _resumenTotal.clientes > -1 ? clientes: -1;
				tmpResumen.clientes_proveedores  = _resumenTotal.clientes_proveedores > -1 ? clientes_proveedores: -1;
				
				tmpResumen.totalPermisos					= _resumenTotal.totalPermisos > -1 ? totalPermisos: -1;
				
				if( _resumenTotal.totalPedidos > 0 ){
					totalAcuseRecibo = _resumenTotal.totalPedidos;
				}
				tmpResumen.totalPedidos 						= _resumenTotal.totalPedidos > -1 ? totalPedidos: -1;
				
				
				if(_resumenTotal.totalClientesPorcentaje > -1)
				{
					if(totalClientesPorcentaje > 100)
						tmpResumen.totalClientesPorcentaje =  100;
					else
						tmpResumen.totalClientesPorcentaje =  UtilsFormatosNumericos.truncarDecimalesCeil(totalClientesPorcentaje,2);
				}
				else
				{
					tmpResumen.totalClientesPorcentaje = -1;
				}
				
				if(_resumenTotal.totalProveedoresPorcentaje > -1)
				{
					if(totalProveedoresPorcentaje > 100)
						tmpResumen.totalProveedoresPorcentaje =  100;
					else
						tmpResumen.totalProveedoresPorcentaje =  UtilsFormatosNumericos.truncarDecimalesCeil(totalProveedoresPorcentaje,2);
				}
				else
				{
					tmpResumen.totalProveedoresPorcentaje = -1;
				}
				
				if(_resumenTotal.totalIngresosPorcentaje > -1)
				{
					if(totalIngresosPorcentaje > 100)
						tmpResumen.totalIngresosPorcentaje =  100;
					else
						tmpResumen.totalIngresosPorcentaje =  UtilsFormatosNumericos.truncarDecimalesCeil(totalIngresosPorcentaje,2);
				}
				else
				{
					tmpResumen.totalIngresosPorcentaje = -1;
				}
				
				if(_resumenTotal.totalComprasPorcentaje > -1)
				{
					if(totalComprasPorcentaje > 100)
						tmpResumen.totalComprasPorcentaje =  100;
					else
						tmpResumen.totalComprasPorcentaje =  UtilsFormatosNumericos.truncarDecimalesCeil(totalComprasPorcentaje,2);
				}
				else
				{
					tmpResumen.totalComprasPorcentaje = -1;
				}
				
				if(_resumenTotal.porcentajeDistribucion > -1)
				{
					if(porcentajeDistribucion > 100)
						tmpResumen.porcentajeDistribucion =  100;
					else
						tmpResumen.porcentajeDistribucion =  UtilsFormatosNumericos.truncarDecimalesCeil(porcentajeDistribucion,2);
				}
				else
				{
					tmpResumen.porcentajeDistribucion = -1;
				}
				if(_resumenTotal.cotizacionesTotal > 0){
					cotizacionesTotal = _resumenTotal.cotizacionesTotal;
				}
				tmpResumen.cotizacionesTotal 		= _resumenTotal.cotizacionesTotal > -1 ? cotizacionesTotal: -1;
				
				if(_resumenTotal.totalContactos > 0){
					totalContactos = _resumenTotal.totalContactos;
				}
				tmpResumen.totalContactos 		= _resumenTotal.totalContactos > -1 ? totalContactos: -1;
				
				
				tmpResumen.totalCobros 		        = _resumenTotal.totalCobros > -1 ? totalCobros: -1;
				tmpResumen.totalPagos 		        = _resumenTotal.totalPagos > -1 ? totalPagos: -1;
				tmpResumen.totalDocumentos 		= _resumenTotal.totalDocumentos > -1 ? totalDocumentos: -1;
				tmpResumen.totalLlamadas 		    = _resumenTotal.totalLlamadas > -1 ? totalLlamadas: -1;
				tmpResumen.factura 						= _resumenTotal.factura > -1 ? factura: -1;
				tmpResumen.registro 						= _resumenTotal.registro > -1 ? registro: -1;
				
				tmpResumen.noProductos						= _resumenTotal.noProductos > -1 ? noProductos: -1;
				
				tmpResumen.totalTiempoRealizacion 						= _resumenTotal.totalTiempoRealizacion > -1 ? totalTiempoRealizacion: -1;
				tmpResumen.totalET 						= _resumenTotal.totalET > -1 ? totalET: -1;
				tmpResumen.totalFT 						= _resumenTotal.totalFT > -1 ? totalFT: -1;
				tmpResumen.urgenciaAlta 						= _resumenTotal.urgenciaAlta > -1 ? urgenciaAlta: -1;
				tmpResumen.urgenciaMedia 						= _resumenTotal.urgenciaMedia > -1 ? urgenciaMedia: -1;
				tmpResumen.urgenciaBaja 						= _resumenTotal.urgenciaBaja > -1 ? urgenciaBaja: -1;
				tmpResumen.totalColaboradores 						= _resumenTotal.totalColaboradores > -1 ? totalColaboradores: -1;
				tmpResumen.totalChecadas 						= _resumenTotal.totalChecadas > -1 ? totalChecadas: -1;
				tmpResumen.notaDeCredito						= _resumenTotal.notaDeCredito > -1 ? notaDeCredito: -1;
				
				tmpResumen.totalAsistencia						= _resumenTotal.totalAsistencia > -1 ? totalAsistencia: -1;
				tmpResumen.totalInasistencia					= _resumenTotal.totalInasistencia > -1 ? totalInasistencia: -1;
				
				if( _resumenTotal.partidas > 0 ){
					partidas = _resumenTotal.partidas;
				}
				tmpResumen.partidas 				    = _resumenTotal.partidas > -1 ? partidas: -1;
				if( _resumenTotal.productos > 0 ){
					productos = _resumenTotal.productos;
				}
				tmpResumen.productos 				    = _resumenTotal.productos > -1 ? productos: -1;
				if( _resumenTotal.avisoCambios > 0 ){
					avisoCambios = _resumenTotal.avisoCambios;
				}
				tmpResumen.avisoCambios 		  = _resumenTotal.avisoCambios > -1 ? avisoCambios: -1;
				if( _resumenTotal.requisicion > 0 ){
					requisicion = _resumenTotal.requisicion;
				}
				tmpResumen.requisicion 		  = _resumenTotal.requisicion > -1 ? requisicion: -1;
				if( _resumenTotal.confirmaciones > 0 ){
					confirmaciones = _resumenTotal.confirmaciones;
				}
				tmpResumen.confirmaciones 		  = _resumenTotal.confirmaciones > -1 ? confirmaciones: -1;
				
				if( _resumenTotal.monitoreo > 0 ){
					monitoreo = _resumenTotal.monitoreo;
				}
				tmpResumen.monitoreo 		  = _resumenTotal.monitoreo > -1 ? monitoreo: -1;
				
				if( _resumenTotal.inspeccion > 0 ){
					inspeccion = _resumenTotal.inspeccion;
				}
				tmpResumen.inspeccion 		  = _resumenTotal.inspeccion > -1 ? inspeccion: -1;
				
				if( _resumenTotal.cierreRuta > 0 ){
					cierreRuta = _resumenTotal.cierreRuta;
				}
				tmpResumen.cierreRuta 		  = _resumenTotal.cierreRuta > -1 ? cierreRuta: -1;
				
				if( _resumenTotal.facturacion > 0 ){
					facturacion = _resumenTotal.facturacion;
				}
				tmpResumen.facturacion 		  = _resumenTotal.facturacion > -1 ? facturacion: -1;
				
				if( _resumenTotal.entregasTabOp > 0 ){
					entregasTabOp = _resumenTotal.entregasTabOp;
				}
				tmpResumen.entregasTabOp 		  = _resumenTotal.entregasTabOp > -1 ? entregasTabOp: -1;
				
				if( _resumenTotal.cobro > 0 ){
					cobro = _resumenTotal.cobro;
				}
				tmpResumen.cobro 		  = _resumenTotal.cobro > -1 ? cobro: -1;
				
				if( _resumenTotal.pago > 0 ){
					pago = _resumenTotal.pago;
				}
				tmpResumen.pago 		  = _resumenTotal.pago > -1 ? pago: -1;
				
				if( _resumenTotal.revision > 0 ){
					revision = _resumenTotal.revision;
				}
				tmpResumen.revision 		  = _resumenTotal.revision > -1 ? revision: -1;
				
				if( _resumenTotal.cargarFactura > 0 ){
					cargarFactura = _resumenTotal.cargarFactura;
				}
				tmpResumen.cargarFactura 		  = _resumenTotal.cargarFactura > -1 ? cargarFactura: -1;
				
				if( _resumenTotal.totalPacking > 0 ){
					totalPacking = _resumenTotal.totalPacking;
				}
				tmpResumen.totalPacking 		  = _resumenTotal.totalPacking > -1 ? totalPacking: -1;
				
				if( _resumenTotal.totalCartaUso > 0 ){
					totalCartaUso = _resumenTotal.totalCartaUso;
				}
				tmpResumen.totalCartaUso 		  = _resumenTotal.totalCartaUso > -1 ? totalCartaUso: -1;
				
				if( _resumenTotal.totalCertificado > 0 ){
					totalCertificado = _resumenTotal.totalCertificado;
				}
				tmpResumen.totalCertificado 		  = _resumenTotal.totalCertificado > -1 ? totalCertificado: -1;
				
				if( _resumenTotal.totalNafta > 0 ){
					totalNafta = _resumenTotal.totalNafta;
				}
				tmpResumen.totalNafta 		  = _resumenTotal.totalNafta > -1 ? totalNafta: -1;
				
				if( _resumenTotal.totalfactura > 0 ){
					totalfactura = _resumenTotal.totalfactura;
				}
				tmpResumen.totalfactura 		  = _resumenTotal.totalfactura > -1 ? totalfactura: -1;
				
				if( _resumenTotal.totalAdicional > 0 ){
					totalAdicional = _resumenTotal.totalAdicional;
				}
				tmpResumen.totalAdicional 		  = _resumenTotal.totalAdicional > -1 ? totalAdicional: -1;
				
				if( _resumenTotal.piezasTotal > 0 ){
					piezasTotal = _resumenTotal.piezasTotal;
				}
				tmpResumen.piezasTotal 				= _resumenTotal.piezasTotal > -1 ? piezasTotal: -1;
			
				if( _resumenTotal.total > 0 ){
					total = _resumenTotal.total;
				}
				tmpResumen.total 							= _resumenTotal.total > -1 ? total: -1;
			
				if( _resumenTotal.monto > 0 ){
					monto = _resumenTotal.monto;
				}
				tmpResumen.monto 							= _resumenTotal.monto > -1 ? monto: -1;
			
				if( _resumenTotal.totalAgentesAduanales > 0 ){
					totalAgentesAduanales = _resumenTotal.totalAgentesAduanales;
				}
				tmpResumen.totalAgentesAduanales 						= _resumenTotal.totalAgentesAduanales > -1 ? totalAgentesAduanales: -1;
			
				if( _resumenTotal.totalOrdenesDespacho > 0 ){
					totalOrdenesDespacho = _resumenTotal.totalOrdenesDespacho;
				}
				tmpResumen.totalOrdenesDespacho 						= _resumenTotal.totalOrdenesDespacho > -1 ? totalOrdenesDespacho: -1;
				
				if( _resumenTotal.totalSolicitudes > 0 ){
					totalSolicitudes = _resumenTotal.totalSolicitudes;
				}
				tmpResumen.totalSolicitudes 						= _resumenTotal.totalSolicitudes > -1 ? totalSolicitudes: -1;
				
				if( _resumenTotal.noTipoTransito > 0 ){
					noTipoTransito = _resumenTotal.noTipoTransito;
				}
				tmpResumen.noTipoTransito 						= _resumenTotal.noTipoTransito > -1 ? noTipoTransito: -1;
				
				if( _resumenTotal.cantFamilia > 0 ){
					cantFamilia = _resumenTotal.cantFamilia;
				}
				tmpResumen.cantFamilia 						= _resumenTotal.cantFamilia > -1 ? cantFamilia: -1;
				
				if( _resumenTotal.total_fletera > 0 ){
					total_fletera = _resumenTotal.total_fletera;
				}
				tmpResumen.total_fletera 						= _resumenTotal.total_fletera > -1 ? total_fletera: -1;
				
				if( _resumenTotal.total_guias > 0 ){
					total_guias = _resumenTotal.total_guias;
				}
				tmpResumen.total_guias 						= _resumenTotal.total_guias > -1 ? total_guias: -1;
				
				if( _resumenTotal.total_bultos > 0 ){
					total_bultos = _resumenTotal.total_bultos;
				}
				tmpResumen.total_bultos 						= _resumenTotal.total_bultos > -1 ? total_bultos: -1;
				
				if( _resumenTotal.total_arribadas > 0 ){
					total_arribadas = _resumenTotal.total_arribadas;
				}
				tmpResumen.total_arribadas 						= _resumenTotal.total_arribadas > -1 ? total_arribadas: -1;
				
				if( _resumenTotal.total_porArribar > 0 ){
					total_porArribar = _resumenTotal.total_porArribar;
				}
				tmpResumen.total_porArribar 						= _resumenTotal.total_porArribar > -1 ? total_porArribar: -1;
				
				if( _resumenTotal.totalValorAduanal > 0 ){
					totalValorAduanal = _resumenTotal.totalValorAduanal;
				}
				tmpResumen.totalValorAduanal 						= _resumenTotal.totalValorAduanal > -1 ? totalValorAduanal: -1;
				
				if( _resumenTotal.totalPedimentos > 0 ){
					totalPedimentos = _resumenTotal.totalPedimentos;
				}
				tmpResumen.totalPedimentos 						= _resumenTotal.totalPedimentos > -1 ? totalPedimentos: -1;
				
				if( _resumenTotal.totalAcuseRecibo > 0 ){
					totalAcuseRecibo = _resumenTotal.totalAcuseRecibo;
				}
				tmpResumen.totalAcuseRecibo 						= _resumenTotal.totalAcuseRecibo > -1 ? totalAcuseRecibo: -1;
				
				if( _resumenTotal.total > 0 )
					tmpResumen.total = _resumenTotal.total;
				tmpResumen.totalFolios 				= _resumenTotal.totalFolios > -1 ? totalFolios: -1;
				tmpResumen.totalCancelaciones 		= _resumenTotal.totalCancelaciones > -1 ? totalCancelaciones: -1;
				tmpResumen.totalIncidentes 		= _resumenTotal.totalIncidentes > -1 ? totalIncidentes: -1;
				tmpResumen.totalCompras 			= _resumenTotal.totalCompras > -1 ? totalCompras: -1;
				if( _resumenTotal.totalEntregas > 0 ){
					totalEntregas = _resumenTotal.totalEntregas;
				}
				tmpResumen.totalEntregas			= _resumenTotal.totalEntregas > -1 ? totalEntregas: -1;
				tmpResumen.provedorIndividual			= _resumenTotal.provedorIndividual > -1 ? provedorIndividual: -1;
				tmpResumen.totalTiempoProceso		= _resumenTotal.totalTiempoProceso > -1 ? totalTiempoProceso: -1;
				
				tmpResumen.rankingCliente  = _resumenTotal.rankingCliente > -1 ? rankingCliente:-1;
				tmpResumen.rankingProveedor  = _resumenTotal.rankingProveedor > -1 ? rankingProveedor:-1;
				
				tmpResumen.rankingTableroCliente  = _resumenTotal.rankingTableroCliente > -1 ? rankingTableroCliente:-1;
				tmpResumen.totalMarcas  = _resumenTotal.totalMarcas > -1 ? totalMarcas:-1;
				
				if( _resumenTotal.activarRankingTableroProductos > 0 ){
					totalAcuseRecibo = _resumenTotal.activarRankingTableroProductos;
				}
				tmpResumen.activarRankingTableroProductos 						= _resumenTotal.activarRankingTableroProductos > -1 ? activarRankingTableroProductos: -1;
				
				if( _resumenTotal.rankingTableroProductos > 0 ){
					rankingTableroProductos = _resumenTotal.rankingTableroProductos;
				}
				tmpResumen.rankingTableroProductos 						= _resumenTotal.rankingTableroProductos > -1 ? rankingTableroProductos: -1;
				
				if( _resumenTotal.ocompras > 0 ){
					ocompras = _resumenTotal.ocompras;
				}
				tmpResumen.ocompras 						= _resumenTotal.ocompras > -1 ? ocompras: -1;
				
				if( _resumenTotal.tipoFletera > 0 ){
					tipoFletera = _resumenTotal.tipoFletera;
				}
				tmpResumen.tipoFletera 						= _resumenTotal.tipoFletera > -1 ? tipoFletera: -1;
				
				if( _resumenTotal.totalFleteNormal > 0 ){
					totalFleteNormal = _resumenTotal.totalFleteNormal;
				}
				tmpResumen.totalFleteNormal 						= _resumenTotal.totalFleteNormal > -1 ? totalFleteNormal: -1;
				
				if( _resumenTotal.totalFleteExpress > 0 ){
					totalFleteExpress = _resumenTotal.totalFleteExpress;
				}
				tmpResumen.totalFleteExpress 						= _resumenTotal.totalFleteExpress > -1 ? totalFleteExpress: -1;
				
				if( _resumenTotal.tipoEntrega > 0 ){
					tipoEntrega = _resumenTotal.tipoEntrega;
				}
				tmpResumen.tipoEntrega 						= _resumenTotal.tipoEntrega > -1 ? tipoEntrega: -1;
				
				if( _resumenTotal.totalEntregaUnica > 0 ){
					totalEntregaUnica = _resumenTotal.totalEntregaUnica;
				}
				tmpResumen.totalEntregaUnica 						= _resumenTotal.totalEntregaUnica > -1 ? totalEntregaUnica: -1;
				
				if( _resumenTotal.totalEntregaProgramada > 0 ){
					totalEntregaProgramada = _resumenTotal.totalEntregaProgramada;
				}
				tmpResumen.totalEntregaProgramada 						= _resumenTotal.totalEntregaProgramada > -1 ? totalEntregaProgramada: -1;
				
				if( _resumenTotal.totalVisita > 0 ){
					totalVisita = _resumenTotal.totalVisita;
				}
				tmpResumen.totalVisita 						= _resumenTotal.totalVisita > -1 ? totalVisita: -1;
				
				if( _resumenTotal.totalCRM > 0 ){
					totalCRM = _resumenTotal.totalCRM;
				}
				tmpResumen.totalCRM 						= _resumenTotal.totalCRM > -1 ? totalCRM: -1;
				
				if( _resumenTotal.numEjecutivoVentas > 0 ){
					numEjecutivoVentas = _resumenTotal.numEjecutivoVentas;
				}
				tmpResumen.numEjecutivoVentas 						= _resumenTotal.numEjecutivoVentas > -1 ? numEjecutivoVentas: -1;
				
				if( _resumenTotal.totalCreditos > 0 ){
					totalCreditos = _resumenTotal.totalCreditos;
				}
				tmpResumen.totalCreditos 						= _resumenTotal.totalCreditos > -1 ? totalCreditos: -1;
				
				if( _resumenTotal.totalValores > 0 ){
					totalValores = _resumenTotal.totalValores;
				}
				tmpResumen.totalValores 						= _resumenTotal.totalValores > -1 ? totalValores: -1;
				
				
				//tmpResumen.provedorIndividual       = 1;
				mostrarTotales( tmpResumen, _resumenTotal.etiquetaEncabezado==null ? "Totales" : _resumenTotal.etiquetaEncabezado );
			}
		}
		
		public function backToDefaultsEtiquetas():void
		{
			_resumenTotal.total = -1;
			_resumenTotal.monto = -1;
			_resumenTotal.totalClientes = -1;
			_resumenTotal.totalContactos = -1;
			_resumenTotal.totalProveedores = -1;
			_resumenTotal.totalPedidos = -1;
			_resumenTotal.totalPermisos = -1;
			_resumenTotal.partidas = -1;
			_resumenTotal.productos = -1;
			_resumenTotal.avisoCambios = -1;
			_resumenTotal.requisicion = -1;
			_resumenTotal.confirmaciones = -1;
			_resumenTotal.monitoreo = -1;
			_resumenTotal.inspeccion = -1;
			_resumenTotal.cierreRuta = -1;
			_resumenTotal.facturacion = -1;
			_resumenTotal.entregasTabOp = -1;
			_resumenTotal.cobro = -1;
			_resumenTotal.pago = -1;
			_resumenTotal.revision = -1;
			_resumenTotal.cargarFactura = -1;
			_resumenTotal.piezasTotal = -1;
			_resumenTotal.clientes = -1;
			_resumenTotal.clientes_proveedores = -1;
			_resumenTotal.provedorIndividual = -1;
			_resumenTotal.cotizacionesTotal = -1;
			_resumenTotal.factura = -1;
			_resumenTotal.totalFolios = -1;
			_resumenTotal.totalCompras = -1;
			_resumenTotal.totalCobros =-1;
			_resumenTotal.totalPagos =-1;
			_resumenTotal.totalDocumentos=-1;
			_resumenTotal.totalLlamadas = -1;
			_resumenTotal.totalEntregas = -1;
			_resumenTotal.rankingCliente = -1
			_resumenTotal.rankingProveedor = -1
			_resumenTotal.rankingTableroCliente = -1
			_resumenTotal.registro = -1;
			_resumenTotal.noProductos = -1;
			_resumenTotal.totalColaboradores = -1;
			_resumenTotal.totalChecadas = -1;
			_resumenTotal.notaDeCredito = -1;
			_resumenTotal.totalAsistencia = -1;
			_resumenTotal.totalInasistencia = -1;
			_resumenTotal.totalCancelaciones = -1;
			_resumenTotal.totalIncidentes = -1;
			_resumenTotal.totalTiempoProceso = -1;
			_resumenTotal.totalMarcas = -1;
			_resumenTotal.total_fletera = -1;
			_resumenTotal.total_guias = -1;
			_resumenTotal.total_bultos = -1;
			_resumenTotal.total_arribadas = -1;
			_resumenTotal.total_porArribar = -1;
			
			_resumenTotal.totalIngresosPorcentaje = -1;
			_resumenTotal.totalComprasPorcentaje = -1;
			_resumenTotal.totalClientesPorcentaje = -1;
			_resumenTotal.totalProveedoresPorcentaje = -1;
			_resumenTotal.porcentajeDistribucion = -1;
			
			_resumenTotal.totalPacking = -1;
			_resumenTotal.totalCartaUso = -1;
			_resumenTotal.totalCertificado = -1;
			_resumenTotal.totalNafta = -1;
			_resumenTotal.totalfactura = -1;
			_resumenTotal.totalAdicional = -1;
			
			_resumenTotal.totalAgentesAduanales = -1;
			_resumenTotal.totalOrdenesDespacho = -1;
			_resumenTotal.totalAcuseRecibo = -1;
			_resumenTotal.totalSolicitudes = -1;
			_resumenTotal.noTipoTransito = -1;
			_resumenTotal.cantFamilia = -1;
			_resumenTotal.totalValorAduanal = -1;
			_resumenTotal.totalPedimentos = -1;
			_resumenTotal.activarRankingTableroProductos = -1;
			_resumenTotal.rankingTableroProductos = -1;
			_resumenTotal.ocompras = -1;
			_resumenTotal.tipoFletera = -1;
			_resumenTotal.totalFleteNormal = -1;
			_resumenTotal.totalFleteExpress = -1;
			_resumenTotal.tipoEntrega = -1;
			_resumenTotal.totalEntregaUnica = -1;
			_resumenTotal.totalEntregaProgramada = -1;
			_resumenTotal.totalVisita = -1;
			_resumenTotal.totalCRM = -1;
			_resumenTotal.numEjecutivoVentas = -1;
			_resumenTotal.totalCreditos = -1;
			_resumenTotal.totalValores = -1;
		}
		private function mostrarTotales( $resumen:ResumenConsulta, $titulo:String ):void{
			lblDataTipBold.text = $titulo;
			var description:String = '';
			var ranking:Boolean = false;
			
			if( _resumenTotal.notaDeCredito != -1 && $resumen.notaDeCredito != -1 ) 
				description += 'Notas de Crédito: ' + $resumen.notaDeCredito + '   \n';
			
			if( _resumenTotal.total != -1 && $resumen.total != -1 ) 
				description += 'Monto: ' + $resumen.totalString + ' \n';
			
			if( _resumenTotal.rankingTableroCliente != -1 && $resumen.rankingTableroCliente != -1 ) 
			{
				if(_vieneRollover)
				{
					description += 'Ranking: ' + $resumen.rankingTableroCliente + ' \n';
					ranking = true;
				}
				else
				{
					ranking = false;
					description += '';
				}
			}
			
			if( _resumenTotal.clientes != -1 && $resumen.clientes != -1 )
				description += 'Clientes: ' + $resumen.clientes + ' \n'; // .clientes en reporte seguimiento

			if( _resumenTotal.totalContactos != -1 && $resumen.totalContactos != -1 )
				description += 'Contactos: ' + $resumen.totalContactos + ' \n'; 
			
			if( _resumenTotal.totalClientes != -1 && $resumen.totalClientes != -1 )
			{
				if( _resumenTotal.rankingCliente != -1 && $resumen.rankingCliente != -1 ) 
				{
					if(_vieneRollover)
					{
						description += 'Ranking: ' + $resumen.rankingCliente + ' \n';
						ranking = true;
					}
					else
					{
						ranking = false;
						description += 'Clientes: ' + $resumen.totalClientes + ' \n'; 
					}
				}
				else
				{
					if(this.parentApplication && this.parentApplication.applicationID && this.parentApplication.applicationID == 'ResponsableAE' && _vieneRollover && _resumenTotal.anio == -9){
					
					}else{
						description += 'Clientes: ' + $resumen.totalClientes + ' \n'; // .clientes en tablero clientes
					}
				}
			}
			
			if( _resumenTotal.totalProveedores != -1 && $resumen.totalProveedores != -1 )
			{
				if( _resumenTotal.rankingProveedor != -1 && $resumen.rankingProveedor != -1 ) 
				{
					if(_vieneRollover)
					{
						description += 'Ranking: ' + $resumen.rankingProveedor + ' \n';
						ranking = true;
					}
					else
					{
						ranking = false;
						description += 'Proveedores: ' + $resumen.totalProveedores + ' \n'; 
					}
				}
				else
				{
					description += 'Proveedores: ' + $resumen.totalProveedores + ' \n'; // .clientes en tablero clientes
				}
			}
			
			if( _resumenTotal.provedorIndividual != -1 && $resumen.provedorIndividual != -1 ){
				if (_vieneRollover){
					description += 'Proveedores: ' + $resumen.clientes_proveedores + ' \n';
				}else{
					description += 'Proveedores: ' + $resumen.provedorIndividual + ' \n';
				}
			}
			if( _resumenTotal.totalOrdenesDespacho != -1 && $resumen.totalOrdenesDespacho != -1 ) 
				description += 'Ordenes de Despacho : ' + $resumen.totalOrdenesDespacho + ' \n';
			
			if( _resumenTotal.clientes_proveedores != -1 && $resumen.clientes_proveedores != -1 )
				description += 'Proveedores: ' + $resumen.clientes_proveedores + ' \n';
			
			if( _resumenTotal.totalCompras != -1 && $resumen.totalCompras != -1 )
				description += 'Compras: ' + $resumen.totalCompras + ' \n';
			
			if( _resumenTotal.totalPedidos != -1 && $resumen.totalPedidos != -1 ) 
				description += 'Pedidos: ' + $resumen.totalPedidos + ' \n';
			
			if( _resumenTotal.totalPermisos != -1 && $resumen.totalPermisos != -1 )
				description += 'Permisos: ' + $resumen.totalPermisos + ' \n';
			
			if( _resumenTotal.factura != -1 && $resumen.factura != -1 ) 
				description += 'Facturas: ' + $resumen.factura + ' \n';
			
			if( _resumenTotal.cotizacionesTotal != -1 && $resumen.cotizacionesTotal != -1 ) 
				description += 'Cotizaciones: ' + $resumen.cotizacionesTotal + ' \n';
			
			if( _resumenTotal.totalCobros != -1 && $resumen.totalCobros != -1 ) 
				description += 'Cobros: ' + $resumen.totalCobros + ' \n';
			
			if( _resumenTotal.totalDocumentos != -1 && $resumen.totalDocumentos != -1 ) 
				description += 'Documentos: ' + $resumen.totalDocumentos + ' \n';
			
			if( _resumenTotal.totalLlamadas != -1 && $resumen.totalLlamadas != -1 ) 
				description += 'Llamadas: ' + $resumen.totalLlamadas + ' \n';
			
			if( _resumenTotal.totalPagos != -1 && $resumen.totalPagos != -1 ) 
				description += 'Pagos: ' + $resumen.totalPagos + ' \n';
			
			if( _resumenTotal.totalEntregas != -1 && $resumen.totalEntregas != -1 ) 
				description += 'Entregas: ' + $resumen.totalEntregas + ' \n';
			
			if( _resumenTotal.totalTiempoProceso != -1 && $resumen.totalTiempoProceso != -1 ) 
				description += 'Tiempo Total: ' + $resumen.totalTiempoProceso + ' horas\n';
			
			if( _resumenTotal.partidas != -1 && $resumen.partidas != -1 ) 
				description += 'Partidas: ' + $resumen.partidas + ' \n';
			
			if( _resumenTotal.productos != -1 && $resumen.productos != -1 ) 
				description += 'Productos: ' + $resumen.productos + ' \n';
			
			if( _resumenTotal.piezasTotal != -1 && $resumen.piezasTotal != -1 ) 
				description += 'Piezas: ' + $resumen.piezasTotal + ' \n';
			
			if( _resumenTotal.registro != -1 && $resumen.registro != -1 ) 
				description += 'Registros: ' + $resumen.registro + ' \n';
			
			if( _resumenTotal.noProductos != -1 && $resumen.noProductos != -1 ) 
				description += 'Productos: ' + $resumen.noProductos + ' \n';
			
			if( _resumenTotal.totalTiempoRealizacion != -1 && $resumen.totalTiempoRealizacion != -1 ) 
				description += 'Solicitudes: ' + $resumen.totalTiempoRealizacion + ' \n';
			
			if( _resumenTotal.totalET != -1 && $resumen.totalET != -1 ) 
				description += 'ET: ' + $resumen.totalET + ' \n';
			
			if( _resumenTotal.totalFT != -1 && $resumen.totalFT != -1 ) 
				description += 'FT: ' + $resumen.totalFT + ' \n';
			
			if( _resumenTotal.urgenciaAlta != -1 && $resumen.urgenciaAlta != -1 ) 
				description += 'Urg. Alta: ' + $resumen.urgenciaAlta + ' \n';
			
			if( _resumenTotal.urgenciaMedia != -1 && $resumen.urgenciaMedia != -1 ) 
				description += 'Urg. Media: ' + $resumen.urgenciaMedia + ' \n';
			
			if( _resumenTotal.urgenciaBaja != -1 && $resumen.urgenciaBaja != -1 ) 
				description += 'Urg. Baja: ' + $resumen.urgenciaBaja + ' \n';
			
			if( _resumenTotal.totalColaboradores != -1 && $resumen.totalColaboradores != -1 ) 
				description += 'Colaboradores: ' + $resumen.totalColaboradores + ' \n';
			
			if( _resumenTotal.totalChecadas != -1 && $resumen.totalChecadas != -1 ) 
				description += 'Checadas: ' + $resumen.totalChecadas + ' \n';
			
			if( _resumenTotal.totalAsistencia != -1 && $resumen.totalAsistencia != -1 ){
				if (!_vieneRollover ){
					description += 'Asistieron: ' + $resumen.totalAsistencia + ' \n';
				}else if($resumen.totalInasistencia == 0){
					description += 'Colaboradores: ' + $resumen.totalAsistencia + ' \n';
				}
			}
			
			if( _resumenTotal.totalInasistencia != -1 && $resumen.totalInasistencia != -1 ){
				if (!_vieneRollover ){
					description += 'Faltaron: ' + $resumen.totalInasistencia + ' \n';
				}else if($resumen.totalAsistencia == 0){
					description += 'Colaboradores: ' + $resumen.totalInasistencia + ' \n';
				}
			}
			
			if( _resumenTotal.totalFolios != -1 && $resumen.totalFolios != -1 ) 
				description += 'Folios: ' + $resumen.totalFolios + ' \n';
			
			if( _resumenTotal.avisoCambios != -1 && $resumen.avisoCambios != -1 ) 
				description += 'Aviso de Cambios: ' + $resumen.avisoCambios + ' \n';
			
			if( _resumenTotal.requisicion != -1 && $resumen.requisicion != -1 ) 
				description += 'Requisiciones: ' + $resumen.requisicion + ' \n';
			
			if( _resumenTotal.confirmaciones != -1 && $resumen.confirmaciones != -1 ) 
				description += 'Confirmaciones: ' + $resumen.confirmaciones + ' \n';
			
			if( _resumenTotal.monitoreo != -1 && $resumen.monitoreo != -1 ) 
				description += 'Monitoreos: ' + $resumen.monitoreo + ' \n';
			
			if( _resumenTotal.inspeccion != -1 && $resumen.inspeccion != -1 ) 
				description += 'Inspecciones: ' + $resumen.inspeccion + ' \n';
			
			if( _resumenTotal.cierreRuta != -1 && $resumen.cierreRuta != -1 ) 
				description += 'Cierre de Ruta: ' + $resumen.cierreRuta + ' \n';
			
			if( _resumenTotal.facturacion != -1 && $resumen.facturacion != -1 ) 
				description += 'Facturaciones: ' + $resumen.facturacion + ' \n';
			
			if( _resumenTotal.entregasTabOp != -1 && $resumen.entregasTabOp != -1 ) 
				description += 'Entregas: ' + $resumen.entregasTabOp + ' \n';
			
			if( _resumenTotal.cobro != -1 && $resumen.cobro != -1 ) 
				description += 'Cobros: ' + $resumen.cobro + ' \n';
			
			if( _resumenTotal.pago != -1 && $resumen.pago != -1 ) 
				description += 'Pagos: ' + $resumen.pago + ' \n';
			
			if( _resumenTotal.revision != -1 && $resumen.revision != -1 ) 
				description += 'Revisiones: ' + $resumen.revision + ' \n';
			
			if( _resumenTotal.cargarFactura != -1 && $resumen.cargarFactura != -1 ) 
				description += 'Partidas Asociadas: ' + $resumen.cargarFactura + ' \n';
			
			if( _resumenTotal.total_fletera != -1 && $resumen.total_fletera != -1 ) 
				description += 'AA / Fleteras: ' + $resumen.total_fletera + ' \n';
			
			if( _resumenTotal.total_guias != -1 && $resumen.total_guias != -1 ) 
				description += 'Guías: ' + $resumen.total_guias + ' \n';
			
			if( _resumenTotal.total_bultos != -1 && $resumen.total_bultos != -1 ) 
				description += 'Bultos: ' + $resumen.total_bultos + ' \n';
			
			if( _resumenTotal.monto != -1 && $resumen.monto != -1) 
				description += 'Monto: ' + $resumen.montoString + ' \n';
			
			if( _resumenTotal.totalCancelaciones != -1 && $resumen.totalCancelaciones != -1 ) 
				description += 'Cancelados: ' + $resumen.totalCancelaciones + ' \n';
			
			if( _resumenTotal.totalIncidentes != -1 && $resumen.totalIncidentes != -1 ) 
				description += 'Incidentes: ' + $resumen.totalIncidentes + ' \n';
			
			if( _resumenTotal.totalMarcas != -1 && $resumen.totalMarcas != -1 ) 
				description += 'Marcas: ' + $resumen.totalMarcas + ' \n';
			
			if( _resumenTotal.total_arribadas != -1 && $resumen.total_arribadas != -1 ) 
				description += 'Arribadas: ' + $resumen.total_arribadas + ' \n';
			
			if( _resumenTotal.total_porArribar != -1 && $resumen.total_porArribar != -1 ) 
				description += 'Por arribar: ' + $resumen.total_porArribar + ' \n';
			
			if( _resumenTotal.totalPacking != -1 && $resumen.totalPacking != -1 ) 
				description += 'Packing List : ' + $resumen.totalPacking + ' \n';
			
			if( _resumenTotal.totalCertificado != -1 && $resumen.totalCertificado != -1 ) 
				description += 'Certificados : ' + $resumen.totalCertificado + ' \n';
			
			if( _resumenTotal.totalCartaUso != -1 && $resumen.totalCartaUso != -1 ) 
				description += 'Cartas de Uso : ' + $resumen.totalCartaUso + ' \n';
			
			if( _resumenTotal.totalNafta != -1 && $resumen.totalNafta != -1 ) 
				description += 'Nafta : ' + $resumen.totalNafta + ' \n';
			
			if( _resumenTotal.totalfactura != -1 && $resumen.totalfactura != -1 ) 
				description += 'Factura : ' + $resumen.totalfactura + ' \n';
			
			if( _resumenTotal.totalAdicional != -1 && $resumen.totalAdicional != -1 ) 
				description += 'Adicional : ' + $resumen.totalAdicional + ' \n';
			
			
			
			if( _resumenTotal.totalIngresosPorcentaje != -1 && $resumen.totalIngresosPorcentaje != -1 ) 
				description += 'Ingresos : ' + $resumen.totalIngresosPorcentaje + ' % \n';
			
			if( _resumenTotal.totalComprasPorcentaje != -1 && $resumen.totalComprasPorcentaje != -1 ) 
				description += 'Compras : ' + $resumen.totalComprasPorcentaje + ' % \n';
			
			if( _resumenTotal.totalClientesPorcentaje != -1 && $resumen.totalClientesPorcentaje != -1 ) 
				description += 'Clientes : ' + $resumen.totalClientesPorcentaje + ' % \n';
			
			if( _resumenTotal.totalProveedoresPorcentaje != -1 && $resumen.totalProveedoresPorcentaje != -1 ) 
				description += 'Proveedores : ' + $resumen.totalProveedoresPorcentaje + ' % \n';
			
			if( _resumenTotal.porcentajeDistribucion != -1 && $resumen.porcentajeDistribucion != -1 ) 
				description += 'Distribución : ' + $resumen.porcentajeDistribucion + ' % \n';
			
			if( _resumenTotal.totalAgentesAduanales != -1 && $resumen.totalAgentesAduanales != -1 ) 
				description += 'Agentes Aduanales : ' + $resumen.totalAgentesAduanales + ' \n';
			
			if( _resumenTotal.totalAcuseRecibo != -1 && $resumen.totalAcuseRecibo != -1 ) 
				description += 'Acuses de recibo : ' + $resumen.totalAcuseRecibo + ' \n';
			
			if( _resumenTotal.totalSolicitudes != -1 && $resumen.totalSolicitudes != -1 ) 
				description += 'Solicitudes : ' + $resumen.totalSolicitudes + ' \n';
			
			if( _resumenTotal.noTipoTransito != -1 && $resumen.noTipoTransito != -1 ) 
				description += 'Tipo de Tránsito : ' + $resumen.noTipoTransito + ' \n';
			
			if( _resumenTotal.cantFamilia != -1 && $resumen.cantFamilia != -1 ) 
				description += 'Líneas de Productos : ' + $resumen.cantFamilia + ' \n';
			
			if( _resumenTotal.totalValorAduanal != -1 && $resumen.totalValorAduanal != -1 ) 
				description += 'Valor Total Aduanal : ' + $resumen.totalValorAduanalString + ' \n';
			
			if( _resumenTotal.totalPedimentos != -1 && $resumen.totalPedimentos != -1 ) 
				description += 'Pedimentos : ' + $resumen.totalPedimentos + ' \n';
			
			if( _resumenTotal.ocompras != -1 && $resumen.ocompras != -1 ) 
				description += 'OC : ' + $resumen.ocompras + ' \n';
			
			if( _resumenTotal.tipoFletera != -1 && $resumen.tipoFletera != -1 ) 
				description += 'Tipo de Flete : ' + $resumen.tipoFletera + ' \n';
			
			if( _resumenTotal.totalFleteNormal != -1 && $resumen.totalFleteNormal != -1 ) 
				description += 'Normal : ' + $resumen.totalFleteNormal + ' \n';
			
			if( _resumenTotal.totalFleteExpress != -1 && $resumen.totalFleteExpress != -1 ) 
				description += 'Express : ' + $resumen.totalFleteExpress + ' \n';
			
			if( _resumenTotal.tipoEntrega != -1 && $resumen.tipoEntrega != -1 ) 
				description += 'Tipo de Entrega : ' + $resumen.tipoEntrega + ' \n';
			
			if( _resumenTotal.totalEntregaUnica != -1 && $resumen.totalEntregaUnica != -1 ) 
				description += 'Única : ' + $resumen.totalEntregaUnica + ' \n';
			
			if( _resumenTotal.totalEntregaProgramada != -1 && $resumen.totalEntregaProgramada != -1 ) 
				description += 'Programada : ' + $resumen.totalEntregaProgramada + ' \n';
			
			if( _resumenTotal.totalVisita != -1 && $resumen.totalVisita != -1 ) 
				description += 'Visitas : ' + $resumen.totalVisita + ' \n';
			
			if( _resumenTotal.totalCRM != -1 && $resumen.totalCRM != -1 ) 
				description += 'CRM : ' + $resumen.totalCRM + ' \n';
			
			if( _resumenTotal.numEjecutivoVentas != -1 && $resumen.numEjecutivoVentas != -1 ) 
				description += 'EC : ' + $resumen.numEjecutivoVentas + ' \n';
			
			if( _resumenTotal.totalCreditos != -1 && $resumen.totalCreditos != -1 ) 
				description += 'Créditos : ' + $resumen.totalCreditos + ' \n';
			
			if( _resumenTotal.totalValores != -1 && $resumen.totalValores != -1 ) 
				description += 'Valores : ' + $resumen.totalValores + ' \n';
			
			
			if( _resumenTotal.activarRankingTableroProductos != -1 && $resumen.activarRankingTableroProductos != -1 ){
				if (_vieneRollover ){
					description = '';
					description += 'Monto: ' + $resumen.totalString + ' \n';
					description += 'Ranking: ' + $resumen.rankingTableroProductos + ' \n';
					description += 'Pedidos: ' + $resumen.totalPedidos + ' \n';
					description += 'Piezas: ' + $resumen.piezasTotal + ' \n';
				}else{
					description = '';
					description += 'Monto: ' + $resumen.totalString + ' \n';
					description += 'Clientes: ' + $resumen.clientes + ' \n';
					description += 'Pedidos: ' + $resumen.totalPedidos + ' \n';
					description += 'Piezas: ' + $resumen.piezasTotal + ' \n';
				}
			}
			
			lblDataTip.text = description;
			
			
			if(ranking)
			{
				lblDataTip.y = yValorCero + 10;
				lblDataTipBold.y = yValorCero - 15;
				
				/*measureTextWidthAndResizeComponent( lblDataTip.text, lblDataTip);
				lblDataTip.y = yValorCero;
				measureTextWidthAndResizeComponent( lblDataTipBold.text, lblDataTipBold, true);
				lblDataTipBold.y = lblDataTip.y - 30;*/
			}
			
		}
		//		/FUNCIONES DE RESUMEN
		/**
		 * Metodo para aplicar el formato de tablero clientes en el cual solo se muestran las propiedades: 
		 * (total, totalClientes, totalPedidos, partidas, piezasTotal )
		 * Al setear una propiedad a -1 el chart entiende que no debe mostrar dicha etiqueta. (p. ej. partidas = -1 no mostrara el total de partidas)
		 */
		public function aplicarFormatoTableroClientes( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				
				// igualo totalFolios a partidas para mantener el nombre generico 'partidas'
				cItem.partidas = cItem.totalFolios;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
			}
			return $lista;
		}
		
		/**
		 * Metodo para aplicar el formato de tablero clientes en el cual solo se muestran las propiedades: 
		 * (total, totalClientes, totalPedidos, partidas, piezasTotal )
		 * Al setear una propiedad a -1 el chart entiende que no debe mostrar dicha etiqueta. (p. ej. partidas = -1 no mostrara el total de partidas)
		 */
		public function aplicarFormatoTableroClientesSinPedidos( $lista:ArrayCollection,titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				
				// igualo totalFolios a partidas para mantener el nombre generico 'partidas'
				cItem.partidas = cItem.totalFolios;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
			}
			return $lista;
		}
		/**
		 * Metodo para aplicar el formato de reporte seguimientos en el cual solo se muestran las propiedades: 
		 * (total, partidas, piezasTotal, cotizacionesTotal, clientes )
		 * Al setear una propiedad a -1 el chart entiende que no debe mostrar dicha etiqueta. (p. ej. partidas = -1 no mostrará el total de partidas)
		 */
		public function aplicarFormatoReporteSeguimientos( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.cotizacionesTotal = 0;
			_resumenTotal.clientes = 0;
			return $lista;
		}
		public function aplicarFormatoReportePermisosImportacion( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.totalPermisos = 0;
			_resumenTotal.noProductos = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		public function aplicarFormatoConsultaCompras( $lista:ArrayCollection,titulo:String = null ):ArrayCollection{
			
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.clientes_proveedores = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalCompras = 0;	
			return $lista;
		}
		
		public function aplicarFormatoConsultaEntregas( $lista:ArrayCollection,titulo:String = null ):ArrayCollection{
			
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.clientes = 0;
			_resumenTotal.totalEntregas = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			return $lista;
		}
		
		public function aplicarFormatoConsultaComprasFormatoDos( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalCompras = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoConsultas( $lista:ArrayCollection, titulo:String = null,etiquetaDiferente:String = null,switchConceptoResultado:Boolean=true, totalCotizacion:int=0 ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			//_resumenTotal.cotizacionesTotal = totalCotizacion;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			
			if(etiquetaDiferente != null && etiquetaDiferente.length>0){
				if(_resumenTotal.hasOwnProperty(etiquetaDiferente)){
					if (etiquetaDiferente == "cotizacionesTotal")
					{
						_resumenTotal[etiquetaDiferente] = totalCotizacion;
					}
					else
					{
						_resumenTotal[etiquetaDiferente] = 0;
					}
				}
			}
			if(switchConceptoResultado){
				for( var g:int = 0; g < $lista.length; g++ ){
					var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
					cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
					
				}
			}
			return $lista;
		}
		
		public function aplicarFormatoConsultasPagos( $lista:ArrayCollection, titulo:String = null,etiquetaDiferente:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.clientes_proveedores = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			
			if(etiquetaDiferente != null && etiquetaDiferente.length>0){
				if(_resumenTotal.hasOwnProperty(etiquetaDiferente)){
					_resumenTotal[etiquetaDiferente] = 0;
				}
			}
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
				
			}
			return $lista;
		}
		public function aplicarFormatoConsultasDeDosEtiquetas( $lista:ArrayCollection, titulo:String = null,etiquetaDiferente:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			//_resumenTotal.totalDocumentos = 0;
			_resumenTotal.totalClientes = 0;
			
			if(etiquetaDiferente != null && etiquetaDiferente.length>0){
				if(_resumenTotal.hasOwnProperty(etiquetaDiferente)){
					_resumenTotal[etiquetaDiferente] = 0;
				}
			}
			return $lista;
		}
		
		public function aplicarFormatoConsultaTopDiez( $lista:ArrayCollection, etiquetaDiferente:String = null, totalCotizacion:int=0):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			//_resumenTotal.cotizacionesTotal = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			
			if(etiquetaDiferente != null && etiquetaDiferente.length>0){
				if(_resumenTotal.hasOwnProperty(etiquetaDiferente)){
					if (etiquetaDiferente == "cotizacionesTotal")
					{
						_resumenTotal[etiquetaDiferente] = totalCotizacion;
					}
					else
					{
						_resumenTotal[etiquetaDiferente] = 0;
					}
				}
			}
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
				
			}
			return $lista;
		}
		
		public function aplicarFormatoTableroProveedores($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.totalCompras = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			/*_resumenTotal.provedorIndividual =0;*/
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
				
			}
			return $lista;
		}
		
		public function aplicarFormatoUniversoTableroProveedores($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.totalCompras = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.provedorIndividual =0;
			
			return $lista;
		}
		
		public function aplicarFormatoTableroProveedoresCondicionesDePago($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.clientes_proveedores = 0;
			
			/*for( var g:int = 0; g < $lista.length; g++ ){
			var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
			cItem.etiqueta = cItem.etiqueta.toUpperCase();
			
			}*/
			return $lista;
		}
		
		public function aplicarFormatoGestionVisitasETvsFT($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalTiempoRealizacion = 0;
			_resumenTotal.urgenciaAlta = 0;
			_resumenTotal.urgenciaMedia = 0;
			_resumenTotal.urgenciaBaja = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoGestionVisitas($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalTiempoRealizacion = 0;
			_resumenTotal.totalET = 0;
			_resumenTotal.totalFT = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoReporteCompras($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.totalCompras = 0;
			_resumenTotal.clientes_proveedores = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.partidas = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoReporteCobros($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.factura = 0;
			_resumenTotal.clientes = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.partidas = 0;
			
			return $lista;
		}
		
		
		public function aplicarFormatoReporteNotificados( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.clientes = 0;
			return $lista;
		}
		
		public function aplicarFormatoReporteNotificadosModif( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.clientes = 0;
			return $lista;
		}
		
		public function aplicarFormatoExpoFarma($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.registro = 0;
			return $lista;
		}
		
		public function aplicarFormatoEntregas($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;
			_resumenTotal.totalPermisos = 0;
			_resumenTotal.total = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.noProductos = 0;
			
			return $lista;
			
			
		}
		public function aplicarFormatoAIESC($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.registro = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoIncidencias($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalIncidentes = 0;
			
			return $lista;
		}
		
		
		public function aplicarFormatoClientesClave($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalClientesPorcentaje = 0;
			_resumenTotal.totalIngresosPorcentaje = 0;
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoProveedoresClave($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalProveedoresPorcentaje = 0;
			_resumenTotal.totalComprasPorcentaje = 0;
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoClientesDistribucionXNiveles($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.clientes = 0;
			_resumenTotal.total = 0;
			//_resumenTotal.porcentajeDistribucion = 0;
			
			return $lista;
		}
		
		private var totalCliente_Canc:Number=0;
		public function aplicarFormatoCancelacionesCotiza($lista:ArrayCollection, titulo:String = null,$total:Number=0 ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.clientes = 0;
			_resumenTotal.total = 0;
			totalCliente_Canc = $total;
			//_resumenTotal.porcentajeDistribucion = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoClientesDistribucionXNivelesRanking($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.rankingCliente = 0;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.total = 0;
			//_resumenTotal.porcentajeDistribucion = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoProveedoresAnalisisCompraRanking($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.rankingProveedor = 0;
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.total = 0;
			//_resumenTotal.porcentajeDistribucion = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoClientesClaveTODOS($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.clientes = 0;
			_resumenTotal.total = 0;
			_resumenTotal.totalIngresosPorcentaje = 0;
			
			return $lista;
		}
		
		
		public function get cambioProvTotales():Boolean
		{
			return _cambioProvTotales;
		}
		
		public function set cambioProvTotales(value:Boolean):void
		{
			_cambioProvTotales = value;
		}
		
		public function aplicarFormatoConsultaAsistencia($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			_resumenTotal.totalColaboradores = 0;
			_resumenTotal.totalChecadas = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoConsultaAsistenciaVsInasistencia($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			_resumenTotal.totalAsistencia = 0;
			_resumenTotal.totalInasistencia = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoConsultaNotaDeCredito($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.clientes = 0;
			_resumenTotal.factura = 0;
			_resumenTotal.notaDeCredito = 0;
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoReporteProductoAlmacen($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.clientes = 0;
			_resumenTotal.total = 0;
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoStockReporteProductoAlmacen($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.clientes_proveedores = 0;
			_resumenTotal.total = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalCompras = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoTableroTipoProveedores($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.ocompras = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.clientes_proveedores =0;
			
			return $lista;
		}
		
		public function aplicarFormatoConsultasGraficas( $lista:ArrayCollection, titulo:String = null,etiquetaDiferente:String = null,switchConceptoResultado:Boolean=true ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoNotaDeCreditoMonto($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.total = 0;
			return $lista;
		}
		
		public function aplicarFormatoNotaDeCreditoFolios($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.totalFolios = 0;
			return $lista;
		}
		
		public function aplicarFormatoNotaDeCreditoCanceladas($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.totalCancelaciones = 0;
			return $lista;
		}
		
		public function aplicarFormatoEstadoConfirmacion($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.partidas = 0;
			return $lista;
		}
		
		public function aplicarFormatoAltaProducto($lista:ArrayCollection, totalPartidas:int = 0):ArrayCollection{
			_resumenTotal.totalTiempoProceso = 0;
			_resumenTotal.partidas = totalPartidas;
			return $lista;
		}
		
		public function aplicarFormatoTableroCotNoPed( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				
				// igualo totalFolios a partidas para mantener el nombre generico 'partidas'
				cItem.partidas = cItem.totalFolios;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
			}
			return $lista;
		}
		
		public function aplicarFormatoConsultasRankingCliente( $lista:ArrayCollection, titulo:String = null,etiquetaDiferente:String = null,switchConceptoResultado:Boolean=true ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			//_resumenTotal.cotizacionesTotal = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.rankingCliente = 0;
			
			if(etiquetaDiferente != null && etiquetaDiferente.length>0){
				if(_resumenTotal.hasOwnProperty(etiquetaDiferente)){					
					_resumenTotal[etiquetaDiferente] = 0;
				}
			}
			if(switchConceptoResultado){
				for( var g:int = 0; g < $lista.length; g++ ){
					var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
					cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
					
				}
			}
			return $lista;
		}
		
		public function aplicarFormatoTableroClientesRanking( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.rankingTableroCliente = 0;
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				
				// igualo totalFolios a partidas para mantener el nombre generico 'partidas'
				cItem.partidas = cItem.totalFolios;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
			}
			return $lista;
		}
		
		public function aplicarFormatoInspeccionarProductosClientes( $lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.anio = -9;
			
			return $lista;
		}
		
		public function aplicarFormatoInspeccionarProductosPrioridadesGeneral( $lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.clientes = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoInspeccionarProductosPrioridades( $lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoTableroClientesMarcas( $lista:ArrayCollection ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.total = 0;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.totalMarcas = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				
				// igualo totalFolios a partidas para mantener el nombre generico 'partidas'
				cItem.partidas = cItem.totalFolios;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
			}
			return $lista;
		}
		
		
		public function aplicarFormatoTableroOperativosRequisicion($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.cotizacionesTotal = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosRequisicionSinMonto($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.requisicion = 0;
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosPedidoSac($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosPedidoSacSinMonto($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.totalPedidos = 0;			
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosSistema($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.partidas = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosAvisoCambio($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.avisoCambios = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosConfirmaciones($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.confirmaciones = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosMonitoreo($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.monitoreo = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		
		public function aplicarFormatoTableroOperativosInspecciones($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.inspeccion = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosCierreRuta($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.cierreRuta = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosFacturacion($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.facturacion = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosEntregas($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.entregasTabOp = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosCobro($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.cobro = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosPago($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.pago = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosRevision($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.revision = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		public function aplicarFormatoTableroOperativosCargarFactura($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.cargarFactura = 0;
			_resumenTotal.monto = 0;
			return $lista;
		}
		
		public function aplicarFormatoGestorCompras($lista:ArrayCollection, titulo:String = null):ArrayCollection{
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.clientes_proveedores = 0;
			_resumenTotal.totalCompras = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalValorAduanal = -1;
			
			return $lista;
		}
		
		public function aplicarFormatoTableroProductos($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.totalCompras = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;			
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
				
			}
			return $lista;
		}
		public function aplicarFormatoTableroProductosPedido($lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			// HABILITADOS
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.total = 0;
			/*_resumenTotal.totalCompras = 0;*/
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.partidas = 0;
			_resumenTotal.piezasTotal = 0;			
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
				
			}
			return $lista;
		}
		
		public function aplicarFormatoClientessAnalisisVentasPeriodo($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;			
			_resumenTotal.total = 0;			
			
			return $lista;
		}
		
		public function aplicarFormatoGestorComprasDocumentacion($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;			
			_resumenTotal.totalPacking = 0;
			_resumenTotal.totalCartaUso = 0;
			_resumenTotal.totalCertificado = 0;
			_resumenTotal.totalNafta = 0;
			_resumenTotal.totalfactura = 0;
			_resumenTotal.totalAdicional = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoFaltantesAgenteAduanal($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;			
			_resumenTotal.totalOrdenesDespacho = 0;
			_resumenTotal.totalAgentesAduanales = 0;
			_resumenTotal.totalCartaUso = 0;
			_resumenTotal.totalCertificado = 0;
			
			return $lista;
		}
		public function aplicarFormatoDocumentoFaltante($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;			
			_resumenTotal.totalCartaUso = 0;
			_resumenTotal.totalCertificado = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoEsacAnalisisVentasPeriodo($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;
			_resumenTotal.totalClientes = 0;
			_resumenTotal.total = 0;			
			
			return $lista;
		}
		
		public function aplicarFormatoGestorConsolidado($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "Totales" : titulo;			
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		public function aplicarFormatoGestorComprasGenerarAcuseProveedores($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.totalAcuseRecibo = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			
			return $lista;
		}
		public function aplicarFormatoGestorComprasRegistrarGastosProveedores($lista:ArrayCollection, totalPedimentos:Number):ArrayCollection{
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.totalPedimentos = totalPedimentos;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			
			return $lista;
		}
		public function aplicarFormatoGestorComprasGenerarAcuseAgenteAduanal($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.totalAgentesAduanales = 0;
			_resumenTotal.totalAcuseRecibo = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			
			return $lista;
		}
		public function aplicarFormatoGestorComprasRegistrarGastosAgenteAduanal($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.totalAgentesAduanales = 0;
			/*_resumenTotal.totalAcuseRecibo = 0;*/
			_resumenTotal.totalPedimentos = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoSolictudesPconect($lista:ArrayCollection):ArrayCollection{
			_resumenTotal.totalClientes = 0;
			_resumenTotal.totalSolicitudes = 0;
			
			return $lista;
		}
		public function aplicarFormatoTramitarCompraProveedores($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.noProductos = 0;
			
			return $lista;
		}
		public function aplicarFormatoTramitarCompraTransito($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.noTipoTransito = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.noProductos = 0;
			
			return $lista;
		}
		public function aplicarFormatoTramitarCompraFamilia($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.cantFamilia = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.noProductos = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoPopUpPiezasPedido($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		public function aplicarFormatoMonitorearOrigen($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.noProductos = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.piezasTotal = 0;
			
			return $lista;
		}
		public function aplicarFormatoRegistrarDespachoProveedores($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.totalOrdenesDespacho = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalValorAduanal = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoRegistrarVisitaFleteras($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.total_fletera = 0;
			_resumenTotal.total_guias = 0;
			_resumenTotal.monto = 0;
			_resumenTotal.total_bultos = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoRegistrarVisitaGuias($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.total_arribadas = 0;
			_resumenTotal.total_porArribar = 0;
			_resumenTotal.total_guias = 0;
			
			return $lista;
		}
		public function aplicarFormatoMontoPiezas($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoTableroProductosRanking( $lista:ArrayCollection, titulo:String = null ):ArrayCollection{
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;
			_resumenTotal.total = 0;
			_resumenTotal.piezasTotal = 0;
			_resumenTotal.totalPedidos = 0;
			_resumenTotal.clientes = 0;
			_resumenTotal.rankingTableroProductos = 0;
			_resumenTotal.activarRankingTableroProductos = 0;
			/*_resumenTotal.rankingTableroProductosTodo = 0;*/
			
			for( var g:int = 0; g < $lista.length; g++ ){
				var cItem:ResumenConsulta = $lista[g] as ResumenConsulta;
				cItem.etiqueta = cItem.conceptoResultado.toUpperCase();
				
			}
			return $lista;
		}
		
		public function aplicarFormatoProveeRegistrarConfirmacion($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.ocompras = 0; //CAMBIAR
			_resumenTotal.noProductos = 0; 
			_resumenTotal.piezasTotal = 0; 
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoProveeGestionarBO($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalProveedores = 0;
			_resumenTotal.noProductos = 0; 
			_resumenTotal.piezasTotal = 0; 
			_resumenTotal.total = 0;
			
			return $lista;
		}

		public function aplicarFormatoClienteRegistrarConfirmacion($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalClientes = 0;
			_resumenTotal.totalContactos = 0;
			_resumenTotal.totalPedidos = 0; 
			_resumenTotal.avisoCambios = 0; 
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoFleteRegistrarConfirmacion($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.tipoFletera = 0;
			_resumenTotal.totalFleteNormal = 0; //CAMBIAR
			_resumenTotal.totalFleteExpress = 0; 
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoEntregaRegistrarConfirmacion($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.tipoEntrega = 0;
			_resumenTotal.totalEntregaUnica = 0; //CAMBIAR
			_resumenTotal.totalEntregaProgramada = 0; 
			_resumenTotal.total = 0;
			
			return $lista;
		}
		
		public function aplicarFormatoPoolVisitasClientes($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalSolicitudes = 0;
			_resumenTotal.totalClientes = 0; 
			_resumenTotal.totalVisita = 0;  
			_resumenTotal.totalCRM = 0; 
			
			return $lista;
		}
		
		public function aplicarFormatoPoolVisitasTipo($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalSolicitudes = 0;
			_resumenTotal.totalVisita = 0;  
			_resumenTotal.totalCRM = 0; 
			
			return $lista;
		}
		
		public function aplicarFormatosEjecutivoVentas($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.numEjecutivoVentas = 0;
			_resumenTotal.totalVisita = 0;  
			_resumenTotal.totalSolicitudes = 0; 
			_resumenTotal.totalCRM = 0; 
			
			return $lista;
		}
		
		public function aplicarFormatosCreditoYValores($lista:ArrayCollection, titulo:String = null ):ArrayCollection
		{			
			_resumenTotal.etiquetaEncabezado = titulo == null ?  "TOTALES" : titulo;			
			_resumenTotal.totalCreditos = 0;  
			_resumenTotal.totalValores = 0; 
			
			return $lista;
		}
		
		public function get useCursorHand():Boolean
		{
			return _useCursorHand;
		}
		
		public function set useCursorHand(value:Boolean):void
		{
			_useCursorHand = value;
		}
		
		public function get esConRealse():Boolean
		{
			return _esConRealse;
		}
		
		public function set esConRealse(value:Boolean):void
		{
			_esConRealse = value;
			
			/*this.invalidateProperties();*/
		}
		
		public function get esConAutoseleccion():Boolean
		{
			return _esConAutoseleccion;
		}
		
		public function set esConAutoseleccion(value:Boolean):void
		{
			_esConAutoseleccion = value;
		}
		
		public function get esConSombreadoCambioNormal():Boolean
		{
			return _esConSombreadoCambioNormal;
		}
		
		public function set esConSombreadoCambioNormal(value:Boolean):void
		{
			_esConSombreadoCambioNormal = value;
		}
		
		/**
		 * Quita la seleccion del item de la grafica.
		 */
		public function clearSelected($evt:MouseEvent):void
		{
			image.visible = image.includeInLayout = false;
			dispatchEvent(new MouseEvent("clickImagen"));
			if ((this.series[0] as pieSeriesPqNet).items != null  && ((this.series[0] as pieSeriesPqNet).items as Array).length > 0 ){
				for each (var item:PieSeriesItem in (this.series[0] as pieSeriesPqNet).items) 
				{
					item.itemRenderer.alpha = 1;
					item.itemRenderer.filters = null; 
				}
			}
			
			ponerOver();
		}
		
		public function ponerOver():void
		{
			if (lineasHabilitadas)
			{
				noQuitarOver = false;
				addEventListener( ChartItemEvent.ITEM_ROLL_OVER, rollOverGrafica );
				addEventListener( ChartItemEvent.ITEM_ROLL_OUT, rollOutGrafica );
			}
		}
		
		private function imageOver($evt:MouseEvent):void
		{
			if (icono != "")
				image.source = catalogoIconosBotones.getInstance()[icono+"_selected"];
		}
		
		private function imageOut($evt:MouseEvent):void
		{
			if (icono != "")
				image.source = catalogoIconosBotones.getInstance()[icono];
		}
		
		/**
		 * Agrega una imagen en la grafica
		 */
		[Inspectable(category="Imagenes",defaultValue="analisis_altos",enumeration="analisis_altos,analisis_bajos,analisis_distribuidores,analisis_medios,analisis_nuevos,analisis_todos,todos_mundo")]
		public function get icono():String
		{
			return _icono;
		}
		
		public function set icono(value:String):void
		{
			_icono = value;
		}
		
		public function get sinOver():Boolean
		{
			return _sinOver;
		}
		
		public function set sinOver(value:Boolean):void
		{
			_sinOver = value;
		}
		
	}
}

