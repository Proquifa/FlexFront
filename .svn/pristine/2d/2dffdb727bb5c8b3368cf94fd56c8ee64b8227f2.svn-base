<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx"  
		 xmlns:otros="skins.otros.*" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:pqNet="skins.botones.pqNet.*" 
		 xmlns:chekbox="skins.skin.chekbox.*" 
		 xmlns:input="skins.skin.textinput.*" 
		 xmlns:contenedores="skins.skin.contenedores.*"
		 xmlns:textarea="skins.skin.textarea.*" 
		 xmlns:shaders="skins.skin.shaders.*" 
		 xmlns:numericStepper="skins.skin.numericStepper.*" 
		 creationComplete="group1_creationCompleteHandler(event)"
		 width="100%" height="100%" xmlns:evento="skins.botones.evento.*" xmlns:dateField="skins.skin.dateField.*" xmlns:generales="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.clientes.generales.*" xmlns:Componentes="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.Campanas.Componentes.*" xmlns:Campanas="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.Campanas.*" xmlns:combobox="skins.skin.combobox.*" 
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.EventoCatClientes_General;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProCampanas;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProOferta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Campana;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.comerciales.Campanas.itemRender.itemRenderLsitadoAenviar;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.layouts.VerticalLayout;
			
			import skins.catalogos.catalogoColores;
			[Bindable] public var heightComponentes:Number = 30;
			private var _habilitados:ArrayCollection;
			[Bindable]private var universoProveedores:ArrayCollection;
			public var proveedorActual:Proveedor;
			[Bindable]private var cantidadMasTipo:String;
			[Bindable]private var tamLetra:Number = 18;
			[Bindable]private var tamLetraComision:Number = 14;
			

			
			public var  vieneDeEditar:Boolean;
			
	
			[Bindable]	
			private var Horas:ArrayCollection = new ArrayCollection([{valor:"Proveedor",llave:1}, 
				{valor:"Familia",llave:2},
				{valor:"Clasificación",llave:3},
				{valor:"Producto",llave:4}]);
			
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				
			  tipoCampana.selectedIndex = 0; 	
			  listaPro.percentWidth = 78;
			  addEventListener("agregarItem",agregarItem,false,0,true);
			  addEventListener("removerItem",removerItem,false,0,true);
				
			}
		
			
			private function agregarItem(evt:Event):void
			{
				var indice:int = listaPro.listtodosPRO.selectedIndex;
				var inicial:ArrayCollection = listaPro.listtodosPRO.dataProvider as ArrayCollection;
				var final:ArrayCollection = listaSeleeccion.dataProvider as ArrayCollection;
				var currentCopia:Object = ObjectUtil.copy(inicial[indice]) as Object;
				
				if(final == null)
					final = new ArrayCollection();
				
				inicial.removeItemAt(indice);
				listaPro.listtodosPRO.dataProvider = inicial;
				final.addItem(currentCopia);
				
				listaSeleeccion.dataProvider = final;
				/*actualizarVista();*/
				enumerarlista(final);
				enumerarlista(inicial);
				
				if(final.length > 1)
				{
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						cantidadMasTipo = final.length + " "  + "Familias";
						contabilizarProductosEnLista(final);
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						cantidadMasTipo = final.length + " " + "Clasificaciones";
						contabilizarProductosEnLista(final);
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						cantidadMasTipo = final.length + " " + "Productos";
					}
					
					
					lineaInfo.visible = true;
					
				}
				else if(final.length == 1)
				{
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						cantidadMasTipo = final.length + " " + "Familia";
						contabilizarProductosEnLista(final);
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						cantidadMasTipo = final.length+ " " + "Clasificación";
						contabilizarProductosEnLista(final);
						
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						cantidadMasTipo = final.length + " " + "Producto";
					}
					
					
					lineaInfo.visible = true;
					
				}
				
				/*lista Tipo Campaña*/
				if(inicial.length > 0)
				{
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						listaPro.cantidadMastipoLista = inicial.length + " "  + "Familias";
						contabilizarProductosAfectados(inicial);
						
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Clasificaciones";
						contabilizarProductosAfectados(inicial);
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Productos";
					}
					
					
				}
				else if(inicial.length == 1){
					
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Familia";
						contabilizarProductosAfectados(inicial);
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						listaPro.cantidadMastipoLista = inicial.length+ " " + "Clasificación";
						contabilizarProductosAfectados(inicial);
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Producto";
					}
				}
				else{
					listaPro.cantidadMastipoLista = " " ;
				}
				
			
				
				
			}
			
			
			private function contabilizarProductosAfectados(lista:ArrayCollection):void{
				var totalProd:Number = 0;
				
				if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Familia")
				{
					for (var k:int = 0; k < lista.length; k++) 
					{
						totalProd = totalProd + lista[k].noProductos;
					}
					
					if(totalProd > 0){
						
						if(totalProd > 1)
							listaPro.cantidadMastipoLista = listaPro.cantidadMastipoLista + " · " + totalProd + " " + "Productos"; 
						else if(totalProd == 1)
							listaPro.cantidadMastipoLista = listaPro.cantidadMastipoLista + " · " + totalProd + " " + "Producto"; 
					}
				}
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Clasificación")
				{
					for (var k:int = 0; k < lista.length; k++) 
					{
						totalProd = totalProd + lista[k].totalProductos;
					}
					
					if(totalProd > 0){
						
						if(totalProd > 1)
							listaPro.cantidadMastipoLista = listaPro.cantidadMastipoLista + " · " + totalProd + " " + "Productos"; 
						else if(totalProd == 1)
							listaPro.cantidadMastipoLista = listaPro.cantidadMastipoLista + " · " + totalProd + " " + "Producto"; 
					}
					
				}
				
				
			}
			
			
			private function contabilizarProductosEnLista(lista:ArrayCollection):void{
				var totalProd:Number = 0;
				
				if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Familia")
				{
					for (var k:int = 0; k < lista.length; k++) 
					{
						totalProd = totalProd + lista[k].noProductos;
					}
					
					if(totalProd > 0){
						
						if(totalProd > 1)
							cantidadMasTipo = cantidadMasTipo + " · " + totalProd + " " + "Productos"; 
						else if(totalProd == 1)
							cantidadMasTipo = cantidadMasTipo + " · " + totalProd + " " + "Producto"; 
					}
				}
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Clasificación")
				{
					for (var k:int = 0; k < lista.length; k++) 
					{
						totalProd = totalProd + lista[k].totalProductos;
					}
					
					if(totalProd > 0){
						
						if(totalProd > 1)
							cantidadMasTipo = cantidadMasTipo + " · " + totalProd + " " + "Productos"; 
						else if(totalProd == 1)
							cantidadMasTipo = cantidadMasTipo + " · " + totalProd + " " + "Producto"; 
					}
					
				}
				
				
			}
			
			private function removerItem(evt:Event):void
			{
				var indice:int = listaSeleeccion.selectedIndex;
				var final:ArrayCollection = listaSeleeccion.dataProvider as ArrayCollection;
				var currentCopia:Object = ObjectUtil.copy(final[indice]) as Object;
				var inicial:ArrayCollection = listaPro.listtodosPRO.dataProvider as ArrayCollection;
				
				inicial.addItem(currentCopia);
				final.removeItemAt(indice);
				
				enumerarlista(final);
				enumerarlista(inicial);
				
				
				if(final.length > 1)
				{
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						cantidadMasTipo = final.length + " "  + "Familias";
						listaPro.cantidadMastipoLista = listaPro.listtodosPRO.dataProvider.length + " " + "Familias";
						contabilizarProductosEnLista(final);
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						cantidadMasTipo = final.length + " " + "Clasificaciones";
						contabilizarProductosEnLista(final);
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						cantidadMasTipo = final.length + " " + "Productos";
					}
					
					lineaInfo.visible = true;
					
				}
				else if(final.length == 1)
				{
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						cantidadMasTipo = final.length + " " + "Familia";
						contabilizarProductosEnLista(final);
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						cantidadMasTipo = final.length+ " " + "Clasificación";
						contabilizarProductosEnLista(final);
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						cantidadMasTipo = final.length + " " + "Producto";
					}
					
					lineaInfo.visible = true;
					
				}
				else
				{
					cantidadMasTipo = "";
					
				}
				
				/*	tamaño de la lista tipo*/
				if(inicial.length > 1){
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						listaPro.cantidadMastipoLista = inicial.length + " "  + "Familias";
						contabilizarProductosAfectados(inicial);
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Clasificaciones";
						contabilizarProductosAfectados(inicial);
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Productos";
					}
					
				}
					
				else if(inicial.length == 1){
					
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Familia";
					}
						
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
						listaPro.cantidadMastipoLista = inicial.length+ " " + "Clasificación";
					}
						
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
						listaPro.cantidadMastipoLista = inicial.length + " " + "Producto";
					}
					
					
					
				}
				else{
					listaPro.cantidadMastipoLista = " " + "0" ;
				}
				
			}
			
			
			private function enumerarlista($listado:ArrayCollection):void
			{
				for (var i:int = 0; i < $listado.length; i++) 
				{
					if(listaPro.tipoCampana == "Producto")
						Object($listado[i]).numeroDeFila = i+1;
					else
					Object($listado[i]).numFila = i+1;
				}
			}
			
			[Bindable] private var tipoTexto:String;
			protected function tipoCampana_cambioIndiceListaHandler(event:EventoCatClientes_General):void
			{
				if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 1 ){
					listaPro.tipoCampana = "Proveedor";
					listaPro.dataProvider(new ArrayCollection(),'Proveedor');
					var obtenerFamilias:EventoCatProOferta = new EventoCatProOferta(EventoCatProOferta.OBTENER_TODAS_LAS_FAMILIAS_DEL_PROVEEDOR);
					obtenerFamilias.idProveedor = proveedorActual.idProveedor; 
					dispatchEvent(obtenerFamilias);
					infoseleccion.visible = infoseleccion.includeInLayout = false;
					listaPro.percentWidth = 74; 
				
					
				}
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 2 ){
					listaPro.tipoCampana = "Familia";
					listaPro.dataProvider(new ArrayCollection(),'Familia');
					var obtenerFamilias:EventoCatProOferta = new EventoCatProOferta(EventoCatProOferta.OBTENER_TODAS_LAS_FAMILIAS_DEL_PROVEEDOR);
					obtenerFamilias.idProveedor = proveedorActual.idProveedor; 
					dispatchEvent(obtenerFamilias);
					textoSubgrupo.text = "FAMILIAS SELECCIONADAS";
					tipoTexto = "Familia";
					
					listaPro.percentWidth = 37;
					listaSeleeccion.dataProvider = new ArrayCollection();
					infoseleccion.percentWidth = 37;
					infoseleccion.visible = infoseleccion.includeInLayout = true;
					
				}
				
				
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 3 ){
					listaPro.tipoCampana = "Clasificación";
					listaPro.dataProvider(new ArrayCollection(),'Clasificación');
					var obtenerTodasLasClasif:EventoCatProOferta = new EventoCatProOferta (EventoCatProOferta.OBTENER_CONFIGURACIONES_CLASIFICACION_X_ID_PROVEEDOR );
					obtenerTodasLasClasif.idProveedor = proveedorActual.idProveedor;
					dispatchEvent(obtenerTodasLasClasif);
					
					textoSubgrupo.text = "CLASIFICACIONES";
					tipoTexto = "Clasificación";
					listaSeleeccion.dataProvider = new ArrayCollection();
					infoseleccion.visible = infoseleccion.includeInLayout = true;
					infoseleccion.percentWidth = 37;
					listaPro.percentWidth = 37;
					
				}
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].llave == 4 ){
					textoSubgrupo.text = "PRODUCTOS SELECCIONADOS";
					listaPro.dataProvider(new ArrayCollection(),'Producto');
					listaPro.tipoCampana = "Producto";
					tipoTexto = "Producto";
					var obtenerProd:EventoCatProCampanas = new EventoCatProCampanas (EventoCatProCampanas.OBTENER_TODOS_LOS_PRODUCTOS_DEL_PROVEEDOR );
					obtenerProd.idProveedor = proveedorActual.idProveedor;
					dispatchEvent(obtenerProd);
					listaSeleeccion.dataProvider = new ArrayCollection();
					infoseleccion.visible = infoseleccion.includeInLayout = true;
					infoseleccion.percentWidth = 37;
					listaPro.percentWidth = 37;
					
				}
				
				cantidadMasTipo = "";
			}
			
	
			
			
			public function set recibeTodosLosProductosDelProveedor(pro:ArrayCollection):void{
				
				if( pro == null)
					return;
				if(pro.length > 0)
				{
					if(!vieneDeEditar)
					{
						enumerarlista(pro);
						listaPro.dataProvider(pro,listaPro.tipoCampana);
						cantidadMasTipo = "";
					}
					else if(vieneDeEditar)
					{
						for (var f:int = 0; f < pro.length; f++)
						{
							for (var pc:int = 0; pc < campOriginal.productos.length; pc++)
							{
								 if(pro[f].idProducto == campOriginal.productos[pc].idProducto)
									pro.removeItemAt(f);
							}
						}
						
						enumerarlista(pro);
						listaPro.dataProvider(pro,listaPro.tipoCampana);
						enumerarlista(campOriginal.productos)
						listaSeleeccion.dataProvider = campOriginal.productos;
						
						if(campOriginal.productos.length > 1)
							cantidadMasTipo = campOriginal.productos.length + " " + "Productos";
						else if (campOriginal.productos.length == 1)
							cantidadMasTipo = campOriginal.productos.length + " " + "Producto";
						
					}
				}
				else if(pro.length == 0){
					
					listaPro.dataProvider(pro,listaPro.tipoCampana);
				}
			}
			
			
			public function set recibeLasFamiliasDelProveedorSeleccionado($familias:ArrayCollection):void
			{
				arregroTitulosPorFamilia = $familias;
				familySort();
			}
			
			private var arregroTitulosPorFamilia:ArrayCollection;
			private function familySort():void
			{
				var tempSort:ArrayCollection = new ArrayCollection();
				var filtrado:Query = new Query(arregroTitulosPorFamilia,["industria","tipo","subtipo","control"]);
				var arrayIndustrial:ArrayCollection = new ArrayCollection(['Farma','Alimentos','Aguas','Clínico','Gobierno']);
				var arrayTipoFarma:ArrayCollection = new ArrayCollection(['Estandares','Reactivos','Publicaciones','Labware','Medicamentos','Asesorías','Capacitaciones']);
				var arrayTipoAlimentos:ArrayCollection = new ArrayCollection(['Estandares','Reactivos','Labware','Diagnóstico','Publicaciones','Medicamentos','Asesorías','Capacitaciones']);
				var arrayTipoAgua:ArrayCollection = new ArrayCollection(['Estandares','Reactivos','Labware','Pruebas de aptitud','Publicaciones','Medicamentos','Asesorías','Capacitaciones']);
				var arraySubtipo:ArrayCollection = new ArrayCollection(['Químico','Biológico']);
				var arrayControl:ArrayCollection = new ArrayCollection(['Normal','Nacionales','Mundiales','Origen']);
				var punteros:Array = new Array;
				var arrayTipo:ArrayCollection = new ArrayCollection;
				
				
				for (var i:int = 0; i < arrayIndustrial.length; i++ )
				{
					if (arrayIndustrial[i] == 'Farma' || arrayIndustrial[i] == 'Clínico' || arrayIndustrial[i] == 'Gobierno' )
					{
						arrayTipo = arrayTipoFarma;
					}
					else if(arrayIndustrial[i] == 'Alimentos')
					{
						arrayTipo = arrayTipoAlimentos;
					}
					else
					{
						arrayTipo = arrayTipoAgua;
					}
					
					for (var j:int = 0; j < arrayTipo.length; j++)
					{
						if (arrayTipo[j] == 'Estandares' || arrayTipo[j] == 'Reactivos')
						{
							for (var k:int = 0; k < arraySubtipo.length; k++)
							{
								for (var l:int = 0; l < arrayControl.length; l++)
								{
									punteros = filtrado.getPunteros([arrayIndustrial[i],arrayTipo[j],arraySubtipo[k],arrayControl[l]],'industria');
									tempSort.addAll(filtrado.armarLista(punteros));
								}
							}
						}
						else
						{
							punteros = filtrado.getPunteros([arrayIndustrial[i],arrayTipo[j],null,null],'industria');
							tempSort.addAll(filtrado.armarLista(punteros));
						}
					}
				}
				
				arregroTitulosPorFamilia = ObjectUtil.copy(tempSort) as ArrayCollection;
				if(!vieneDeEditar)
				{
					enumerarlista(arregroTitulosPorFamilia);
					listaPro.dataProvider(arregroTitulosPorFamilia,listaPro.tipoCampana);
					cantidadMasTipo = "";
				}
				else if(vieneDeEditar)
				{
					if(campOriginal.tipo == "Familia" )
					{
						for (var f:int = 0; f < arregroTitulosPorFamilia.length; f++)
						{
							for (var fc:int = 0; fc < campOriginal.familias.length; fc++)
							{
								 if(arregroTitulosPorFamilia[f].idConfiguracionPrecio == campOriginal.familias[fc].idConfiguracionPrecio)
									arregroTitulosPorFamilia.removeItemAt(f);
									
							}
						}
						
						enumerarlista(arregroTitulosPorFamilia);
						listaPro.dataProvider(arregroTitulosPorFamilia,listaPro.tipoCampana);
						listaSeleeccion.dataProvider = campOriginal.familias;
					}
					else if(campOriginal.tipo == "Proveedor" )
					{
						enumerarlista(arregroTitulosPorFamilia);
						listaPro.dataProvider(arregroTitulosPorFamilia,listaPro.tipoCampana);
						listaSeleeccion.dataProvider = campOriginal.familias;
					}
					if(campOriginal.familias.length > 1)
						cantidadMasTipo = campOriginal.familias.length + " " + "Familias";
					else if(campOriginal.familias.length == 1)
						cantidadMasTipo = campOriginal.familias.length + " " + "Familia";
					contabilizarProductosEnLista(campOriginal.familias);
				}
			
			}
			
			
			private function selectRenderer(item:Object):ClassFactory
			{
				
				var classFactory:ClassFactory = new ClassFactory(itemRenderLsitadoAenviar);
				if(listaPro.tipoCampana == "Proveedor")
				{
					classFactory.properties = {grupoVisible:'Proveedor'};
					
					
				}
				else if(listaPro.tipoCampana == "Familia")
				{
					classFactory.properties = {grupoVisible:'Familia'};
					
				}
					
				else if(listaPro.tipoCampana == "Clasificación")
				{
					classFactory.properties = {grupoVisible:'Clasificación'};
					
				}
				else if(listaPro.tipoCampana == "Producto")
				{
					classFactory.properties = {grupoVisible:'Producto'};
					
				}
				
				return classFactory;
			}
			
			protected function grpGuardarCancelar_clickHandler(event:MouseEvent):void
			{
				dispatchEvent(new Event("cancelarCreacionDeCampaña"));
				
			}
			
			
			public function set recibeConfiguracionesClasificacionPoridProveedor($listaConfClasif:ArrayCollection):void
			{
				if( $listaConfClasif == null)
					return;
				
				if($listaConfClasif.length > 0)
				{
					
					if(!vieneDeEditar){
						enumerarlista($listaConfClasif);
						listaPro.dataProvider($listaConfClasif,listaPro.tipoCampana);
						cantidadMasTipo = "";
					}
					
					else if(vieneDeEditar){
						for (var f:int = 0; f < $listaConfClasif.length; f++)
						{
							for (var cs:int = 0; cs < campOriginal.clasificaciones.length; cs++)
							{
								 if($listaConfClasif[f].idClasificacion == campOriginal.clasificaciones[cs].idClasificacion)
									$listaConfClasif.removeItemAt(f--);
							}
						}
						
						enumerarlista($listaConfClasif);
						listaPro.dataProvider($listaConfClasif,listaPro.tipoCampana);
						enumerarlista(campOriginal.clasificaciones)
						listaSeleeccion.dataProvider = campOriginal.clasificaciones;
						
						if(campOriginal.clasificaciones.length > 1)
							cantidadMasTipo = campOriginal.clasificaciones.length + " " + "Clasificaciones";
						else if(campOriginal.clasificaciones.length == 1)
							cantidadMasTipo = campOriginal.clasificaciones.length + " " + "Clasificaciòn";
						
						contabilizarProductosEnLista(campOriginal.clasificaciones);
						
					}
					
					
					
					
				}
				else if($listaConfClasif.length == 0){
					
					listaPro.dataProvider(arregroTitulosPorFamilia,listaPro.tipoCampana);
				}
			}	
			
			
			private function verificarInfoCompleta():String
			{
				var dato:String = "completo";
				
				if(txtNombre.text == "" || inicioCampana.txtDateField.text == "" || finCampana.txtDateField.text == "" || objetivotext.text == "" )
				{
					dato = "informacion"
					return dato;
				}
				
				
				if(inicioCampana.selectedDate > finCampana.selectedDate)
				{
					dato = "fechas";
					return dato;
				}
				
				if(porcentaje.selected){
					if(Number(cantidadPorcentaje.text) > 100)
					{
						dato = "porcentaje";
						return dato;
					}
					
					
				}
				else if(!monto.selected)
				{
					dato = "comision"
					return dato;
				}
				
				
				
				if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Familia"){
					
					if(listaSeleeccion.dataProvider.length == 0)
					{
						dato = "sinFamilia"
						return dato;
					}
				}
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Clasificación"){
					if (listaSeleeccion.dataProvider.length == 0)
					{
						dato = "sinClasificacion"
						return dato;
					}
				}
				else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Producto"){
					if(listaSeleeccion.dataProvider.length == 0)
					{
						dato = "sinProducto"
						return dato;
					}
				}
				
				return dato;
			}
			
			
			protected function lnkGuardar_clickHandler(event:MouseEvent):void
			{
				
				var estadoInfo:String = verificarInfoCompleta();
				
				if(estadoInfo == "completo")
				{
					
					var campa:Campana = new Campana();
					var eve:EventoCatProCampanas = new EventoCatProCampanas(EventoCatProCampanas.AGREGAR_ACTUALIZAR_CAMPANA_COMERCIAL);
					if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Proveedor")
					{
						campa.tipo = "Proveedor";
					}
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Familia"){
						campa.tipo = "Familia";
						campa.familias = listaSeleeccion.dataProvider as ArrayCollection;
					}
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Clasificación"){
						campa.tipo = "Clasificación";
						campa.clasificaciones = listaSeleeccion.dataProvider as ArrayCollection;
					}
					else if(tipoCampana.dataProvider[tipoCampana.selectedIndex].valor == "Producto"){
						campa.tipo = "Producto";
						campa.productos = listaSeleeccion.dataProvider as ArrayCollection;
					}
					
					
					if(vieneDeEditar)
						campa.id_Camapana = campOriginal.id_Camapana;
					else if(!vieneDeEditar)
						campa.id_Camapana = 0;
					campa.idProvee = proveedorActual.idProveedor;
					campa.nombre = txtNombre.text;
					campa.fechaInicio = inicioCampana.selectedDate;
					campa.fechaFin = finCampana.selectedDate;
					campa.fuaCampana = new Date();
					
					
					if(monto.selected){
						campa.tipo_Comision = "Monto";
						campa.comision = Number(cantidadMonto.text);
					}
						
					else if(porcentaje.selected){
						campa.tipo_Comision = "Porcentaje";
						campa.comision = Number(cantidadPorcentaje.text);
					}
					campa.objetivo = objetivotext.text;
					eve.camp = campa;
					dispatchEvent( eve );
					
					
				}
				
				else{
					
					if(estadoInfo == "informacion")
					{
						alertaSingleton.show("Información incompleta");
					}
					else if(estadoInfo == "porcentaje" )
					{
						alertaSingleton.show("El porcentaje no puede ser mayor al 100% ");
					}
					else if(estadoInfo == "comision"){
						
						alertaSingleton.show("No ha seleccionado el tiempo de comisión ");
					}
					else if(estadoInfo == "sinFamilia"){
						
						alertaSingleton.show("No ha seleccionado ninguna Familia");
					}
					else if(estadoInfo == "sinClasificacion"){
						
						alertaSingleton.show("No ha seleccionado ninguna Clasificación ");
					}
					else if(estadoInfo == "sinProducto"){
						
						alertaSingleton.show("No ha seleccionado ningún Producto  ");
					}
					else if(estadoInfo == "fechas")
					{
						alertaSingleton.show("La fecha de inicio de campaña no puede ser mayor a la fecha fin de campaña");
					}
				}
				
				
			
				
			}
			
			protected function cambioComision(event:MouseEvent,tipo:String):void
			{
				if(tipo == 'monto')
				{
					porcentaje.selected = false;
					cantidadPorcentaje.editable = false;
					cantidadPorcentaje.text = "";
					labelPorcentaje.setStyle("color","#bfbfbf");
					
					monto.selected = true;
					cantidadMonto.editable = true;
					labelMonto.setStyle("color","#000000");
				}
				else if(tipo == 'porcentaje')
				{
					
					monto.selected = false;
					cantidadMonto.editable = false;
					cantidadMonto.text = "";
					labelMonto.setStyle("color","#bfbfbf");
					
					porcentaje.selected = true;
					cantidadPorcentaje.editable = true;
					labelPorcentaje.setStyle("color","#000000");
					
					
				}
				
			}
			
			
			private var campOriginal:Campana;
			public function recibeCampanaComercial(camC:Campana):void{
				
				vieneDeEditar = true;
				campOriginal = new Campana();
				cantidadPorcentaje.editable = true;
				cantidadMonto.editable = true;
				labelMonto.setStyle("color","#000000");
				labelPorcentaje.setStyle("color","#000000");
				campOriginal = ObjectUtil.copy(camC) as Campana;
				alistarVistaDeEdicionCampana(campOriginal);
				
				txtNombre.text = camC.nombre;
				inicioCampana.selectedDate = camC.fechaInicio;
				finCampana.selectedDate = camC.fechaFin;
				if(camC.tipo_Comision == "Porcentaje"){
					porcentaje.selected = true;
					monto.selected = false;
					cantidadPorcentaje.text = camC.comision + "";
					cantidadMonto.text = "";
					cantidadMonto.editable = false;
				}
				else if(camC.tipo_Comision == "Monto"){
					monto.selected = true;
					porcentaje.selected = false;
					cantidadMonto.text = camC.comision + "";
					cantidadPorcentaje.text = "";
					cantidadPorcentaje.editable = false;
				}
				
				objetivotext.text = camC.objetivo;
				
				
				
			}
			
			private function alistarVistaDeEdicionCampana(campanaSelect:Campana):void{
				
			
				
				if(campanaSelect.tipo == "Proveedor"){
					tipoCampana.selectedIndex = 0;
					listaPro.tipoCampana = "Proveedor";
					listaPro.dataProvider(new ArrayCollection(),'Proveedor');
					var obtenerFamilias:EventoCatProOferta = new EventoCatProOferta(EventoCatProOferta.OBTENER_TODAS_LAS_FAMILIAS_DEL_PROVEEDOR);
					obtenerFamilias.idProveedor = proveedorActual.idProveedor; 
					dispatchEvent(obtenerFamilias);
					infoseleccion.visible = infoseleccion.includeInLayout = false;
					listaPro.percentWidth = 74; 
					
				}
				else if(campanaSelect.tipo == "Familia"){
					tipoCampana.selectedIndex = 1;
					listaPro.tipoCampana = "Familia";
					listaPro.dataProvider(new ArrayCollection(),'Familia');
					var obtenerFamilias:EventoCatProOferta = new EventoCatProOferta(EventoCatProOferta.OBTENER_TODAS_LAS_FAMILIAS_DEL_PROVEEDOR);
					obtenerFamilias.idProveedor = proveedorActual.idProveedor; 
					dispatchEvent(obtenerFamilias);
					textoSubgrupo.text = "FAMILIAS SELECCIONADAS";
					tipoTexto = "Familia";
					
					listaPro.percentWidth = 37;
					listaSeleeccion.dataProvider = new ArrayCollection();
					infoseleccion.percentWidth = 37;
					infoseleccion.visible = infoseleccion.includeInLayout = true;
					
				}
				else if(campanaSelect.tipo == "Clasificación"){
					tipoCampana.selectedIndex = 2;
					listaPro.tipoCampana = "Clasificación";
					listaPro.dataProvider(new ArrayCollection(),'Clasificación');
					var obtenerTodasLasClasif:EventoCatProOferta = new EventoCatProOferta (EventoCatProOferta.OBTENER_CONFIGURACIONES_CLASIFICACION_X_ID_PROVEEDOR );
					obtenerTodasLasClasif.idProveedor = proveedorActual.idProveedor;
					dispatchEvent(obtenerTodasLasClasif);
					
					textoSubgrupo.text = "CLASIFICACIONES";
					tipoTexto = "Clasificación";
					listaSeleeccion.dataProvider = new ArrayCollection();
					infoseleccion.visible = infoseleccion.includeInLayout = true;
					infoseleccion.percentWidth = 37;
					listaPro.percentWidth = 37;
				
					
				}
				else if(campanaSelect.tipo == "Producto"){
					tipoCampana.selectedIndex = 3;
					textoSubgrupo.text = "PRODUCTOS SELECCIONADOS";
					listaPro.dataProvider(new ArrayCollection(),'Producto');
					listaPro.tipoCampana = "Producto";
					tipoTexto = "Producto";
					var obtenerProd:EventoCatProCampanas = new EventoCatProCampanas (EventoCatProCampanas.OBTENER_TODOS_LOS_PRODUCTOS_DEL_PROVEEDOR );
					obtenerProd.idProveedor = proveedorActual.idProveedor;
					dispatchEvent(obtenerProd);
					listaSeleeccion.dataProvider = new ArrayCollection();
					infoseleccion.visible = infoseleccion.includeInLayout = true;
					infoseleccion.percentWidth = 37;
					listaPro.percentWidth = 37;
				
					
				}
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				trace("medida:" + unscaledWidth);
				
				var tamReal:Number = (unscaledWidth / 1940.54) * 395;
				tamReal = tamReal < 200 ? 175: tamReal;
				inicioCampana.widthLabelDatePicker = tamReal - 29;
				finCampana.widthLabelDatePicker = tamReal - 29;
				txtNombre.width = tamReal;
				
				
				var tamMonto:Number = (unscaledWidth / 1940.54) * 168;
				tamMonto = tamMonto < 80 ? 30:tamMonto;
				
				
				cantidadMonto.width = tamMonto;
				
				
				var tamPorCentaje:Number = (unscaledWidth / 1940.54) * 105;
				tamPorCentaje = tamPorCentaje < 80 ? 25:tamPorCentaje;
				
				cantidadPorcentaje.width = tamPorCentaje;
				
				
				var tamRadios:Number = (unscaledWidth / 1940.54) * 25;
				tamRadios = tamRadios < 10 ? 10:tamRadios;
				
				monto.width = tamRadios;
				monto.height = tamRadios;
				porcentaje.width = tamRadios;
				porcentaje.height = tamRadios;
				
				
				var letraComi:Number =  (unscaledWidth / 1940.54) * 14;
				letraComi = letraComi < 10 ? 10:letraComi;
				tamLetraComision = letraComi;
				   
				if (unscaledWidth < 1254) {
					grpCombo.layout = lyVertical;
				} else {
					grpCombo.layout = lyHorizontal;
				}
				
			}
			
			public function limpiarVista():void{
				txtNombre.text = "";
				inicioCampana.selectedDate = null;
				finCampana.selectedDate = null;
				cantidadMonto.text = "";
				cantidadMonto.editable = true;
				cantidadPorcentaje.editable = true;
				cantidadPorcentaje.text = "";
				porcentaje.selected = false;
				monto.selected =  false;
				
				objetivotext.text = "";
				tipoCampana.selectedIndex = 0;
				tipoCampana.dispatchEvent(new EventoCatClientes_General(EventoCatClientes_General.CAMBIO_INDICE_LISTA));
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:VerticalLayout id="lyVertical" verticalAlign="middle" />
		<s:HorizontalLayout id="lyHorizontal" verticalAlign="middle" />
	</fx:Declarations>
	

	
	<s:VGroup width="100%" height="100%" id="grpContenedorPrincipal" >
		
		<s:BorderContainer borderVisible="false" width="100%" height="100%" backgroundColor="white" backgroundAlpha="0">
			<s:Scroller width="100%" height="100%">
			<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="0" > 
				
				<s:HGroup width="100%" height="95%" gap="0" paddingTop="0" > <!--grupoContineVistas-->
					
					<s:Scroller width="26%" height="100%" horizontalScrollPolicy="off">
					<s:VGroup width="100%" height="100%" id="infoCampana" > <!--grupoinfoCampana-->
					
						<s:Group width="100%" height="100%"  >
							<s:Rect width="100%" height="100%">
								<s:fill>
									<s:SolidColor color="#f3f3f4" />
								</s:fill>
							</s:Rect>
							
							<s:VGroup width="100%" height="100%" paddingLeft="30" paddingRight="40" gap="20"  paddingBottom="20">
								
								<mx:Spacer height="25" />
								
								<!--<s:HGroup width="100%" verticalAlign="middle" >-->
									<s:Group width="100%" id="grpCombo" layout="{lyHorizontal}" >
										<s:Label styleName="tab_texto_12_Helvetica" id="textCam"  fontSize="{tamLetra}" color="#424242" text="Campaña por:" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
										
										<combobox:ComboBlancoDefult width="60%" tipofontWeight="bold" height="35" tamLetra="16" id="tipoCampana" dataProvider="{Horas}" cambioIndiceLista="tipoCampana_cambioIndiceListaHandler(event)" colorLetra="0x008894" />
									</s:Group>  
									
								
								<!--</s:HGroup> --> 
								
								<mx:Spacer height="20" />
								
								<s:VGroup width="100%" textAlign="right" >
									<s:Label styleName="tab_texto_12_Helvetica"  fontSize="14" color="#424242" text="DATOS GENERALES" textAlign="right" fontFamily="Helvetica" fontWeight="bold" />
									<otros:divisionGruesa />
								</s:VGroup>  
								
								
								<mx:Spacer height="20" />
								
								<s:VGroup width="100%" >
									
									<s:Label styleName="tab_texto_12_Helvetica" fontSize="14" color="#424242" text="Nombre de la Campaña:" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
									<input:TxtInputBlanco id="txtNombre" width="100%" height="30" fontFamily="Helvetica" />
								</s:VGroup>  
								
								<mx:Spacer height="20" />
								
								<s:VGroup width="100%" >
									<s:Label styleName="tab_texto_12_Helvetica"  fontSize="14" color="#424242" text="Inicio de Campaña:" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
									<dateField:DatePickerDefault bordeRedondo="false" colorBorde="#eaeaea" grosorBorde="1" id="inicioCampana" verticalAlignTextInput="middle" widthLabelDatePicker="395"
																 heightLabelDatePicker="{heightComponentes}" fontSizeText="14" />
								</s:VGroup>  
								
								<mx:Spacer height="20" />
							
								<s:VGroup width="100%"  >
									<s:Label styleName="tab_texto_12_Helvetica"  fontSize="14" color="#424242" text="Final de Campaña:" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
									<dateField:DatePickerDefault bordeRedondo="false" colorBorde="#eaeaea" grosorBorde="1" id="finCampana" verticalAlignTextInput="middle" widthLabelDatePicker="395"
																 heightLabelDatePicker="{heightComponentes}" fontSizeText="14" />
								</s:VGroup>  
								
								<mx:Spacer height="20" />
								
								<s:VGroup width="100%"  >
									<s:Label styleName="tab_texto_12_Helvetica"  fontSize="14" color="#424242" text="Comisión:" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
									<s:HGroup width="100%" height="100%" verticalAlign="middle" >
										<Componentes:RadioAzulConEspacio width="25" height="25" id="porcentaje" click="cambioComision(event,'porcentaje')" />
										<!--<chekbox:radioDefaultPQNet id="porcentaje"  tipoCheck="circuloRadio" label=" " useHandCursor="true" />-->
										<input:TxtInputBlanco  width="25%" restrict="{/[0-9]+\.?[0-9]/}" height="30" fontFamily="Helvetica" id="cantidadPorcentaje" />
										<s:Label styleName="tab_texto_12_Helvetica"  fontSize="{tamLetraComision}" color="#424242" id="labelPorcentaje" text="%" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
										<mx:Spacer width="5" />
										<Componentes:RadioAzulConEspacio width="25" height="25" id="monto" click="cambioComision(event,'monto')" />
										<input:TxtInputBlanco  width="40%" height="30" restrict="{/[0-9]+\.?[0-9]/}"  fontFamily="Helvetica" id="cantidadMonto" />
										<s:Label styleName="tab_texto_12_Helvetica"  fontSize="{tamLetraComision}" color="#424242" id="labelMonto" text="MXN  $" textAlign="left" fontFamily="Helvetica" fontWeight="bold" />
										
									</s:HGroup>  
									
							
								</s:VGroup>  
								
								
								<mx:Spacer height="40" />
								
								
								<s:VGroup width="100%" height="40%">
									<s:Label styleName="tab_texto_14_Helvetica" fontSize="14" color="#424242" text="Objetivo:" fontWeight="bold" />
									<s:Group width="100%" height="100%" >
										<s:Rect width="100%" height="100%">
											<s:fill>
												<s:SolidColor color="0xFFFFFF" />
											</s:fill>
										</s:Rect>
										<mx:TextArea id="objetivotext" width="100%" height="100%" minHeight="260" fontFamily="Helvetica" fontSize="12" color="#000000" borderColor="#c7c7c7" >
										</mx:TextArea>
									</s:Group>  
								</s:VGroup>
								
								
							</s:VGroup>  
						</s:Group>	
						
					</s:VGroup>  <!--fingrupoinfoCapana-->
					</s:Scroller>
				
				
					
					<Campanas:ListadoTipoCampana width="37%" height="100%" id="listaPro" />	
			       
					<otros:VDivision width="1" height="100%" grueso="1" color="0xeaeaea" />
					
					<s:VGroup width="37%" height="100%" visible="false" includeInLayout="false" id="infoseleccion" paddingRight="20" paddingLeft="20" >
						<mx:Spacer height="36" />
						<s:Label styleName="tab_texto_12_Helvetica" id="textoSubgrupo"  fontSize="14" color="#424242" text="FAMILIAS SELECCIONADAS"  textAlign="right" fontFamily="Helvetica" fontWeight="bold"  width="100%"/>
						
						<otros:divisionGruesa />
						
						<mx:Spacer height="10" />
						
						<s:Label styleName="tab_texto_12_Helvetica"  fontSize="14" color="#424242" text="#     Nombre"  fontFamily="Helvetica" fontWeight="bold"  width="100%"/>
						
						<otros:division width="100%" height="3" />	
						
						<s:List width="100%" height="95%" id="listaSeleeccion" borderVisible="false" verticalScrollPolicy="off" horizontalScrollPolicy="off" focusColor="#FFFFFF" focusEnabled="false" dragEnabled="true" dragMoveEnabled="true"
								itemRendererFunction="selectRenderer"/>
						
						<s:VGroup width="100%" height="5%" >
							<s:Rect width="100%" height="1"  id="lineaInfo" >
								<s:fill>
									<s:SolidColor color="#424242" />
								</s:fill>
							</s:Rect>
							<s:Label styleName="tab_texto_12_Helvetica" width="100%" textAlign="center"  fontSize="14" color="#424242" text="{cantidadMasTipo}"  fontFamily="Helvetica"  horizontalCenter="0"  verticalAlign="middle"/>	
						</s:VGroup>  	
						</s:VGroup>  
					
				
					
				</s:HGroup>   <!--FingrupoContineVistas-->
				
				<s:VGroup width="100%" paddingBottom="10" gap="10" verticalAlign="middle" >
					<otros:divisionGruesa width="100%"/>
					<s:Group width="100%" id="grpBotones">
						<s:HGroup width="100%" id="grpGuardarCancelar" paddingLeft="20"  paddingRight="20" >
							<pqNet:botonPqNetLargo label="Cancelar" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL }"  click="grpGuardarCancelar_clickHandler(event)"  id="lnkCancelar" />
							<s:Spacer width="100%"/>
							<pqNet:botonPqNetLargo label="Guardar" id="lnkGuardar" colorBase="0x{catalogoColores.LABEL_VERDE_CLARO }"  click="lnkGuardar_clickHandler(event)"
												   />
						</s:HGroup>
					</s:Group>
					
				</s:VGroup>  
				
			</s:VGroup>
			
		   </s:Scroller>
		</s:BorderContainer>
		
	</s:VGroup>
</s:Group>