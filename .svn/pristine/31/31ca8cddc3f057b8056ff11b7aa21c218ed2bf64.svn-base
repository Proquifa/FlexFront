<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 xmlns:componentes="mx.com.proquifa.vista.vistas.registrarConfirmacion.componentes.*"
		 creationComplete="init(event)">
	<fx:Metadata>
	[Event(name="clickOverCheck", type="mx.com.proquifa.vista.eventos.registrarConfirmacion.EventoRegistrarConfirmacion")]
	[Event(name="clickOverRestablecer", type="mx.com.proquifa.vista.eventos.registrarConfirmacion.EventoRegistrarConfirmacion")]
	[Event(name="clickOverEditar", type="mx.com.proquifa.vista.eventos.registrarConfirmacion.EventoRegistrarConfirmacion")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.vista.eventos.registrarConfirmacion.EventoRegistrarConfirmacion;
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			[Bindable] private var colorFondoRest:uint = 0xFFFFFF;
			[Bindable] private var colorFondo:uint = 0xFFFFFF;
			[Bindable]private var tipoCheck:String = "disponible";
			[Bindable]private var _selected:Boolean;
			private var _tipo:String = "";
			[Bindable]private var texto:String = "";
			private var _fontSize:Number = 14;
			
			[Bindable]
			public function get fontSize():Number
			{
				return _fontSize;
			}

			public function set fontSize(value:Number):void
			{
				_fontSize = value;
			}

			[Bindable]
			public function get selected():Boolean
			{
				/*return _selected;*/
				if(checkTipo)
					return checkTipo.selected;
				else
					return false;
			}

			public function set selected(value:Boolean):void
			{
				/*_selected = value;*/
				if(checkTipo)
					checkTipo.selected = value;
			}	

			[Bindable]
			public function get tipo():String
			{
				return _tipo;
			}
			
			public function set tipo(value:String):void
			{
				_tipo = value;
				switch(value)
				{
					case "chkDisponible":
					{
						colorFondo = 0x274727;
						colorFondoRest = 0xC6E9D4;
						texto = "SIN IMPACTO FEE";
						tipoCheck = "disponible";
						break;
					}
					case "chkCambio":
					{
						colorFondo = 0xac3c0b;
						colorFondoRest = 0xfceee5;
						texto = "IMPACTO FEE";
						tipoCheck = "cambio";
						break;
					}
					case "chkBack":
					{
						colorFondo = 0x390f51;
						colorFondoRest = 0xede6f0;
						texto = "BACK ORDER";
						tipoCheck = "back";
						break;
					}
					case "chkCancelar":
					{
						colorFondo = 0x790313;
						colorFondoRest = 0xf5e6e7;
						texto = "CANCELAR";
						tipoCheck = "cancelar";
						break;
					}
					default:
					{
						break;
					}
				}
			}
			
			protected function cambio(event:MouseEvent):void
			{
				/*if(checkTipo.selected)
					selected = true;
				else
					selected = false;*/
				var evento:EventoRegistrarConfirmacion = new EventoRegistrarConfirmacion(EventoRegistrarConfirmacion.CLIC_CHECKBOX);
				evento.tipoSelect = tipo;
				dispatchEvent(evento);
			}
			
			protected function init(event:FlexEvent):void
			{
				currentState = "restablecer";
				currentState = "editar";
				currentState = "normal";
			}
			
			protected function restablecer(event:MouseEvent):void
			{
				var evento:EventoRegistrarConfirmacion = new EventoRegistrarConfirmacion(EventoRegistrarConfirmacion.CLIC_RESTABLECER);
				/*evento.tipoSelect = tipo;*/
				dispatchEvent(evento);
			}
			
			protected function editar(event:MouseEvent):void
			{
				var evento:EventoRegistrarConfirmacion = new EventoRegistrarConfirmacion(EventoRegistrarConfirmacion.CLIC_EDITAR);
				/*evento.tipoSelect = tipo;*/
				dispatchEvent(evento);
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="restablecer"/>
		<s:State name="editar"/>
	</s:states>
	<s:Group width="100%" height="100%" includeIn="normal">
		<s:Rect width="100%" height="100%" >
			<s:fill>
				<s:SolidColor color="{checkTipo.selected == true ? colorFondo:0xFFFFFF}"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
			<componentes:checkBoxColoreCR id="checkTipo" width="15" height="15" click="cambio(event)"  verticalCenter="0" horizontalCenter="0" tipoCheck="{tipoCheck}"/>
			<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{fontSize}" color="{checkTipo.selected == false ? colorFondo:0xFFFFFF}"
					 text="{checkTipo.selected == false ? texto:'EDITAR'}" textAlign="center" maxDisplayedLines="2" verticalAlign="middle"/>
		</s:VGroup>
	</s:Group>  
	<s:Group width="100%" height="100%" includeIn="editar">
		<s:Rect width="100%" height="100%" >
			<s:fill>
				<s:SolidColor color="{colorFondo}"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" click="editar(event)">
			<mx:Image source="{catalogoIconosBotones.getInstance().check_blanco_grande}"/>
			<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{fontSize}" color="0xFFFFFF"
					 text="EDITAR" textAlign="center" maxDisplayedLines="2" verticalAlign="middle"/>
		</s:VGroup>
	</s:Group>  
	<s:Group width="100%" height="100%" includeIn="restablecer">
		<s:Rect width="100%" height="100%" >
			<s:fill>
				<s:SolidColor color="{colorFondoRest}"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" click="restablecer(event)">
			<s:Label styleName="TituloNovecento_18" fontWeight="bold" fontSize="{fontSize}" color="{colorFondo}"
					 text="RESTABLECER" textAlign="center" maxDisplayedLines="2" verticalAlign="middle"/>
		</s:VGroup>
	</s:Group>  
	
	
</s:Group>
