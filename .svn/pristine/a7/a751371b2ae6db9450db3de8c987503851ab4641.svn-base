<?xml version="1.0" encoding="utf-8"?>
<renders:ContenedorIRendererListaConEnfoque xmlns:fx="http://ns.adobe.com/mxml/2009" 
											xmlns:s="library://ns.adobe.com/flex/spark" 
											xmlns:mx="library://ns.adobe.com/flex/mx"  
											xmlns:renders="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.renders.*" 
											xmlns:linkButton="skins.skin.linkButton.*"
											xmlns:label="skins.skin.label.*"
											>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Cobros;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			[Bindable] private var _icono:Class = catalogoIconosGrid.getInstance().render_enfoque;
			
			private function verFactura():void{
				var _factura:String  = (data as Cobros).factura.toString();
				var _url:URLRequest = new URLRequest();
				var path:Object = Util.rutaFecha(data.fechaFacturacion);
				_url.url = RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA + (data as Cobros).fpor +"/" + path.ruta + (data as Cobros).factura + ".pdf";
				navigateToURL(_url);	
			}
			
			private function colorMoroso($moroso:String):uint{
				if ($moroso == "SI" ){
					return "0x" + catalogoColores.LABEL_ROJO;
				}else if ($moroso == "NO" ){
					return "0x" + catalogoColores.LABEL_VERDE;
				}else{
					return 0x000000;
				}
			}
			
		]]>
	</fx:Script>
	
	<renders:listaEnfocados>
		<s:VGroup gap="5" height="100%" width="100%" paddingBottom="5" paddingTop="10" paddingRight="10">
			
			<s:VGroup width="100%" >
				<s:VGroup width="100%" >
					
					<s:HGroup width="100%" horizontalAlign="left" >
						<label:Titulo paddingTop="0" width="100%" text="# {( data as Cobros).numFila +' · ' + '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares) +' · ' + (data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' pza' : ' pzas')  }" />
						<s:HGroup width="70%" horizontalAlign="right"  >
							<label:Titulo paddingTop="0" text="FEP: " />
							<label:Fecha fecha="{(data as Cobros).fechaEsperadaPago}" />
						</s:HGroup>
					</s:HGroup>
					
					<s:HGroup  width="100%" horizontalAlign="left" paddingTop="5" paddingBottom="5">
						<linkButton:LinkButtonPQNet2 label="F-{(data as Cobros).factura} " click="verFactura()"/>
						<s:HGroup width="100%" horizontalAlign="right">
							<label:Titulo paddingTop="0" text="Fecha facturación: " />
							<label:Fecha textAlign="right" fecha="{(data as Cobros).fechaFacturacion} " />
						</s:HGroup>
					</s:HGroup>
					
					<s:HGroup width="100%" >
						<label:Titulo paddingTop="0" textAlign="left" text="Vendió: " />
						<label:Texto textAlign="left" text="{(data as Cobros).fpor} " />
						
						<s:HGroup width="100%" textAlign="right" >
							<s:Spacer width="100%" />
							<s:Ellipse width="10" height="10" visible="{(data as Cobros).color == null ? false : true}" id="elipse">
								<s:fill>
									<s:SolidColor id="elipse1" color="{uint('0x' + (data as Cobros).color )}"/>
								</s:fill>
								<!--<s:filters>
									<s:DropShadowFilter alpha="1" angle="45" blurX="1" blurY="2"
														color="#909090" distance="2" hideObject="false" inner="false" knockout="false" 
														quality="1" strength="1"/>
								</s:filters>-->
							</s:Ellipse>
							<label:Titulo paddingTop="0" id="lblRestanteCobros" text=" DRC: {(data as Cobros).diasRestantesCobro == null ? 'Pendiente' : (data as Cobros).diasRestantesCobro} " />
						</s:HGroup>
						
					</s:HGroup>
					
				</s:VGroup>
			</s:VGroup>
			
			<s:HGroup width="100%" verticalAlign="middle">
				<s:Image source="{ this._icono }" horizontalAlign="left" visible="{data.isEnfocado}"/>
			</s:HGroup>
		</s:VGroup>
	</renders:listaEnfocados>
	
	<renders:listaSinEnfoque>
		<s:VGroup gap="5" height="100%" width="100%" paddingBottom="5" paddingTop="10" paddingRight="10" paddingLeft="10">
			
			<s:VGroup width="100%" >
				<s:VGroup width="100%" >
					
					<s:HGroup width="100%" horizontalAlign="left" >
						<label:Titulo paddingTop="0" width="100%" text="# {( data as Cobros).numFila +' · ' + '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Cobros).montoDolares) +' · ' + (data as Cobros).piezas + ((data as Cobros).piezas == 1 ? ' pza' : ' pzas')  }" />
						<s:HGroup width="70%" horizontalAlign="right"  >
							<label:Titulo paddingTop="0" text="FEP: " />
							<label:Fecha fecha="{(data as Cobros).fechaEsperadaPago}" valorPorDefault="NA" />
						</s:HGroup>
					</s:HGroup>
					
					<s:HGroup  width="100%" horizontalAlign="left" paddingTop="5" paddingBottom="5">
						<linkButton:LinkButtonPQNet2 label="F-{(data as Cobros).factura} " click="verFactura()"/>
						<s:HGroup width="100%" horizontalAlign="right">
							<label:Titulo paddingTop="0" text="Fecha facturación: " />
							<label:Fecha  textAlign="right" fecha="{(data as Cobros).fechaFacturacion} " />
						</s:HGroup>
					</s:HGroup>
					
					<s:HGroup width="100%" >
						<label:Titulo paddingTop="0" textAlign="left" text="Vendió: " />
						<label:Texto textAlign="left" text="{(data as Cobros).fpor} " />
						
						<s:HGroup id="lblMoroso" width="100%" horizontalAlign="right" visible="{(data as Cobros).estado != 'Cancelada'}" includeInLayout="{(data as Cobros).estado != 'Cancelada'}" >
							<label:Titulo paddingTop="0" text="Moroso:"  />
							<label:Texto text="{(data as Cobros).moroso == null ? 'Pendiente' : (data as Cobros).moroso}" color="{colorMoroso((data as Cobros).moroso)}" />
						</s:HGroup>
						<s:HGroup id="lblCancelada" width="100%" horizontalAlign="right" visible="{(data as Cobros).estado == 'Cancelada'}" includeInLayout="{(data as Cobros).estado == 'Cancelada'}" >
							<label:Titulo paddingTop="0" text="CANCELADA" color="0x{catalogoColores.LABEL_ROJO}" />
						</s:HGroup>
					</s:HGroup>
					
				</s:VGroup>
			</s:VGroup>
			
		</s:VGroup>
	</renders:listaSinEnfoque>
	
</renders:ContenedorIRendererListaConEnfoque>
