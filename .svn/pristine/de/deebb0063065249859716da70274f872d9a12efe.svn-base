<?xml version="1.0" encoding="utf-8"?>
<s:VGroup  xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:label="skins.skin.label.*"
		   minWidth="300" minHeight="40" width="100%" height="100%" 
		   focusIn="lista.scroller.setStyle('verticalScrollPolicy', 'off');"
		   paddingTop="-10">
	
	<fx:Metadata>
		[Event(name="itemMenuEnCatalogosSeleccionadoEvent", type="mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.menu.EventoMenuContinuo")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[                   	
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.menu.EventoMenuContinuo;
			import mx.events.FlexEvent;
			
			import skins.plantillaproquifa.gestion.botoncuadro.btnGestion;
			
			[Bindable]
			public var dataProvider:ArrayCollection = new ArrayCollection();
			
			private var _tipoMenu:String = "MenuGestion";
			
			
			private function repetir_Atras(event:FlexEvent):void{
				this.atras();
			}
			
			private function atras():void{
				lista.layout.horizontalScrollPosition = lista.layout.horizontalScrollPosition - 10;
			}
			
			
			private function repetir_Adelante(event:FlexEvent):void{
				this.adelante();
			}
			
			private function adelante():void{
				lista.layout.horizontalScrollPosition = lista.layout.horizontalScrollPosition + 10;	
			}
			
			private function click_ItemSeleccionado(event:MouseEvent):void
			{
				if((event.currentTarget as List).selectedItem != null)
				{
					if(tipoMenu == "MenuGestion")
					{
						if(event.target is btnGestion)
						{
							var evento:EventoMenuContinuo = new EventoMenuContinuo(EventoMenuContinuo.ITEM_BOTONCLICK);
							evento.item_Seleccionado = event.target.dato;
							this.dispatchEvent(evento);
						}
					}
					else if(tipoMenu == "MenuCatalogos")
					{
						if(event.currentTarget is List)
						{
							var itemSelected:EventoMenuContinuo = new EventoMenuContinuo(EventoMenuContinuo.ITEM_SELECCIONADO_MENU_EN_CATALOGOS);
							itemSelected.item_Seleccionado = (event.currentTarget as List).selectedItem;
							dispatchEvent(itemSelected);
						}
					}
				}
				else
				{
					event.preventDefault();
					event.stopImmediatePropagation();
				}
			}

			[Inspectable(category="Common",enumeration="MenuGestion,MenuCatalogos",defaultValue="MenuGestion")]
			public function get tipoMenu():String
			{
				return _tipoMenu;
			}

			public function set tipoMenu(value:String):void
			{
				_tipoMenu = value;
			}

			public function seleccionarUnoDelMenu(index:int):void
			{
				lista.selectedIndex = index;
			}
			
			[Bindable]
			public var itemRenderer:IFactory;
			
			[Bindable]
			public var label:String = "";
			
		]]>
	</fx:Script>
	
	<label:TituloBankGothic_34 width="100%" id="lblMenuContinuo" text="{label}"/>
	
	<s:List id="lista" width="100%" borderVisible="false" dataProvider="{dataProvider}" itemRenderer="{itemRenderer}" mouseDown="click_ItemSeleccionado(event)">
		<s:layout>
			<s:TileLayout  id="mas" orientation="columns" requestedRowCount="1"/>
		</s:layout>
	</s:List>
</s:VGroup>
