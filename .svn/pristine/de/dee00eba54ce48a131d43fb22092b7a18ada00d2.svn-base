<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		alpha.disabled="0.5"
		initialize="init(event)"
		>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("spark.components.Button")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.components.Image;
			import spark.layouts.HorizontalAlign;
			
			private var _color:uint;
			private var _conTexto:Boolean;
			
			public var icono:Image = new Image();
			
			private var _horizontal:String;
			
			[Bindable]
			public function get color():uint
			{
				return _color;
			}
			
			public function set color(value:uint):void
			{
				_color = value;
			}
			
			
			[Bindable]
			public function get conTexto():Boolean
			{
				return _conTexto;
			}
			
			public function set conTexto(value:Boolean):void
			{
				_conTexto = value;
			}
			
			public function get horizontal():String
			{
				return _horizontal;
			}

			public function set horizontal(value:String):void
			{
				_horizontal = value;
				mostarIcono();
			}
			
			protected function init(event:FlexEvent):void
			{
				icono.verticalCenter = 0;
				icono.horizontalAlign = HorizontalAlign.RIGHT;
				mostarIcono();
			}
			
			private function mostarIcono():void{
				switch(horizontal)
				{
					case HorizontalAlign.LEFT:
					{
						hgRight.removeAllElements();
						hgRight.visible = hgRight.includeInLayout = false;
						hgLeft.removeAllElements();
						hgLeft.addElement(icono);
						hgLeft.visible = hgLeft.includeInLayout = true;
						break;
					}
					case HorizontalAlign.RIGHT:
					{
						hgLeft.removeAllElements();
						hgLeft.visible = hgLeft.includeInLayout = false;
						hgRight.removeAllElements();
						hgRight.addElement(icono);
						hgRight.visible = hgRight.includeInLayout = true;
						break;
					}
						
					default:
					{
						hgLeft.removeAllElements();
						hgLeft.visible = hgLeft.includeInLayout = false;
						hgRight.removeAllElements();
						hgRight.addElement(icono);
						hgRight.visible = hgRight.includeInLayout = true;
						break;
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="disabled" />
		<s:State name="down" stateGroups="selected" />
		<s:State name="over" />
		<s:State name="up" />
	</s:states>
	
	
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="{color}" alpha.down="0.7" alpha.over="0.8" />
		</s:fill>
	</s:Rect>
	
	<s:Group width="100%" height="100%">
		
		<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" gap="10">
			
			<s:HGroup id="hgLeft" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" visible="false" includeInLayout="false" >
				
			</s:HGroup>
			
			<s:Label id="labelDisplay" fontFamily="Helvetica" fontStyle="normal" fontSize="13"
					 color="#FFFFFF" includeInLayout="{conTexto}" visible="{conTexto}"
					 color.up="#FFFFFF" color.selected="#FFFFFF"  
					 alpha.disabled="0.5"  />
			
						
			<s:HGroup id="hgRight" height="100%" horizontalAlign="center" verticalAlign="middle" horizontalCenter="0" >
				
			</s:HGroup>
			
		</s:HGroup>
	</s:Group>
	
</s:Skin>
