<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:otros="skins.otros.*"
		 xmlns:pqNet="skins.botones.pqNet.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.compras.reporteDePermisos.EventoReporteDePermisos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.reportes.compras.reporteDePermisos.ReporteDePermisosItemProductos;
			
			import skins.catalogos.catalogoColores;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			public var tituloPanel:String;
			
			private var currentEtiqueta:String;
			[Bindable]
			public var filtrarProductos:Boolean = false;
			
			private var _listaProductosXlote:ArrayCollection;
			
			public function set infoProductosPorSolicitud($prodXSolicitud:ArrayCollection):void
			{
				if($prodXSolicitud == null)
					return;
				if($prodXSolicitud.length >0){
					
					grpATramitar.visible = grpATramitar.includeInLayout = true;
					grpEnAutorizacion.visible = grpEnAutorizacion.includeInLayout = false;
					
					listaProductosPorSoli.dataProvider = $prodXSolicitud;
					listaProductosPorSoli.selectedIndex = 0;
					currentEtiqueta = "A Tramitar";
					selectionarPrimerItem();
					
				}
			}
			public function set infoProductosPorLote($prodXLote:ArrayCollection):void
			{
				if($prodXLote == null)
					return;
				if($prodXLote.length >0){
					
					currentEtiqueta = "En Autorizacion";
					grpATramitar.visible = grpATramitar.includeInLayout = false;
					grpEnAutorizacion.visible = grpEnAutorizacion.includeInLayout = true;
					lineaEnfoque.visible = lineaEnfoque.includeInLayout = true;
					_listaProductosXlote = $prodXLote;
					listaProductosPorLote.dataProvider = _listaProductosXlote;
					listaProductosPorLote.selectedIndex = 0;
					selectionarPrimerItem();
				}
			}
			
			//================================================================================   A TRAMITAR ======================================================================== 
			
			protected function llamarAProductosPorSolicitudPermiso($event:IndexChangeEvent):void
			{
				var currentItem:ReporteDePermisosItemProductos =  $event.currentTarget.selectedItem;
				var obtProductos:EventoReporteDePermisos;
				if(currentItem!=null){
					if(currentEtiqueta == "En Autorizacion"){
						if(currentItem.isUltimo || !currentItem.isConEnfoque){
							$event.preventDefault();
						}else{
							obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_INFORME_PRODUCTO);
							obtProductos.idSolicitud = currentItem.idSolicitud;
							dispatchEvent(obtProductos); 
						}
					}else{
						if(currentItem.isUltimo){
							$event.preventDefault();
						}else{
							obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_INFORME_PRODUCTO);
							obtProductos.idSolicitud = currentItem.idSolicitud;
							dispatchEvent(obtProductos); 
						}
					}
				}else{
					$event.preventDefault();
				}
			}
			private function selectionarPrimerItem():void
			{
				var obtProductos:EventoReporteDePermisos;
				if(currentEtiqueta == "A Tramitar"){
					if(listaProductosPorSoli.dataProvider!= null && listaProductosPorSoli.dataProvider.length>0){
						
						obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_INFORME_PRODUCTO);
						obtProductos.idSolicitud = (listaProductosPorSoli.selectedItem as ReporteDePermisosItemProductos).isUltimo ? null:(listaProductosPorSoli.selectedItem as ReporteDePermisosItemProductos).idSolicitud;
						dispatchEvent(obtProductos);   
					}
				}else{
					if(listaProductosPorLote.dataProvider!= null && listaProductosPorLote.dataProvider.length>0){
						
						obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_INFORME_PRODUCTO);
						obtProductos.idSolicitud = (listaProductosPorLote.selectedItem as ReporteDePermisosItemProductos).isUltimo ? null:(listaProductosPorLote.selectedItem as ReporteDePermisosItemProductos).idSolicitud;
						dispatchEvent(obtProductos);   
					}
				}
			}
			//=======================================================================================================================================================================================================
			protected function btnEnfoque_clickHandler($event:MouseEvent):void
			{
				var obtProductos:EventoReporteDePermisos;
				obtProductos = new EventoReporteDePermisos(EventoReporteDePermisos.OBTENER_PRODUCTOS_POR_LOTE_PERMISO);
				obtProductos.lotePermiso = tituloPanel;
				
				if( filtrarProductos ){
					filtrarProductos = false;
					obtProductos.filtrarPorEnfoque = filtrarProductos;
				}else{
					filtrarProductos = true;
					obtProductos.filtrarPorEnfoque = filtrarProductos;
				}
				dispatchEvent(obtProductos);
				btnEnfoque.rendererPq = filtrarProductos ? "enfoquedown": "enfoque";
			}
		]]>
	</fx:Script>
	<s:VGroup id="grpATramitar" width="100%" height="100%" gap="0" paddingLeft="5" paddingRight="5" paddingTop="10" horizontalAlign="center" visible="true" includeInLayout="true">
		<s:VGroup width="100%" height="50" paddingBottom="5" verticalAlign="middle">
			<s:Label text="{this.tituloPanel}" textAlign="center" color="0x{catalogoColores.TITULO_PANEL_GRIS_CLARO}" width="100%"  fontSize="20"  maxDisplayedLines="2"/>
		</s:VGroup>
		<pq:ListPq id="listaProductosPorSoli" borderVisible="false" horizontalScrollPolicy="off"
				   itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.compras.reporteDePermisos.renders.itemRenderPanelProductosPorSolicitud"
				   changing="llamarAProductosPorSolicitudPermiso(event)"/>
	</s:VGroup>
	<s:Group id="grpEnAutorizacion" width="100%" height="100%" visible="false" includeInLayout="false">
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:SolidColor color="0xf7f7f7"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="100%" height="100%"  gap="0"  paddingLeft="5" paddingRight="5" paddingTop="10">
			<s:HGroup width="100%" height="50" verticalAlign="middle" paddingBottom="5" paddingRight="12">
				<s:Label width="100%" fontSize="20" maxDisplayedLines="2" textAlign="center"
						 text="{this.tituloPanel}" color="0x{catalogoColores.TITULO_PANEL_GRIS_CLARO}"/>
				<pqNet:botonPqNetLargo id="btnEnfoque"  rendererPq="{filtrarProductos ? 'enfoquedown': 'enfoque'}" click="btnEnfoque_clickHandler(event)" />
			</s:HGroup>
			<s:Group width="100%" height="1" id="lineaEnfoque" visible="false" includeInLayout="false">
				<s:BorderContainer creationPolicy="all" width="100%" height="1" id="borderSuperior" borderColor="0xFFFFFF" 
								   backgroundColor="0xeaeaea" >
					<s:filters>
						<s:DropShadowFilter alpha="1" angle="90" blurX="0" blurY="4" id="filtroSuperior"
											color="#424242" distance="0" hideObject="false" inner="false" knockout="false" 
											quality="4" strength="2.5"/>
					</s:filters>
				</s:BorderContainer >
				<otros:division width="100%"/>
			</s:Group>	
			<pq:ListPq id="listaProductosPorLote" contentBackgroundAlpha="0" changing="llamarAProductosPorSolicitudPermiso(event)"
					   itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.compras.reporteDePermisos.renders.itemRenderPanelProductosPorSolicitud" />
		</s:VGroup>
	</s:Group>  
</s:Group>
