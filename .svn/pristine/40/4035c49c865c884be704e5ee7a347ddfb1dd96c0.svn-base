<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow  xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:combos="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.comboContactos.*"
				skinClass="mx.com.proquifa.vista.vistas.tramitarCompra.operacion.popUp.skinTitleGenerarOC"
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:graficas="skins.skin.graficas.*"
				xmlns:label="skins.skin.label.*"
				xmlns:popUp="skins.popUp.*" 
				xmlns:otros="skins.otros.*" 
				width="796" height="460" 
				>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empresa;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.ListaProductos_clase;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.vista.eventos.tramitarCompra.EventoTramitarComprarMateriales;
			import mx.com.proquifa.vista.eventos.tramitarCompra.EventoTramitarComprarPublicaciones;
			import mx.managers.PopUpManager;
			
			import skins.catalogos.catalogoIconosBotoneras;
			
			private var _lista:ArrayCollection;
			private var _currentPedido:ListaProductos_clase;
			private var _listaPedidos:ArrayCollection
			private var _idProveedor:Number;
			private var currentProv:Proveedor;
			
			[Bindable] 
			public var publicaciones:Boolean;
			public var nacional:Boolean;
			
			public var empresaEmbarque:Empresa;
			public var empresaCompra:Empresa;
			public var subTotal:Number;
			public var listaPartidasSuplementos:ArrayCollection;
			
			
			protected function clicCerrar(event:MouseEvent):void
			{
				botonAceptar.enabled = true;
				dispatchEvent( new Event("cerrarPopUpOC"));
				PopUpManager.removePopUp(this);
			}
			
			public function cargarContactos($idProv:Number):void
			{
				cmbContacto.cargarContactosporProveedor($idProv);
			}
			
			public function get listaPedidos():ArrayCollection
			{
				return _listaPedidos;
			}
			
			public var universo:ArrayCollection;
			
			public function set listaPedidos(value:ArrayCollection):void
			{
				_listaPedidos = value;
			}
			
			public function get idProveedor():Number
			{
				return _idProveedor;
			}
			
			public function set idProveedor(value:Number):void
			{
				_idProveedor = value;
				
				currentProv = new Proveedor();
				currentProv.idProveedor = value;
			}
			
			protected function generarOC(event:MouseEvent):void
			{
				
				/*MISMO POP UP*/
				listaPartidasSuplementos = new ArrayCollection();
			
				if(cmbContacto.selectedIndex != 0)
				{
					if(publicaciones){
						if(nacional)
						{
							var evtN:EventoTramitarComprarPublicaciones = new EventoTramitarComprarPublicaciones(EventoTramitarComprarPublicaciones.GENERAR_OC_DE_PARTIDAS_PUB_NACIONAL);
							if(this.listaPedidos.length > 0){ /* if PRINCIPAL*/
								currentProv.compraLinea = this.listaPedidos[0].compraLinea;
								for (var f:int = 0; f < listaPedidos.length ; f++) 
								{ /* FOR 1*/
									
									listaPartidasSuplementos.addItem(listaPedidos[f]);
									
									if(listaPedidos[f].suplementos != null && listaPedidos[f].suplementos.length > 0 ){ /*IF*/
										
										for (var s:int = 0; s < listaPedidos[f].suplementos.length ; s++) {
											listaPartidasSuplementos.addItem(listaPedidos[f].suplementos[s]);
											
										}
										
										
										
									} /*IF*/
								}/* FOR 1*/
							} /*if PRINCIPAL*/
							this.listaPedidos = listaPartidasSuplementos;
							evtN.listaPedidos = this.listaPedidos;
							currentProv.compraLinea = this.listaPedidos[0].compraLinea;
							evtN.currentProveedor = currentProv;
							evtN.publicaciones = publicaciones;
							evtN.empresaCompra = empresaCompra;
							evtN.empresaEmbarque = empresaEmbarque;
							evtN.usuarioEmp = DatosGlobales.getInstance()._usuario;
							evtN.contacto = cmbContacto.selectedItem as Contacto;
							evtN.subTotal = subTotal;
							evtN.mensaje = txtArea.text;
							evtN.cc = txtCC.text;
							botonAceptar.enabled = false;
							dispatchEvent( evtN );
						}
						else
						{
							var evt:EventoTramitarComprarPublicaciones = new EventoTramitarComprarPublicaciones(EventoTramitarComprarPublicaciones.GENERAR_OC_DE_PARTIDAS_PUB);
							
							if(this.listaPedidos.length > 0){ /*if PRINCIPAL*/
								currentProv.compraLinea = this.listaPedidos[0].compraLinea;
								for (var f:int = 0; f < listaPedidos.length ; f++) 
								{ /* FOR 1*/
									
									listaPartidasSuplementos.addItem(listaPedidos[f]);
									
									if(listaPedidos[f].suplementos != null && listaPedidos[f].suplementos.length > 0 ){ /*IF*/
										
										for (var s:int = 0; s < listaPedidos[f].suplementos.length ; s++) {
											listaPartidasSuplementos.addItem(listaPedidos[f].suplementos[s]);
											
										}
										
										
										
									} /*IF*/
								}/* FOR 1*/
							} /*if PRINCIPAL*/
							this.listaPedidos = listaPartidasSuplementos;
							evt.listaPedidos = this.listaPedidos;
							evt.currentProveedor = currentProv;
							evt.publicaciones = publicaciones;
							evt.empresaCompra = empresaCompra;
							evt.empresaEmbarque = empresaEmbarque;
							evt.usuarioEmp = DatosGlobales.getInstance()._usuario;
							evt.contacto = cmbContacto.selectedItem as Contacto;
							evt.subTotal = subTotal;
							evt.mensaje = txtArea.text;
							evt.cc = txtCC.text;
							botonAceptar.enabled = false;
							dispatchEvent( evt );
						}
						
					}else{
						if(nacional){
							var evtMN:EventoTramitarComprarMateriales = new EventoTramitarComprarMateriales(EventoTramitarComprarMateriales.GENERAR_OC_DE_PARTIDAS_NACIONAL);
							
							if(this.listaPedidos.length > 0){ /*if PRINCIPAL*/
								currentProv.compraLinea = this.listaPedidos[0].compraLinea;
								for (var f:int = 0; f < listaPedidos.length ; f++) 
								{ /* FOR 1*/
									
									listaPartidasSuplementos.addItem(listaPedidos[f]);
									
									if(listaPedidos[f].suplementos != null && listaPedidos[f].suplementos.length > 0 ){ /*IF*/
										
										for (var s:int = 0; s < listaPedidos[f].suplementos.length ; s++) {
											listaPartidasSuplementos.addItem(listaPedidos[f].suplementos[s]);
											
										}
										
										
										
									} /*IF*/
								}/* FOR 1*/
							} /*if PRINCIPAL*/
							this.listaPedidos = listaPartidasSuplementos;
							evtMN.listaPedidos = this.listaPedidos;
							evtMN.currentProveedor = currentProv;
							evtMN.publicaciones = publicaciones;
							evtMN.empresaCompra = empresaCompra;
							evtMN.empresaEmbarque = empresaEmbarque;
							evtMN.usuarioEmp = DatosGlobales.getInstance()._usuario;
							evtMN.contacto = cmbContacto.selectedItem as Contacto;
							evtMN.subTotal = subTotal;
							evtMN.mensaje = txtArea.text;
							evtMN.cc = txtCC.text;
							botonAceptar.enabled = false;
							dispatchEvent( evtMN );
							
						}else{
							var evtM:EventoTramitarComprarMateriales = new EventoTramitarComprarMateriales(EventoTramitarComprarMateriales.GENERAR_OC_DE_PARTIDAS);
							if(this.listaPedidos.length > 0){ /*if PRINCIPAL*/
								currentProv.compraLinea = this.listaPedidos[0].compraLinea;
								for (var f:int = 0; f < listaPedidos.length ; f++) 
								{ /* FOR 1*/
									
									listaPartidasSuplementos.addItem(listaPedidos[f]);
									
									if(listaPedidos[f].suplementos != null && listaPedidos[f].suplementos.length > 0 ){ /*IF*/
										
										for (var s:int = 0; s < listaPedidos[f].suplementos.length ; s++) {
											listaPartidasSuplementos.addItem(listaPedidos[f].suplementos[s]);
											
										}
										
										
										
									} /*IF*/
								}/* FOR 1*/
							} /*if PRINCIPAL*/
							
							evtM.listaPedidos = this.listaPedidos;
							evtM.currentProveedor = currentProv;
							evtM.publicaciones = publicaciones;
							evtM.empresaCompra = empresaCompra;
							evtM.empresaEmbarque = empresaEmbarque;
							evtM.usuarioEmp = DatosGlobales.getInstance()._usuario;
							evtM.contacto = cmbContacto.selectedItem as Contacto;
							evtM.subTotal = subTotal;
							evtM.mensaje = txtArea.text;
							evtM.cc = txtCC.text;
							botonAceptar.enabled = false;
							dispatchEvent( evtM );
						}
					}
				}
			}	
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				Â (this.skin as skinTitleGenerarOC).titulo = "ORDEN DE COMPRA";
			}
		]]>
	</fx:Script>
	
	
	<s:VGroup width="100%" height="100%" paddingTop="80" paddingLeft="20" paddingRight="20" paddingBottom="20" gap="15" horizontalAlign="center" >
		
		<s:HGroup width="100%"  >
			<label:TituloNovecento_22 text="CONTACTO:" color="#424242" width="25%" textAlign="right" />
			<combos:comboContacto id="cmbContacto" width="100%"  />
		</s:HGroup>  
		<otros:division width="100%" />
		<s:HGroup width="100%"  >
			<label:TituloNovecento_22 text="CC:" color="#424242" width="25%" textAlign="right" />
			<s:TextInput width="100%" id="txtCC" skinClass="skins.skin.textinput.skinTextInput2DSnContorno" fontFamily="Helvetica" />
		</s:HGroup>  
		<otros:division width="100%" />
		<s:TextArea id="txtArea" width="100%" height="100%" skinClass="skins.skin.textarea.TextAreaBlancoSkin" fontFamily="Helvetica" />
		
		<s:HGroup width="100%" >
			<mx:Image source="{catalogoIconosBotoneras.getInstance().cancelar}" click="clicCerrar(event)" />
			<s:Spacer width="100%" />
			<mx:Image source="{catalogoIconosBotoneras.getInstance().generar}"  click="generarOC(event)"  id="botonAceptar"/>
		</s:HGroup>
	</s:VGroup>  
	
	
</s:TitleWindow >
