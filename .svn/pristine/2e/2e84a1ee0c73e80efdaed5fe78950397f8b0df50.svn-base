<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 resize="group1_resizeHandler(event)"
		 >
	
	<fx:Metadata>
		[Event(name="clickCuadricula", type="mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoComun")]	
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import vista.vistas.reporte.visita.itemRenderer.CuadriculaVisitaIR;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoComun;
			import mx.events.ResizeEvent;
			
			import spark.components.Group;
			import spark.components.HGroup;
			
			import skin.border.BorderColor;
			
			
			
			private var _dataProvider:ArrayCollection;
			private var _selectedIndex:int;
			private var _selectedItem:*;
			
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}

			public function set dataProvider(value:ArrayCollection):void
			{
				if ( value != _dataProvider ) {
					_dataProvider = value;
					vgPrincipal.removeAllElements();
					drawCuadricula();
				}
			}
			
			private function drawCuadricula(vieneDe:String = "dataProvider"):void {
				trace("VideneDe: " + vieneDe);
				if (dataProvider && stage  ){
					//vgPrincipal.removeAllElements();
					var numColumnas:int = (unscaledWidth / 247); //-40 de Padding
					var filaUltima:int = Math.floor(dataProvider.length / numColumnas);
					if ((dataProvider.length % numColumnas) == 0 ) 
						filaUltima--;
						
					var ultimaColumna:int = dataProvider.length - (numColumnas * filaUltima);
					var hgroup:HGroup;
					var rowFistElement:Boolean = false;
					var currentFila:int = -1;
					var currentColumna:int = 0;
					for (var i:int = 0; i < dataProvider.length; i++) 
					{
						if ( (i % numColumnas)	 == 0 ) {
							hgroup = new HGroup();
							hgroup.percentWidth = 100;
							hgroup.height = 194;
							hgroup.gap = 0;
							//vgPrincipal.addElement(hgroup);
							rowFistElement = true;
							currentFila++;
							currentColumna = 0;
						}
						
						var group:Group = new Group;
						//group.width = 247;
						group.percentWidth = 100;
						group.percentHeight = 100;
						
						group.addEventListener(MouseEvent.MOUSE_DOWN, downRect, false, 0 ,true);
						
						var border:BorderColor = new BorderColor();
						border.percentHeight = 100;
						border.percentWidth = 100;
						
						if (filaUltima == currentFila) {
							if (!rowFistElement) {
								border.borderLeft = false;
							}
						} else if ((filaUltima - 1) == currentFila ) {
							if (!rowFistElement) {
								if (currentColumna >= ultimaColumna )
									border.borderLeft = false;
								else {
									border.borderBottom = false;
									border.borderLeft = false;
								}
							}
							else
								border.borderBottom = false;
						} else if (rowFistElement ) {
							border.borderBottom = false;
						} else {	
							border.borderBottom = false;
							border.borderLeft = false;
						}
						
						var cuadro:CuadriculaVisitaIR = new CuadriculaVisitaIR();
						cuadro.data = dataProvider[i];
						cuadro.itemIndex = i + 1;
						group.addElement(cuadro);
						group.addElement(border);
						
						vgPrincipal.addElement(group);
						//hgroup.addElement(group);
						rowFistElement = false;
						
						currentColumna++;
					}
				}
			}
			
			private function reacomodaBorder():void{
				if (dataProvider) {
					var numColumnas:int = (unscaledWidth / 247); //-40 de Padding
					var filaUltima:int = Math.floor(dataProvider.length / numColumnas);
					if ((dataProvider.length % numColumnas) == 0 ) 
						filaUltima--;
					
					var ultimaColumna:int = dataProvider.length - (numColumnas * filaUltima);
					var hgroup:HGroup;
					var rowFistElement:Boolean = false;
					var currentFila:int = -1;
					var currentColumna:int = 0;
					for (var i:int = 0; i < vgPrincipal.numElements; i++) 
					{
						if ( (i % numColumnas)	 == 0 ) {
							//vgPrincipal.addElement(hgroup);
							rowFistElement = true;
							currentFila++;
							currentColumna = 0;
						}
						
						var group:Group = vgPrincipal.getElementAt(i) as Group;
						group.percentWidth = 100;
						group.percentHeight = 100;
						
						var border:BorderColor = group.getElementAt(1) as BorderColor;
						border.percentHeight = 100;
						border.percentWidth = 100;
						
						border.borderLeft = true;
						border.borderRight = true;
						border.borderTop = true;
						border.borderBottom = true;
						
						if (filaUltima == currentFila) {
							if (!rowFistElement) {
								border.borderLeft = false;
							} 
						} else if ((filaUltima - 1) == currentFila ) {
							if (!rowFistElement) {
								if (currentColumna >= ultimaColumna )
									border.borderLeft = false;
								else {
									border.borderBottom = false;
									border.borderLeft = false;
								}
							}
							else
								border.borderBottom = false;
						} else if (rowFistElement ) {
							border.borderBottom = false;
						} else {	
							border.borderBottom = false;
							border.borderLeft = false;
						}
						
						rowFistElement = false;
						
						currentColumna++;
					}
				}
			}
			
			private function downRect(event:MouseEvent):void {
				selectedIndex = vgPrincipal.getElementIndex(event.currentTarget as Group);
				selectedItem = dataProvider[selectedIndex];
				var evento:EventoComun = new EventoComun(EventoComun.CLICK_CUADRICULA);
				evento.selectedItem = selectedItem;
				evento.selectedIndex = selectedIndex;
				dispatchEvent(evento);
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				//drawCuadricula("resize");
				//oldWidth = stage.stageWidth;
			}

			private var oldWidth:Number;
			protected function group1_resizeHandler(event:ResizeEvent):void
			{
				/*if (oldWidth != stage.stageWidth)
					vgPrincipal.removeAllElements();*/
				
				reacomodaBorder();
			}

			public function get selectedIndex():int
			{
				return _selectedIndex;
			}

			public function set selectedIndex(value:int):void
			{
				_selectedIndex = value;
			}

			public function get selectedItem():*
			{
				return _selectedItem;
			}

			public function set selectedItem(value:*):void
			{
				_selectedItem = value;
			}

			
		]]>
	</fx:Script>
	<s:Scroller height="100%" width="100%">
	<s:Group width="100%" height="100%" id="vgPrincipal" >
		<s:layout>
			<s:TileLayout verticalGap="0" horizontalGap="0" columnWidth="247" rowHeight="194" />
		</s:layout>
	</s:Group>
	</s:Scroller>
	
</s:Group>
