<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" horizontalAlign="center"
		 paddingBottom="15" creationComplete="init()" xmlns:implicado="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.*" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:otros="skins.otros.*">
	
	<mx:Script>
		<![CDATA[
			import flash.text.engine.JustificationStyle;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoAdministrador;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoAnalisisincidente;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoIncidenteAsociado;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoIncidenteProgramarAccion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Gestion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Referencia;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Incidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Ponderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.AnalisisIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.Inc_Accion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.Inc_Ponderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.Inc_Verificacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.Incidente_Rechazado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.ReferenciasIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.VstkGestionDeIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.componentesExtras.PopUpReferencias;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.vstLecturaEstadosIncidente;
			import mx.controls.Alert;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			[Bindable]
			private var _folioIncidente:String;
			[Bindable]
			private var _vieneD:String;
			[Bindable]
			private var _listaReferencias:ArrayCollection;
			private var _modoLectura:vstLecturaEstadosIncidente = null;
			public var popUpReferencias:ReferenciasIncidente = null;
			private var popUpRferenciasAVP:PopUpReferencias = null;
			private var _gestionarIncidente:VstkGestionDeIncidente = null;
			private var _accionesIncidente:Inc_Accion = null;
			private var _verificacionIncidente:Inc_Verificacion = null;
			private var _ponderacionIncidente:Inc_Ponderacion = null;
			private var _rechazadosIncidente:Incidente_Rechazado = null;
			private var _hijoOriginal:String;
			private var _salioDelModoLectura:Boolean = true;
			private var _objeto:Object;
			private var _iniciaValidaAnalisis:Boolean;
			private var _iniciaValidaDecision:Boolean
			private var _iniciaValidaAccion:Boolean
			
			private var _ponderacionAsociada:Ponderacion = new Ponderacion();
			private var _incidenteAsociado:Incidente = new Incidente();
			private var _incidenteRechazado:Incidente = new Incidente();
			
			/*private function seleccionaBoton(event:ItemClickEvent):void {
				if( event.index == 0 ){
					if( _gestionarIncidente == null ){
						this._gestionarIncidente = new VstkGestionDeIncidente();
						this.Gestion.addChild( _gestionarIncidente );   
					}
					this.vstGeneral.selectedIndex = event.index;
				}else if( event.index == 1 ){
					if( _accionesIncidente == null ){
						this._accionesIncidente = new Inc_Accion();
						this.Accion.addChild( _accionesIncidente );   
					}
					this.vstGeneral.selectedIndex = event.index;
				}else if( event.index == 2 ){
					if( _verificacionIncidente == null ){
						this._verificacionIncidente = new Inc_Verificacion();
						this.Verificacion.addChild( _verificacionIncidente );   
					}
					this.vstGeneral.selectedIndex = event.index;
				}else if( event.index == 3 ){
					if( _ponderacionIncidente == null ){
						this._ponderacionIncidente = new Inc_Ponderacion();
						this.Ponderacionx.addChild( _ponderacionIncidente );
					}
					this.vstGeneral.selectedIndex = event.index;
				} else if( event.index == 4 ){
					if( _rechazadosIncidente == null ){
						this._rechazadosIncidente = new Incidente_Rechazado();
						this.Rechazado.addChild( _rechazadosIncidente );
					}
					this.vstGeneral.selectedIndex = event.index;
				}                 
			}*/

			
			private function seleccionaBoton(event:IndexChangeEvent):void{
				if(event.currentTarget.selectedItem == "Gestión"){
					if( _gestionarIncidente == null ){
						this._gestionarIncidente = new VstkGestionDeIncidente();
						this.Gestion.addChild( _gestionarIncidente );   
					}
					this.vstGeneral.selectedIndex = 0;
				}
				
				else if( event.currentTarget.selectedItem == "Acción" ){
					if( _accionesIncidente == null ){
						this._accionesIncidente = new Inc_Accion();
						this.Accion.addChild( _accionesIncidente );   
					}
				this.vstGeneral.selectedIndex = 1;
			}else if( event.currentTarget.selectedItem == "Verificación"){
				if( _verificacionIncidente == null ){
					this._verificacionIncidente = new Inc_Verificacion();
					this.Verificacion.addChild( _verificacionIncidente );   
				}
				this.vstGeneral.selectedIndex = 2;
			}else if( event.currentTarget.selectedItem == "Ponderación"){
				if( _ponderacionIncidente == null ){
					this._ponderacionIncidente = new Inc_Ponderacion();
					this.Ponderacionx.addChild( _ponderacionIncidente );
				}
				this.vstGeneral.selectedIndex = 3;
			} else if( event.currentTarget.selectedItem == "Rechazados"){
				if( _rechazadosIncidente == null ){
					this._rechazadosIncidente = new Incidente_Rechazado();
					this.Rechazado.addChild( _rechazadosIncidente );
				}
				this.vstGeneral.selectedIndex = 4;
			}        
			}
			
			
			/**
			 * Se declara un EventListener para el hBox de Mejoras un Listener que escucha el combo de opciones. 
			 */ 
			private function init():void{
				vstGeneral.addEventListener( EventoAdministrador.IR_A_VISTA, cambiarIndex )
			}
			/**
			 * En este metodo determinamos la navegacion del sistema. Esta funcion indica hacia donde nos dirigimos.
			 */  
			private function cambiarIndex(evento:EventoAdministrador):void{
				//var evento2:eventoAdministrador = new eventoAdministrador(eventoAdministrador.REGRESAR_A_VISTA);
				if( this._listaReferencias == null ){
					this._listaReferencias = new ArrayCollection();
				}
				this._listaReferencias = evento.datos.listaReferencias;
				this._vieneD = evento.datos.vieneDe; 
				this._folioIncidente = evento.datos.folioIncidente;
				if( evento.datos.seleccionCombo.id == "referencias"){
					if( evento.datos.origen == "Acción" || evento.datos.origen == "Verificación" ){
						usarPopUpReferenciasAccionVerificacion( evento.datos );
					}else{
						usarPopUpReferencias();
					}
					return;
				}else{
					if( this._salioDelModoLectura ){
						this._hijoOriginal = this.vstGeneral.selectedChild.name;
						this._salioDelModoLectura = false;
					}
				}
				if( evento.datos.seleccionCombo.id != "01"){
					this._objeto = new Object();
					this._objeto = evento.datos;
					if( evento.datos.seleccionCombo.id == "registro" ){
						this.vstGeneral.selectedChild = this["Lectura"];
						this.consultarIncidentes( this._objeto )
						this.btnBarra.enabled = false;
					}else if( evento.datos.seleccionCombo.id == "analisis" ){
						var analisis:EventoAnalisisincidente = new EventoAnalisisincidente( EventoAnalisisincidente.VALIDA_GESTION_EXISTENTE );
						analisis.idIncidente = evento.datos.idIncidente;
						dispatchEvent( analisis ); 
					}else if( evento.datos.seleccionCombo.id == "decision" ){
						var decision:EventoAnalisisincidente = new EventoAnalisisincidente( EventoAnalisisincidente.VALIDA_DECISION_EXISTENTE );
						decision.idIncidente = evento.datos.idIncidente;
						dispatchEvent( decision );
					}else if( evento.datos.seleccionCombo.id == "accion" ){
						var accion:EventoIncidenteProgramarAccion = new EventoIncidenteProgramarAccion( EventoIncidenteProgramarAccion.VALIDA_PROGRAMACION_EXISTENTE );
						accion.idIncidente = evento.datos.idIncidente;
						dispatchEvent( accion );
					}/*else if( evento.datos.seleccionCombo.id == "asociado"){
						var eventox:EventoIncidenteAsociado = new EventoIncidenteAsociado(EventoIncidenteAsociado.EVENTO_ASOCIADO_PONDERACION);
						eventox._incidente = evento.datos.incidenteAsociado
					} */
				} 
			}
			/** Metodo que recibe del mapa la Gestion para el Analisis */
			public function set recibeValidacionAnalisis(gestion:Object):void{
				if( this._iniciaValidaAnalisis ){
					if( gestion == null || gestion.analisis == 0){
						Alert.show("Aún no existe 'ANÄLISIS' para este incidente","¡ AVISO !");
						return;
					}
					this.vstGeneral.selectedChild = this["Lectura"];
					this.consultarIncidentes( this._objeto );
					this.btnBarra.enabled = false;
				}else{
					this._iniciaValidaAnalisis = true;
				}
			} 
			/** Metodo que recibe del mapa la Gestion para la Decision */
			public function set recibeValidacionDecision(gestion:Object):void{
				if(this._iniciaValidaDecision ){
					if( gestion == null || gestion.decision == 0 ){
						Alert.show("Aún no existe 'DECISIÓN' para este incidente","¡ AVISO !");
						return;
					}else{
						this.vstGeneral.selectedChild = this["Lectura"];
						this.consultarIncidentes( this._objeto );
						this.btnBarra.enabled = false;
					}
				}else{
					this._iniciaValidaDecision = true;
				}
			}
			/** Metodo public que recibe del mapa las Acciones para la desicion */
			public function set recibeValidacionAccion(acciones:Boolean):void{
				if( this._iniciaValidaAccion ){            		
					if(acciones == false ){
						Alert.show("Aún no existe 'ACCIÓN' para este incidente","¡ AVISO !");
						return;
					}	            	
						this.vstGeneral.selectedChild = this["Lectura"];
						this.consultarIncidentes( this._objeto );
						this.btnBarra.enabled = false;
				}else{
					this._iniciaValidaAccion = true;
				}
			}
			/**
			 * En este Metodo se manda a llamar el Pop para las referencias. 
			 */ 
			private function usarPopUpReferencias():void{
				if( this.popUpReferencias  == null ){
					popUpReferencias = ReferenciasIncidente( PopUpManager.createPopUp( this, ReferenciasIncidente, true ) );  
				}else{
					PopUpManager.addPopUp( popUpReferencias,this,true );
				}
				if( this._listaReferencias == null ){
					this._listaReferencias = new ArrayCollection;
				}
				for( var i:int=0 ; i < this._listaReferencias.source.length ; i++ ){
					( this._listaReferencias.getItemAt( i ) as Referencia ).numFila = i + 1;
					( this._listaReferencias.getItemAt( i ) as Referencia ).nombreArchivo = ( this._listaReferencias.getItemAt( i ) as Referencia ).folio;
				} 
				this.popUpReferencias.folioIncidente = this._folioIncidente;
				this.popUpReferencias.vieneD = this._vieneD;
				this.popUpReferencias.listaReferencias = ObjectUtil.copy( this._listaReferencias ) as ArrayCollection; 
				this.popUpReferencias.addEventListener( EventoAdministrador.CIERRA_POP_UP_REFERENCIAS, cierraPopUpReferencias );
				this.popUpReferencias.iniciaReferencias();
			}
			/**
			 * Metodo para cerrar el PopUp de Referencias.
			 */ 
			private function cierraPopUpReferencias( evento:EventoAdministrador ):void{
				this.popUpReferencias.removeEventListener( EventoAdministrador.CIERRA_POP_UP_REFERENCIAS, cierraPopUpReferencias );
				PopUpManager.removePopUp( popUpReferencias );
			}
			/**
			 * Metodo que permite invocar el PopUp de Referencias para la Accion , Verificacion
			 */ 
			private function usarPopUpReferenciasAccionVerificacion( datos:Object ):void{
				if( this.popUpRferenciasAVP  == null ){
					popUpRferenciasAVP = PopUpReferencias( PopUpManager.createPopUp( this, PopUpReferencias, true ) );  
				}else{
					PopUpManager.addPopUp( popUpRferenciasAVP,this,true );
				}
				if( this._listaReferencias == null ){
					this._listaReferencias = new ArrayCollection;
				}
				for( var i:int=0 ; i < this._listaReferencias.source.length ; i++ ){
					( this._listaReferencias.getItemAt( i ) as Referencia ).numFila = i + 1;
					( this._listaReferencias.getItemAt( i ) as Referencia ).nombreArchivo = ( this._listaReferencias.getItemAt( i ) as Referencia ).folio;
				} 
				this.popUpRferenciasAVP.listaReferencias = ObjectUtil.copy( this._listaReferencias ) as ArrayCollection; 
				this.popUpRferenciasAVP.referenciasEliminadas = new ArrayCollection();
				this.popUpRferenciasAVP.Origen = datos.origen;
				if( datos.origen == "Verificación" ){
					if( datos.accionReferencias == "consulta" ){
						this.popUpRferenciasAVP.btnAdjunto.enabled = false;
					}else{
						this.popUpRferenciasAVP.btnAdjunto.enabled = true;
					}
				}else{
					this.popUpRferenciasAVP.btnAdjunto.enabled = true;
				}
				this.popUpRferenciasAVP.vieneD = "url";
				this.popUpRferenciasAVP.addEventListener( EventoAdministrador.CIERRA_POP_UP_REFERENCIASAVP, cierraPopUpReferenciasAVP );
				this.popUpRferenciasAVP.iniciaReferencias();
			}
			/**
			 * Metod privado para cerrar el popUp usado en Accion, Verificacion y Ponderacion
			 */ 
			private function cierraPopUpReferenciasAVP( evento:EventoAdministrador ):void{
				this.popUpRferenciasAVP.removeEventListener( EventoAdministrador.CIERRA_POP_UP_REFERENCIASAVP, cierraPopUpReferenciasAVP );
				PopUpManager.removePopUp( popUpRferenciasAVP );
			}
			/**
			 * Metodo que permite ir a la Consulta de Incidentes
			 */ 	
			private function consultarIncidentes( objeto:Object ):void{
				if( this._modoLectura == null){
					this._modoLectura = new vstLecturaEstadosIncidente();
					this.Lectura.addChild( this._modoLectura );
				}            	
				/* este Componente Mejoras siempre escuchara el evento para regresar al indice donde se encontraba
				mejor dicho al origen de donde viene la consulta */
				this.Lectura.addEventListener( EventoAdministrador.REGRESA_ORIGEN, regresaIndexOrigen );
				this._modoLectura.datos = objeto;
				this._modoLectura.iniciaLectura();  
			} 
			/**
			 * Metodo que permite regresar al Vetana Original antes de navegar con el Combo. 
			 */ 
			private function regresaIndexOrigen(evento:EventoAdministrador):void{
				this._salioDelModoLectura = true;
				this.vstGeneral.selectedChild = this[_hijoOriginal];
				this.btnBarra.enabled = true;
			} 
			
			/**
			 *  Metodo publico que recibe del mapa los datos para Generar el Incidente Relacionado
			 **/
			public function set recibeIncidenteAsociado(_ponderacion:Ponderacion):void{
				this._ponderacionAsociada = new Ponderacion();
					if(_ponderacion.idPonderacion != 0){
						this.vstGeneral.selectedChild = this.Asociado;
						this.btnBarra.enabled = false;
						this._ponderacionAsociada = _ponderacion;
					}
			}
			
			public function set recibeIncidenteRechazado(_incidente:Incidente):void{
				this._incidenteRechazado = new Incidente();
				if(_incidente.idIncidente != 0 && !isNaN(_incidente.idIncidente)){
					this.vstGeneral.selectedChild = this.Asociado;
					this.btnBarra.enabled = false;
					this._incidenteRechazado = _incidente;
				}
			}
			
			public function set recibeCancelarIncidenteAsociado(_regresarA:String):void{
				this.vstGeneral.selectedChild = this[_regresarA];
				this.btnBarra.enabled = true;
			}
			
			
			
		]]>
	</mx:Script>
	
	<s:ButtonBar width="98%"  change="seleccionaBoton(event)" fontWeight="bold" id="btnBarra" selectedIndex="-1">
		<s:dataProvider>
			<s:ArrayList>
				<mx:String>Gestión</mx:String>
				<mx:String>Acción</mx:String>
				<mx:String>Verificación</mx:String>
				<mx:String>Ponderación</mx:String>
				<mx:String>Rechazados</mx:String>
			</s:ArrayList>
		</s:dataProvider>
	</s:ButtonBar>
	<!--<mx:ToggleButtonBar width="98%" itemClick="seleccionaBoton( event )" fontSize="12" fontWeight="bold" id="btnBarra" selectedIndex="-1">
		<mx:dataProvider>
			<mx:String>     Gestión</mx:String>
			<mx:String>      Acción</mx:String>
			<mx:String>Verificación</mx:String>
			<mx:String> Ponderación</mx:String>
			<mx:String>  Rechazados</mx:String>
		</mx:dataProvider>
	</mx:ToggleButtonBar>-->	
	<mx:Spacer height="2"/>
	<!--<mx:HRule width="98%"/>-->
	<otros:division width="100%"/>
	<mx:Spacer height="2"/>
	<mx:ViewStack id="vstGeneral" width="98%" height="100%" borderColor="blue">
		<mx:VBox id="Gestion" width="100%" height="100%">
		</mx:VBox>
		<mx:VBox id="Accion" width="100%" height="100%" />
		<mx:VBox id="Verificacion" width="100%" height="100%"/>
		<mx:VBox id="Ponderacionx" width="100%" height="100%"/>
		<mx:VBox id="Rechazado" width="100%" height="100%"/>
		<mx:VBox id="Lectura" width="100%" height="100%"/>
		<mx:VBox id="Asociado" width="100%" height="100%">
			<implicado:IncidenteImplicado width="100%" height="100%"/>
		</mx:VBox>
	</mx:ViewStack>
</mx:VBox>
