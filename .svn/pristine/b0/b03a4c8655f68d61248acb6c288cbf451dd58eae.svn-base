<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:catIndicadores="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.*" 
		  xmlns:layoutIndicador="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.layout.*" 
		  xmlns:catalogos="skins.skin.comun.catalogos.*" 
		  xmlns:contenedores="skins.skin.contenedores.*"
		  xmlns:maps="mx.com.proquifa.proquifanet.rsl.vista.mapas.catalogos.indicador.*"
		  xmlns:otros="skins.otros.*"
		  width="100%" height="100%" 
		  creationComplete="init()"
		  >
	<fx:Declarations>
		<maps:MapaCatIndicadores dispatcher="{this}" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.indicadores.EventoCatIndicadores;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.admon.objetos.Proceso;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.comercializacion.CatIndicadorConfirmaciones;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.comercializacion.CatIndicadorPedidos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.comercializacion.CatIndicadorReqCot;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.comercializacion.CatIndicadorSeguimiento;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.finanzas.CatIndicadorCargarFactura;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.finanzas.CatIndicadorCobros;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.finanzas.CatIndicadorPagos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.finanzas.CatIndicadorRevisiones;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadorCierreRuta;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadorCompras;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadorConfirmacionOC;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadorEntregas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadorFacturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadorInspeccion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadoresAvisoCambio;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.indicadores.componentes.operaciones.CatIndicadoresMonitoreoOC;
			
			import spark.events.IndexChangeEvent;

			
			
			[Bindable] private var _arrButton:ArrayCollection = new ArrayCollection
				([	{ icono: "idireccion", nombre: "Direcci贸n"},
					{ icono: "ifinanzas" , nombre: "Finanzas"},
					{ icono: "icomercializacion", nombre: "Comercializaci贸n"},
					{ icono: "iservicios", nombre: "Servicios"},	
					{ icono: "ioperaciones", nombre: "Operaciones"}
				]);
			
			public static var direccion:Proceso;
			public static var finanzas:Proceso;
			public static var comercializacion:Proceso;
			public static var servicio:Proceso;
			public static var operaciones:Proceso;
			/**
			 * al crearse el componente se solicitan todos los proveedores
			 */ 
			public function iniciarVistaCatalogoIndicadores():void
			{
				
				dispatchEvent(new EventoCatIndicadores(EventoCatIndicadores.OBTENER_EN_TIEMPO));
				dispatchEvent(new EventoCatIndicadores(EventoCatIndicadores.OBTENER_INDICADORES));
				
			}
			
			public function set obtenerIndicadores($datos:ArrayCollection):void
			{
				builderProcesos($datos);
			}
			
			
			private function builderProcesos($datos:ArrayCollection):void
			{
				for each (var procesos:Proceso in $datos) 
				{
					switch(procesos.nombre)
					{
						case "Direcci贸n":
						{
							direccion = new Proceso;
							direccion.subprocesos.addAll(procesos.subprocesos);
							break;
						}
						case "Operaciones":
						{
							operaciones = new Proceso;
							operaciones.subprocesos.addAll(procesos.subprocesos);
							break;
						}
						case "Servicios de soporte":
						{
							servicio = new Proceso;
							servicio.subprocesos.addAll(procesos.subprocesos);
							break;
						}
						case "Comercializaci贸n":
						{
							comercializacion = new Proceso;
							comercializacion.subprocesos.addAll(procesos.subprocesos);
							break;
						}
						case "Finanzas":
						{
							finanzas = new Proceso;
							finanzas.subprocesos.addAll(procesos.subprocesos);
							break;
						}
							
						default:
						{
							break;
						}
					}
					
				}
				catalogoIndicadores.botonera.botonera.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
				dispatchEvent(new EventoCatIndicadores(EventoCatIndicadores.REFRESCAR_DATOS));
			}
			
			private var iarray:ArrayCollection;
			private var vcomercializacion:VGroup = new VGroup;
			private var vdireccion:VGroup = new VGroup;
			private var vfinanzas:VGroup = new VGroup;
			private var vservicios:VGroup = new VGroup;
			private var voperaciones:VGroup = new VGroup;
			
			private function init():void
			{
				iarray = new ArrayCollection;
				iarray.addItem(new CatIndicadorReqCot());
				iarray.addItem(new CatIndicadorConfirmaciones());
				iarray.addItem(new CatIndicadorSeguimiento());
				iarray.addItem(new CatIndicadorPedidos()); 
				vcomercializacion = catalogoIndicadores.generarEspacioGraficas(iarray);
				
				iarray = new ArrayCollection;
				iarray.addItem(new CatIndicadorCompras());
				iarray.addItem(new CatIndicadorConfirmacionOC());
				iarray.addItem(new CatIndicadoresMonitoreoOC());
				iarray.addItem(new CatIndicadoresAvisoCambio());
				iarray.addItem(new CatIndicadorInspeccion());
				iarray.addItem(new CatIndicadorFacturacion());
				iarray.addItem(new CatIndicadorEntregas());
				iarray.addItem(new CatIndicadorCierreRuta());
				voperaciones = catalogoIndicadores.generarEspacioGraficas(iarray);
				
				iarray = new ArrayCollection;
				iarray.addItem(new CatIndicadorCobros);
				iarray.addItem(new CatIndicadorRevisiones);
				iarray.addItem(new CatIndicadorPagos);
				iarray.addItem(new CatIndicadorCargarFactura);
				vfinanzas = catalogoIndicadores.generarEspacioGraficas(iarray);
				
				
				catalogoIndicadores.insertarGraficasTablero(vcomercializacion);
				catalogoIndicadores.insertarGraficasTablero(voperaciones);
				catalogoIndicadores.insertarGraficasTablero(vfinanzas);
				
				
				catalogoIndicadores.botonera.botonera.addEventListener(IndexChangeEvent.CHANGING, vistaBotoneraSeleccionada);
				
				catalogoIndicadores.botonera.botonera.dataProvider = _arrButton;
				catalogoIndicadores.botonera.botonera.selectedIndex = 2;
				
				dispatchEvent(new EventoCatIndicadores(EventoCatIndicadores.OBTENER_INDICADORES));
				vcomercializacion.visible = vcomercializacion.includeInLayout = true;
				catalogoIndicadores.botonera.botonera.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
			}
			
			private function vistaBotoneraSeleccionada(evt:IndexChangeEvent):void
			{
				ocultarIndicadores();
				switch(catalogoIndicadores.botonera.botonera.selectedIndex)
				{
					case 0:
					{
						vdireccion.visible = vdireccion.includeInLayout = true;
						break;
					}
					case 1:
					{
						vfinanzas.visible = vfinanzas.includeInLayout = true;
						break;
					}
					case 2:
					{
						vcomercializacion.visible = vcomercializacion.includeInLayout = true;
						break;
					}
					case 3:
					{
						vservicios.visible = vservicios.includeInLayout = true;
						break;
					}
					case 4:
					{
						voperaciones.visible = voperaciones.includeInLayout = true;
						break;
					}
						
					default:
					{
						/* vcomercializacion.visible = vcomercializacion.includeInLayout = true;
						break; */
					}
				}
			}
			
			private function ocultarIndicadores():void
			{
				vdireccion.visible = vdireccion.includeInLayout = false;
				vfinanzas.visible = vfinanzas.includeInLayout = false;
				vcomercializacion.visible = vcomercializacion.includeInLayout = false;
				vservicios.visible = vservicios.includeInLayout = false;
				voperaciones.visible = voperaciones.includeInLayout = false;
			}
			
			public function set obtenerResultado($datos:Boolean):void
			{
				if ($datos )
				{
					dispatchEvent(new EventoCatIndicadores(EventoCatIndicadores.OBTENER_INDICADORES));
				}
			}
			
		]]>
	</fx:Script>
	
	<mx:Canvas width="100%" height="100%">
		<layoutIndicador:LayoutCatalogoIndicadores id="catalogoIndicadores" height="100%" />
	</mx:Canvas>
	
	
</s:VGroup>
