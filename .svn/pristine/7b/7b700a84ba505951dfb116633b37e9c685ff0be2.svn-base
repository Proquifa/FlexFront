package mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.clientes.financieros
{
	import flash.events.Event;
	import flash.events.EventDispatcher;
	import flash.events.IEventDispatcher;
	
	import mx.collections.ArrayCollection;
	import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Direccion;
	import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
	import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;

	public class ModeloCatClientesFinancieros extends EventDispatcher
	{
		public function ModeloCatClientesFinancieros(target:IEventDispatcher=null)
		{
			super(target);
		}
		
		private var _actualizado:Boolean;
		public function setUpdateClienteCredito($actualizo:Boolean):void{
			this._actualizado = $actualizo;
			dispatchEvent(new Event("actualizoClienteCreditoModeloCatClientesFinancieros"));
		}
		
		[Bindable(event="actualizoClienteCreditoModeloCatClientesFinancieros")]
		public function get updateClienteCredito():Boolean{
			return this._actualizado;
		}
		
		private var _actualizoFacturacion:Boolean;
		public function setUpdateClienteFacturacion($actualizo:Boolean):void{
			this._actualizoFacturacion = $actualizo;
			dispatchEvent(new Event("actualizoClienteFacturacionModeloCatClientesFinancieros"));
		}
		
		[Bindable(event="actualizoClienteFacturacionModeloCatClientesFinancieros")]
		public function get updateClienteFacturacion():Boolean{
			return this._actualizoFacturacion;
		}

		private var _notasDeCredito:ArrayCollection;
		public function setRecibeNotasDeCreditoDelCliente($notasDeCredito:ArrayCollection):void
		{
			_notasDeCredito = $notasDeCredito;
			dispatchEvent(new Event("enviaLasNotasDeCreditoPorClienteModeloCatClientesFinancieros"));
		}
		
		[Bindable(event="enviaLasNotasDeCreditoPorClienteModeloCatClientesFinancieros")]
		public function get enviaNotasDeCreditoPorCliente():ArrayCollection
		{
			return _notasDeCredito;
		}

		private var _totalEnNotasCredito:Number;
		public function setRecibeTotalEnNotasCreditoPorCliente($total:Number):void
		{
			_totalEnNotasCredito = $total;
			dispatchEvent(new Event("enviaTotalEnNotasDeCreditoPorClienteModeloCatClientesFinancieros"));
		}
		
		[Bindable(event="enviaTotalEnNotasDeCreditoPorClienteModeloCatClientesFinancieros")]
		public function get enviaTotalEnNotasCreditoPorCliente():Number
		{
			return _totalEnNotasCredito;
		}
		
		/**
		 ************************************************************** RECIBE DIRECCION   **************************************************************
		 */ 
		
		private var clienteDireccionxPais:Direccion;
		public function setRecibeDireccionxPais($dato:ArrayCollection):void
		{
			clienteDireccionxPais = new Direccion;
			if ($dato != null && $dato.length > 0){
				var currentSQL:Query = new Query($dato,['estado','municipio','colonia']);
				var colonias:Array = currentSQL.getValoresCampoOmitiendoRepetidosDeTodoElUniverso("colonia");
				
				clienteDireccionxPais.lstColonias = new ArrayCollection(colonias);
				clienteDireccionxPais.estado = $dato[0].estado;
				clienteDireccionxPais.municipio = $dato[0].municipio;
			}
			
			dispatchEvent(new Event("recibeDireccionxPaisClienteModeloCatClientesFinanciero"));
		}
		
		[Bindable(event="recibeDireccionxPaisClienteModeloCatClientesFinanciero")]
		public function get enviaDireccionxPais():Direccion
		{
			return clienteDireccionxPais;
		}
		
		/**
		 ************************************************************** error **************************************************************
		 */
		public function error(objeto:Object):void{
			alertaSingleton.show( objeto.toString() );
		}
	}
}