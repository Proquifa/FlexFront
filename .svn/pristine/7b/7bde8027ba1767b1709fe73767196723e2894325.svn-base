<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*" creationComplete="init()"
		 xmlns:label="skins.skin.label.*"  xmlns:otros="skins.otros.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Producto;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.Container;
			
			[Bindable]
			private var ventaProductos:XML;
			[Bindable]
			private var prueba:Number;
			[Bindable]
			private var _descripcionProductoTopTabla:ArrayCollection;
			[Bindable]
			private var _descripcionProductoTopGrafica:ArrayCollection;	
			private function maxTopProducto():void{	
				//var evt:Event = new Event("maxTopProducto",true,false);
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			private function init():void{
				//this.myChart;		
				this._descripcionProductoTopTabla;
			} 
			
			public function actualizar():void{
				//this.myChart;
			} 
			
			public function set topTenProductosGrafica(producto:ArrayCollection):void{
				if (producto==null){
					return ;
				}
				this._descripcionProductoTopGrafica = new ArrayCollection();
				for(var m:int = 0 ; m < producto.length ; m++){
					if(m<10){
					this._descripcionProductoTopGrafica.addItem(producto.getItemAt(m));
					}
				}
			}		
			
			public function set topTenProductosTabla(productoTabla:ArrayCollection):void{
				if (productoTabla==null){
					return;
				}
				for(var i:int= 0; i<productoTabla.length; i++){
					productoTabla[i].numeroDeFila = i + 1;
				}
				this._descripcionProductoTopTabla = productoTabla;
				
			}
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaGrafico;
				}else{
					
					this.navegador.selectedChild = vistaTabla;
				}
			}
			
			private function generaArchivo():void{ 
				var file2:File = new File();
				
				var dato0:Number = new Number;
				var dato1:String = new String;
				var dato2:String = new String;
				var dato3:String = new String;
				var dato4:String = new String;
				
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				//hoja = this.tablaVentasPeriodo.dataProvider as ArrayCollection;
				var longitud:int =  new int ;
				longitud = this._descripcionProductoTopTabla.length;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Concepto");
				fila1[2] = hoja.addItem("Cantidad");
				fila1[3] = hoja.addItem("Monto");
				fila1[4] = hoja.addItem("Tipo");
				
				for(var i:int = 0 ; i<longitud ; i++ ){
					fila1 = new Array();	
					
					dato0 = (this.gridResultados.dataProvider[i] ).numeroDeFila;
					dato1 = '"'+ (this.gridResultados.dataProvider[i] ).descripcion +'"';
					dato2 = (this.gridResultados.dataProvider[i] ).cant;
					dato3 = '"'+(this.gridResultados.dataProvider[i] ).totalVentasFormato +'"';
					dato4 = (this.gridResultados.dataProvider[i] ).tipo;
					
					fila1[0] = dato0;
					fila1[1] = dato1;
					fila1[2] = dato2;
					fila1[3] = dato3;
					fila1[4] = dato4;
					
					hoja.addItem('\r' + fila1 );
					fila1 = null;
					
				}
				
				file2.save( hoja, "Top_10_Productos.csv");
				
			}
			
			public function seleccionaTabla():void{			
				this.navegador.selectedChild = this.vistaTabla;
			} 
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}	
			
			
			/* private function aplicarFormato(dato:Number):String{
				return formatoExcel.format(dato).toString()
			} */
		]]>
	</fx:Script>
	<!--<s:Panel width="100%" height="100%" title="PRODUCTOS" dropShadowVisible="false" >-->
		<!--<mx:CurrencyFormatter id="formatoExcel" precision="2" currencySymbol="$" useThousandsSeparator="false"/>-->
		<mx:ViewStack  id="navegador" width="100%" height="100%" creationPolicy="all">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<label:labelSubtitulo text="top 50 productos"/>
				<mx:PieChart id="myChart" width="100%" height="100%"
							 dataProvider="{this._descripcionProductoTopGrafica}" 
							 showDataTips="true">
					<mx:series>
						<mx:PieSeries 
							field="cant" 
							nameField="descripcion" 
							labelField="cant"
							labelPosition="callout"
							explodeRadius=".05"/>
					</mx:series>
				</mx:PieChart>
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxTopProducto()" width="60"/>
				</mx:HBox>
			</mx:VBox>
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				
				<mx:VBox label="Productos" width="100%" height="100%">
					<label:labelSubtitulo text="productos"/>
					<mx:DataGrid dataProvider="{this._descripcionProductoTopTabla}" width="100%" height="100%" variableRowHeight="true" id="gridResultados" textAlign="center">
						<mx:columns>
							<mx:DataGridColumn headerText="#" dataField="numeroDeFila" width="35"/>
							<mx:DataGridColumn headerText="Concepto" dataField="descripcion" /> 	
							<mx:DataGridColumn headerText="Cantidad" dataField="cant" width="70"/>
							<mx:DataGridColumn headerText="Monto" dataField="totalVentasFormato" width="80"/>
							<mx:DataGridColumn headerText="Tipo" dataField="tipo" width="90"/>
						</mx:columns>
					</mx:DataGrid>
					<!--<s:DataGrid dataProvider="{this._descripcionProductoTopTabla}" width="100%" height="100%" variableRowHeight="true" 
								 id="gridResultados">
						<s:columns>
							<s:ArrayList>						
								<formato:GridColumnFormato formato="numfila" headerText="#" guardarFormato="numeroDeFila"/>
								<s:GridColumn headerText="Concepto" dataField="descripcion"/> 			
								<s:GridColumn headerText="Cantidad" dataField="cant">
									<s:itemRenderer>
										<fx:Component>
											<s:GridItemRenderer>
												<s:Label width="100%" height="100%" text="{data.cant}" textAlign="center" verticalAlign="middle"/>
											</s:GridItemRenderer>
										</fx:Component>
									</s:itemRenderer>
								</s:GridColumn>
								<formato:GridColumnFormato formato="moneda" headerText="Monto" dataField="totalVentas" guardarFormato="formatoTotalVentas"/>
								<s:GridColumn headerText="Tipo" dataField="tipo">
									<s:itemRenderer>
										<fx:Component>
											<s:GridItemRenderer>
												<s:Label width="100%" height="100%" text="{data.tipo}" verticalAlign="middle" textAlign="center"/>
											</s:GridItemRenderer>
										</fx:Component>
									</s:itemRenderer>
								</s:GridColumn>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>-->
				</mx:VBox>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="GrÃ¡fico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxTopProducto()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" width="75" click="generaArchivo()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	<!--</s:Panel>-->
</s:Group>
