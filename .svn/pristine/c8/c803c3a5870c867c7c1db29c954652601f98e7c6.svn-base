<?xml version="1.0" encoding="utf-8"?>
<contenedores:GroupConPaddingStandardPqNet xmlns:fx="http://ns.adobe.com/mxml/2009" 
										   xmlns:s="library://ns.adobe.com/flex/spark" 
										   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:contenedores="skins.skin.contenedores.*" 
										   width="100%" height="100%" xmlns:flecharegresa="skins.botones.flecharegresa.*" xmlns:otros="skins.otros.*"
										   xmlns:comboPqNet="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" 
										   xmlns:pqNet="skins.botones.pqNet.*" xmlns:chekbox="skins.skin.chekbox.*"
										   xmlns:linkButton="skins.skin.linkButton.*" xmlns:label="skins.skin.label.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.alertPqNet.ResultAlert;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PermisoImportacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.effects.Parallel;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			
			import spark.components.ComboBox;
			import spark.components.supportClasses.GroupBase;
			import spark.effects.Fade;
			import spark.effects.Resize;
			import spark.events.IndexChangeEvent;
			import spark.layouts.VerticalLayout;
			
			import vista.evento.EventoDirectorGralPrevioImportacion;
			[Bindable]
			private var _arrayBarTodoEsFs:ArrayCollection = new ArrayCollection([{label:"TODO"},{label:"FS",iconod:"indicadorMorado"},{label:"ES",iconod:"indicadorv"}]);
			
			[Bindable]
			private var totPartidas:uint;
			[Bindable]
			private var totEnSistema:uint;
			[Bindable]
			private var totFueraSistema:uint;
			[Bindable]
			private var nombreProveedor:String;
			[Bindable]
			private var ubicacion:String;
			
			private var currentInfoCopy:ArrayCollection;
			private var productosEnSistema:ArrayCollection;
			private var productosFueraSistema:ArrayCollection;
			
			private var currentEstado:String = "TODO";
			
			import vista.evento.EventoGralDirectorGral;
			protected function botonflecharegresa1_clickHandler(event:MouseEvent):void
			{
				var selVista:EventoGralDirectorGral = new EventoGralDirectorGral(EventoGralDirectorGral.SELECCIONA_SUB_ACTIVIDAD);
				selVista.subAtividadSeleccionada = "vistaDefault";
				dispatchEvent(selVista);
				
				dispatchEvent(new EventoDirectorGralPrevioImportacion(EventoDirectorGralPrevioImportacion.SOLICITAR_INFO_VISTA_DEFAULT_PREVIO_IMPORTACION));
			}
			
			public function set recibeProductosPorProveedor($Productos:ArrayCollection):void
			{
				if($Productos == null) return;
				
				if($Productos.length>0){
					
					currentEstado = "TODO";
					currentInfoCopy = new ArrayCollection;
					productosEnSistema = null;
					productosFueraSistema = null;
					btnBarTodoESFS.selectedIndex = 0;
					
					var totales:Object = $Productos.removeItemAt($Productos.length -1);
					$Productos.refresh();
					totPartidas = totales.totPartidas;
					totEnSistema = totales.totEnSistema;
					totFueraSistema = totales.totFueraSistema;
					nombreProveedor = totales.nombreProveedor;
					ubicacion = totales.ubicacion;
					listaProductos.dataProvider = $Productos;
					currentInfoCopy = ObjectUtil.copy($Productos) as ArrayCollection;
					
					seleccionarPrimerValorPorDefault($Productos);
				}
			}
			
			private function mostrarInfoDelProducto($item:PermisoImportacion):void
			{
				txtAreaConcepto.text = $item.concepto;
				lblCodigoProducto.text = $item.codigoProducto;
				lblDescripcionProducto.text = $item.nombreProducto;
				//lblFolioCotiza.text = "C-"+ $item.origen;
				linkCotiza.visible = linkCotiza.includeInLayout = true;
				lblFolioCotiza.visible = lblFolioCotiza.includeInLayout = false;
				linkCotiza.label = "C-"+ $item.origen;
				linkCotiza.dato = $item.origen;
				
				cmbTipoProducto.selectedIndex = cmbTipoProducto.seleccionarValor($item.tipoProductoFiltro);
				
				if(cmbTipoProducto.selectedItem.valor2 == "ESTÁNDARES"){
					grpComboSubTipoProd.includeInLayout = grpComboSubTipoProd.visible = true;
					grpComboSubTipoProd.percentWidth = 100;
					grpComboSubTipoProd.alpha = 1;
					
					grpComboClasificacion.includeInLayout = grpComboClasificacion.visible = true;
					grpComboClasificacion.percentWidth = 100;
					grpComboClasificacion.alpha = 1;
					
				}else if(cmbTipoProducto.selectedItem.valor2 == "REACTIVOS"){
					grpComboSubTipoProd.includeInLayout = grpComboSubTipoProd.visible = true;
					grpComboSubTipoProd.percentWidth = 100;
					grpComboSubTipoProd.alpha = 1;
					
					grpComboClasificacion.includeInLayout = grpComboClasificacion.visible = false;
					grpComboClasificacion.width = 0;
					grpComboClasificacion.alpha = 0;
				}else{
					grpComboSubTipoProd.includeInLayout = grpComboSubTipoProd.visible = false;
					grpComboSubTipoProd.width = 0;
					grpComboSubTipoProd.alpha = 0;
					
					grpComboClasificacion.includeInLayout = grpComboClasificacion.visible = false;
					grpComboClasificacion.width = 0;
					grpComboClasificacion.alpha = 0;
				}
				
				if(grpComboSubTipoProd.visible){
					cmbSubtipoProd.selectedIndex = cmbSubtipoProd.seleccionarValor($item.subTipoFiltro);
					
					
					if(cmbSubtipoProd.selectedItem.valor == "BIOLÓGICO"){
						grpDepositarioInternachonal.includeInLayout = grpDepositarioInternachonal.visible = true;
						grpDepositarioInternachonal.percentWidth = 100;
						grpDepositarioInternachonal.alpha = 1;
						
						cmbClasificacion.cargaClasifTodos('--NINGUNO--');
						
					}else if(cmbSubtipoProd.selectedItem.valor == "QUÍMICO"){
						lblDepOCas.text = "CAS:";
						grpDepositarioInternachonal.includeInLayout = grpDepositarioInternachonal.visible = false;
						grpDepositarioInternachonal.width = 0;
						grpDepositarioInternachonal.alpha = 0;
						
						cmbClasificacion.cargaClasifQuimico('--NINGUNO--');
					}else{
						lblDepOCas.text = "";
						grpDepositarioInternachonal.includeInLayout = grpDepositarioInternachonal.visible = false;
						grpDepositarioInternachonal.width = 0;
						grpDepositarioInternachonal.alpha = 0;
						
					}
				}else{
					cmbSubtipoProd.selectedIndex =0;
					grpDepositarioInternachonal.includeInLayout = grpDepositarioInternachonal.visible = false;
					grpDepositarioInternachonal.width = 0;
					grpDepositarioInternachonal.alpha = 0;
					lblDepOCas.text = "";
				}
				
				cmbControl.selectedIndex = cmbControl.seleccionarValor($item.controlProductoFiltro);
				
				if(grpComboClasificacion.visible)
					cmbClasificacion.selectedIndex = cmbClasificacion.seleccionarValor($item.clasificacionSolictudFiltro);
				else
					cmbClasificacion.selectedIndex = 0;
				
				txtInputCantidad.text = $item.cantidadString;
				comprobarQueTieneDatos(cmbUnidad,$item.unidad);
				
				if(grpDepositarioInternachonal.visible)
					cmbDepositario.selectedIndex = cmbDepositario.seleccionarValor($item.depositarioInternacional);
				else
					cmbDepositario.selectedIndex = 0;
				
				if(grpDepositarioInternachonal.visible){
					if(cmbDepositario.selectedItem.valor != '--NINGUNO--')
						lblDepOCas.text = cmbDepositario.selectedItem.valor + ":";
					else
						lblDepOCas.text = "";
				}
				
				txtInputCas.text = $item.cas;
				cmbEstadoFisico.selectedIndex = cmbEstadoFisico.seleccionarValor($item.estadoFisicoFiltro);
				txtInputFraccionArancelaria.text = $item.fraccionArancelaria;
				if($item.reqPermiso == "Si"){
					grpDatosTecnicos.paddingRight = 10;
					cmbTipoPermiso.selectedIndex = cmbTipoPermiso.seleccionarValor($item.tipoSolicitudPermisoFiltro);
					cmbTipoPermiso.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
					
					if(cmbTipoPermiso.selectedItem.valor == "PSICOTRÓPICO"){
						cmbClasificacionProducto.selectedIndex = cmbClasificacionProducto.seleccionarValor($item.clasificacionProducto);
					}else{
						cmbClasificacionProducto.selectedIndex = 0;
					}
					
					if(cmbTipoPermiso.selectedItem.valor == "PLAFEST"){
						if($item.datosToxicologicos != null && StringUtil.trim($item.datosToxicologicos).length > 0)
							txtAreaDatosToxicos.text = $item.datosToxicologicos;
					}else{
						txtAreaDatosToxicos.text = "";
					}
					
					rbtnSi.selected = true;
					rbtnSi.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				}else{
					grpDatosTecnicos.paddingRight = 0;
					cmbTipoPermiso.selectedIndex = 0;
					tramitarPermiso.selected = false;
					dateEstimadaTramitacion.selectedDate = new Date();
					
					rbtnNo.selected = true;
					rbtnNo.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				}
				listaProductos.selectedIndex = 0;
				btnGuardar.enabled = true;
			}
			private function seleccionarPrimerValorPorDefault($arrayProductos:ArrayCollection):void
			{
				if($arrayProductos != null && $arrayProductos.length){
					
					mostrarInfoDelProducto($arrayProductos[0] as PermisoImportacion)
				}
			}
			
			private function comprobarQueTieneDatos($combo:ComboBox,$valorASeleccionar:String):void
			{
				if($combo.dataProvider == null){
					setTimeout(comprobarQueTieneDatos,300,$combo,$valorASeleccionar);
				}else{
					if($combo.id == "cmbUnidad"){
						cmbUnidad.selectedIndex = cmbUnidad.seleccionarValor($valorASeleccionar);
					}
				}
			}
			
			protected function btnBarTodoESFS_changingHandler(event:IndexChangeEvent):void
			{
				if((event.currentTarget as ButtonBar).selectedItem == null){
					event.preventDefault();
				}else{
					var arrayTodo:Array;
					if((event.currentTarget as ButtonBar).selectedIndex == 1){ //Fuera de Sistema
						currentEstado = "FS";
						
						if(productosFueraSistema != null && productosFueraSistema.length > 0){
							listaProductos.dataProvider = productosFueraSistema;
							btnGuardar.enabled = true;
						}else{
							arrayTodo = ObjectUtil.copy(currentInfoCopy.source) as Array;
							var arrayFS:Array = arrayTodo.filter(obtenerProductosFueraSistema);
							if(arrayFS.length>0){
								productosFueraSistema = new ArrayCollection(arrayFS);
								reEnumerarFilas(productosFueraSistema);
								btnGuardar.enabled = true;
							}else{
								limpiarFormulario();
							}
							//if(productosFueraSistema == null || productosFueraSistema.length==0)
							listaProductos.dataProvider = productosFueraSistema;
						}
					}else if((event.currentTarget as ButtonBar).selectedIndex == 2){ //En Sistema
						currentEstado = "ES";
						
						if(productosEnSistema != null && productosEnSistema.length > 0){
							listaProductos.dataProvider = productosEnSistema;
							btnGuardar.enabled = true;
						}else{
							arrayTodo = ObjectUtil.copy(currentInfoCopy.source) as Array;
							var arrayES:Array = arrayTodo.filter(obtenerProductosEnSistema);
							if(arrayES.length>0){
								productosEnSistema = new ArrayCollection(arrayES);
								reEnumerarFilas(productosEnSistema);
								btnGuardar.enabled = true;
							}else{
								limpiarFormulario()
							}
							//if(productosEnSistema == null || productosEnSistema.length ==0)
							listaProductos.dataProvider = productosEnSistema;
						}
						//limpiar memoria
						arrayTodo= null;
						arrayES= null;
					}else{ //Todos los productos
						if(currentInfoCopy.length > 0 )
							btnGuardar.enabled = true;
						else
							btnGuardar.enabled = false;
						
						listaProductos.dataProvider = currentInfoCopy;
					}
					seleccionarPrimerValorPorDefault(listaProductos.dataProvider as ArrayCollection);
					listaProductos.selectedIndex = 0;
				}
			}
			
			private function limpiarFormulario():void
			{
				txtAreaConcepto.text = "";
				lblCodigoProducto.text = "";
				lblDescripcionProducto.text = "";
				lblFolioCotiza.visible = lblFolioCotiza.includeInLayout = true; 
				linkCotiza.visible = linkCotiza.includeInLayout = false;
				cmbTipoProducto.selectedIndex = 0;
				cmbSubtipoProd.selectedIndex = 0;
				cmbControl.selectedIndex = 0; 
				cmbClasificacion.selectedIndex = 0;
				txtInputCantidad.text = "";
				cmbUnidad.selectedIndex = 0;
				cmbDepositario.selectedIndex = 0;
				txtInputCas.text = "";
				cmbEstadoFisico.selectedIndex = 0;
				txtInputFraccionArancelaria.text = "";
				rbtnNo.selected = true;
				rbtnSi.selected = false;
				cmbTipoPermiso.selectedIndex = 0;
				cmbClasificacionProducto.selectedIndex = 0;
				txtAreaDatosToxicos.text = "";
				lblDepOCas.text = "";
				dateEstimadaTramitacion.selectedDate = new Date();
				grpDepositarioInternachonal.width = 0;
				grpDepositarioInternachonal.alpha = 0;
				grpDepositarioInternachonal.includeInLayout = grpDepositarioInternachonal.visible = false;
				grpPermiso.includeInLayout = grpPermiso.visible = false;
				grpPermiso.width = 0;
				grpPermiso.alpha = 0;
				grpDatosTecnicos.paddingRight = 0;
				btnGuardar.enabled = false;
			}
			
			private function reEnumerarFilas($array:ArrayCollection):void
			{
				for (var i:int = 0; i < $array.length; i++) 
				{
					($array[i] as PermisoImportacion).numFila = i+1;
				}
			}
			
			
			private function obtenerProductosFueraSistema(item:PermisoImportacion, index:int, array:Array):Boolean
			{
				if(item.sistema == "FS")
					return true;
				else
					return false;
			}
			
			private function obtenerProductosEnSistema(item:PermisoImportacion, index:int, array:Array):Boolean
			{
				if(item.sistema == "ES")
					return true;
				else
					return false;
			}
			
			protected function listaProductos_changingHandler(event:IndexChangeEvent):void
			{
				if((event.currentTarget as List).selectedItem == null){
					event.preventDefault();
				}else{
					mostrarInfoDelProducto((event.currentTarget as List).selectedItem as PermisoImportacion);
				}
			}
			
			protected function rbtnSiyNo_changeHandler(event:MouseEvent):void
			{
				var resize:Resize = new Resize;
				var fade:Fade = new Fade;
				var showHideParalelo:Parallel = new Parallel;
				var animar:Boolean = false;
				if((event.currentTarget as CheckBox).id == "rbtnSi"){
					if(grpPermiso.width == 0){
						rbtnNo.selected = false;
						grpPermiso.visible = grpPermiso.includeInLayout = true;
						grpDatosTecnicos.paddingRight = 10;
						animar = true;
						resize.widthFrom = 0;
						resize.widthTo =  (grpPanelesInfoProducto.width / 3)-10.5; 
						resize.play();
						fade.alphaFrom = 0;
						fade.alphaTo = 1;
						fade.startDelay = 190;
					}
				}else{
					if(grpPermiso.width > 0){
						rbtnSi.selected = false;
						animar = true;
						resize.widthFrom = grpPermiso.width; 
						resize.widthTo = 0;
						resize.play();
						fade.alphaFrom = 1;
						fade.alphaTo = 0;
						fade.duration = 190;
					}
				}
				if(animar){
					showHideParalelo.target = grpPermiso;
					showHideParalelo.addChild(resize);
					showHideParalelo.addChild(fade);
					showHideParalelo.duration = 300;
					showHideParalelo.addEventListener(EffectEvent.EFFECT_END,terminoEfectoEsconder);
					showHideParalelo.play();
				}
			}
			private function terminoEfectoEsconder(eve:EffectEvent):void
			{
				if((((eve.effectInstance.effect as Parallel).children[0]) as Resize).widthTo  == 0){
					grpPermiso.percentWidth = 0;
					grpPermiso.percentHeight = 0;
					grpPermiso.width = 0;
					grpPermiso.alpha = 0;
					grpPermiso.visible = grpPermiso.includeInLayout = false;
					grpDatosTecnicos.paddingRight  = 0;
				}else{
					grpPermiso.percentWidth = 100;
					grpPermiso.percentHeight = 100;
					grpPermiso.alpha = 1;
					grpDatosTecnicos.paddingRight  = 10;
				}
			}
			
			private var mostrarGroup:Boolean;
			private var currentParaleloW:Parallel = new Parallel;
			private function configurarAnimacionShowHide($arrayGroupsShow:Array,$tipo:String,$factorCrecimiento:uint,$arrayGroupsHide:Array,$ocultarGroup:Boolean = false):void
			{
				var resize:Resize = new Resize;
				var fade:Fade = new Fade;
				var paraleloH:Parallel = new Parallel;
				var i:int;
				
				if($tipo == "showH" && $ocultarGroup){
					resize.heightFrom = ($arrayGroupsHide[0] as GroupBase).height;
					resize.heightTo = 0;
					fade.alphaFrom = 1.0;
					fade.alphaTo = 0;
					
					paraleloH.addChild(resize);
					paraleloH.addChild(fade);
					paraleloH.targets = $arrayGroupsHide;
					paraleloH.duration = 250;
					paraleloH.addEventListener(EffectEvent.EFFECT_END,terminoAnimaHideGrpPermisos,false,0,true);
					paraleloH.play();
					mostrarGroup = $ocultarGroup;
				}else if($tipo == "showH"){
					
					if(($arrayGroupsShow[0] as GroupBase).height == 0){
						mostrarGroup = $ocultarGroup;
						
						($arrayGroupsShow[0] as GroupBase).visible = ($arrayGroupsShow[0] as GroupBase).includeInLayout = true;
						
						resize.heightFrom = 0;
						resize.heightTo = $factorCrecimiento;
						fade.alphaFrom = 0;
						fade.alphaTo = 1;
						paraleloH.addChild(resize);
						paraleloH.addChild(fade);
						paraleloH.targets = $arrayGroupsShow;
						paraleloH.duration = 250;
						paraleloH.addEventListener(EffectEvent.EFFECT_END,terminoAnimaShowGrpPermisos,false,0,true);
						paraleloH.play();
						
					}
				}else if($tipo == "hideH"){
					mostrarGroup = $ocultarGroup;
					resize.heightFrom = $arrayGroupsShow[0].height;
					resize.heightTo = 0;
					fade.alphaFrom = 1.0;
					fade.alphaTo = 0;
					
					paraleloH.addChild(resize);
					paraleloH.addChild(fade);
					paraleloH.targets = $arrayGroupsShow;
					paraleloH.duration = 250;
					paraleloH.addEventListener(EffectEvent.EFFECT_END,terminoAnimaHideGrpPermisos,false,0,true);
					paraleloH.play();
				}else if($tipo == "showW"){
					if(!currentParaleloW.isPlaying){
						if(($arrayGroupsShow[0] as GroupBase).width == 0){
							
							for (i = 0; i < $arrayGroupsShow.length; i++){
								($arrayGroupsShow[i] as GroupBase).visible = ($arrayGroupsShow[i] as GroupBase).includeInLayout = true;
							}
							
							resize.widthFrom = 0;
							resize.widthTo = $factorCrecimiento;
							fade.alphaFrom = 0;
							fade.alphaTo = 1.0;
							fade.startDelay = 125;
							
							currentParaleloW = new Parallel;
							currentParaleloW.addChild(resize);
							currentParaleloW.addChild(fade);
							currentParaleloW.targets = $arrayGroupsShow; 
							currentParaleloW.duration = 250;
							currentParaleloW.addEventListener(EffectEvent.EFFECT_END,terminaShowHideW,false,0,true);
							currentParaleloW.play();
						}
					}else{
						currentParaleloW.removeEventListener(EffectEvent.EFFECT_END,terminaShowHideW);
						currentParaleloW.stop();
						for ( i = 0; i < currentParaleloW.targets.length ; i++) 
						{
							(currentParaleloW.targets[i] as GroupBase).percentWidth = 100;
							//(currentParaleloW.targets[i] as GroupBase).percentHeight = 100;
							(currentParaleloW.targets[i] as GroupBase).alpha = 1;
						}
					}
				}else if($tipo == "hideW"){
					if(!currentParaleloW.isPlaying){
						if(($arrayGroupsHide[0] as GroupBase).width > 0){
							
							resize.widthFrom = ($arrayGroupsHide[0] as GroupBase).width;
							resize.widthTo = $factorCrecimiento;
							fade.alphaFrom = 1.0;
							fade.alphaTo = 0;
							fade.duration = 125;
							
							currentParaleloW = new Parallel;
							currentParaleloW.addChild(resize);
							currentParaleloW.addChild(fade);
							currentParaleloW.targets = $arrayGroupsHide;
							currentParaleloW.addEventListener(EffectEvent.EFFECT_END,terminaShowHideW,false,0,true);
							currentParaleloW.duration = 250;
							currentParaleloW.play();
						}
					}else{
						currentParaleloW.removeEventListener(EffectEvent.EFFECT_END,terminaShowHideW);
						currentParaleloW.stop();
						for (i = 0; i < currentParaleloW.targets.length; i++) 
						{
							(currentParaleloW.targets[i] as GroupBase).visible = (currentParaleloW.targets[i] as GroupBase).includeInLayout = false;
							(currentParaleloW.targets[i] as GroupBase).alpha = 0;
							(currentParaleloW.targets[i] as GroupBase).width= 0;
						}
					}
				}
			}
			
			private function terminaParalelo2(eve:EffectEvent):void
			{
				((eve.currentTarget as Parallel).targets[0] as GroupBase).alpha = 0;
				((eve.currentTarget as Parallel).targets[0] as GroupBase).width= 100;
			}
			
			private function terminaShowHideW(eve:EffectEvent):void
			{
				var i:int;
				if(((eve.currentTarget as Parallel).children[0] as Resize).widthTo == 0){
					for (i = 0; i < (eve.currentTarget as Parallel).targets.length; i++) 
					{
						((eve.currentTarget as Parallel).targets[i] as GroupBase).visible = ((eve.currentTarget as Parallel).targets[i] as GroupBase).includeInLayout = false;
						((eve.currentTarget as Parallel).targets[i] as GroupBase).alpha = 0;
					}
				}else{
					for (i = 0; i < (eve.currentTarget as Parallel).targets.length; i++) 
					{
						((eve.currentTarget as Parallel).targets[i] as GroupBase).percentWidth = 100;
						//((eve.currentTarget as Parallel).targets[i] as GroupBase).percentHeight = 100;
						((eve.currentTarget as Parallel).targets[i] as GroupBase).alpha = 1;
					}
				}
			}
			
			private function cmbTipoPermiso_changingHandler(event:IndexChangeEvent):void
			{
				
				if(cmbTipoPermiso.selectedItem.valor != null){
					var resize:Resize = new Resize;
					var fade:Fade = new Fade;
					var paralelo:Parallel = new Parallel;
					
					if(seRequiereValidarCampos)
						quitarFocusRojo("cmbTipoPermiso");
					
					if(cmbTipoPermiso.selectedItem.valor == "PSICOTRÓPICO"){
						if(grpXPermisoPlafest.visible){
							configurarAnimacionShowHide([grpXPermisoPsico],"showH",56,[grpXPermisoPlafest],true);
						}else{
							configurarAnimacionShowHide([grpXPermisoPsico],"showH",56,null,false);
						}
					}else if(cmbTipoPermiso.selectedItem.valor == "PLAFEST"){
						if(grpXPermisoPsico.visible){
							configurarAnimacionShowHide([grpXPermisoPlafest],"showH",103,[grpXPermisoPsico],true);
						}else{
							configurarAnimacionShowHide([grpXPermisoPlafest],"showH",103,null,false);
						}
					}else{
						if(grpXPermisoPlafest.visible){
							configurarAnimacionShowHide([grpXPermisoPlafest],"hideH",0,null);
						}else if(grpXPermisoPsico.visible){
							configurarAnimacionShowHide([grpXPermisoPsico],"hideH",0,null);
						}
					}
				}
			}
			
			private function terminoAnimaHideGrpPermisos(eve:EffectEvent):void
			{
				var resize:Resize = new Resize;
				var fade:Fade = new Fade;
				var paralelo:Parallel = new Parallel;
				if((eve.effectInstance.target as VGroup).id == "grpXPermisoPsico"){
					grpXPermisoPsico.visible = grpXPermisoPsico.includeInLayout = false;
					grpXPermisoPsico.height = 0;
					
					if(mostrarGroup){
						grpXPermisoPlafest.includeInLayout = grpXPermisoPlafest.visible =  true;
						resize.heightFrom = 0;
						resize.heightTo = 103;
						fade.alphaFrom = 0;
						fade.alphaTo = 1;
						paralelo.addChild(resize);
						paralelo.addChild(fade);
						paralelo.target = grpXPermisoPlafest;
						paralelo.duration = 250;
						paralelo.addEventListener(EffectEvent.EFFECT_END,terminoAnimaShowGrpPermisos);
						paralelo.play();
					}
				}else if((eve.effectInstance.target as VGroup).id == "grpXPermisoPlafest"){
					grpXPermisoPlafest.visible = grpXPermisoPlafest.includeInLayout = false;
					grpXPermisoPlafest.height = 0;
					
					if(mostrarGroup){
						grpXPermisoPsico.includeInLayout = grpXPermisoPsico.visible =  true;
						resize.heightFrom = 0;
						resize.heightTo = 56;
						fade.alphaFrom = 0;
						fade.alphaTo = 1;
						paralelo.addChild(resize);
						paralelo.addChild(fade);
						paralelo.target = grpXPermisoPsico;
						paralelo.duration = 250;
						paralelo.addEventListener(EffectEvent.EFFECT_END,terminoAnimaShowGrpPermisos);
						paralelo.play();
					}
				}
			}
			
			private function terminoAnimaShowGrpPermisos(eve:EffectEvent):void
			{
				if((eve.effectInstance.target as VGroup).id == "grpXPermisoPlafest"){
					grpXPermisoPlafest.percentWidth = 100;
				}else if((eve.effectInstance.target as VGroup).id == "grpXPermisoPsico"){
					grpXPermisoPsico.percentWidth = 50;
				}
			}
			
			private function validarYMostrarOcultar(eve:IndexChangeEvent):void
			{
				if((eve.currentTarget as ComboBox).id == "cmbTipoProducto"){
					
					if(seRequiereValidarCampos)
						quitarFocusRojo("cmbTipoProducto");
					
					if(cmbTipoProducto.selectedItem.valor2 == "ESTÁNDARES"){
						
						if(!grpComboSubTipoProd.visible && !grpComboClasificacion.visible)
							configurarAnimacionShowHide([grpComboSubTipoProd,grpComboClasificacion],"showW",(grpSubtipoYTipo.width/2)-3,null,false);
						else if(!grpComboSubTipoProd.visible)
							configurarAnimacionShowHide([grpComboSubTipoProd],"showW",(grpSubtipoYTipo.width/2)-3,null,false);
						else 
							configurarAnimacionShowHide([grpComboClasificacion],"showW",(grpControlYClasif.width/2)-3,null,false);
						
						if(cmbSubtipoProd.selectedItem.valor == "BIOLÓGICO"){
							grpDepositarioInternachonal.visible = grpDepositarioInternachonal.includeInLayout = true;
							cmbClasificacion.cargaClasifTodos('--NINGUNO--');
							if(cmbDepositario.selectedItem.valor != '--NINGUNO--' )
								lblDepOCas.text = cmbDepositario.selectedItem.valor + ":";
							else
								lblDepOCas.text = "";
						}else if(cmbSubtipoProd.selectedItem.valor == "QUÍMICO"){
							lblDepOCas.text = "CAS:";
							grpDepositarioInternachonal.visible = grpDepositarioInternachonal.includeInLayout = false;
							cmbClasificacion.cargaClasifQuimico('--NINGUNO--');
						}else{
							lblDepOCas.text = "";
							grpDepositarioInternachonal.visible = grpDepositarioInternachonal.includeInLayout = false;
						}
					}else if(cmbTipoProducto.selectedItem.valor2 == "REACTIVOS"){
						
						if(!grpComboSubTipoProd.visible)
							configurarAnimacionShowHide([grpComboSubTipoProd],"showW",(grpSubtipoYTipo.width/2)-3,null,false);
						else
							configurarAnimacionShowHide(null,"hideW",0,[grpComboClasificacion],false);
						
						
						if(cmbSubtipoProd.selectedItem.valor == "BIOLÓGICO"){
							grpDepositarioInternachonal.visible = grpDepositarioInternachonal.includeInLayout = true;
							
							if(cmbDepositario.selectedItem.valor != '--NINGUNO--' )
								lblDepOCas.text = cmbDepositario.selectedItem.valor + ":";
							else
								lblDepOCas.text = "";
						}else if(cmbSubtipoProd.selectedItem.valor == "QUÍMICO"){
							lblDepOCas.text = "CAS:";
							grpDepositarioInternachonal.visible = grpDepositarioInternachonal.includeInLayout = false;
						}else{
							lblDepOCas.text = "";
							grpDepositarioInternachonal.visible = grpDepositarioInternachonal.includeInLayout = false;
						}
					}else{
						configurarAnimacionShowHide(null,"hideW",0,[grpComboSubTipoProd,grpComboClasificacion],false);
					}
				}else if((eve.currentTarget as ComboBox).id == "cmbSubtipoProd"){
					if(seRequiereValidarCampos)
						quitarFocusRojo("cmbTipoProducto");
					
					if(cmbSubtipoProd.selectedItem.valor == "BIOLÓGICO"){
						
						configurarAnimacionShowHide([grpDepositarioInternachonal],"showW",(grpDepositarioYCAS.width/2)-3,null,false);
						cmbClasificacion.cargaClasifTodos('--NINGUNO--');
						if(cmbDepositario.selectedItem.valor != '--NINGUNO--')
							lblDepOCas.text = cmbDepositario.selectedItem.valor + ":";
						else
							lblDepOCas.text = "";
					}else if(cmbSubtipoProd.selectedItem.valor == "QUÍMICO"){
						lblDepOCas.text = "CAS:";
						configurarAnimacionShowHide(null,"hideW",0,[grpDepositarioInternachonal],false);
						cmbClasificacion.cargaClasifQuimico('--NINGUNO--');
					}else{
						lblDepOCas.text = "";
						configurarAnimacionShowHide(null,"hideW",0,[grpDepositarioInternachonal],false);
					}
				}else if((eve.currentTarget as ComboBox).id == "cmbDepositario"){
					if(seRequiereValidarCampos)
						quitarFocusRojo("cmbDepositario");
					if(cmbSubtipoProd.selectedItem.valor == "BIOLÓGICO"){
						if(cmbDepositario.selectedItem.valor != '--NINGUNO--')
							lblDepOCas.text = cmbDepositario.selectedItem.valor + ":";
						else
							lblDepOCas.text = "";
					}
				}
			}
			
			private var seRequiereValidarCampos:Boolean;
			private function validarDatosIntroducidos():Boolean
			{
				var isCompleto:Boolean = true;
				
				if(txtAreaConcepto.text == null  || StringUtil.trim(txtAreaConcepto.text).length <= 0){
					isCompleto = false;
					txtAreaConcepto.setStyle("focusColor","red");
					txtAreaConcepto.setFocus();
					return isCompleto;
				}else if (cmbTipoProducto.selectedIndex == 0){
					isCompleto = false;
					cmbTipoProducto.setStyle("focusColor","red");
					cmbTipoProducto.setFocus();
					return isCompleto;
				}else if (grpComboSubTipoProd.visible && cmbSubtipoProd.selectedIndex == 0){
					isCompleto = false;
					cmbSubtipoProd.setStyle("focusColor","red");
					cmbSubtipoProd.setFocus();
					return isCompleto;
				}else if (cmbControl.selectedIndex == 0){
					isCompleto = false;
					cmbControl.setStyle("focusColor","red");
					cmbControl.setFocus();
					return isCompleto;
				}else if (grpComboClasificacion.visible && cmbClasificacion.selectedIndex == 0){
					isCompleto = false;
					cmbClasificacion.setStyle("focusColor","red");
					cmbClasificacion.setFocus();
					return isCompleto;
				}else if (txtInputCantidad.text == null  || StringUtil.trim(txtInputCantidad.text).length <= 0){
					isCompleto = false;
					txtInputCantidad.setStyle("focusColor","red");
					txtInputCantidad.setFocus();
					return isCompleto;
				}else if (cmbUnidad.selectedIndex == 0){
					isCompleto = false;
					cmbUnidad.setStyle("focusColor","red");
					cmbUnidad.setFocus();
					return isCompleto;
				}else if (grpDepositarioInternachonal.visible && cmbDepositario.selectedIndex == 0){
					isCompleto = false;
					cmbDepositario.setStyle("focusColor","red");
					cmbDepositario.setFocus();
					return isCompleto;
				}else if (txtInputCas.text == null  || StringUtil.trim(txtInputCas.text).length <= 0){
					isCompleto = false;
					txtInputCas.setStyle("focusColor","red");
					txtInputCas.setFocus();
					return isCompleto;
				}else if (cmbEstadoFisico.selectedIndex == 0){
					isCompleto = false;
					cmbEstadoFisico.setStyle("focusColor","red");
					cmbEstadoFisico.setFocus();
					return isCompleto;
				}else if (txtInputFraccionArancelaria.text == null  || StringUtil.trim(txtInputFraccionArancelaria.text).length <= 0){
					isCompleto = false;
					txtInputFraccionArancelaria.setStyle("focusColor","red");
					txtInputFraccionArancelaria.setFocus();
					return isCompleto;
				}else if(rbtnSi.selected){
					if (cmbTipoPermiso.selectedIndex == 0){
						isCompleto = false;
						cmbTipoPermiso.setStyle("focusColor","red");
						cmbTipoPermiso.setFocus();
						return isCompleto;
					}else if (grpXPermisoPlafest.visible && (txtAreaDatosToxicos.text == null  || StringUtil.trim(txtAreaDatosToxicos.text).length <= 0)){
						isCompleto = false;
						txtAreaDatosToxicos.setStyle("focusColor","red");
						txtAreaDatosToxicos.setFocus();
						return isCompleto;
					}else if (grpXPermisoPsico.visible && (cmbClasificacionProducto.selectedIndex == 0)){
						isCompleto = false;
						cmbClasificacionProducto.setStyle("focusColor","red");
						cmbClasificacionProducto.setFocus();
						return isCompleto;
					}
				}
				return isCompleto;							
			}
			
			protected function btnGuardar_mouseUpHandler(event:MouseEvent):void
			{
				if(validarDatosIntroducidos()){
					
					if(tramitarPermiso.selected){
						alertaSingleton.show( 'Se va a actualizar la información del producto, con fecha estimada a tramitación: '+ UtilsFecha.formatoFecha_dia_mes_Anio(dateEstimadaTramitacion.selectedDate) +' \n ¿Aceptar?' ,catalogoAlertas.TIT_ADV_atencion,'DirectorGralActualizarProductoPrevioImportacion','','','SI','NO')
					}else{
						alertaSingleton.show( 'Se va a actualizar la información del producto, sin fecha estimada a tramitación. \n ¿Aceptar?' ,catalogoAlertas.TIT_ADV_atencion,'DirectorGralActualizarProductoPrevioImportacion','','','SI','NO')
					}
					
				}else{
					alertaSingleton.show('Es necesario que toda la información del producto sea completada', catalogoAlertas.TIT_ADV_operacionImposible );
					seRequiereValidarCampos = true;
				}
				
			}
			
			private function quitarFocusRojo(componente:String):void
			{
				seRequiereValidarCampos = false;
				switch(componente)
				{
					case "txtAreaConcepto":{txtAreaConcepto.setStyle("focusColor",'0x'+catalogoColores.LABEL_VERDE_AZUL);break;}
					case "cmbTipoProducto":{cmbTipoProducto.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "cmbSubtipoProd":{cmbSubtipoProd.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "cmbControl":{cmbControl.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "cmbClasificacion":{cmbClasificacion.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "txtInputCantidad":{txtInputCantidad.setStyle("focusColor",'0x'+catalogoColores.LABEL_VERDE_AZUL);break;}
					case "cmbUnidad":{cmbUnidad.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "cmbDepositario":{cmbDepositario.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "txtInputCas":{txtInputCas.setStyle("focusColor",'0x'+catalogoColores.LABEL_VERDE_AZUL);break;}
					case "cmbEstadoFisico":{cmbEstadoFisico.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "txtInputFraccionArancelaria":{txtInputFraccionArancelaria.setStyle("focusColor",'0x'+catalogoColores.LABEL_VERDE_AZUL);break;}
					case "cmbTipoPermiso":{cmbTipoPermiso.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					case "txtAreaDatosToxicos":{txtAreaDatosToxicos.setStyle("focusColor",'0x'+catalogoColores.LABEL_VERDE_AZUL);break;}
					case "cmbClasificacionProducto":{cmbClasificacionProducto.setStyle("focusColor",'0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);break;}
					default:
					{
						break;
					}
				}
			}
			
			protected function componentes_ChangeDetected(componente:String):void
			{
				if(seRequiereValidarCampos){
					quitarFocusRojo(componente)
				}
			}
			
			public function set recibeRespuestaDelAlert($respuesta:ResultAlert):void
			{
				if($respuesta == null ) return;
				if($respuesta.botonSeleccionado == "SI"){
					var permisoItem:PermisoImportacion = new PermisoImportacion;
					//permisoItem = (listaProductos.selectedItem as PermisoImportacion);
					
					permisoItem.concepto = txtAreaConcepto.text;
					permisoItem.tipoProductoSinAcento(cmbTipoProducto.selectedItem.valor3);
					if(grpComboSubTipoProd.visible)
						permisoItem.subTipo = cmbSubtipoProd.selectedItem.valor2;
					permisoItem.controlProducto = cmbControl.selectedItem.valor2;
					if(grpComboClasificacion.visible)
						permisoItem.clasificacionSolictud = cmbClasificacion.selectedItem.valor2;
					permisoItem.cantidadString = txtInputCantidad.text;
					permisoItem.unidad = cmbUnidad.selectedItem.valor;
					if(grpDepositarioInternachonal.visible)
						permisoItem.depositarioInternacional = cmbDepositario.selectedItem.valor;
					permisoItem.cas = txtInputCas.text;
					permisoItem.estadoFisicoSinAcento(cmbEstadoFisico.selectedItem.valor2);
					permisoItem.fraccionArancelaria = txtInputFraccionArancelaria.text;
					if(rbtnSi.selected){
						permisoItem.reqPermiso = "Si";
						
						permisoItem.tipoSolicitudPermiso = cmbTipoPermiso.selectedItem.valor2;
						if(grpXPermisoPlafest.visible)
							permisoItem.datosToxicologicos = txtAreaDatosToxicos.text;
						
						if(grpXPermisoPsico.visible)
							permisoItem.clasificacionProducto = cmbClasificacionProducto.selectedItem.valor2;
						
						if(tramitarPermiso.selected){
							permisoItem.fechaET = dateEstimadaTramitacion.selectedDate;
						}
					}
					
					//Datos que vienen del Servició y que se regresan
					var itemLista:PermisoImportacion = (listaProductos.selectedItem as PermisoImportacion);
					permisoItem.codigoProducto = itemLista.codigoProducto;
					permisoItem.costo = itemLista.costo;
					permisoItem.docto = itemLista.docto;
					permisoItem.folio = itemLista.folio;
					permisoItem.idProducto = itemLista.idProducto;
					permisoItem.monto = itemLista.monto;
					permisoItem.nombreProducto = itemLista.nombreProducto;
					permisoItem.origen = itemLista.origen;
					permisoItem.pais = itemLista.pais;
					permisoItem.partida = itemLista.partida;
					permisoItem.piezas = itemLista.piezas;
					permisoItem.sistema = itemLista.sistema;
					permisoItem.clasificacionSolictud = itemLista.clasificacionSolictud;
					permisoItem.idpcotiza = itemLista.idpcotiza;
					if(!grpDepositarioInternachonal.visible)
						permisoItem.depositarioInternacional = itemLista.depositarioInternacional;
					permisoItem.estadoPermiso = itemLista.estadoPermiso;
					permisoItem.proveedor = itemLista.proveedor;
					
					var cerrarPendiente:EventoDirectorGralPrevioImportacion  = new EventoDirectorGralPrevioImportacion(EventoDirectorGralPrevioImportacion.CERRARPENDIENTEPREVIO_ACTUALIZARPRODUCTO_GENERARPENDIENTE);
					cerrarPendiente.itemPermiso = permisoItem;
					cerrarPendiente.isConFechaET = tramitarPermiso.selected;
					dispatchEvent(cerrarPendiente);
				}
			}
			
			public function set confirmarActualizarProductoCerrarPendiente($idProducto:Number):void
			{
				if( $idProducto>0){
					limpiarFormulario();
					
					for (var i:int = 0; i < currentInfoCopy.length; i++) 
					{
						if((currentInfoCopy[i] as PermisoImportacion).idProducto == $idProducto){
							if((currentInfoCopy[i] as PermisoImportacion).sistema == "FS")
								totFueraSistema --;
							else
								totEnSistema --;
							
							totPartidas --;
							currentInfoCopy.removeItemAt(i);
							i--;
						}else{
							(currentInfoCopy[i] as PermisoImportacion).numFila = i+1;
						}
					}
					productosFueraSistema = null;
					productosEnSistema = null;
					
					if(currentInfoCopy.length > 0){
						btnBarTodoESFS.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
					}else{
						btnRegresar.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
					}
				}else{
					trace("Ocurrió algún problema al actualizar el producto");
				}
			}
			
			private function darFormatoAFecha(date:Date):String
			{
				return UtilsFecha.formatoFecha_dia_mes_Anio(date);
			}
			
			protected function linkCotiza_clickHandler(event:MouseEvent):void
			{
				var ruta:String;
				var urlreq:URLRequest;
				ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COTIZACIONES_RUTA + linkCotiza.dato + ".pdf";
				urlreq = new URLRequest( ruta );
				navigateToURL(urlreq);
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" >
		<flecharegresa:botonFlechaRegresa id="btnRegresar" click="botonflecharegresa1_clickHandler(event)"/>
		<otros:divisionGruesa width="100%"/>
		<label:TituloBankGothic_24 text="PREVIO DE IMPORTACIÓN" />
		<otros:divisionHueca width="100%"/>
		<s:Group width="100%" bottom="10">
			<s:VGroup width="100%" height="100%" >
				<label:TextoBankGothic_18 text="{nombreProveedor}"  width="100%" textAlign="left"/>
				<label:TextoBankGothic_18 text="{ubicacion}" color="0x{catalogoColores.LABEL_CASI_NEGRO}" width="100%" textAlign="left" />	
			</s:VGroup>  
			<label:TextoBankGothic_18 width="100%" height="100%" verticalAlign="middle" textAlign="right" text="{totPartidas+' Partidas · ' + totEnSistema+' ES · '+totFueraSistema+' FS'}"/>
		</s:Group>
		<otros:divisionHueca width="100%"/>
		<s:HGroup width="100%" height="100%" >
			<s:VGroup width="25%" height="100%" paddingRight="12" >
				<s:Group width="100%" height="60">
					<s:ButtonBar width="100%" id="btnBarTodoESFS" selectedIndex="0" requireSelection="true" dataProvider="{_arrayBarTodoEsFs}" verticalCenter="0" changing="btnBarTodoESFS_changingHandler(event)"/>
				</s:Group>
				<s:VGroup width="100%" height="100%" gap="0">
					<otros:divisionGruesa width="100%" />
					<s:List id="listaProductos" width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off" requireSelection="true" changing="listaProductos_changingHandler(event)"
							itemRenderer="vista.vistas.previoImportacion.renders.listaProductosXproveedor"/>
				</s:VGroup>  
			</s:VGroup>  
			<s:VGroup height="100%"  paddingTop="13">
				<otros:VDivisionHueca height="100%"/>
			</s:VGroup>  
			<s:VGroup width="100%" height="100%" paddingLeft="9">
				<s:Group width="100%" height="60">
					<s:VGroup width="100%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingTop="4" paddingBottom="3">
						<s:Label id="lblCodigoProducto" fontSize="15" fontWeight="bold"/>
						<s:Label id="lblDescripcionProducto" fontSize="15"/>
					</s:VGroup>  
					<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="right" paddingTop="4" paddingBottom="3">
						<s:Label id="lblFolioCotiza" text="" visible="false" includeInLayout="false"/>
						<linkButton:LinkButtonPQNet id="linkCotiza" fontSize="20" click="linkCotiza_clickHandler(event)" height="30"/>
					</s:VGroup> 
				</s:Group>  
				<otros:divisionGruesa width="100%"/>
				<s:HGroup width="100%" height="100%" id="grpPanelesInfoProducto">
					<s:Scroller width="100%" height="100%" horizontalScrollPolicy="off">
						<s:VGroup width="100%" height="100%" id="grpProducto" paddingRight="10">
							<s:Label width="100%" text="Producto:" fontWeight="bold" fontSize="15" textAlign="left" paddingTop="15"/>
							<otros:division width="100%"/>
							<s:Label width="100%" text="Concepto:" fontWeight="bold"  textAlign="left" paddingTop="15"/>
							<s:TextArea width="100%" height="100%" id="txtAreaConcepto" fontStyle="normal" minHeight="50" maxHeight="80" keyDown="componentes_ChangeDetected('txtAreaConcepto')" focusColor="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
							<s:HGroup width="100%" paddingTop="15" id="grpSubtipoYTipo">
								<s:VGroup width="100%" >
									<s:Label width="100%" fontWeight="bold" text="Tipo de producto:" textAlign="left"/>
									<comboPqNet:ComboCatalogos id="cmbTipoProducto" creationComplete="cmbTipoProducto.cargaTipoProducto('--NINGUNO--')" width="100%" labelField="valor2" 
															   change="validarYMostrarOcultar(event)"/>
								</s:VGroup>  
								<s:VGroup width="100%" id="grpComboSubTipoProd">
									<s:Label width="100%" fontWeight="bold" text="Subtipo de producto:" textAlign="left"/>
									<comboPqNet:ComboCatalogos id="cmbSubtipoProd" creationComplete="cmbSubtipoProd.cargaSubTipoProducto('--NINGUNO--')" width="100%"
															   change="validarYMostrarOcultar(event)"/>
								</s:VGroup>  
							</s:HGroup>  
							<s:HGroup width="100%" paddingTop="15" id="grpControlYClasif">
								<s:VGroup width="100%">
									<s:Label width="100%" fontWeight="bold" text="Control:" textAlign="left"/>
									<comboPqNet:ComboCatalogos id="cmbControl" creationComplete="cmbControl.cargaControlProductos('--NINGUNO--')" width="100%" change="componentes_ChangeDetected('cmbControl')"/>
								</s:VGroup>  
								<s:VGroup width="100%" id="grpComboClasificacion">
									<s:Label width="100%" fontWeight="bold" text="Clasificación:" textAlign="left"/>
									<comboPqNet:ComboCatalogos id="cmbClasificacion" creationComplete="cmbClasificacion.cargaClasifTodos('--NINGUNO--')" width="100%" change="componentes_ChangeDetected('cmbClasificacion')"/>
								</s:VGroup>  
							</s:HGroup>  
							<s:Label width="100%" text="Presentación:" fontWeight="bold" fontSize="15" textAlign="left" paddingTop="15"/>
							<otros:division width="100%"/>
							<s:HGroup width="100%" paddingTop="15">
								<s:VGroup width="100%" >
									<s:Label width="100%" text="Cantidad:" fontWeight="bold" textAlign="left"/>
									<s:TextInput width="100%" id="txtInputCantidad" fontStyle="normal" keyDown="componentes_ChangeDetected('txtInputCantidad')"/>
								</s:VGroup>  
								<s:VGroup width="100%" >
									<s:Label width="100%" fontWeight="bold" text="Unidad:" textAlign="left"/>
									<comboPqNet:ComboCatalogos id="cmbUnidad" creationComplete="cmbUnidad.cargarUnidades('--NINGUNO--')" width="100%" change="componentes_ChangeDetected('cmbUnidad')"/>
								</s:VGroup>  
							</s:HGroup>  
						</s:VGroup>  
					</s:Scroller>
					<s:VGroup height="100%" paddingTop="14" paddingBottom="14">
						<otros:VDivisionClaro height="100%"/>
					</s:VGroup>  
					<s:VGroup width="100%" height="100%" id="grpDatosTecnicos" paddingLeft="10">
						<s:Label width="100%" text="Datos técnicos:" fontWeight="bold" fontSize="15" textAlign="left" paddingTop="15"/>
						<otros:division width="100%"/>
						<s:HGroup width="100%" paddingTop="15" id="grpDepositarioYCAS" verticalAlign="bottom">
							<s:VGroup width="100%" id="grpDepositarioInternachonal">
								<s:Label width="100%" fontWeight="bold" text="Depositario internacional:" textAlign="left"/>
								<comboPqNet:ComboCatalogos id="cmbDepositario" creationComplete="cmbDepositario.cargaDepositarioInternacional('--NINGUNO--')" width="100%"
														   change="validarYMostrarOcultar(event)"/>
							</s:VGroup>
							<s:VGroup width="100%">
								<s:Label id="lblDepOCas" width="100%" fontWeight="bold" textAlign="left"/>
								<s:TextInput width="100%" id="txtInputCas" fontStyle="normal" keyDown="componentes_ChangeDetected('txtInputCas')"/>
							</s:VGroup>  
						</s:HGroup>  
						<s:HGroup width="100%" paddingTop="15">
							<s:VGroup width="100%">
								<s:Label width="100%" fontWeight="bold" text="Estado físico:" textAlign="left"/>
								<comboPqNet:ComboCatalogos id="cmbEstadoFisico" creationComplete="cmbEstadoFisico.cargaEstadoFisico('--NINGUNO--')" width="100%" change="componentes_ChangeDetected('cmbEstadoFisico')"/>
							</s:VGroup>
							<s:VGroup width="100%">
								<s:Label width="100%" text="Fracción Arancelaria:" fontWeight="bold" textAlign="left"/>
								<s:TextInput width="100%" id="txtInputFraccionArancelaria" fontStyle="normal" keyDown="componentes_ChangeDetected('txtInputFraccionArancelaria')"/>
							</s:VGroup>
						</s:HGroup>  
						<s:Label width="100%" text="Requiere permiso de Importación:" textAlign="left" fontWeight="bold" paddingTop="15"/>
						<s:HGroup width="100%" horizontalAlign="center" height="30">
							<chekbox:checkBoxRadio id="rbtnSi" click="rbtnSiyNo_changeHandler(event)"/>
							<s:Label fontSize="18"  text="SI" height="100%" verticalAlign="middle" paddingTop="3" paddingLeft="5"/>
							<!--<s:RadioButton id="rbtnSi" label="SI" change="rbtnSiyNo_changeHandler(event)"/>-->
							<s:Spacer width="10"/>
							<chekbox:checkBoxRadio id="rbtnNo" click="rbtnSiyNo_changeHandler(event)"/>
							<s:Label fontSize="18"  text="NO" height="100%" verticalAlign="middle" paddingTop="3" paddingLeft="5"/>
							<!--<s:RadioButton id="rbtnNo" label="NO" change="rbtnSiyNo_changeHandler(event)"/>-->
						</s:HGroup>  
					</s:VGroup>  
					<s:VGroup height="100%" paddingTop="14" paddingBottom="14"  visible="{grpPermiso.visible}" includeInLayout="{grpPermiso.visible}">
						<otros:VDivisionClaro height="100%"/>
					</s:VGroup>  
					<s:Scroller width="100%" height="100%"  id="grpPermiso" horizontalScrollPolicy="off">
						<s:VGroup width="100%" height="100%" paddingLeft="10">
							<s:Label width="100%" text="Permiso:" fontWeight="bold" fontSize="15" textAlign="left" paddingTop="15"/>
							<otros:division width="100%"/>
							<s:VGroup width="50%" paddingTop="15">
								<s:Label width="100%" fontWeight="bold" text="Tipo de permiso:" textAlign="left"/>
								<comboPqNet:ComboCatalogos id="cmbTipoPermiso" creationComplete="cmbTipoPermiso.cargaTipoPermiso('--NINGUNO--')" change="cmbTipoPermiso_changingHandler(event)" width="100%"/>
							</s:VGroup>
							<s:VGroup width="100%" paddingTop="15" id="grpXPermisoPlafest" visible="false" includeInLayout="false" height="0">
								<s:Label width="100%" fontWeight="bold" text="Datos toxicológicos:" textAlign="left"/>
								<s:TextArea width="100%" height="100%" id="txtAreaDatosToxicos" fontStyle="normal" minHeight="50" maxHeight="80" focusColor="0x{catalogoColores.LABEL_VERDE_AZUL}" keyDown="componentes_ChangeDetected('txtAreaDatosToxicos')"/>
							</s:VGroup>
							<s:VGroup width="50%" paddingTop="15" id="grpXPermisoPsico" visible="false" includeInLayout="false" height="0">
								<s:Label width="100%" fontWeight="bold" text="Clasificación de Producto:" textAlign="left"/>
								<comboPqNet:ComboCatalogos id="cmbClasificacionProducto" creationComplete="cmbClasificacionProducto.cargaClasifProductoPsicotropico('--NINGUNO--')" width="100%" change="componentes_ChangeDetected('cmbClasificacionProducto')"/>
							</s:VGroup>
							<s:Label width="100%" text="Solicitud de tramitación:" fontWeight="bold" fontSize="15" textAlign="left" paddingTop="15"/>
							<otros:division width="100%"/>
							<s:Spacer height="6" width="100%"/>
							<s:CheckBox label="Tramitar permiso" fontWeight="bold" fontSize="14" id="tramitarPermiso"/>
							<s:Label width="100%" text="Fecha estimada de tramitación:" fontWeight="bold" paddingTop="15"/>
							<mx:DateField id="dateEstimadaTramitacion"  width="130" textAlign="center" fontStyle="normal" dayNames="['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa']" 
										  monthNames="['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre']" disabledDays="['0','6']"
										  disabledRanges="{[{rangeEnd: new Date(new Date().getTime() - (1000*60*60*24))}]}" selectedDate="{new Date()}" labelFunction="darFormatoAFecha" parseFunction="null" formatString="DD MMM YYYY"/>
						</s:VGroup>
					</s:Scroller>
				</s:HGroup>
				<otros:divisionGruesa width="100%"/>
				<s:VGroup width="100%" horizontalAlign="right">
					<pqNet:botonPqNetLargo label="Guardar" icono="guardar" gradientePqnet="true" mouseUp="btnGuardar_mouseUpHandler(event)" id="btnGuardar"/>
				</s:VGroup>  
			</s:VGroup>  
		</s:HGroup>  
	</s:VGroup>  
</contenedores:GroupConPaddingStandardPqNet>
