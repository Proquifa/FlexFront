<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:otros="skins.otros.*"
				xmlns:label="skins.skin.label.*"
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="110">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:DateTimeFormatter id="formatoFecha"  locale="es-ES" dateStyle="medium" timeStyle="short"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoReferencias;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.managers.PopUpManager;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			[Bindable]
			private var imagenReferencia:Class;
			[Bindable]
			private var imagenBandera:Class;
			[Bindable]
			private var fechaInicio:Date;
			[Bindable]
			private var fechaFin:Date;
			[Bindable]
			private var _tiempoTotal:int;
			
			override public function set data(value:Object):void{
				this.fechaInicio = null;
				this.fechaFin = null;
				this.usuario.text = "";
				this._tiempoTotal = new int();
				super.data = value;
				if(this.data != null){
					if(this.data.etiquetaLineaDTiempo == "TOTAL"){
						this._tiempoTotal = data.tiempoTotal;
						cambiaViewTiempo.selectedIndex = 2;
					}else if(this.data.etiquetaLineaDTiempo == "FOLIO"){
						this.incidente.text = this.data.folioIncidente;
						cambiaViewTiempo.selectedIndex = 1;
					}else{		
						cambiaViewTiempo.selectedIndex = 0;
						if(data.etiquetaLineaDTiempo == "REGISTRO"){
							this.etiqueta.text = data.etiquetaLineaDTiempo;
							this.usuario.text = data.redacto;
							data.fecha == null ? this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaverde : this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaroja ;
							data.referencias.length > 0 ? this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsito : this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;
							this.fechaInicio = null;
							this.fechaFin = data.fecha;
							this._tiempoTotal = data.tiempoTotal;
						}
						else if(data.etiquetaLineaDTiempo == "REFORMULACIÓN"){
							this.etiqueta.text = data.etiquetaLineaDTiempo;
							this.usuario.text = data.redacto;
							data.FFin == null ? this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaverde : this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaroja ;
							if(data.referencias == null){
								data.referencias = new ArrayCollection();
							}
							data.referencias.length > 0 ? this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsito : this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;					
							this.fechaInicio = data.FInicio;
							this.fechaFin = data.FFin;
							this._tiempoTotal = data.tiempoTotal; 
						}
						else if(data.etiquetaLineaDTiempo == "CAMBIO DE ORIGEN"){
							this.etiqueta.text = data.etiquetaLineaDTiempo;
							this.usuario.text = data.usuarioOrigen;
							data.fecha == null ? this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaverde : this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaroja ;
							//data.referencias.length > 0 ? this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsito : this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;
							this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;						
							this.fechaInicio = null;
							this.fechaFin = data.fecha;
							this._tiempoTotal = data.tiempoTotal; 
						}
						else if(data.etiquetaLineaDTiempo == "GESTIÓN"){
							this.etiqueta.text = data.etiquetaLineaDTiempo;
							this.usuario.text = data.nombreEmpleado;
							data.ffin == null ? this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaverde : this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaroja ;
							if(data.referencias == null){
								data.referencias = new ArrayCollection();
							}
							data.referencias.length > 0 ? this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsito : this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;			
							this.fechaInicio = data.fecha;
							this.fechaFin = data.ffin;
							this._tiempoTotal = data.tiempoTotal;
						}
						else if(data.etiquetaLineaDTiempo == "PONDERACIÓN"){
							this.etiqueta.text = data.etiquetaLineaDTiempo;
							this.usuario.text = "PLozada";
							this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaverde ;
							data.referencias.length > 0 ? this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsito : this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;		
							this.fechaInicio = data.fecha;
							//this.fechaFin = data.fechaCierre;
							this._tiempoTotal = data.tiempoTotal;
						}
						else if(data.etiquetaLineaDTiempo == "REALIZACIÓN + VERIFICACIÓN"){
							this.etiqueta.text = data.etiquetaLineaDTiempo + "  ·  "+  data.folio;
							this.usuario.text = data.nombreResponsable;
							if(data.referencias == null){
								data.referencias = new ArrayCollection();
							}
							data.fechaRealizacion == null ? this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaverde : this.imagenBandera = catalogoIconosGrid.getInstance().render_banderaroja ;
							data.referencias.length > 0 ? this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsito : this.imagenReferencia = catalogoIconosGrid.getInstance().render_clipsitonegro;	
							this.fechaInicio = data.fecha;
							this.fechaFin = data.fechaRealizacion;
							this._tiempoTotal = data.tiempoTotal;
						}
					}	
				}	
			}
			
			private function cargaReferencias(event:Event):void{
				var evt:EventoReferencias = new EventoReferencias(EventoReferencias.REFERENCIA_LINEA_DTIEMPO);
				evt.vieneD = "lineaDTiempo";
				dispatchEvent(evt);
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<mx:ViewStack width="100%" height="100%" id="cambiaViewTiempo" creationPolicy="all">
		<s:NavigatorContent width="100%" height="100%">
			<s:HGroup width="100%" height="100%">
				<s:BorderContainer id="barraDeColor" width="5" height="110" visible="false" visible.selected="true" verticalCenter="0"
								   backgroundColor="0x{catalogoColores.LABEL_VERDE_AZUL}" borderColor="0x{catalogoColores.LABEL_VERDE_AZUL}" />
				<s:VGroup height="100%" width="100%" paddingTop="20" >
					<s:HGroup width="100%" >
						<!--<s:VGroup width="100%">-->
						<s:Label id="etiqueta" height="100%" width="100%" textAlign="left" fontWeight="bold" fontFamily="Helvetica" fontSize="14"/>
						<!--</s:VGroup>-->
						<s:Image source="{this.imagenReferencia}" click="cargaReferencias(event)"/>
						<s:Spacer width="1%"/>
						<s:Image source="{this.imagenBandera}"/>	
					</s:HGroup>
					
					<s:VGroup width="100%" height="100%" >
						<!--<s:FormItem width="100%">-->
						<s:Label id="usuario" width="100%" color="0x{catalogoColores.LABEL_AZUL}" fontFamily="Helvetica" fontWeight="bold" fontSize="12" textAlign="left"/>
						<s:Label id="Fechas" height="100%" width="100%" textAlign="left" fontFamily="Helvetica" fontSize="12"
								 text="FI    { this.fechaInicio == null ? 'NA' : UtilsFecha.formatoFechaDDMMMYYYYHHMM(this.fechaInicio) }   :    FF    {this.fechaFin == null ? 'Pendiente' : UtilsFecha.formatoFechaDDMMMYYYYHHMM(this.fechaFin)}   :   TT     {this._tiempoTotal} {this._tiempoTotal == 1 ? 'día' : 'días'}"/>
						<!--</s:FormItem>-->
					</s:VGroup>		
					<otros:division id="linea1"/>	
				</s:VGroup>
			</s:HGroup>	
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%">
			<s:BorderContainer width="100%" height="100%" borderColor="#FFFFFF" backgroundColor="#FFFFFF">
				<s:VGroup height="100%" width="100%">
					<label:labelTitulo_Otros id="incidente" color="#999999" textAlign="center" width="100%" height="100%" verticalAlign="middle" fontFamily="Helvetica"/>
				</s:VGroup>
			</s:BorderContainer>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%">
			<s:BorderContainer width="100%" height="100%" borderColor="#FFFFFF" backgroundColor="#FFFFFF">
				<s:VGroup width="100%" height="100%">
					<s:Label  width="100%" height="100%" text="TIEMPO TOTAL : {this._tiempoTotal} " fontFamily="Helvetica" fontSize="14" verticalAlign="bottom" textAlign="center" />
				</s:VGroup>
			</s:BorderContainer>
		</s:NavigatorContent>
	</mx:ViewStack>	
	
</s:ItemRenderer>
