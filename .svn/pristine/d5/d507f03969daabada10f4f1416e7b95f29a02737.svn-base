<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:link = "skins.skin.linkButton.*"
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
				autoDrawBackground="true" xmlns:otros="skins.otros.*" xmlns:consultas="skins.skin.comun.consultas.*" xmlns:label="skins.skin.label.*">
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.compras.prodAlmacen2012.EventoRepProAlmacen2012;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.ProductoAlmacen;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.PartidaPedido;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatoMoneda;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			override public function set data(value:Object):void{
				this.autoDrawBackground = true;
				this.grpTotal.includeInLayout = false;
				this.grpTotal.visible = false;
				grpPrincipal.visible = grpPrincipal.includeInLayout = true;
				grpStock.visible = grpStock.includeInLayout = false;
				super.data = value;
				lblFlete.text = "";
				
				if((data as ProductoAlmacen).totalProductosLista == 1){
					lblTPartidas.text = (data as ProductoAlmacen).totalProductosLista + ' Pedido';
				}else{
					lblTPartidas.text = (data as ProductoAlmacen).totalProductosLista + ' Pedidos'
				}
				
				if((data as ProductoAlmacen).destino == 'Stock'){
					grpPrincipal.visible = grpPrincipal.includeInLayout = false;
					grpStock.visible = grpStock.includeInLayout = true;
					lblTPartidas.text = (data as ProductoAlmacen).totalProductosLista + ' OC';
				}
				
				if((data as ProductoAlmacen).destino == 'Total'){
					this.grpPrincipal.includeInLayout = false;
					this.grpPrincipal.visible = false;
					this.grpTotal.includeInLayout = true;
					this.grpTotal.visible = true;
					this.autoDrawBackground = false;
				}
				if( (data as ProductoAlmacen).tipoFlete != null){
					if((data as ProductoAlmacen).tipoFlete == "Regular"){
						lblFlete.text = "FR";
						lblFlete.setStyle('color','0x'+catalogoColores.LABEL_AZUL_ESPECTRAL);
					}else{
						null
					}
					if((data as ProductoAlmacen).tipoFlete == "Flete Express"){
						lblFlete.text = "FE";
						lblFlete.setStyle('colo','0x'+catalogoColores.LABEL_ROJO);
					}else{
						null
					}
					if((data as ProductoAlmacen).tipoFlete == "Programado"){
						lblFlete.text = "FP";
						lblFlete.setStyle('color','0x'+catalogoColores.LABEL_MORADO);
					}else{
						null;
					}
					if((data as ProductoAlmacen).destino == "Stock"){
						lblFlete.text = "STOCK";
						lblFlete.setStyle('color','0x'+catalogoColores.LABEL_VERDE_AZUL);
					}else{
						null;
					}
				}
				/* if(  (data as ProductoAlmacen).pcompra != null && (data as ProductoAlmacen).pcompra.ACambio ){
				imgAC.visible = true; imgAC.width = 25;
				}else{
				imgAC.visible = false; imgAC.width = 0;
				} */
			}
			private function buscaPedido(folio:String):void{
				var url:URLRequest = new URLRequest();
				if(folio == 'pedido'){
					url.url = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + (data as ProductoAlmacen).piRelacionada + '.pdf';
					navigateToURL( url );
				}
				if(folio == 'pcompra'){
					url.url = RutasPdF.GENERAL_RUTA + RutasPdF.DOCTOSR_RUTA + (data as ProductoAlmacen).doctoR + '.pdf';
					navigateToURL( url );
				}
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<s:VGroup height="100%" width="100%" gap="0" id="grpPrincipal" >
		<s:HGroup height="100%" id="wgroup" width="100%">		
			<consultas:LineaItemSeleccionado visible.selected="true"/>
			<s:VGroup  height="100%" width="100%" paddingBottom="17" paddingTop="17" paddingRight="10" >
				<s:HGroup width="100%">
					<link:LinkButtonPQNet2 label="P-{ (data as ProductoAlmacen as ProductoAlmacen).piRelacionada }" click="buscaPedido('pedido')" />
					<link:LinkButtonPQNet2 label="·  { (data as ProductoAlmacen as ProductoAlmacen).referencia }" click="buscaPedido('pcompra')" />
					<s:Spacer width="100%"/>
					<label:Titulo id="lblFlete" paddingTop="0" />
				</s:HGroup>
				<s:HGroup width="100%" >
					<label:Titulo text="{(data as ProductoAlmacen).parciales == false ? 'No parciales' : 'Parciales'}" textAlign="left" />
					<s:Spacer width="80%" />
					<label:Titulo  text="FEE+: " />
					<s:HGroup paddingTop="15">
						<s:Group height="100%" >
							<label:Fecha id="lblFee" fecha="{(data as ProductoAlmacen).pcompra.fechaEstimadaEntrega}" />
							<s:Ellipse  id="grpEllipse" width="10" height="10" x="{lblFee.width+5}">
								<s:fill>
									<s:SolidColor color="{(data as ProductoAlmacen).esEnTiempo == '1' ? uint('0x70a047'):uint('0xd10c0c')}" />
								</s:fill>
								<s:filters>
									<s:DropShadowFilter alpha="1" angle="45" blurX="1" blurY="2"
														color="#909090" distance="2" hideObject="false" inner="false" knockout="false" 
														quality="1" strength="1"/>
								</s:filters>
							</s:Ellipse>
						</s:Group>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup width="100%">
					<label:Titulo text="Monto: $" paddingTop="0" />
					<label:TextoGris text="{ UtilsFormatosNumericos.precisionADosDecimalesConComas( (data as ProductoAlmacen).pcompra.montoTotal ) } USD" paddingTop="0"/>
				</s:HGroup>
				<s:HGroup width="100%">
					<label:Titulo text="Total piezas: " paddingTop="0" />
					<label:TextoGris text="{ (data as ProductoAlmacen).cantidad +( (data as ProductoAlmacen).cantidad == 1 ? ' pza' : ' pzas' ) }" paddingTop="0"/>
					<s:Spacer width="100%"/>
					<label:Titulo text="{(data as ProductoAlmacen).ruta_Zona}" paddingTop="0" />
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>
		<otros:division width="100%" />
	</s:VGroup>
	<!--<s:VGroup height="100%" width="100%" gap="0" id="grpStock" >
		<s:HGroup height="100%" id="stockGroup" width="100%">		
			<consultas:LineaItemSeleccionado visible.selected="true"/>
			<s:VGroup height="100%" width="100%" paddingLeft="17" paddingRight="17">
				<s:HGroup width="100%" horizontalAlign="left" paddingBottom="5">
					<label:Titulo text="# {( data as ProductoAlmacen).numeroDeFila }" />
					<label:Titulo text=" · {(data as ProductoAlmacen).cantidad +( (data as ProductoAlmacen).cantidad == 1 ? ' pza' : ' pzas' ) } · " />
					<label:Titulo text="{ UtilsFormatosNumericos.precisionADosDecimalesConComas( (data as ProductoAlmacen).producto.costo * (data as ProductoAlmacen).cantidad ) } USD" />
				</s:HGroup>
				
				<label:Titulo_w100 width="100%" text="{ (data as ProductoAlmacen).descripcionProducto }" maxDisplayedLines="2"  />
				<s:Spacer height="100%" width="100%"/>
				<s:HGroup width="100%" paddingBottom="5">
					<label:TextoGris text="PU ${ UtilsFormatosNumericos.precisionADosDecimalesConComas( (data as ProductoAlmacen).producto.costo ) } USD"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5">
					<label:TextoGris text="{ (data as ProductoAlmacen).tipoProducto } · "  />
					<label:TextoGris text="{ (data as ProductoAlmacen).controlProducto }"  />
					<s:HGroup horizontalAlign="right">
						<label:TextoGris text="{ (data as ProductoAlmacen).manejoProducto }" textAlign="right" />
					</s:HGroup>
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>
		<otros:division />
	</s:VGroup>-->
	<s:VGroup height="100%" width="100%" gap="0" id="grpStock" >
		<s:HGroup height="100%" id="stockGroup" width="100%">		
			<consultas:LineaItemSeleccionado visible.selected="true"/>
			<s:VGroup  gap="5" height="100%" width="100%" paddingTop="17"  paddingBottom="17">
				<s:HGroup width="100%" horizontalAlign="left" paddingBottom="5">
					<s:Label text="# {( data as ProductoAlmacen).numeroDeFila }" fontSize="13" fontWeight="bold" />
					<s:Label text=" · {(data as ProductoAlmacen).cantidad +( (data as ProductoAlmacen).cantidad == 1 ? ' pza' : ' pzas' ) } · " fontSize="13" fontWeight="bold"/>
					<s:Label fontSize="13" text="{ UtilsFormatosNumericos.precisionADosDecimalesConComas( (data as ProductoAlmacen).producto.costo * (data as ProductoAlmacen).cantidad ) } USD" fontWeight="bold"/>
				</s:HGroup>
				
				<s:Label fontSize="12" width="100%" text="{ (data as ProductoAlmacen).descripcionProducto }" maxDisplayedLines="2"  />
				
				<!--<s:VGroup  paddingRight="10" paddingTop="10"  width="100%" height="100%">-->
				<s:HGroup width="100%" paddingBottom="5">
					<s:Label fontSize="12" width="100%" text="PU ${ UtilsFormatosNumericos.precisionADosDecimalesConComas( (data as ProductoAlmacen).producto.costo ) } USD" color="0x{catalogoColores.LABEL_CASI_NEGRO}"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5">
					<s:Label text="{ (data as ProductoAlmacen).tipoProducto } · " fontSize="12"  />
					<s:Label text="{ (data as ProductoAlmacen).controlProducto }" fontSize="12" />
					<s:Label text="{ (data as ProductoAlmacen).manejoProducto }" fontSize="12" textAlign="right" width="100%"/>
				</s:HGroup>
				<!--</s:VGroup>-->
			</s:VGroup>
		</s:HGroup>
		<otros:division />
	</s:VGroup>
	<s:VGroup  width="100%" verticalAlign="middle" horizontalAlign="center" paddingTop="25" paddingBottom="25" id="grpTotal" height="100%">
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
			<label:TextoGrisCasiNegro id="lblTPartidas" /> 
			<label:TextoGrisCasiNegro text="· ${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as ProductoAlmacen).totalMonto)} USD"/>	
		</s:HGroup>
		<label:TextoGrisCasiNegro text="{(data as ProductoAlmacen).totalPiezas} {(data as ProductoAlmacen).totalPiezas == 1 ? ' Pieza':' Piezas'}" />
		<label:TextoGrisCasiNegro text="TOTAL"/>
	</s:VGroup>
</s:ItemRenderer>