<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:busqueda="mx.com.proquifa.vista.vistas.skin.busqueda.*"
		 xmlns:label="skins.skin.label.*"
		 xmlns:otros="skins.otros.*" 
		 width="100%" height="100%" 
		 xmlns:arribo="mx.com.proquifa.vista.vistas.gestorCompras.componentes.arribo.*" 
		 xmlns:boton="mx.com.proquifa.vista.vistas.skin.boton.*" 
		 xmlns:agregarDocumento="mx.com.proquifa.vista.vistas.skin.agregarDocumento.*"
		 resize="reajustar_resizeHandler(event)" 
		 creationComplete="group1_creationCompleteHandler(event)"
		 >
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.com.proquifa.vista.eventos.EventoGestorCompras;
			import mx.com.proquifa.vista.modelo.gestorCompras.arriba.ModeloArriboGestorCompras;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosBotones;
			import skins.textinput.busqueda.skinTextInputBusqueda2D;
			
			private var _dataProvider:ArrayCollection;
			public static var generarLista:Boolean;
			private var oc:String;
			[Bindable]public static var tipoPublicaciones:Boolean;
			
			public function set tipoProductoPublicaciones(value:Boolean):void
			{
				tipoPublicaciones = value;
			}
			
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}
			
			public function set dataProvider(value:ArrayCollection):void
			{
				_dataProvider = ObjectUtil.copy(value) as ArrayCollection;
				lstOrdenCompra.dataProvider = value;
				lblTotal.text = value.length.toString();
				lblTotal.text += value.length == 1 ? ' Orden de Compra' : ' Ordenes de Compra';
				lstOrdenCompra.selectedIndex = 0;
				lstOrdenCompra.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGING));
				
				listaAsociar.gridPartidasAsociadas.dataProvider = new ArrayCollection();
				listaAsociar.universoPartidasAsociadas = new ArrayCollection();
				/*listaAsociar.quitarTodo();*/
				listaAsociar.objectCertificados = new Object;
				if(value.length == 0){
					dispatchEvent( new Event("volverVistaAnterior",true));
				}
				else{
					listaAsociar.quitarTodo();
				}
			}
			
			protected function txtBuscador_changingHandler(event:TextOperationEvent):void
			{
				lstOrdenCompra.dataProvider = UtilsGrid.queryCampoXLike(dataProvider,"compra",txtBuscador.text);
			}
			
			protected function lstOrdenCompra_changingHandler(event:IndexChangeEvent):void
			{
				var query:Query;
				if(tipoPublicaciones)
					query = ModeloArriboGestorCompras.queryPub;
				else
					query = ModeloArriboGestorCompras.query;
				var punteros:Array = lstOrdenCompra.selectedItem.object.partidas;
				var array:ArrayCollection = new ArrayCollection;
				
				for (var i:int = 0; i < punteros.length; i++) 
				{
					var partida:PartidaCompra = ObjectUtil.copy(query.universo.getItemAt(punteros[i])) as PartidaCompra;
					partida.numFila = i + 1;
					partida.loteVigente = partida.lote;
					partida.object = "agregarPartida";
					if(i == punteros.length-1)
						partida.abierto = true;
					else
						partida.abierto = false;
					
					array.addItem(partida);
				}
				
				listaAsociar.dataProvider = array;
				listaAsociar.object = new Object;
				
				var evento:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.ESCONDER_POPUP_ABC);
				evento.habilitado = true;
				dispatchEvent(evento);
				
				listaAsociar.gridPartidasAsociadas.dataProvider = ObjectUtil.copy(listaAsociar.universoPartidasAsociadas) as ArrayCollection;
				
				listaAsociar.verificarInformacion();
				oc=partida.compra;
				lblOrdenCompra.text = "OC-" + partida.compra;
				
			}
			
			public function limpiarDocPakingList():void
			{
				btnBusq.label =".pdf";
				_rutaDoc = null;
				imgVer.source = catalogoIconosBotones.getInstance().vista_previa_gris;
				validarBotonGenerar();	
			}
			
			private var certificadoPdf:ByteArray = null;
			private var _rutaDoc:String;
			public var file:File = new File();
			public var filepdf:File = new File();
			public var filexml:File = new File();
			protected function agregardocumento1_clickHandler(valor:String):void
			{
				browseFileSystem(valor);
			}
			
			public function browseFileSystem(valor:String):void{
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				
				var docFilter:FileFilter;
				if (valor == 'pdf')
				{
					docFilter = new FileFilter("Documents", "*.pdf");
					file.addEventListener(Event.COMPLETE,completeHandlerPDF);
				}
				file.browse([docFilter]); 
			}
			
			private function selectHandler(event:Event):void 
			{
				var file:FileReference = FileReference(event.target);
				file.load();
				/*if(btnBusq.text != ".pdf")
				imgVer.source = catalogoIconosBotones.getInstance().ver;
				else
				imgVer.source = catalogoIconosBotones.getInstance().verGris;*/
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void 
			{
				trace("ioErrorHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void 
			{
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			private function completeHandlerPDF(event:Event):void 
			{
				trace("completeHandler: " + event);
				certificadoPdf = this.file.data;
				_rutaDoc = file.nativePath;
				btnBusq.label = file.name;
				filepdf = file;
				
				if(btnBusq.label != ".pdf"){
					imgVer.source = catalogoIconosBotones.getInstance().vista_previa_cuadro;
					validarBotonGenerar();
				}else{
					imgVer.source = catalogoIconosBotones.getInstance().vista_previa_gris;
				}
			}
			
			protected function visualizarPDF_clickHandler(event:MouseEvent):void
			{
				var request:URLRequest = new URLRequest("file://"+  encodeURI(_rutaDoc));
				navigateToURL(request);
			}
			
			protected function generarListaPL_clickHandler(event:MouseEvent):void
			{
				var i:int;
				var j:int;
				var completo:Boolean = true;
				var problema:String = "";
				var arrayPartidas:ArrayCollection = listaAsociar.universoPartidasAsociadas;
				for(i=0; i < arrayPartidas.length; i++){
					j=i;
					if( ((arrayPartidas[i] as PartidaCompra).origen == null) ||
						((arrayPartidas[i] as PartidaCompra).origen == "")  || ((arrayPartidas[i] as PartidaCompra).origen.toLocaleUpperCase() == "--NINGUNO--")
					)
					{
						completo=false;
						problema += (arrayPartidas[i] as PartidaCompra).numFila +", ";
					}
					else if( ((arrayPartidas[i] as PartidaCompra).lote == null) ||
						((arrayPartidas[i] as PartidaCompra).lote == "")){
						completo=false;
						problema += (arrayPartidas[i] as PartidaCompra).numFila +", ";
					}
					else if(!tipoPublicaciones){
						if( ((arrayPartidas[i] as PartidaCompra).certificadoPdf == null) ||
							(arrayPartidas[i] as PartidaCompra).certificadoPdf.length == 0){
							completo=false;
							problema += (i+1) +", ";
						}
					}
				}
				problema=problema.substring(0, problema.length-2);
				if((filepdf.data != null) && (arrayPartidas.length > 0) && (completo)){
					var evento:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.GENERAR_LISTA_ARRIBO_PUBLICACIONES);
					evento.listaPartidas = arrayPartidas as ArrayCollection;
					evento.docPdf = filepdf.data;
					dispatchEvent(evento);
				}
				if(!completo){
					alertaSingleton.show("Hay campos sin llenar en "+(problema.length == 1 ? "la fila":"las filas")+" "+problema,catalogoAlertas.TIT_ADV_atencion);
				}
				else if(filepdf.data == null){
					alertaSingleton.show("Falta agregar documento a Packing List",catalogoAlertas.TIT_ADV_atencion);
				}
				else if(arrayPartidas.length == 0){
					alertaSingleton.show("No hay partidas",catalogoAlertas.TIT_ADV_atencion);
				}
			}
			
			protected function mostrarArchivoPDF(event:MouseEvent):void
			{
				var path:Object = Util.rutaNueva(oc);
				var request:URLRequest = new URLRequest(RutasPdF.GENERAL_RUTA + RutasPdF.COMPRAS_RUTA + path.ruta + oc + "-P.pdf");
				navigateToURL(request);
			}
			
			protected function btnOrdenCompra_mouseOverHandler(event:MouseEvent):void
			{
				btnColor.color = 0x008894;
				lblOrdenCompra.setStyle("color", "0xFFFFFF");
			}
			
			protected function btnOrdenCompra_mouseOutHandler(event:MouseEvent):void
			{
				btnColor.color = 0xFFFFFF;
				lblOrdenCompra.setStyle("color", "0x008894");
			}
			
			public function validarBotonGenerarLA(evt:Event):void
			{
				validarBotonGenerar();
			}
			public function validarBotonGenerar():void
			{
				var i:int;
				var j:int;
				var completo:Boolean = true;
				var problema:String = "";
				/*var longitud:int=listaAsociar.gridPartidasAsociadas.dataProvider.length;*/
				var longitud:int=listaAsociar.universoPartidasAsociadas.length;
				var arrayPartidas:ArrayCollection = listaAsociar.universoPartidasAsociadas;
				for(i=0; i < longitud; i++){
					j=i;
					if( ((arrayPartidas[i] as PartidaCompra).origen == null) ||
						((arrayPartidas[i] as PartidaCompra).origen == "")  || ((arrayPartidas[i] as PartidaCompra).origen.toLocaleUpperCase() == "--NINGUNO--")
					)
					{
						completo=false;
						problema += (arrayPartidas[i] as PartidaCompra).numFila +", ";
					}
					else if( ((arrayPartidas[i] as PartidaCompra).lote == null) ||
						((arrayPartidas[i] as PartidaCompra).lote == "")){
						completo=false;
						problema += (arrayPartidas[i] as PartidaCompra).numFila +", ";
					}
					else if(!tipoPublicaciones){
						if( ((arrayPartidas[i] as PartidaCompra).certificadoPdf == null) ||
							(arrayPartidas[i] as PartidaCompra).certificadoPdf.length == 0){
							completo=false;
							problema += (arrayPartidas[i] as PartidaCompra).numFila +", ";
						}
					}
				}
				
				if(filepdf.data == null){
					completo=false
				}
				else if(arrayPartidas.length == 0){
					completo=false
				}
				if(longitud==0)
				{
					completo=false
				}
				
				if(completo){
					grupoB.enabled=true;
					grupoBlbl.color = 0x008894;
				}else{
					grupoB.enabled=false;
					grupoBlbl.color = 0xc2c3ca;
				}
				
			}
			
			public function set respuestaGenerarListaArribo(data:String):void
			{
				if(data == null) return;	
				if (data != "No se inserto lista arribo" && data != "Falta_Archivo")
				{
					/*vgpAsociar.quitarTodo();*/
					listaAsociar.quitarTodo()
					btnBusq.label = ".pdf";
					var eve:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.LISTADO_ARRIBO_PUBLICACIONES);
					eve.idEmpleado = DatosGlobales.getInstance()._usuario.clave;
					dispatchEvent(eve);
					generarLista = true;
					
					imgVer.source = catalogoIconosBotones.getInstance().verGris;
					filepdf = new File();
					if (EventoGestorCompras.consolidado)
					{
					var ert:EventoGestorCompras = new EventoGestorCompras(EventoGestorCompras.OBTENER_LISTAS_ORDENES_CONSOLIDADO_PUBLICACIONES);
					ert.idOC = 0;
					ert.tipoPublicaciones = true;
					dispatchEvent(ert);
					}
				}
				else
				{
					alertaSingleton.show(data,catalogoAlertas.TIT_ADV_atencion);
				}
			}
			[Bindable] public static var heightBtnPDF:Number = 30;
			
			protected function reajustar_resizeHandler(event:ResizeEvent):void
			{
				heightBtnPDF = (27/1140) * (unscaledHeight);
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				addEventListener("validarBotonGenerarLA",validarBotonGenerarLA);
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" paddingTop="20" gap="10" paddingLeft="10">
		<label:Titulo_32_Novecento_VerdeAzul id="lblProveedor" width="100%" textAlign="center" />
		<otros:divisionDegradado width="100%" />
		
		<s:HGroup width="100%" height="100%" paddingTop="20" paddingRight="10" gap="10">
			<s:VGroup id="vgpOrdenCompra" width="19%" height="100%">
				<s:HGroup width="100%" horizontalAlign="center" >
					<s:TextInput id="txtBuscador" width="100%" maxWidth="{lstOrdenCompra.width - 10}" skinClass="skins.textinput.busqueda.skinTextInputBusqueda2D" change="txtBuscador_changingHandler(event)" paddingRight="0"/>
				</s:HGroup> 
				
				<s:VGroup width="100%" height="100%" gap="0" paddingBottom="20">
					<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
							selectedIndex="0" id="lstOrdenCompra" contentBackgroundAlpha="0"
							itemRenderer="mx.com.proquifa.vista.vistas.gestorCompras.itemrender.OrdenesCompra_Arribo_IR"
							changing="lstOrdenCompra_changingHandler(event)"
							/>
					<otros:LineaDivision width="100%" maxWidth="350" height="2" color="#333333" />
					<label:Texto_14_Helvetica width="100%" id="lblTotal" textAlign="center" fontSize="18" paddingTop="10"/>
				</s:VGroup>
			</s:VGroup>
			<s:HGroup height="100%" verticalAlign="middle" >
				<otros:divisionDegradadoVertical height="100%" /> 
			</s:HGroup>
			
			
			
			<s:VGroup id="vgpPartidas" width="81%" height="100%" >
				<s:VGroup id="OC" width="100%"  verticalAlign="middle" horizontalAlign="right" paddingRight="10" paddingBottom="-5">
					<s:HGroup width="220" right="0">
						<s:Group id="btnOrdenCompra" width="220" height="45" click="mostrarArchivoPDF(event)" mouseOver="btnOrdenCompra_mouseOverHandler(event)" mouseOut="btnOrdenCompra_mouseOutHandler(event)">
							<s:Rect width="100%" height="45">     
								<s:fill>
									<s:SolidColor id="btnColor" color="#FFFFFF" />
								</s:fill>
							</s:Rect>
							<label:Titulo_20_Novecento_VerdeAzul id="lblOrdenCompra" width="220" height="45" fontSize="20" verticalAlign="middle" textAlign="center"/>
						</s:Group>
					</s:HGroup>
				</s:VGroup>	
				<arribo:GridAsociarPartidaListaArriboLista id="listaAsociar" width="100%" height="100%" />
				<s:HGroup width="100%" paddingBottom="17" paddingTop="15" gap="0" paddingRight="0" paddingLeft="0" >					
					<s:HGroup width="100%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingLeft="10"  gap="0">
						
						<s:HGroup width="47%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingRight="10"  gap="5">
							<label:TituloNovecento_18 id="lblPackingList" text="Packing List: " textAlign="left" fontSize="18" height="22"/>
							<agregarDocumento:AgregarDoc width="100%" height="100%" sizeHeight="{heightBtnPDF}" id="btnBusq" label=".pdf" click="agregardocumento1_clickHandler('pdf')" />
						</s:HGroup>		
						<mx:Image id="imgVer" source="{catalogoIconosBotones.getInstance().vista_previa_gris}" width="50" height="30" click="visualizarPDF_clickHandler(event)" />					
					</s:HGroup>
					<s:HGroup width="100%" horizontalAlign="right" paddingRight="10">
						<s:VGroup id="grupoB" width="170" height="30" horizontalAlign="center" verticalAlign="middle" maxWidth="170" click="generarListaPL_clickHandler(event)" enabled="false">
							<s:Group width="100%" height="100%">
								<s:Rect width="100%" height="100%">
									<s:fill >
										<mx:SolidColor id="grupoBlbl" color="#c2c3ca" />
									</s:fill>
								</s:Rect>
								<s:Label text="GENERAR" fontSize="20" fontFamily="Novecento" color="#FFFFFF" fontWeight="bold" width="100%" textAlign="center" height="100%" verticalAlign="middle"/>
							</s:Group>  
						</s:VGroup>
						<!--<mx:Image id="imgGenerarList" source="{catalogoIconosBotones.getInstance().boton_generarLA_gris}" enabled="false"  horizontalAlign="right" click="generarListaPL_clickHandler(event)"/>		-->
					</s:HGroup>
				</s:HGroup>
			</s:VGroup>  			
		</s:HGroup>
	</s:VGroup>
</s:Group>
