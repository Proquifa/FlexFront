<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
					xmlns:mate="http://mate.asfusion.com/"
					xmlns:debug="com.asfusion.mate.utils.debug.*">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.compras.compras.EventoConsultasCompraNuevo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.compras.compras.MedoloConsultaComprasNuevo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.ConsultaComprasNuevoGridPrincipal;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.ConsultaComprasNuevoPartida;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.ConsultaCopmprasNuevoHistorial;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.ConsultasComprasNuevoMenu;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaAbiertoVSCerrado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaAvisoDCambios;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaCompradores;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaEstado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaFabrica;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.ComprasGraficaTipo;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.GraficaComprasETVsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.GraficaXCompraETvsFT;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.graficosETvsFT.GraficaComprasAbiertasVsCerradas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.graficosETvsFT.GraficaComprasETVsFTSecundaria;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.graficosETvsFT.GraficaComprasEstado;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.graficosETvsFT.GraficaComprasMarcas;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.compras.comprasNuevo.componentesGraficas.graficosETvsFT.GraficaComprasProveedores;
		]]>
	</mx:Script>
	
	<!--	<mate:Debugger level="{Debugger.ALL}"/>-->
	
	<!--Lista de Compras-->	
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_COMPRAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerCompras"
								  arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.ordenCompra, event.usuario, event.compro ]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setListaCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
				
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors	targets="{[ConsultaComprasNuevoGridPrincipal,ComprasGraficaAbiertoVSCerrado,ComprasGraficaCompradores,
					GraficaComprasAbiertasVsCerradas,GraficaComprasEstado,GraficaComprasProveedores,GraficaComprasMarcas,
					GraficaComprasETVsFT]}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="ListaCompras"
							   targetKey="obtenerListaCompras"/>
	</mate:Injectors>  
	
	<!--Evento para la Espera y bloqueo de Pantalla-->
	<mate:EventHandlers type="{EventoEsperar.CONFIGURAR_ESPERA}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="setControlDeBloqueoPantalla"
							arguments="{[currentEvent.mensaje, currentEvent.tipoEventos,currentEvent.idButtons,currentEvent.error]}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[ConsultasComprasNuevoMenu,ConsultaComprasNuevoGridPrincipal]}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="actualizarEstadoDeEsperaYBloqueo"
							   targetKey="actualizarEsperaYBloqueo"/> 
	</mate:Injectors>	
	
	<!-- Lista de Partidas de Compras --> 
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.MOSTRAR_DATOS_COMPRA_GENERAL}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPatidasCompraParaCEspecifica"
								  arguments="{event.ordenCompra}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setPartidaCompra"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="error"
									arguments="{fault}"/>
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaComprasNuevoPartida}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="partidaCompra"
							   targetKey="obtenerPartidaCompra"/>
	</mate:Injectors> 
	<!--obtener tiempos de proceso -->	 
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_TIEMPO_PROCESO}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerTiempoProcesoPorPartida"
								  arguments="{event.idPCompra}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setTiempoProcesos"
									arguments="{[resultObject,event]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="error"
									arguments="{fault}"/>
				
			</mate:faultHandlers>
			
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors			   target="{ConsultaCopmprasNuevoHistorial}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="TiempoProcesos"
							   targetKey="recibeHistorial"/>
	</mate:Injectors>	
	
	<mate:Injectors				target="{ConsultaCopmprasNuevoHistorial}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="TiempoProcesosEtiqueta"
							   targetKey="recibeDatosEtiqueta"/>
	</mate:Injectors>	
	
	<!--obtener info Graficas -->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_INFO_GRAFICAS}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenDeConsultaCompras"
								  arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.coloco, event.ordenCompra, event.usuario  ]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setObtenerInfoGraficas"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
<!--				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="errorInfoGrafica"
									arguments="{fault}"/>-->
				
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				targets="{[ComprasGraficaProveedores,ComprasGraficaProductos,ComprasGraficaEstado,ComprasGraficaFabrica,ComprasGraficaAvisoDCambios,ComprasGraficaTipo]}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="obtenerInfoGraficas"
							   targetKey="obtenerInformacionGrafica"/>
	</mate:Injectors>
	
	<!--obtener totales de compras -->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_TOTALES_COMPRAS}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="findTotalesCompraPorPeriodo"
								  arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.coloco, event.ordenCompra, event.usuario, event.individual  ]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setObtenerTotalesCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
<!--				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="errorTotalesActual"
									arguments="{fault}"/>-->
				
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaComprasNuevoGridPrincipal}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="obtenerTotalesCompras"
							   targetKey="obtenerTotalCompras"/>
	</mate:Injectors>
	
	<!--obtener totales de compras PASADO-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_TOTALES_PASADO}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="findTotalesCompraPorPeriodo"
								  arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.coloco, event.ordenCompra, event.usuario, event.individual  ]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setObtenerTotalPasadoCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
<!--				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="errorTotalesActual"
									arguments="{fault}"/>-->
				
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaComprasNuevoGridPrincipal}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="obtenerTotalPasadoCompras"
							   targetKey="obtenerTotalCompras"/>
	</mate:Injectors>
	
	<!--obtener totales de compras POSPASADO-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_TOTALES_POSPASADO}"> 
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="findTotalesCompraPorPeriodo"
								  arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.coloco, event.ordenCompra, event.usuario, event.individual  ]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setObtenerTotalPosPasadoCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
<!--				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="errorTotalesActual"
									arguments="{fault}"/>-->
				
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors				target="{ConsultaComprasNuevoGridPrincipal}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="obtenerTotalPosPasadoCompras"
							   targetKey="obtenerTotalCompras"/>
	</mate:Injectors>
	
	<!--Evento para mostrar ocultar tab grafica-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.MOSTRAR_OCULTAR_TAB_INFO_GRAFICAS}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="setMostrarOcultaTabGrafica"
							arguments="{event.tabGrafica}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaComprasNuevoGridPrincipal}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="mostrarOcultaTabGrafica"
							   targetKey="mostrarOcultarTab"/> 
	</mate:Injectors>	
	
	<!--obtener tipo de filtro para graficos secundarios -->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_FILTRO_GRAFICO_SECUNDARIO}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="setFiltroGraficoSecundario"
							arguments="{event.tipo}"/>  
	</mate:EventHandlers>
	<mate:Injectors targets="{[GraficaComprasAbiertasVsCerradas,GraficaComprasEstado,GraficaComprasProveedores,
					GraficaComprasMarcas,GraficaComprasETVsFTSecundaria,ConsultasComprasNuevoMenu]}" >
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="filtroGraficoSecundario"
							   targetKey="obtenerFiltroGrafico"/> 
	</mate:Injectors>
	<!--Evento para pasar info a la grafica ETvsFTSecundaria-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.PASAR_INFO_A_ETVSFT_SECUNDARIA}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="pasarInfoAGraficaETvsFT"
							arguments="{event.arregloExtra}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{GraficaComprasETVsFTSecundaria}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="enviarInfoAGraficaETvsFT"
							   targetKey="obtenerInfoDeGraficaPrincipalETvsFT"/> 
	</mate:Injectors>
	
	<!--===========================================================MODIFICACIONES PARA CONSULTAS POR DEMANDA===================================-->
	
	<!--Evento Para settear los valores de los filtros de la consulta actual-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.SETTEAR_VALORES_DE_LA_BUSQUEDA_ACTUAL}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="setSettearValoresDeLaConsultaActual"
							arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.coloco, event.ordenCompra, event.usuario]}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaComprasNuevoGridPrincipal}" >
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="regresaValoresFiltrosDelaBusquedaActual"
							   targetKey="filtrosConsultaActual"/> 
	</mate:Injectors>
	
	<!--Evento que inyecta la vista seleccionada en el menu-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.SETTEAR_CURRENT_VISTA_SELECTED}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="setSettearSelectedVista"
							arguments="{event.selectedVista}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultasComprasNuevoMenu}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="enviarVistaSeleccionadaActualmente"
							   targetKey="recibirLaVistaSeleccionada"/> 
	</mate:Injectors>
	
	<!--Evento que setea true o false para actualizar o no la información en la vista seleccionada actualmente-->
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.ACTUALIZAR_VISTA_ACTUAL}">
		<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
							method="setActualizarDatosVistaActual"
							arguments="{event.actualizarVistaCurrent}"/>  
	</mate:EventHandlers>
	<mate:Injectors target="{ConsultaComprasNuevoGridPrincipal}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}"
							   sourceKey="actualizarLaVistaSeleccionada"
							   targetKey="actualizarVistaActual"/> 
	</mate:Injectors>
	
	
	<mate:EventHandlers type="{EventoConsultasCompraNuevo.OBTENER_GRAFICA_X_COMPRAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.CONSULTA_COMPRA_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerGraficaXCompra"
								  arguments="{[event.finicio,event.ffin,event.idProveedor,event.estado,event.coloco, event.ordenCompra, event.usuario ]}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{MedoloConsultaComprasNuevo}"
									method="setListaGraficaXCompras"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				
				<mate:EventAnnouncer  generator="{EventoEsperar}" type="{EventoEsperar.CONFIGURAR_ESPERA}">
					<mate:Properties mensaje="error" tipoEventos="{[event.type]}" error ="{fault}"/>
				</mate:EventAnnouncer>
				
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	<mate:Injectors	targets="{[GraficaXCompraETvsFT]}">
		<mate:PropertyInjector source="{MedoloConsultaComprasNuevo}" 
							   sourceKey="ListaGraficaXCompras"
							   targetKey="obtenerListaCompras"/>
	</mate:Injectors>  
	
</mate:EventMap>
