<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:toggleButton="skins.skin.botones.toggleButton.*" 
				xmlns:label="skins.skin.label.*" 
				xmlns:otros="skins.otros.*"
				autoDrawBackground="false" 
				minWidth="340"
				>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProOferta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.FormulaPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecioProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.CostoFactor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.core.IToolTip;
			import mx.events.ToolTipEvent;
			import mx.formatters.NumberFormatter;
			import mx.managers.ToolTipManager;
			
			import skins.skin.toolTip.toolTipDefaultPQNet;
			
			import spark.components.supportClasses.GroupBase;
			
			[Bindable]
			private var currenInfo:ConfiguracionPrecioProducto;
			
			[Bindable]
			private var currentCostoFactor:CostoFactor;
			
			private var _currentFormulaPrecio:FormulaPrecio;
			
			private var _currentNI:String = "AA";
			
			private var _isProveedorNacional:Boolean;
			
			override public function set data(value:Object):void{
				super.data = value;
				
				if(value!= null && value is ConfiguracionPrecioProducto)
				{
					currenInfo = value as ConfiguracionPrecioProducto; 
					currentCostoFactor = currenInfo.costoFactorProducto;
					
					limpiarSeleccionBtnNiveles();
					btnAA.selected = true;
					_currentNI = "AA";
				} 
			}
			
			protected function btn_NivelesIngreso_Control(event:MouseEvent,$nivel:String):void
			{
				
				currentNI = $nivel;
				
				limpiarSeleccionBtnNiveles();
				
				if(event.currentTarget is buttonTogglePQNetDefault)
				{
					event.currentTarget.selected = true;
				}
				
				var soliFormula:EventoCatProOferta = new EventoCatProOferta(EventoCatProOferta.OBTENER_INFORMACION_DE_LA_FORMULA_PRECIO);
				soliFormula.idProveedor = currenInfo.idProveedor;
				soliFormula.idProducto = currenInfo.producto.idProducto;
				soliFormula.idConfigFamilia = currenInfo.idConfiguracionFamilia;
				soliFormula.nivel = $nivel;
				dispatchEvent(soliFormula);
				
			}
			
			protected function limpiarSeleccionBtnNiveles():void
			{
				btnAA.selected = false;
				btnAM.selected = false;
				btnAB.selected = false;
				btnFe.selected = false;
				btnDist.selected = false;
				btnMA.selected = false;
				btnMM.selected = false;
				btnMB.selected = false;
				btnStock.selected = false;
				btnPublico.selected = false;
				btnBajo.selected = false;
			}
			
			protected function hgroup1_toolTipShowHandler(event:ToolTipEvent):void
			{
				var myTip:IToolTip;
				myTip = ToolTipManager.currentToolTip;
				
				var currentWidth:Number = event.currentTarget.width;
				var point:Point = new Point(event.currentTarget.x,event.currentTarget.y);
				var gPoint:Point = (event.currentTarget.parent as GroupBase).localToGlobal(point);
				
				myTip.x = (gPoint.x);
				myTip.y = (gPoint.y - (myTip.height + 5));
				
			}
			
			
			protected function createCustomToolTip($text:String,eve:ToolTipEvent):void
			{
				var customTolTip:toolTipDefaultPQNet = new toolTipDefaultPQNet;
				
				if(isProveedorNacional)
				{
					if(eve.currentTarget.id == "grpCostoVentaTotal")
					{
						customTolTip.bodyText = "Costo de venta total = Valor en aduana + Consularización + Envío de documentos + permiso + Almacén destino";
					}
					else
					{
						customTolTip.bodyText = $text;	
					}
				}
				else
				{
					customTolTip.bodyText = $text;	
				}
				
				
				eve.toolTip = customTolTip;
			}
			
			[Bindable]
			public function get currentFormulaPrecio():FormulaPrecio
			{
				return _currentFormulaPrecio;
			}
			
			public function set currentFormulaPrecio(value:FormulaPrecio):void
			{
				_currentFormulaPrecio = value;
				
				lblNivelIngreso.text = _currentNI;
				
				lblMontoMinimo.text = currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(_currentFormulaPrecio.minimoOrdebCompra);
				lblDescuento.text = _currentFormulaPrecio.descuento + "%";
				lblValorEnAduana.text = currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(_currentFormulaPrecio.valorAduana);
				
				var importacion:Number = UtilsFormatosNumericos.truncarDecimalesFloor((_currentFormulaPrecio.valorAduana * (_currentFormulaPrecio.igi/100)),2) + 
					UtilsFormatosNumericos.truncarDecimalesFloor((_currentFormulaPrecio.valorAduana * (_currentFormulaPrecio.dta /100)),2) + _currentFormulaPrecio.honorariosAgenteA; 
				
				var importacionString:String = UtilsFormatosNumericos.precisionADosDecimalesConComas(importacion);
				lblImportacion.text = "(" + currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " * " + 
					_currentFormulaPrecio.igi + "%)" + " + ("+currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " * " + 
					_currentFormulaPrecio.dta + "%) + " + _currentFormulaPrecio.honorariosAgenteAString + " = " +
					currenInfo.producto.monedaSimbolo + importacionString;
				
				
				var costoDeVenta:Number;
				var costoDeVentaString:String;
				if(isProveedorNacional)
				{
					costoDeVenta = (_currentFormulaPrecio.valorAduana + _currentFormulaPrecio.costoConsularizacion + _currentFormulaPrecio.fleteDocumentacion + _currentFormulaPrecio.permiso + _currentFormulaPrecio.fleteDestino);
					costoDeVentaString = UtilsFormatosNumericos.precisionADosDecimalesConComas(costoDeVenta);
					lblCostoVenta.text = currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " + " +
						currenInfo.producto.monedaSimbolo +_currentFormulaPrecio.costoConsularizacionString + " + "+currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.fleteDocumentacionString + " + " +
						currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.permisoString + " + " + currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.fleteDestinoString + " = " +
						currenInfo.producto.monedaSimbolo + costoDeVentaString;
				}
				else
				{
					costoDeVenta = (_currentFormulaPrecio.valorAduana + importacion + _currentFormulaPrecio.costoConsularizacion + _currentFormulaPrecio.fleteDocumentacion + _currentFormulaPrecio.permiso + _currentFormulaPrecio.fleteDestino);
					costoDeVentaString = UtilsFormatosNumericos.precisionADosDecimalesConComas(costoDeVenta);
					lblCostoVenta.text = currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " + " +currenInfo.producto.monedaSimbolo + importacionString + " + " +
						currenInfo.producto.monedaSimbolo +_currentFormulaPrecio.costoConsularizacionString + " + "+currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.fleteDocumentacionString + " + " +
						currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.permisoString + " + " + currenInfo.producto.monedaSimbolo + _currentFormulaPrecio.fleteDestinoString + " = " +
						currenInfo.producto.monedaSimbolo + costoDeVentaString;
				}
				
				
				var costoFijo:Number = UtilsFormatosNumericos.truncarDecimalesFloor((costoDeVenta * (_currentFormulaPrecio.costoFijo / 100)),2);
				
				var costoFijoString:String = UtilsFormatosNumericos.precisionADosDecimalesConComas(costoFijo);
				lblCostoFijo.text = currenInfo.producto.monedaSimbolo + costoDeVentaString +" * "+ _currentFormulaPrecio.costoFijo + "% = " + currenInfo.producto.monedaSimbolo + costoFijoString;
				
				var utilidad:Number = UtilsFormatosNumericos.truncarDecimalesFloor((costoDeVenta * (_currentFormulaPrecio.utilidad /100)),2);
				
				//var numTemp:Number = Math.floor(Math.pow(10,2)*utilidad)/Math.pow(10,2);
				
				
				var utilidadString:String = UtilsFormatosNumericos.precisionADosDecimalesConComas(utilidad);
				
				lblUtilidad.text = currenInfo.producto.monedaSimbolo + costoDeVentaString + " * " + _currentFormulaPrecio.utilidad + "% = " +  
					currenInfo.producto.monedaSimbolo + utilidadString;
				
				var precioTotal:Number = (costoDeVenta + costoFijo + utilidad);
				var precioTotalString:String = UtilsFormatosNumericos.precisionADosDecimalesConComas(precioTotal);
				lblPrecioTotal.text = currenInfo.producto.monedaSimbolo + costoDeVentaString +" + "+ currenInfo.producto.monedaSimbolo + costoFijoString +" + " + currenInfo.producto.monedaSimbolo + utilidadString + " = " + 
					currenInfo.producto.monedaSimbolo + precioTotalString;
				
				
				var costoVentaUni:Number;
				var costoFijoUni:Number;
				var utilidadUni:Number;
				if(_currentNI == "STOCK" || _currentNI == "FEXPRESS")
				{
					if(_currentNI == "FEXPRESS")
					{
						lblNivelIngreso.text = "FE";
					}
					else
					{
						lblNivelIngreso.text = "Stock";
					}
					
					costoVentaUni = (costoDeVenta / 1);
					lblCostoVentaUni.text = currenInfo.producto.monedaSimbolo + costoDeVentaString +" / 1 = "+ currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(costoVentaUni);
					
					costoFijoUni = (costoFijo / 1);
					lblCostoFijoUni.text = currenInfo.producto.monedaSimbolo + costoFijoString +" / 1 = "+ currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(costoFijoUni);
					
					utilidadUni = (utilidad / 1);	
					lblUtilidadUni.text = currenInfo.producto.monedaSimbolo + utilidadString +" / 1 = "+ currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(utilidadUni);
				}
				else
				{
					costoVentaUni = UtilsFormatosNumericos.truncarDecimalesFloor((costoDeVenta / _currentFormulaPrecio.numeroPiezas),2);
					lblCostoVentaUni.text = currenInfo.producto.monedaSimbolo + costoDeVentaString +" / " +_currentFormulaPrecio.numeroPiezas + " = "+ currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(costoVentaUni);
					
					costoFijoUni = UtilsFormatosNumericos.truncarDecimalesFloor((costoFijo / _currentFormulaPrecio.numeroPiezas),2);
					lblCostoFijoUni.text = currenInfo.producto.monedaSimbolo + costoFijoString +" / " +_currentFormulaPrecio.numeroPiezas + " = "+ currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(costoFijoUni);
					
					utilidadUni = UtilsFormatosNumericos.truncarDecimalesFloor((utilidad / _currentFormulaPrecio.numeroPiezas),2);	
					lblUtilidadUni.text = currenInfo.producto.monedaSimbolo + utilidadString +" / " +_currentFormulaPrecio.numeroPiezas + " = "+ currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(utilidadUni);
				}
				
				var precioUni:Number = costoVentaUni + costoFijoUni + utilidadUni;
				lblPrecioUni.text = currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(costoVentaUni) +" + " +
					currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(costoFijoUni) + " + "+ 
					currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.precisionADosDecimalesConComas(utilidadUni)+ " = "+ 
					currenInfo.producto.monedaSimbolo + UtilsFormatosNumericos.redondearNEAREST(precioUni)+".00";
				
			}
			
			public function get currentNI():String
			{
				return _currentNI;
			}
			
			public function set currentNI(value:String):void
			{
				_currentNI = value;
			}
			
			[Bindable]
			public function get isProveedorNacional():Boolean
			{
				return _isProveedorNacional;
			}
			
			public function set isProveedorNacional(value:Boolean):void
			{
				_isProveedorNacional = value;
			}
			
			
		]]>
	</fx:Script>
	
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
		<label:Titulo_25_VerdeAzul_pTop10 id="lblPrecioLista" text="{UtilsFormatosNumericos.redondearNEAREST(currenInfo.producto.costo) +' '+ currenInfo.producto.monedaAbreviatura}" paddingTop="0"/>
		<label:Titulo_14_VerdeAzul_pTop10 text="Privado" width="100%" textAlign="center" paddingTop="0"/>
		<s:HGroup width="100%" horizontalAlign="center">
			<s:VGroup width="50%" gap="10">
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnAA" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUAA_String}" click="btn_NivelesIngreso_Control(event,'AA')"/>
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnAM" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUAM_String}"  click="btn_NivelesIngreso_Control(event,'AM')"/>
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnAB" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUAB_String}"  click="btn_NivelesIngreso_Control(event,'AB')"/>

				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnBajo" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUBajo_String}"  click="btn_NivelesIngreso_Control(event,'Bajo')"/>
				
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnStock" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUStock_String}"  click="btn_NivelesIngreso_Control(event,'STOCK')"/>
			</s:VGroup>  
			<s:VGroup width="50%" gap="10">
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnMA" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUMA_String}"  click="btn_NivelesIngreso_Control(event,'MA')"/>
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnMM" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUMM_String}"  click="btn_NivelesIngreso_Control(event,'MM')"/>
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnMB" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUMB_String}"  click="btn_NivelesIngreso_Control(event,'MB')"/>
				

				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnFe" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUFExpress_String}"  click="btn_NivelesIngreso_Control(event,'FEXPRESS')"/>
				<toggleButton:buttonTogglePQNetDefault width="100%" id="btnDist" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText" 
													   textoParaCatProOferta="{currentCostoFactor.precioUDistribuidor_String}"  click="btn_NivelesIngreso_Control(event,'DISTRIBUIDOR')"/>
			</s:VGroup>  
		</s:HGroup>  
		<label:Titulo_14_VerdeAzul_pTop10 text="Público" width="100%" textAlign="center" paddingTop="0"/>
		<toggleButton:buttonTogglePQNetDefault id="btnPublico" tipoButtonToggle="texto" tipoInteraccionEnTexto="itemRenderOfertaCatProHTMLText"
											   textoParaCatProOferta="{currentCostoFactor.precioUPublico_String}" click="btn_NivelesIngreso_Control(event,'PUBLICO')"/>
		<s:Group width="100%">
			<label:TextoUperCaseRojo text="{currenInfo.producto.licencia}" right="0"/>
		</s:Group>  
		<otros:division width="100%"/>
		<label:Titulo_25_VerdeAzul_pTop10 id="lblNivelIngreso" text="AA" />
		<s:VGroup width="100%" height="100%" gap="0">
			
			<s:VGroup width="100%" horizontalAlign="center" paddingBottom="20" gap="0">
				<s:HGroup gap="10">
					<label:Titulo text="Monto Mínimo OC:" paddingTop="0"/>
					<label:Texto width="100%" id="lblMontoMinimo"/>
				</s:HGroup>
				<s:Spacer height="15"/>
				<s:HGroup gap="10">	
					<label:Titulo_14_pTop10 text="Descuento:" paddingTop="0"/>
					<label:Texto width="100%" id="lblDescuento"/>
				</s:HGroup>
				<s:Spacer height="15"/>
				<s:HGroup toolTip=" " toolTipCreate="createCustomToolTip('Valor en aduana = \n (Número de piezas * precio de lista con descuento) + \n almacén tránsito',event)" gap="10" toolTipShow="hgroup1_toolTipShowHandler(event)">
					<label:Titulo_14_pTop10 text="Valor en aduana:" paddingTop="0"/>
					<label:Texto width="100%" id="lblValorEnAduana"/>
				</s:HGroup>
			</s:VGroup>  
			<otros:division width="100%"/>
			
			<s:Spacer height="10" visible="{!isProveedorNacional}" includeInLayout="{!isProveedorNacional}"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Importación = (Valor en aduana * IGI) + (Valor en aduana * DTA) + Honorarios AA ',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10" visible="{!isProveedorNacional}" includeInLayout="{!isProveedorNacional}">
				<label:Titulo_14_pTop10 text="Importación:" paddingTop="0"/>
				<label:Texto width="100%" id="lblImportacion"/>
			</s:VGroup>  
			
			<s:Spacer height="15"/>
			<s:VGroup id="grpCostoVentaTotal" toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo de venta total = Valor en aduana + Importación + Consularización + Envío de documentos + permiso + Almacén destino',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo de venta total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoVenta"/>
			</s:VGroup>  
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo fijo total = Costo de venta * Factor de costo fijo',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo fijo total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoFijo"/>
			</s:VGroup>  
			<s:Spacer height="15"/>
			
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Utilidad total = Costo de venta total * Factor de utilidad',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Utilidad total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblUtilidad"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Precio total = Costo de venta total + Costo fijo total + Utilidad total',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Precio total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblPrecioTotal"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo de venta unitario = Costo de venta total / Número de piezas',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo de venta unitario:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoVentaUni"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo fijo unitario = Costo fijo total / Número de piezas',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo fijo unitario:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoFijoUni"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Utilidad unitaria = Utilidad total / Número de piezas',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Utilidad unitaria:" paddingTop="0"/>
				<label:Texto width="100%" id="lblUtilidadUni"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Precio unitario = Costo de venta unitario + Costo fijo unitario + Utilidad unitaria',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Precio unitario:" paddingTop="0"/>
				<label:Texto width="100%" id="lblPrecioUni"/>
			</s:VGroup>
			
		</s:VGroup>  
		
	</s:VGroup>
	
</s:ItemRenderer>