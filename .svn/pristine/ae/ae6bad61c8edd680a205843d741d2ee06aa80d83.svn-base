<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:dateField="skins.skin.dateField.*"
		 xmlns:input="skins.skin.textinput.*"
		 xmlns:componentes1="mx.com.proquifa.vista.vistas.monitorearOcNoArribada.componentes.*"
		 width="100%" height="100%"
		 creationComplete="init(event)"
		 >
	<fx:Metadata>
		[Event(name="clickCancelarBoton", type="mx.com.proquifa.vista.eventos.MonitorearOCNoArribada.EventoMonitorearOcNoArribada")]
		[Event(name="clickDesmarcarBoton",type="mx.com.proquifa.vista.eventos.MonitorearOCNoArribada.EventoMonitorearOcNoArribada")]
		[Event(name="clickAceptarBoton", type="mx.com.proquifa.vista.eventos.MonitorearOCNoArribada.EventoMonitorearOcNoArribada")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.vista.eventos.MonitorearOCNoArribada.EventoMonitorearOcNoArribada;
			import mx.events.FlexEvent;
			import mx.events.ToolTipEvent;
			import mx.managers.ToolTipManager;
			
			import skins.catalogos.catalogoIconosBotones;
			
			private var _colorFondo:uint;
			private var _colorBoton:uint;
			private var _sizeFont:Number = 14;
			
			
			private var _tipoSegundaVista:String;
			private var _piezas:int;
			
			[Bindable]private var cantidadCompra:int;
			[Bindable]private var justificacionNotas:String;
			[Bindable]private var motivoSeleccionado:String;
			[Bindable]public var fechaPrefijo:String;
			[Bindable]public var sizeP:Number=12;
			
			
			
			[Bindable] public var heightComponentes:Number = 25;
			///////////////OBTNER INFO
			public function get feaRMT():Date
			{
				var date:Date;
				if(tipoSegundaVista == "disponible"){
					date = dateRmt.selectedDate;
				}else if(tipoSegundaVista == "cambio"){
					date = dateFeaRmtCambio.selectedDate;
				}else if(tipoSegundaVista == "back"){
					date = dateFea1Back.selectedDate;
				}
				return date;
			}
			
			public function set feaRMT(value:Date):void
			{
				if(tipoSegundaVista == "disponible"){
					dateRmt.selectedDate = value;
				}else if(tipoSegundaVista == "cambio"){
					dateFeaRmtCambio.selectedDate = value;
				}else if(tipoSegundaVista == "back"){
					dateFea1Back.selectedDate = value;
				}
			}
			[Bindable]
			public function get archivo():ByteArray
			{
				var byteArray:ByteArray;
				if(tipoSegundaVista == "cambio"){
					byteArray = pdfCambio;
				}else if(tipoSegundaVista == "back"){
					byteArray = pdfBack;
				}
				return byteArray;
			}
			
			public function set archivo(value:ByteArray):void
			{
				if(tipoSegundaVista == "cambio"){
					pdfCambio = value;
				}else if(tipoSegundaVista == "back"){
					pdfBack = value;
				}
			}
			
			[Bindable]
			public function get nombreArchivo():String
			{
				var cadena:String = "";
				if(tipoSegundaVista == "cambio"){
					if(lblNombreArchivo)
						cadena = lblNombreArchivoCambio.text;
				}else if(tipoSegundaVista == "back"){
					if(lblNombreArchivoCambio)
						cadena = lblNombreArchivo.text;
				}
				return cadena;
			}
			
			public function set nombreArchivo(value:String):void
			{
				if(tipoSegundaVista == "cambio"){
					if(value)
						lblNombreArchivoCambio.text = value;
				}else if(tipoSegundaVista == "back"){
					if(value)
						lblNombreArchivo.text = value;
				}
			}
			
			public function get motivo():String
			{
				var value:String;
				if(tipoSegundaVista == "cambio"){
					/*if(radioCambDescontinuado.selected)
					value = "Descontinuado";
					else if(radioCambRestriccionVenta.selected)
					value = "Restriccion de venta";
					else if(radioCambRestriccionImportacion.selected)
					value = "Restriccion de importación";*/
					value = motivoSeleccionado;
				}else if(tipoSegundaVista == "cancelar"){
					/*if(radioCancDescontinuado.selected)
					value = "Descontinuado";
					else if(radioCancRestriccionVenta.selected)
					value = "Restriccion de venta";
					else if(radioCancRestriccionImportacion.selected)
					value = "Restriccion de importación";*/
					value = motivoSeleccionado;
				}
				return value;
			}
			
			public function set motivo(value:String):void
			{
				if(tipoSegundaVista == "cambio"){
					radioCambMotivo.selected = radioCambProduccion.selected = radioCambDisponibilidad.selected = false; 
					if(value == "Motivos desconocidos")
						radioCambMotivo.selected = true;
					else if(value == "Producción")
						radioCambProduccion.selected = true;
					else if(value == "Disponibilidad")
						radioCambDisponibilidad.selected = true;
					/*Motivos desconocidos
					Producción
					Disponibilidad*/
				}else if(tipoSegundaVista == "cancelar"){
					radioCancDescontinuado.selected = radioCancRestriccionVenta.selected = radioCancRestriccionImportacion.selected = false;
					if(value == "Descontinuado")
						radioCancDescontinuado.selected = true;
					else if(value == "Restricciones de venta")
						radioCancRestriccionVenta.selected = true;
					else if(value == "Restricciones de importación")
						radioCancRestriccionImportacion.selected = true;
				}
			}
			
			public function get feeProveedor():Date
			{
				var date:Date;
				date = dateFeeBack.selectedDate;
				return date;
			}
			
			public function set feeProveedor(value:Date):void
			{
				dateFeeBack.selectedDate = value;
			}
			
			public function get fea1rAlmacen():Date
			{
				var date:Date;
				date = dateFea1Back.selectedDate;
				return date;
			}
			
			public function set fea1rAlmacen(value:Date):void
			{
				dateFea1Back.selectedDate = value;
			}
			
			public function get fechaMonitoreo():Date
			{
				var date:Date;
				date = dateFechaMonBack.selectedDate;
				return date;
			}
			
			public function set fechaMonitoreo(value:Date):void
			{
				dateFechaMonBack.selectedDate = value;
			}
			
			public function get justificacion():String
			{
				/*var just:String;
				if(tipoSegundaVista == "cambio"){
				just = txtNotasCambio.text;
				}else if(tipoSegundaVista == "back"){
				just = txtNotasBack.text;
				}else if(tipoSegundaVista == "cancelar"){
				just = txtNotasCancelar.text;
				}*/
				return justificacionNotas;
			}
			
			public function set justificacion(value:String):void
			{
				justificacionNotas = value;
				if(tipoSegundaVista == "cambio"){
					txtNotasCambio.text = value;
				}else if(tipoSegundaVista == "back"){
					txtNotasBack.text = value;
				}else if(tipoSegundaVista == "cancelar"){
					txtNotasCancelar.text = value;
				}
			}
			
			public function get fechaNueva():Date
			{
				var date:Date;
				if(tipoSegundaVista == "cambio"){
					date = dateFechaImpactoArriboNueva.selectedDate;
				}else if(tipoSegundaVista == "back"){
					date = dateFechaBackArriboNueva.selectedDate;
				}
				return date;
			}
			
			public function set fechaNueva(value:Date):void
			{
				if(tipoSegundaVista == "cambio"){
					dateFechaImpactoArriboNueva.selectedDate = value;
				}else if(tipoSegundaVista == "back"){
					dateFechaBackArriboNueva.selectedDate = value;
				}
			}
			/*if(tipoSegundaVista == "disponible"){
			
			}else if(tipoSegundaVista == "cambio"){
			
			}else if(tipoSegundaVista == "back"){
			
			}else if(tipoSegundaVista == "cancelar"){
			
			}*/
			///////////////OBTNER INFO
			
			[Bindable]
			public function get piezas():int
			{
				return _piezas;
			}
			
			public function set piezas(value:int):void
			{
				_piezas = value;
			}
			
			[Bindable]
			public function get tipoSegundaVista():String
			{
				return _tipoSegundaVista;
			}
			
			public function set tipoSegundaVista(value:String):void
			{
				_tipoSegundaVista = value;
				if(tipoSegundaVista == "disponible"){
					grpDisponible.visible = grpDisponible.includeInLayout = true;
					grpCancelar.visible = grpCancelar.includeInLayout = false;
					grpBack.visible = grpBack.includeInLayout = false;
					grpCambio.visible = grpCambio.includeInLayout = false;
					ImgCerrar.source = catalogoIconosBotones.getInstance().cerrar_verde;
				}
				else if(tipoSegundaVista == "cambio"){
					grpDisponible.visible = grpDisponible.includeInLayout = false;
					grpCancelar.visible = grpCancelar.includeInLayout = false;
					grpBack.visible = grpBack.includeInLayout = false;
					grpCambio.visible = grpCambio.includeInLayout = true;
					ImgCerrar.source = catalogoIconosBotones.getInstance().cerrar_naranja;
				}
				else if(tipoSegundaVista == "back"){
					grpDisponible.visible = grpDisponible.includeInLayout = false;
					grpCancelar.visible = grpCancelar.includeInLayout = false;
					grpBack.visible = grpBack.includeInLayout = true;
					grpCambio.visible = grpCambio.includeInLayout = false;
					ImgCerrar.source = catalogoIconosBotones.getInstance().cerrar_morado;
				}
				else if(tipoSegundaVista == "cancelar"){
					grpDisponible.visible = grpDisponible.includeInLayout = false;
					grpCancelar.visible = grpCancelar.includeInLayout = true;
					grpBack.visible = grpBack.includeInLayout = false;
					grpCambio.visible = grpCambio.includeInLayout = false;					
					ImgCerrar.source = catalogoIconosBotones.getInstance().cerrar_rojo;
				}
			}
			
			[Bindable]
			public function get colorBoton():uint
			{
				return _colorBoton;
			}
			
			public function set colorBoton(value:uint):void
			{
				_colorBoton = value;
			}
			
			[Bindable]
			public function get sizeFont():Number
			{
				return _sizeFont;
			}
			
			public function set sizeFont(value:Number):void
			{
				_sizeFont = value;
			}
			
			
			
			[Bindable]
			public function get colorFondo():uint
			{
				return _colorFondo;
			}
			
			public function set colorFondo(value:uint):void
			{
				_colorFondo = value;
			}
			
			public function resetAll():void
			{
				dateRmt.selectedDate = null;//Date
				txtDispPiezas.text = ""+piezas;
				
				
				dateFeeBack.selectedDate = null; //Date
				dateFea1Back.selectedDate = null;
				dateFechaMonBack.selectedDate = null;
				dateFechaBackArriboNueva.selectedDate = null;
				txtBackPiezas.text = ""+piezas;
				txtNotasBack.text = "";
				
				radioCambMotivo.selected = false; //Select
				radioCambProduccion.selected = false;
				radioCambDisponibilidad.selected = false;
				dateFeaRmtCambio.selectedDate = null; //Date
				dateFechaImpactoArriboNueva.selectedDate = null;
				txtPiezasCambio.text = ""+piezas;
				txtNotasCambio.text = "";
				
				radioCancDescontinuado.selected = false; //Select
				radioCancRestriccionVenta.selected = false;
				radioCancRestriccionImportacion.selected = false;
				txtCancelarPiezas.text = ""+piezas;
				txtNotasCancelar.text = "";
				
				file = new File();
				pdfBack = null;
				pdfCambio = null;
				rutaDoc = "";
				tipoArchivo = "";
				lblNombreArchivo.text = "";
				lblNombreArchivoCambio.text = "";
			}
			
			public function obtenerPiezas():int
			{
				var piezasUsadas:int;
				if(tipoSegundaVista == "disponible")
					piezasUsadas = int(txtDispPiezas.text);
				else if(tipoSegundaVista == "back")
					piezasUsadas = int(txtBackPiezas.text);
				else if(tipoSegundaVista == "cambio")
					piezasUsadas = int(txtPiezasCambio.text);
				else if(tipoSegundaVista == "cancelar")
					piezasUsadas = int(txtCancelarPiezas.text);
				
				return piezasUsadas;
			}
			
			public var myTip:ToolTipColoresCR;
			protected function createToolTip(event:ToolTipEvent):void
			{
				myTip = new ToolTipColoresCR();
				myTip.txtToolTip = "Al presionar Desmarcar se \neliminarán las partidas hijas \nde la partida que se encuentra \n" +
					"seleccionada y regresan al \nnúmero inicial de piezas";
				myTip.backgroundColor = colorBoton;
				if(event.target.id == "SignoDisponible")
					myTip.imagen = catalogoIconosBotones.getInstance().int_blanco_verde;
				else if(event.target.id == "SignoCancelar")
					myTip.imagen = catalogoIconosBotones.getInstance().int_blanco_rojo;
				else if(event.target.id == "SignoBack")
					myTip.imagen = catalogoIconosBotones.getInstance().int_blanco_morado;
				else if(event.target.id == "SignoCambio")
					myTip.imagen = catalogoIconosBotones.getInstance().int_blanco_naranja;
				event.toolTip = myTip;	
			}
			
			private function positionTip(event:ToolTipEvent):void{				
				var tmp:int;
				var point:Point = new Point(event.currentTarget.x, event.currentTarget.y);
				
				tmp=(event.toolTip.width/2)-this.width/2;				
				event.toolTip.x = event.toolTip.x - (event.currentTarget.width + myTip.width + 14);
				event.toolTip.y = event.toolTip.y - (event.currentTarget.height + (myTip.height/2) + 0);
			}
			
			protected function destroyBigTip(event:MouseEvent):void
			{
				ToolTipManager.destroyToolTip(myTip); 
			}
			
			protected function cancelar(event:MouseEvent,target:String = ''):void
			{
				var eve:EventoMonitorearOcNoArribada = new EventoMonitorearOcNoArribada(EventoMonitorearOcNoArribada.CLIC_CANCELAR_BOTON);
				eve.tipoSelect = target;					
				dispatchEvent(eve);
			}
			protected function desmarcar(event:MouseEvent,target:String):void
			{
				var eve:EventoMonitorearOcNoArribada = new EventoMonitorearOcNoArribada(EventoMonitorearOcNoArribada.CLIC_DESMARCAR_BOTON);
				eve.tipoSelect = target;
				dispatchEvent(eve);
			}
			protected function aceptar(event:MouseEvent,target:String):void
			{
				var eve:EventoMonitorearOcNoArribada = new EventoMonitorearOcNoArribada(EventoMonitorearOcNoArribada.CLIC_ACEPTAR_BOTON);
				eve.tipoSelect = target;
				var lanzar:Boolean
				if(tipoSegundaVista == "disponible"){
					if(dateRmt.txtDateField.text == "" || txtDispPiezas.text == "" || ( (piezas - int(txtDispPiezas.text)) < 0 ) )
						lanzar = false;
					else
						lanzar = true;
				}
					
				else if(tipoSegundaVista == "back"){
					if(dateFeeBack.txtDateField.text == "" || dateFea1Back.txtDateField.text == "" || !pdfBack ||
						dateFechaMonBack.txtDateField.text == "" || txtBackPiezas.text == "" || txtNotasBack.text == "" || dateFechaBackArriboNueva.txtDateField.text == "" || ( (piezas - int(txtBackPiezas.text)) < 0 ) )
						lanzar = false;
					else
						lanzar = true;
				}
				else if(tipoSegundaVista == "cambio"){
					if((!radioCambMotivo.selected && !radioCambProduccion.selected && !radioCambDisponibilidad.selected) || !pdfCambio ||
						dateFeaRmtCambio.txtDateField.text == "" || txtPiezasCambio.text == "" || txtNotasCambio.text == "" || dateFechaImpactoArriboNueva.txtDateField.text == "" || ( (piezas - int(txtPiezasCambio.text)) < 0 ) )
						lanzar = false;
					else
						lanzar = true;
				}
				else if(tipoSegundaVista == "cancelar"){
					if((!radioCancDescontinuado.selected && !radioCancRestriccionVenta.selected && !radioCancRestriccionImportacion.selected) ||
						txtCancelarPiezas.text == "" || txtNotasCancelar.text == "" || ( (piezas - int(txtCancelarPiezas.text)) < 0 ))
						lanzar = false;
					else
						lanzar = true;
				}
				
				if(lanzar)
					dispatchEvent(eve);
			}
			
			protected function init(event:FlexEvent):void
			{
				currentState = "editar";
				currentState = "normal";
			}
			
			protected function asignarJustificacion(event:Event,target:String):void
			{
				if(target == 'cambio')
					justificacionNotas = txtNotasCambio.text;
				if(target == 'back')
					justificacionNotas = txtNotasBack.text;
				if(target == 'cancelar')
					justificacionNotas = txtNotasCancelar.text;
			}
			
			protected function asignarMotivo(event:MouseEvent,target:String):void
			{
				if(target == 'motivos'){
					radioCambProduccion.selected = false;
					radioCambDisponibilidad.selected = false
					motivoSeleccionado = "Motivos desconocidos";
				}
				if(target == 'produccion'){
					radioCambMotivo.selected = false;
					radioCambDisponibilidad.selected = false
					motivoSeleccionado = "Producción";
				}
				if(target == 'disponibilidad'){
					radioCambMotivo.selected = false;
					radioCambProduccion.selected = false
					motivoSeleccionado = "Disponibilidad"
				}
				/*descontinuado
				restriccionVenta
				restriccionVenta*/
				/*Motivos desconocidos
				Producción
				Disponibilidad*/
			}
			
			protected function asignarMotivoCanc(event:MouseEvent,target:String):void
			{
				if(target == 'descontinuado'){
					radioCancRestriccionVenta.selected = false;
					radioCancRestriccionImportacion.selected = false
					motivoSeleccionado = "Descontinuado";
				}
				if(target == 'restriccionVenta'){
					radioCancDescontinuado.selected = false;
					radioCancRestriccionImportacion.selected = false
					motivoSeleccionado = "Restricciones de venta";
				}
				if(target == 'restriccionImportacion'){
					radioCancDescontinuado.selected = false;
					radioCancRestriccionVenta.selected = false
					motivoSeleccionado = "Restricciones de importación"
				}
				/*descontinuado
				restriccionVenta
				restriccionVenta*/
			}
			
			protected function cargarArchivo(event:MouseEvent,value:String):void
			{
				tipoArchivo = value;
				browseFileSystem();
			}
			
			public var file:File = new File();
			private var pdfBack:ByteArray = null;
			private var pdfCambio:ByteArray = null;
			private var rutaDoc:String;
			private var tipoArchivo:String;
			public function browseFileSystem():void{
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				
				var docFilter:FileFilter;
				docFilter = new FileFilter("Documents", "*.pdf");
				file.addEventListener(Event.COMPLETE,completeHandler);
				file.browse([docFilter]); 
			}
			
			private function completeHandler(event:Event):void 
			{
				trace("completeHandler: " + event);
				rutaDoc = file.nativePath;
				if(tipoArchivo=="back"){
					lblNombreArchivo.text = file.name;	
					pdfBack = this.file.data;
				}
				else if(tipoArchivo=="cambio"){
					lblNombreArchivoCambio.text = file.name;	
					pdfCambio = this.file.data;
				}
			}
			
			private function selectHandler(event:Event):void 
			{
				var file:FileReference = FileReference(event.target);
				file.load();
			}
			
			private function ioErrorHandler(event:IOErrorEvent):void 
			{
				trace("ioErrorHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void 
			{
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="editar"/>
	</s:states>
	
	<s:Group width="100%" height="100%" id="grpVistaSecundaria" >
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="{colorFondo}"/>
			</s:fill>
		</s:Rect>
		<mx:Image id="ImgCerrar" source="{catalogoIconosBotones.getInstance().cerrar_morado}" smoothBitmapContent="true" top="11" right="11" click="cancelar(event,'disponible')"/>
		
		
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" 
				  paddingTop="20" paddingBottom="20" paddingLeft="20" paddingRight="20" gap="10">
			
			<!--//////////////////////////////  GRUPO PARA VISTA SECUNDARIA DISPONIBLE //////////////////////////////-->
			<s:HGroup width="100%" height="100" gap="0" verticalAlign="middle" visible="false" includeInLayout="false" id="grpDisponible">
				<s:VGroup width="85%" height="100%" verticalAlign="middle" horizontalAlign="center">
					<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x0a6430" text="FEA {fechaPrefijo}" height="100%" verticalAlign="middle"/>
						<s:HGroup paddingTop="-4" >
							<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateRmt" verticalAlignTextInput="middle"
														 heightLabelDatePicker="{heightComponentes}" fontWeightTextInput="bold" fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_verde}"/>
						</s:HGroup>  
						
					</s:HGroup>  
					<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x0a6430" text="PIEZAS" height="100%" verticalAlign="middle"/>
						<input:TxtInputBlanco id="txtDispPiezas" width="10%" fontSize="{sizeFont}" fontFamily="Helvetica" restrict="0-9" height="25" text="{piezas}" enabled.normal="true" enabled.editar="false"/>
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x0a6430" text="de {piezas}" height="100%" verticalAlign="middle"/>
					</s:HGroup>  
				</s:VGroup>  
				<s:HGroup width="15%" height="100%"  horizontalAlign="center" >
					<s:VGroup width="100%" height="100%" gap="0">
						<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="10" horizontalAlign="right">
							<mx:Image id="SignoDisponible" source="{catalogoIconosBotones.getInstance().interrogacion_verde}" visible.normal="false" visible.editar="true"
									  toolTipCreate="createToolTip(event)" toolTipShow="positionTip(event)" toolTip=" "/>
							<componentes1:botonColores width="100%" height="100%" maxWidth="100" maxHeight="30" click.editar="desmarcar(event,'disponible')"
													   colorBoton="{colorBoton}" text.editar="DESMARCAR" text.normal="CANCELAR" click.normal="cancelar(event)"/>
						</s:HGroup>  
						<s:Spacer height="100%" />
						<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="right">
							<componentes1:botonColores width="100%" height="100%" maxWidth="100" maxHeight="30" click.normal="aceptar(event,'disponible')"
													   colorBoton="{colorBoton}" text="ACEPTAR" colorLabel="0xFFFFFF" click.editar="cancelar(event,'aceptarEditar')"/>
						</s:HGroup>  
						
					</s:VGroup>  
					<s:Spacer width="100%" maxWidth="12" />
					
				</s:HGroup>  
			</s:HGroup>
			
			
			<!--//////////////////////////////  GRUPO PARA VISTA SECUNDARIA NUEVA CANCELAR //////////////////////////////-->
			<s:VGroup width="100%" height="100%" id="grpCancelar" paddingLeft="30" paddingRight="30">
				<s:HGroup width="100%"  >
					<s:VGroup width="27%" gap="17">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x9a0314" text="MOTIVO DE CANCELACIÓN" />  
						<componentes1:checkBoxColoreCR  id="radioCancDescontinuado" fontSize="{sizeFont}" height="100%" width="100%" tipoRadio="rojo" color="#424242" label="Descontinuado" 
														click="asignarMotivoCanc(event,'descontinuado')"/>
					</s:VGroup>
					
					<s:VGroup width="28%"  gap="17">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x9a0314" text="  " />  
						<componentes1:checkBoxColoreCR  id="radioCancRestriccionVenta" fontSize="{sizeFont}" height="100%" width="100%" tipoRadio="rojo" label="Restricciones de venta" 
														click="asignarMotivoCanc(event,'restriccionVenta')"/>
					</s:VGroup>
					
					<s:VGroup width="21%" gap="17">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x9a0314" text="  " />  
						<componentes1:checkBoxColoreCR  id="radioCancRestriccionImportacion" fontSize="{sizeFont}" height="100%" width="100%" tipoRadio="rojo" label="Restricciones de  importación" 
														click="asignarMotivoCanc(event,'restriccionImportacion')"/>
						
						
					</s:VGroup>
					
					<s:VGroup width="13%" >
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x9a0314"  text="PIEZAS"/>
						<s:HGroup width="100%" height="100%" >	
							<input:TxtInputBlanco id="txtCancelarPiezas" width="70" height="30" fontSize="{sizeFont}" fontFamily="Helvetica" restrict="0-9" text="{piezas}" enabled.normal="true" enabled.editar="false"/>
							<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" text="de {piezas}" height="100%" verticalAlign="middle"/>
						</s:HGroup>
						
					</s:VGroup>
					
					<s:VGroup width="11%" paddingTop="14">
						<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="10" horizontalAlign="right" >
							<mx:Image id="SignoCancelar" source="{catalogoIconosBotones.getInstance().interrogacion_rojo}" visible.normal="false" visible.editar="true"
									  toolTipCreate="createToolTip(event)" toolTipShow="positionTip(event)" toolTip=" "/>
							<componentes1:botonColores width="100" height="30"  click.editar="desmarcar(event,'cancelar')"
													   colorBoton="{colorBoton}" text.editar="DESMARCAR" text.normal="CANCELAR" click.normal="cancelar(event)"/>
						</s:HGroup>  
					</s:VGroup>
					</s:HGroup>
				
				<s:Spacer height="10" />
				
				<s:HGroup width="100%" >	
					<s:VGroup width="89%">
						
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x9a0314" text="JUSTIFICACIÓN DE AVISO DE CAMBIOS PARA EL CLIENTE"/>
						<s:Group width="100%" height="100%" >
							<s:Rect width="100%" height="100%">
								<s:fill>
									<s:SolidColor color="0xFFFFFF" />
								</s:fill>
							</s:Rect>
							<mx:TextArea id="txtNotasCancelar" width="100%" height="80" fontFamily="Helvetica" fontSize="{sizeFont}" color="#000000" borderColor="#c7c7c7" change="asignarJustificacion(event,'cancelar')">
							</mx:TextArea>
						</s:Group>  
						
					</s:VGroup>
					<s:Spacer height="10" />
					<s:HGroup width="11%" height="100%" verticalAlign="bottom" horizontalAlign="right" >
						<componentes1:botonColores width="100" height="30" click.normal="aceptar(event,'cancelar')"
												   colorBoton="{colorBoton}" text="ACEPTAR" colorLabel="0xFFFFFF" click.editar="cancelar(event,'aceptarEditar')"/>
					</s:HGroup>  	
					
					
					
					
				</s:HGroup>
			</s:VGroup>
	
			
			<!--//////////////////////////////  GRUPO PARA VISTA SECUNDARIA NUEVA BACK ORDER //////////////////////////////-->
			<s:HGroup width="100%" height="100%" id="grpBack"  paddingLeft="30" paddingRight="30">
				<s:VGroup width="15%" gap="27">
					<s:VGroup width="100%">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0x471369" text="FEE PROVEEDOR" />
						<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateFeeBack" verticalAlignTextInput="middle"
													 heightLabelDatePicker="{heightComponentes}"  fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_morado}"/>
						
					</s:VGroup>
					
					<s:VGroup width="100%">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0x471369" text="FEA 1ER ALMACEN {fechaPrefijo}" />
						<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateFea1Back" verticalAlignTextInput="middle"
													 heightLabelDatePicker="{heightComponentes}"  fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_morado}"/>
						
					</s:VGroup>
					
					<s:VGroup width="100%">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0x471369" text="FECHA MONITOREO" />
						<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateFechaMonBack" verticalAlignTextInput="middle"
													 heightLabelDatePicker="{heightComponentes}" fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_morado}"/>
					</s:VGroup>
				</s:VGroup>	
				
				
				
				<s:VGroup width="15%" gap="25">
					<s:VGroup width="100%">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0x471369" text="NUEVA FEE" />
						<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateFechaBackArriboNueva" verticalAlignTextInput="middle" 
													 heightLabelDatePicker="{heightComponentes}" fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_morado}" />
					</s:VGroup> 
					
					<s:VGroup width="100%">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" text="PIEZAS" height="100%" verticalAlign="middle"/>
						<s:HGroup >
							<input:TxtInputBlanco id="txtBackPiezas" height="{heightComponentes}" widthInChars="5" fontSize="{sizeFont}" fontFamily="Helvetica" restrict="0-9"  text="{piezas}" enabled.normal="true" enabled.editar="false"/>
							<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" text="de {piezas}" height="100%" verticalAlign="middle" color="#848288"/>
						</s:HGroup>  
						
					</s:VGroup> 
					<s:VGroup width="100%">
						<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0x471369" text="CARGAR DOCUMENTO" />
						<s:HGroup width="100%" verticalAlign="middle">
							<input:TxtInputBlanco width="50%" height="{heightComponentes}" fontSize="{sizeP}" fontFamily="Helvetica" editable="false" id="lblNombreArchivo"/>
							<mx:Image id="idCargarArchivoBack" source="{catalogoIconosBotones.getInstance().cargar_archivo_morado}" click="cargarArchivo(event,'back')"/>
						</s:HGroup>  
					</s:VGroup>  
				</s:VGroup>  
				
				<s:VGroup width="55%" gap="8">
					<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0x471369" text="JUSTIFICACIÓN DE AVISO DE CAMBIOS PARA EL CLIENTE"/>
					<s:Group width="100%" height="100%" >
						<s:Rect width="100%" height="100%">
							<s:fill>
								<s:SolidColor color="0xFFFFFF" />
							</s:fill>
						</s:Rect>
						<mx:TextArea id="txtNotasBack" width="100%" height="157" fontFamily="Helvetica" fontSize="{sizeFont}" color="#000000" borderColor="#c7c7c7" change="asignarJustificacion(event,'back')">
						</mx:TextArea>
					</s:Group>  
					
					
				</s:VGroup>  
				
				<s:VGroup width="15%" height="100%" >	
					<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="10" horizontalAlign="right">
						<mx:Image id="SignoBack" source="{catalogoIconosBotones.getInstance().interrogacion_morado}" visible.normal="false" visible.editar="true"
								  toolTipCreate="createToolTip(event)" toolTipShow="positionTip(event)" toolTip=" "/>
						<componentes1:botonColores width="100" height="30" click.editar="desmarcar(event,'back')"
												   colorBoton="{colorBoton}" text.editar="DESMARCAR" text.normal="CANCELAR" click.normal="cancelar(event)"/>
					</s:HGroup>  
					<s:Spacer height="100%" />
					<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="right" paddingTop="19">
						<componentes1:botonColores width="100" height="30" click.normal="aceptar(event,'back')"
												   colorBoton="{colorBoton}" text="ACEPTAR" colorLabel="0xFFFFFF" click.editar="cancelar(event,'aceptarEditar')"/>
					</s:HGroup>  
					
				</s:VGroup>  
				
				
				
				
				
				
				
				
			</s:HGroup>
			

			
			<!--//////////////////////////////  GRUPO PARA VISTA SECUNDARIA NUEVA IMPACTO FEE //////////////////////////////-->	
			
			<s:HGroup width="100%" id="grpCambio" visible="false" includeInLayout="false" paddingLeft="30" paddingRight="30">
				
				<s:VGroup width="16%" gap="18" >
				    <s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0xdc4e12" text="MOTIVO DE CAMBIO FEE" verticalAlign="middle"/>
					<s:VGroup width="100%" height="100%" gap="25" >
						<componentes1:checkBoxColoreCR id="radioCambMotivo" height="100%" tipoRadio="naranjado" label="Motivos desconocidos" 
													   click="asignarMotivo(event,'motivos')"/>
						<componentes1:checkBoxColoreCR id="radioCambProduccion" height="100%" tipoRadio="naranjado" label="Producción" 
													   click="asignarMotivo(event,'produccion')"/>
						<componentes1:checkBoxColoreCR id="radioCambDisponibilidad" height="100%" tipoRadio="naranjado" label="Disponibilidad" 
													   click="asignarMotivo(event,'disponibilidad')"/>
					</s:VGroup> 
				</s:VGroup> 
					
					<s:VGroup width="16%" gap="31">
						<s:VGroup width="100%" height="100%" verticalAlign="middle" >
							<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0xdc4e12" text="FEA {fechaPrefijo}" verticalAlign="middle"/>
							<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateFeaRmtCambio" verticalAlignTextInput="middle"
														 heightLabelDatePicker="{heightComponentes}" fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_naranja}"/>
						</s:VGroup>
						<s:VGroup width="100%" height="100%" verticalAlign="middle" >
							<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0xdc4e12" text="FEA NUEVA" verticalAlign="middle"/>
							<dateField:DatePickerDefault bordeRedondo="false" colorBorde="0xC2C3C9" grosorBorde="1" id="dateFechaImpactoArriboNueva" verticalAlignTextInput="middle"
														 heightLabelDatePicker="{heightComponentes}" fontSizeText="{sizeFont}" source="{catalogoIconosBotones.getInstance().datepicker_naranja}"/>
						</s:VGroup>
					  </s:VGroup>
				
				
					<s:VGroup width="16%" gap="25">    
						<s:VGroup width="100%" height="100%" verticalAlign="middle">
							<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0xdc4e12" text="PIEZAS" verticalAlign="middle"/>
							<s:HGroup width="100%" height="100%" verticalAlign="middle" >
								<input:TxtInputBlanco id="txtPiezasCambio" width="30%" fontSize="{sizeP}" fontFamily="Helvetica" restrict="0-9" height="25" text="{piezas}" enabled.normal="true" enabled.editar="false"/>
								<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" text="de {piezas}" verticalAlign="middle" color="#848288"/>
							</s:HGroup>	
						</s:VGroup>
						
						<s:VGroup width="100%" height="100%" verticalAlign="middle">
							<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeP}" color="0xdc4e12" text="CARGAR DOCUMENTO" verticalAlign="middle"/>
							<s:HGroup width="100%" height="100%" verticalAlign="middle">
								<input:TxtInputBlanco width="50%" height="{heightComponentes}" fontSize="{sizeFont}" fontFamily="Helvetica" editable="false" id="lblNombreArchivoCambio"/>
								<mx:Image id="idCargarArchivoCambio" source="{catalogoIconosBotones.getInstance().cargar_archivo_naranja}" click="cargarArchivo(event,'cambio')"/>
							</s:HGroup>  	
						</s:VGroup>  
			
					</s:VGroup>
			
			      
					
					<s:VGroup width="37%">
			              <s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" color="0xdc4e12" text="JUSTIFICACIÓN DE AVISO DE CAMBIOS PARA EL CLIENTE"/>
						<s:Group width="100%" height="100%" >
							<s:Rect width="100%" height="100%">
								<s:fill>
									<s:SolidColor color="0xFFFFFF" />
								</s:fill>
							</s:Rect>
							<mx:TextArea id="txtNotasCambio" width="100%" height="96" fontFamily="Helvetica" fontSize="{sizeP}" color="#000000" borderColor="#c7c7c7" change="asignarJustificacion(event,'cambio')">
							</mx:TextArea>
						</s:Group>  
				   </s:VGroup>
				
				
					
					<s:VGroup width="15%" height="100%">
						<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="10" horizontalAlign="right">
							<mx:Image id="SignoCambio" source="{catalogoIconosBotones.getInstance().interrogacion_naranja}" visible.normal="false" visible.editar="true"
									  toolTipCreate="createToolTip(event)" toolTipShow="positionTip(event)" toolTip=" "/>
							<componentes1:botonColores width="100%" height="100%" maxWidth="100" maxHeight="30" click.editar="desmarcar(event,'cambio')"
													   colorBoton="{colorBoton}" text.editar="DESMARCAR" text.normal="CANCELAR" click.normal="cancelar(event)"/>
						</s:HGroup>  
						<s:Spacer height="100%" />
						<s:HGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="right" paddingTop="11">
							<componentes1:botonColores width="100" height="30" click.normal="aceptar(event,'cambio')"
													   colorBoton="{colorBoton}" text="ACEPTAR" colorLabel="0xFFFFFF" click.editar="cancelar(event,'aceptarEditar')"/>
						</s:HGroup>  
						
						</s:VGroup>
			
			
			</s:HGroup>
			
	
			
		</s:VGroup> 
	</s:Group>
</s:Group>
