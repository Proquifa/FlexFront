<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:d="http://ns.adobe.com/fxg/2008/dt" enabled="{habilitado}"
		width="140" height="30"
		updateComplete="skin1_updateCompleteHandler(event)">
	<fx:Metadata>[HostComponent("spark.components.ToggleButton")]</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			[Bindable]	public var bandera:Boolean = false;
			
			[Bindable] public var habilitado:Boolean = true;
			
			[Bindable] public var fontSize:int = 10;
			
			[Bindable]
			public var colorNormal:uint = 0xFEFEFE;
			
			[Bindable]
			public var colorNormal2:uint = 0xE7E7E7;
			
			[Bindable]
			public var colorDown:uint = 0x89a340;
			
			[Bindable]
			public var colorDown2:uint = 0x6f8d2d;
			
			[Bindable] 
			public var colorOver:uint = 0xFFFFFF;
			
			[Bindable] 
			public var colorOver2:uint = 0xCCCCCC;
			
			[Bindable]
			public var colorDownAndSelected:uint = 0x89a340;
			
			[Bindable]
			public var colorDownAndSelected2:uint = 0x6f8d2d;
			
			[Bindable] 
			public var colorUpAndSelected:uint = 0x89a340;
			
			[Bindable] 
			public var colorUpAndSelected2:uint = 0x6f8d2d;
			
			[Bindable] 
			public var colorOverAndSelect:uint = 0x6f8d2d;
			
			[Bindable] 
			public var colorOverAndSelect2:uint = 0x6f8d2d;
			
			[Bindable] 
			public var colorTextoNormal:uint = 0x000000;
			
			[Bindable] 
			public var mostrarMonto:Boolean = false;
			
			[Bindable] 
			public var montoFormato:String = "";
			
			protected function skin1_updateCompleteHandler(event:FlexEvent):void
			{
				if (this.document != null && this.document is toggleColores){					
					this.mostrarMonto = (this.document as toggleColores).mostrarMonto;
				}			
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{				
				super.updateDisplayList(unscaledWidth,unscaledHeight);
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
		<s:State name="upAndSelected"/>
		<s:State name="overAndSelected"/>
		<s:State name="downAndSelected"/>
		<s:State name="disabledAndSelected"/>
	</s:states>
	<s:Rect id="rect1" width="100%" height="100%" x="0" y="0" >
		<s:fill>
			<s:LinearGradient id="lineargradient1" rotation="90">
				<s:GradientEntry id="gradiententry1" alpha="1.0" ratio="0"
								 color="{colorNormal}" 
								 color.down="{colorDown}" 
								 color.downAndSelected="{colorDownAndSelected}" 
								 color.upAndSelected="{colorUpAndSelected}"
								 color.over="{colorOver}"
								 color.overAndSelected="{colorOverAndSelect}" />
				<s:GradientEntry id="gradiententry2" alpha="1.0" ratio="1"
								 color="{colorNormal2}" 
								 color.down="{colorDown2}" 
								 color.downAndSelected="{colorDownAndSelected2}" 
								 color.upAndSelected="{colorUpAndSelected2}"
								 color.over="{colorOver2}"
								 color.overAndSelected="{colorOverAndSelect2}"
								 />
			</s:LinearGradient>
		</s:fill>
		
		<s:stroke.disabledAndSelected>
			<s:SolidColorStroke caps="none" color="#C4C4C4" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke.disabledAndSelected>
		<s:stroke.disabled>
			<s:SolidColorStroke caps="none" color="#C4C4C4" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke.disabled>
		<s:stroke.up>
			<s:SolidColorStroke caps="none" color="#C4C4C4" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke.up>
		<s:stroke.over>
			<s:SolidColorStroke caps="none" color="#C4C4C4" joints="miter" miterLimit="4" weight="1"/>
		</s:stroke.over>
	</s:Rect>
	
	<s:VGroup height="100%" horizontalCenter="-3" horizontalCenter.downAndSelected="1" gap="0" horizontalAlign="center" paddingTop="6" paddingBottom="6" top="0">
		<s:HGroup height="26"  verticalAlign="middle"  gap="0" paddingTop="-6"
				  >
			<s:Image id="icono" >
				<s:filters>
					<s:GlowFilter includeIn="upAndSelected,downAndSelected,overAndSelected" color="0xFFFFFF" alpha="1" alpha.upAndSelected="1.5" blurX="100" blurY="100" inner="true" />
				</s:filters>
			</s:Image>
					
			<s:RichText id="labelDisplay" 
						fontFamily="Helvetica Bold" fontSize="{fontSize}" maxDisplayedLines="2" width="100%"
						kerning="auto" whiteSpaceCollapse="collapse"  
						color="{colorTextoNormal}" color.down="#FFFFFF" color.downAndSelected="#FFFFFF" color.over="#FFFFFF" color.overAndSelected="#FFFFFF" color.upAndSelected="#FFFFFF"
						tabStops="S0 S50 S100" >
			</s:RichText>
		</s:HGroup>		
		
		<s:Label id="lblMonto" visible="{mostrarMonto}" includeInLayout="{mostrarMonto}" text="{montoFormato}" paddingTop="-4" textAlign="center" paddingLeft="5"	 
				 fontFamily="Helvetica Bold" fontSize="{fontSize}" maxDisplayedLines="2"
				 color="{colorTextoNormal}" color.down="#FFFFFF" color.downAndSelected="#FFFFFF" color.over="#FFFFFF" color.overAndSelected="#FFFFFF" color.upAndSelected="#FFFFFF"/>			
		
	</s:VGroup>
	
	<s:BitmapImage x="{rect1.width - 18}" y="0" smooth="true" source="@Embed('assets/banderÃ­n.png')" visible="{bandera}"/>
	<s:transitions>
		<s:Transition fromState="up" interruptionBehavior="stop" toState="over">
			<s:Parallel>
				<s:Parallel target="{rect1}">
					<s:Animate duration="200">
						<s:SimpleMotionPath property="width"/>
						<s:SimpleMotionPath property="height"/>
					</s:Animate>
					<s:Parallel duration="200" target="{lineargradient1}">
						<s:Animate>
							<s:SimpleMotionPath property="rotation"/>
						</s:Animate>
					</s:Parallel>
					<s:Parallel duration="200" target="{gradiententry1}">
						<s:AnimateColor/>
						<s:Animate>
							<s:SimpleMotionPath property="alpha"/>
							<s:SimpleMotionPath property="ratio"/>
						</s:Animate>
					</s:Parallel>
					<s:Parallel duration="200" target="{gradiententry2}">
						<s:AnimateColor/>
						<s:Animate>
							<s:SimpleMotionPath property="alpha"/>
							<s:SimpleMotionPath property="ratio"/>
						</s:Animate>
					</s:Parallel>
				</s:Parallel>
				<s:AnimateColor duration="200" target="{labelDisplay}"/>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="over" interruptionBehavior="stop" toState="up">
			<s:Parallel>
				<s:Parallel target="{rect1}">
					<s:Animate duration="200">
						<s:SimpleMotionPath property="width"/>
						<s:SimpleMotionPath property="height"/>
					</s:Animate>
					<s:Parallel duration="200" target="{lineargradient1}">
						<s:Animate>
							<s:SimpleMotionPath property="rotation"/>
						</s:Animate>
					</s:Parallel>
					<s:Parallel duration="200" target="{gradiententry1}">
						<s:AnimateColor/>
						<s:Animate>
							<s:SimpleMotionPath property="alpha"/>
							<s:SimpleMotionPath property="ratio"/>
						</s:Animate>
					</s:Parallel>
					<s:Parallel duration="200" target="{gradiententry2}">
						<s:AnimateColor/>
						<s:Animate>
							<s:SimpleMotionPath property="alpha"/>
							<s:SimpleMotionPath property="ratio"/>
						</s:Animate>
					</s:Parallel>
				</s:Parallel>
				<s:AnimateColor duration="200" target="{labelDisplay}"/>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
</s:Skin>
