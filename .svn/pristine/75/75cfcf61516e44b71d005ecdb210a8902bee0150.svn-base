<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorComparacionConsultas xmlns:fx="http://ns.adobe.com/mxml/2009" 
									  xmlns:s="library://ns.adobe.com/flex/spark" 
									  xmlns:mx="library://ns.adobe.com/flex/mx" 
									  xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									  xmlns:otros="skins.otros.*" 
									  xmlns:pqNet1="skins.botones.pqNet.*" 
									  xmlns:AdvancedDataGrid="skins.skin.AdvancedDataGrid.*" 
									  xmlns:consultas="skins.skin.comun.consultas.*"
									  xmlns:chekbox="skins.skin.chekbox.*"
									  width="100%" height="100%"
									  xmlns:linkButton="skins.skin.linkButton.*" 
									  xmlns:label="skins.skin.label.*"
									  creationComplete="contenedorcomparacionconsultas1_creationCompleteHandler(event)" 
									  >
	<fx:Script >
		<![CDATA[
			import flash.filesystem.File;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.finanzas.facturacion.EventoConsultaFacturacion2013;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.metodos.zip.ASZip;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.metodos.zip.CompressionMethod;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.metodos.zip.Method;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.clientes.CotizaPedidoCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.controls.HRule;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoAlertas;
			
			private var _refacturada:String;
			
			public function set obtenerListaCompras($facturas:ArrayCollection):void
			{
				if( $facturas == null )
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
					return;	
				}
				
				gridFactDeSistemaBAvanzada.dataProvider = new ArrayCollection();
				
				if($facturas.length > 0)
				{
					hderGrid.btnDescargar.enabled = true;
					hderGrid.btnExportar.enabled = true;
					
					var temp:ArrayCollection = new ArrayCollection();
					
					for(var i:uint; i<$facturas.length; i++)
					{
						temp.addItem($facturas[i]);
						temp[i].numFila = i+1;
						temp[i].fechaModif = UtilsFecha.formatoFechaDDMMMYY( temp[i].fecha);
						temp[i].fila = "dato";
						temp[i].importeFormato = "$ "+ UtilsFormatosNumericos.precisionADosDecimalesConComas((temp[i] as Facturacion).importe);
					}
					gridFactDeSistemaBAvanzada.dataProvider = temp;
				}
				else
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
				}
			}
			
			private var _listaGrid:ArrayCollection;
			[Bindable]
			private var _universoFacturas:ArrayCollection;
			public function set recibirFacturas( $datos:ArrayCollection ):void // Este correcponde con el llamado
			{
				//Ocultarlo solo si el switch es de sistema
				if( $datos == null )
				{
					return;
				}
				
				if($datos.length>0)
				{
					hderGrid.btnDescargar.enabled = true;
					hderGrid.btnExportar.enabled = true;
				}
				else
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
				}
				_universoFacturas = new ArrayCollection();
				_universoFacturas = ObjectUtil.copy( $datos ) as ArrayCollection;
				_listaGrid=new ArrayCollection;
				
				for( var u:int = 0; u < _universoFacturas.length; u++ )
				{
					(_universoFacturas[u] as Factura).numFila = _listaGrid.length + 1;
					( _listaGrid ).addItem( _universoFacturas[u] );
				}
				gridFactFueraSistemaBAvanzada.dataProvider=_listaGrid;
			}
			
			public function set obtenerConsultaFacturas($facturas:ArrayCollection):void
			{
				if( $facturas == null )
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
					return ;	
				}
				
				gridFactDeSistemaBRapida.dataProvider = new ArrayCollection();
				
				if($facturas.length > 0)
				{
					hderGrid.btnDescargar.enabled = true;
					hderGrid.btnExportar.enabled = true;
					
					var temp:ArrayCollection = new ArrayCollection();
					
					for(var i:uint; i<$facturas.length; i++)
					{
						temp.addItem($facturas[i]);
						temp[i].numFila = i+1;
						temp[i].fechaModif = UtilsFecha.formatoFechaDDMMMYY( temp[i].fecha);
						temp[i].fechaFEP = UtilsFecha.formatoFechaDDMMMYY( temp[i].fep);
					}
					
					gridFactDeSistemaBRapida.dataProvider = temp;
				}
				else
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
				}
			}
			
			public function set obtenerConsultaFacturasFueraLinea($facturas:ArrayCollection):void
			{
				if( $facturas == null )
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
					return ;	
				}
				
				gridFactFueraSistemaBRapida.dataProvider = new ArrayCollection();
				
				if($facturas.length > 0)
				{
					hderGrid.btnDescargar.enabled = true;
					hderGrid.btnExportar.enabled = true;
					var temp:ArrayCollection = new ArrayCollection();
					for(var i:uint; i<$facturas.length; i++)
					{
						temp.addItem($facturas[i]);
						temp[i].numFila = i+1;
					}
					
					gridFactFueraSistemaBRapida.dataProvider = temp;
				}
				else
				{
					hderGrid.btnDescargar.enabled = false;
					hderGrid.btnExportar.enabled = false;
				}
			}
			
			private function compareFunction_HeaderFecha(item1:Object,item2:Object):int
			{
				var formatoFecha:DateFormatter = new DateFormatter();
				formatoFecha.formatString = "YYYYMMDD"
				var fech1:String = (formatoFecha.format( item1.fechaFacturacion));
				var fech2:String = (formatoFecha.format( item2.fechaFacturacion));
				
				return ObjectUtil.dateCompare(item1.fecha,item2.fecha); 
			}
			
			private function compareFunction_Monto(item1:Object,item2:Object):int
			{
				return ObjectUtil.numericCompare(item1.importe,item2.importe); 
			}
			
			private function compareFunction_Facturas(item1:Object,item2:Object):int
			{
				return ObjectUtil.numericCompare(item1.factura,item2.factura); 
			}
			
			private function generaArchivo():void
			{ 
				if(_switchBusqueda=="DESISTEMA")
				{
					csvDeSistema();
				}
				else
				{
					csvFueraDeSistema();
				}
			}
			
			private function csvDeSistema():void
			{
				var file2:File = new File();
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Cliente");
				fila1[2] = hoja.addItem("Raz贸n Social");
				fila1[3] = hoja.addItem("RFC");
				fila1[4] = hoja.addItem("Factura");
				fila1[5] = hoja.addItem("Vendi贸");
				fila1[6] = hoja.addItem("Sub Total M.N.");
				fila1[7] = hoja.addItem("IVA M.N.");
				fila1[8] = hoja.addItem("Total M.N.");
				fila1[9] = hoja.addItem("Sub Total USD");
				fila1[10] = hoja.addItem("IVA USD");
				fila1[11] = hoja.addItem("Total USD");
				fila1[12] = hoja.addItem("Moneda");
				fila1[13] = hoja.addItem("T.Cambio");
				fila1[14] = hoja.addItem("C.Pago");
				fila1[15] = hoja.addItem("F. Facturaci贸n");
				fila1[16] = hoja.addItem("Tipo");
				fila1[17] = hoja.addItem("Refacturada");
				fila1[18] = hoja.addItem("Estado");
				fila1[19] = hoja.addItem("Fecha Cancelaci贸n");
				fila1[20] = hoja.addItem("No. Cuenta");
				
				arrayTemp = new ArrayCollection();
				
				if( isBusquedaAvanzadaDS )
				{
					arrayTemp = ObjectUtil.copy( gridFactDeSistemaBAvanzada.dataProvider ) as ArrayCollection; 
				}
				else
				{
					arrayTemp = ObjectUtil.copy( gridFactDeSistemaBRapida.dataProvider ) as ArrayCollection;
				}
				
				for(var i:int = 0 ; i< arrayTemp.length ; i++ )
				{
					fila1 = new Array();	
					fila1[0] = 	   ( arrayTemp[i] ).numFila;
					fila1[1] = '"'+( arrayTemp[i] as Facturacion ).nombre_cliente+'"';
					fila1[2] = '"'+( arrayTemp[i] as Facturacion ).rsocial+'"';
					fila1[3] = '"'+( arrayTemp[i] as Facturacion ).rfc+'"';
					fila1[4] = '"'+( arrayTemp[i] as Facturacion ).factura+'"';
					fila1[5] = '"'+( arrayTemp[i] as Facturacion ).fpor+'"';
					fila1[6] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Facturacion ).importeMN )+'"';
					fila1[7] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales(  (arrayTemp[i] as Facturacion).totalivaMN )+'"';
					fila1[8] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Facturacion ).totalMN )+'"';
					fila1[9] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Facturacion ).importe )+'"';
					fila1[10] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales(  arrayTemp[i].totaliva )+'"';
					fila1[11] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Facturacion ).total )+'"';
					fila1[12] = '"'+( arrayTemp[i] as Facturacion ).moneda+'"';
					fila1[13] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Facturacion ).pdolar )+'"';
					fila1[14] = '"'+( arrayTemp[i] as Facturacion ).CPago+'"';
					fila1[15] = '"'+( arrayTemp[i] ).fechaModif+'"';
					fila1[16] = '"'+( arrayTemp[i] as Facturacion ).tipo+'"';
					fila1[17] = '"'+( arrayTemp[i] as Facturacion ).refacturada+'"';
					fila1[18] = '"'+( arrayTemp[i] as Facturacion ).estado+'"';
					fila1[19] = '"'+UtilsFecha.formatoFechaDDMMMYYYY(( arrayTemp[i] as Facturacion ).fechaCancelacion,'NA')+'"';
					fila1[20] = '"'+( arrayTemp[i] as Facturacion ).cuentaBanco+'"';
					hoja.addItem('\r' + fila1 );
				} 
				file2.save( hoja, 'ConsultaFacturacion-'+ UtilsFecha.formatoPAraGuardarFechaDDMMMYYYYHHMM( new Date() )+'.csv');
			}
			
			private function csvFueraDeSistema():void
			{
				var file2:File = new File();
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Folio");
				fila1[2] = hoja.addItem("RFC");
				fila1[3] = hoja.addItem("Cliente");
				fila1[4] = hoja.addItem("Vendi贸");
				fila1[5] = hoja.addItem("Fecha");
				fila1[6] = hoja.addItem("Sub Total M.N.");
				fila1[7] = hoja.addItem("IVA M.N.");
				fila1[8] = hoja.addItem("Total M.N.");
				fila1[9] = hoja.addItem("Sub Total USD");
				fila1[10] = hoja.addItem("IVA USD");
				fila1[11] = hoja.addItem("Total USD");
				fila1[12] = hoja.addItem("Moneda");
				fila1[13] = hoja.addItem("T.Cambio");
				fila1[14] = hoja.addItem("Estado");
				fila1[15] = hoja.addItem("No. Cuenta");
				
				arrayTemp = new ArrayCollection();
				
				if(isBusquedaAvanzadaFS)
				{
					arrayTemp = ObjectUtil.copy( gridFactFueraSistemaBAvanzada.dataProvider ) as ArrayCollection; 
				}
				else
				{
					arrayTemp = ObjectUtil.copy( gridFactFueraSistemaBRapida.dataProvider ) as ArrayCollection;
				}
				
				for(var i:int = 0 ; i< arrayTemp.length ; i++ ){
					fila1 = new Array();	
					fila1[0] = 	   ( arrayTemp[i] ).numFila;
					fila1[1] = '"'+( arrayTemp[i] as Factura ).numeroFactura+'"';
					fila1[2] = '"'+( arrayTemp[i] as Factura ).rfc_Cliente+'"';
					fila1[3] = '"'+( arrayTemp[i] as Factura ).nombre_Cliente+'"';
					fila1[4] = '"'+( arrayTemp[i] as Factura ).facturadoPor+'"';
					fila1[5] = '"'+ arrayTemp[i].formatoFecha+'"';
					fila1[6] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Factura ).importe )+'"';
					fila1[7] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales(  (arrayTemp[i] as Factura).iva )+'"';
					fila1[8] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Factura ).importe + (arrayTemp[i] as Factura).iva )+'"';
					fila1[9] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Factura ).montoFacturaDLS )+'"';
					fila1[10] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Factura).ivaDLS ) +'"';
					fila1[11] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales( ( arrayTemp[i] as Factura ).montoFacturaDLS + ( arrayTemp[i] as Factura).ivaDLS )+'"';
					fila1[12] = '"'+( arrayTemp[i] as Factura ).moneda+'"';
					fila1[13] = '"$'+ UtilsFormatosNumericos.precisionADosDecimales(( arrayTemp[i] as Factura ).tipoCambio)+'"';
					fila1[14] = '"'+( arrayTemp[i] as Factura ).estado+'"'; 
					fila1[15] = '"'+( arrayTemp[i] as Factura ).cuentaBanco+'"';
					hoja.addItem('\r' + fila1 );
				} 
				file2.save( hoja, 'ConsultaFacturacion-'+ UtilsFecha.formatoPAraGuardarFechaDDMMMYYYYHHMM( new Date() )+'.csv');
			}
			
			private	var file:File = new File();
			private	var myZip:ASZip;
			private var nombreFactura:String;
			private var contador:int = 0;
			private var arrayTemp:ArrayCollection;
			private	var rutaEmpresa:String = new String();
			private var bloqueoGuardarZip:Boolean;
			
			private function descargaArchivo():void
			{ 
				if (_switchBusqueda=="DESISTEMA")
				{
					bloqueoGuardarZip = false;
					file = new File();
					file.addEventListener(Event.COMPLETE, avisaGuardadoArchivos );
					iniciaEspera('iniciarEspera');
					arrayTemp = new ArrayCollection();
					myZip = new ASZip (CompressionMethod.NONE);
					
					if( isBusquedaAvanzadaDS )
					{
						arrayTemp = ObjectUtil.copy( gridFactDeSistemaBAvanzada.dataProvider ) as ArrayCollection; 
					}
					else
					{
						arrayTemp = ObjectUtil.copy( gridFactDeSistemaBRapida.dataProvider ) as ArrayCollection;
					}
					descriminaArchivosXNombre();
					contador = 0;
				}
				else
				{//Fuera de sistema 
					bloqueoGuardarZip = false;
					file = new File();
					file.addEventListener(Event.COMPLETE, avisaGuardadoArchivos );
					iniciaEspera('iniciarEspera');
					arrayTemp = new ArrayCollection();
					myZip = new ASZip (CompressionMethod.NONE);
					
					if( isBusquedaAvanzadaFS )
					{
						arrayTemp = ObjectUtil.copy( gridFactFueraSistemaBAvanzada.dataProvider ) as ArrayCollection; 
					}
					else
					{
						arrayTemp = ObjectUtil.copy( gridFactFueraSistemaBRapida.dataProvider ) as ArrayCollection;
					}
					descriminaArchivosXNombre();
					contador = 0;
				}
			}	
			
			private function descriminaArchivosXNombre():void
			{
				var urlGeenral:String = RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA;
				var request:URLRequest = new URLRequest();
				if( arrayTemp.length > 0 )
				{
					if (_switchBusqueda=="DESISTEMA")
					{
						nombreFactura = ( arrayTemp[0] as Facturacion ).factura;
						rutaEmpresa = ( arrayTemp[0] as Facturacion ).fpor;
					}
					else
					{
						nombreFactura = ( arrayTemp[0] as Factura ).numeroFactura.toString();
						rutaEmpresa = ( arrayTemp[0] as Factura ).facturadoPor;
					}
					
					var variables:URLLoader = new URLLoader();
					variables.dataFormat = URLLoaderDataFormat.BINARY;
					nombreFactura == null ? nombreFactura = '':null;
					
					var rutaEmpresaFormat:String=(rutaEmpresa=="RYNDEM")?"Ryndem":rutaEmpresa.replace(" ","");
					
					if( contador == 0)
					{
						request = new URLRequest( urlGeenral + rutaEmpresaFormat +'/'+ nombreFactura +'.pdf' ); 
						
						variables.addEventListener(Event.COMPLETE, completeHandler);
						variables.addEventListener(IOErrorEvent.IO_ERROR, completeErrorFile);
					}
					else if( contador == 1 )
					{
						request = new URLRequest( urlGeenral + rutaEmpresaFormat +'/'+ nombreFactura +'.xml' ); 
						variables.addEventListener(Event.COMPLETE, completeHandlerXML);
						variables.addEventListener(IOErrorEvent.IO_ERROR, completeErrorFile);
					}
					contador++;
					if( contador == 2 )
					{
						if( arrayTemp.length > 0)
						{
							arrayTemp.removeItemAt(0);
						}
						contador = 0;
					}
					if( rutaEmpresa != '' &&  nombreFactura != '' )
					{
						try
						{
							variables.load(request);
						} 
						catch (error:Error)
						{
							trace("Unable to load URL: " + error);
						}
					}
				}
			}
			
			private function completeErrorFile(event:Event):void
			{
				if( arrayTemp.length == 0){
					if( !bloqueoGuardarZip ){
						iniciaEspera('terminaEspera');
						var myZipFile:ByteArray = myZip.saveZIP ( Method.LOCAL );
						file.save( myZipFile, 'facturas'+ UtilsFecha.formatoPAraGuardarFechaDDMMMYYYYHHMM( new Date ) +'.zip' );	
						bloqueoGuardarZip = true;
					}
				}
				descriminaArchivosXNombre();
			}
			
			private function avisaGuardadoArchivos(event:Event):void{
				file.removeEventListener(Event.COMPLETE,avisaGuardadoArchivos);
				alertaSingleton.show('Se guardaron los archivos',catalogoAlertas.TIT_CONF_operacionExitosa);
			}
			private function completeHandler(event:Event):void{
				var loader:URLLoader = URLLoader(event.target);
				var bytes:ByteArray = new ByteArray();
				try{
					bytes = (event.target as URLLoader).data;
				}
				catch (error:*){
					trace("no existe archivo");
				}
				myZip.addDirectory ('PDF/'+rutaEmpresa+'/');
				//if(bytes.length>0){}
				myZip.addFile (bytes, 'PDF/'+rutaEmpresa+'/' + nombreFactura +'.pdf' );
				if( arrayTemp.length == 0){
					if( !bloqueoGuardarZip ){
						iniciaEspera('terminaEspera');
						var myZipFile:ByteArray = myZip.saveZIP ( Method.LOCAL );
						file.save( myZipFile, 'facturas'+ UtilsFecha.formatoPAraGuardarFechaDDMMMYYYYHHMM( new Date ) +'.zip' );	
						bloqueoGuardarZip = true;
					}
				}
				descriminaArchivosXNombre();
			}	
			private function completeHandlerXML(event:Event):void{
				var loader:URLLoader = URLLoader(event.target);
				var bytes:ByteArray = new ByteArray();
				try{
					bytes = (event.target as URLLoader).data;
				}
				catch (error:*){
					trace("no existe archivo");
				}
				myZip.addDirectory ('XML/'+rutaEmpresa+'/');
				myZip.addFile (bytes, 'XML/'+rutaEmpresa+'/' + nombreFactura +'.xml' );
				if( arrayTemp.length == 0){
					if( !bloqueoGuardarZip ){
						iniciaEspera('terminaEspera');
						var myZipFile:ByteArray = myZip.saveZIP ( Method.LOCAL );
						file.save( myZipFile, 'facturas'+ UtilsFecha.formatoPAraGuardarFechaDDMMMYYYYHHMM( new Date ) +'.zip' );		
						bloqueoGuardarZip = true;
					}
				}
				descriminaArchivosXNombre();
			}	
			private function iniciaEspera(mensaje:String):void
			{
				if(mensaje == "iniciarEspera")
				{
					alertaSingleton.show(catalogoAlertas.INICIAR_ESPERA,"","","","","","",null,true);
				}
				else if (mensaje == "terminaEspera" )
				{
					alertaSingleton.remove(true);
				}
			}
			
			[Bindable] private var _switchBusqueda:String ="DESISTEMA";
			private function cambiarswitch():void
			{
				_switchBusqueda = hderGrid.checkCombo.selected ? "FUERADESISTEMA" : "DESISTEMA";
				
				validarVisibilidadDeLosGrids();
				
				//Lo pirncipal es mandar el switch De hay ya lo envio a cualqueir vista y lo manipulo.
				var mandarSwitch:EventoConsultaFacturacion2013 = new EventoConsultaFacturacion2013(EventoConsultaFacturacion2013.ESCUCHARCAMBIOSMENU);
				mandarSwitch.switchBusqueda = _switchBusqueda;
				dispatchEvent(mandarSwitch);
			}
			
			
			private var isBusquedaAvanzadaDS:Boolean = true;
			private var isBusquedaAvanzadaFS:Boolean = true;
			public function recibeSiEsBusquedaRapidaOAvanzada($isBusquedaAvanzada:Boolean):void
			{
				if(_switchBusqueda == "DESISTEMA")
				{
					isBusquedaAvanzadaDS = $isBusquedaAvanzada;
				}
				else
				{
					isBusquedaAvanzadaFS = $isBusquedaAvanzada;
				}
				
				validarVisibilidadDeLosGrids();
			}
			
			
			private function validarVisibilidadDeLosGrids():void
			{
				gridFactDeSistemaBAvanzada.visible = false;
				gridFactDeSistemaBRapida.visible = false;
				gridFactFueraSistemaBAvanzada.visible = false;
				gridFactFueraSistemaBRapida.visible = false;
				
				if(_switchBusqueda == "DESISTEMA")
				{
					if(isBusquedaAvanzadaDS)
					{
						gridFactDeSistemaBAvanzada.visible = true;
						if(gridFactDeSistemaBAvanzada.dataProvider != null && (gridFactDeSistemaBAvanzada.dataProvider as ArrayCollection).length > 0)
						{
							hderGrid.btnDescargar.enabled = true;
							hderGrid.btnExportar.enabled = true;
						}
						else
						{
							hderGrid.btnDescargar.enabled = false;
							hderGrid.btnExportar.enabled = false;
						}
					}
					else
					{
						gridFactDeSistemaBRapida.visible = true;
						if(gridFactDeSistemaBRapida.dataProvider != null && (gridFactDeSistemaBRapida.dataProvider as ArrayCollection).length > 0)
						{
							hderGrid.btnDescargar.enabled = true;
							hderGrid.btnExportar.enabled = true;
						}
						else
						{
							hderGrid.btnDescargar.enabled = false;
							hderGrid.btnExportar.enabled = false;
						}
					}
				}
				else
				{
					if(isBusquedaAvanzadaFS)
					{
						gridFactFueraSistemaBAvanzada.visible = true;
						if(gridFactFueraSistemaBAvanzada.dataProvider != null && (gridFactFueraSistemaBAvanzada.dataProvider as ArrayCollection).length > 0)
						{
							hderGrid.btnDescargar.enabled = true;
							hderGrid.btnExportar.enabled = true;
						}
						else
						{
							hderGrid.btnDescargar.enabled = false;
							hderGrid.btnExportar.enabled = false;
						}
					}
					else
					{
						gridFactFueraSistemaBRapida.visible = true;
						if(gridFactFueraSistemaBRapida.dataProvider != null && (gridFactFueraSistemaBRapida.dataProvider as ArrayCollection).length > 0)
						{
							hderGrid.btnDescargar.enabled = true;
							hderGrid.btnExportar.enabled = true;
						}
						else
						{
							hderGrid.btnDescargar.enabled = false;
							hderGrid.btnExportar.enabled = false;
						}
					}
				}
			}
			
			protected function contenedorcomparacionconsultas1_creationCompleteHandler(event:FlexEvent):void
			{
				btnGraficaTabla.visible = false;
			}
			
			
		]]>
	</fx:Script>
	<comun:espacioA>
		<s:VGroup height="100%" width="100%" gap="10">
			<!--<s:VGroup width="100%" paddingTop="20" >
				<chekbox:CheckBoxPq id="checkComboTipoFactura" labelLeft="De Sistema" click="cambiarswitch()"  labelRight="Fuera de Sistema"/>
			</s:VGroup>-->
			<s:VGroup width="100%" height="100%" paddingLeft="20" paddingRight="20" gap="10">
				<consultas:HeaderParaGridConsultas id="hderGrid" mostrarBtnExportar="true" clickExportar="generaArchivo()" width="100%" mostrarBtnDescargar="true" clickDescargarHeaderConsultas="descargaArchivo()" textIzqquierdo="De Sistema" textDerecho="Fuera de Sistema" clickCheckCombo="cambiarswitch()" conCheckbox="true"/>
				<otros:divisionGruesa width="100%"/>
				<s:Group width="100%" height="100%">
					
					<AdvancedDataGrid:PQNetAdvanceDataGridFooter   id="gridFactDeSistemaBAvanzada" width="100%" height="100%" anchoColumnas="{['45','24%','15%','=','70','90','=','=','100','=','85','=','50'] }" tipoDeConsulta="Facturas">
						<AdvancedDataGrid:columns>
							<mx:AdvancedDataGridColumn  headerText="#" dataField="numFila"/> 
							<mx:AdvancedDataGridColumn  headerText="Cliente" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
												]]>
											</fx:Script>
											<label:Texto_12 text="{(data as Facturacion).nombre_cliente}" textAlign="center" width="100%" maxDisplayedLines="2" verticalCenter="1"  height="100%" />
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn  headerText="Cobrador" dataField="cobrador" />
							<mx:AdvancedDataGridColumn  headerText="Raz贸n Social" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
												]]>
											</fx:Script>
											<s:VGroup width="100%" height="100%" verticalAlign="middle">
												<label:Texto_12 text="{(data as Facturacion).rsocial}" textAlign="center" width="100%" maxDisplayedLines="2" height="100%"/>
											</s:VGroup>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn  headerText="RFC" dataField="rfc" />
							<mx:AdvancedDataGridColumn  headerText="Factura" dataField="factura"  sortCompareFunction="{compareFunction_Facturas}"/>
							<mx:AdvancedDataGridColumn  headerText="Vendi贸" dataField="fpor"/>							
							<mx:AdvancedDataGridColumn  headerText="Monto"  sortCompareFunction="{compareFunction_Monto}">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
													import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatoMoneda;
													import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
													import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.facturacion.ConsultaFacturacion;
												]]>
											</fx:Script>
											<label:Texto_12 text="${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Facturacion).importe)}" textAlign="center" width="100%" />
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn  headerText="C.Pago" dataField="CPago" />
							<mx:AdvancedDataGridColumn  headerText="F. Facturaci贸n" dataField="fechaModif" sortCompareFunction="{compareFunction_HeaderFecha}"  />
							<mx:AdvancedDataGridColumn  headerText="Tipo" dataField="tipo" />
							<mx:AdvancedDataGridColumn  headerText="Refacturada" dataField="refacturada"/>
							<mx:AdvancedDataGridColumn  headerText="Estado" dataField="estado" />
							<mx:AdvancedDataGridColumn  headerText=" ">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.compras.compras.EventoConsultasCompraNuevo;
													import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.finanzas.facturacion.EventoConsultaFacturacion2013;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Compra;
													import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
													import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaEntrega_Facturacion;
													
													import skins.catalogos.catalogoIconosGrid;
													
													public function verEntrega():void{
														var evento:EventoConsultaFacturacion2013 = new EventoConsultaFacturacion2013( EventoConsultaFacturacion2013.MOSTRAR_CONSULTA_PANEL_MENU );
														evento.factura = (data as Facturacion).factura;
														evento.fpor = (data as Facturacion).fpor;
														evento.idUsuarioLogueado = DatosGlobales.getInstance()._usuario.clave;
														dispatchEvent(evento);
														
														var refa:InsPConsultaEntrega_Facturacion = new InsPConsultaEntrega_Facturacion();
														refa._refacturada = (data as Facturacion).refacturada;
														var evt:EventoConsultaFacturacion2013 = new EventoConsultaFacturacion2013( EventoConsultaFacturacion2013.MOSTRAR_CONSULTA_PANEL_FACTURAS );
														evt.folio = (data as Facturacion).cpedido == null || (data as Facturacion).cpedido == 'ND' ? null : (data as Facturacion).cpedido ;
														evt.factura = (data as Facturacion).factura;
														evt.fpor = (data as Facturacion).fpor;
														evt.idUsuarioLogueado = DatosGlobales.getInstance()._usuario.clave;
														dispatchEvent(evt); 
													} 
												]]>
											</fx:Script>
											<s:Image source="{catalogoIconosGrid.getInstance().render_flechitacirculo}" id="imgInfo" horizontalCenter="0" click="verEntrega()"/>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
						</AdvancedDataGrid:columns>
					</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
					
					
					<AdvancedDataGrid:PQNetAdvanceDataGridFooter id="gridFactFueraSistemaBAvanzada"  width="100%" height="100%" anchoColumnas="{['45','=','25%','=','25%','=','=','=','='] }" tipoDeConsulta="Facturas" visible="false">
						<AdvancedDataGrid:columns>
							<mx:AdvancedDataGridColumn headerText="#"  dataField="numFila" />
							<mx:AdvancedDataGridColumn headerText="Folio">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%" >
											<fx:Script>
												<![CDATA[
													import flash.net.navigateToURL;
													
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
													
													public function verFactura():void{
														var facturadoPor:String= ((data as Factura).facturadoPor=="RYNDEM")?"Ryndem":((data as Factura).facturadoPor.replace(" ",""));
														ver(RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA + facturadoPor + "/" + (data as Factura).numeroFactura  + ".pdf" );
													}
													public function ver($ruta:String):void{
														var request:URLRequest = new URLRequest(encodeURI($ruta));
														navigateToURL(request);
													}
												]]>
											</fx:Script>
											<s:HGroup horizontalAlign="center" width="100%" >
												<linkButton:LinkButtonPQNet label="{(data as Factura).numeroFactura}" click="verFactura()" id="lnkFactura" visible="true" includeInLayout="true" />
											</s:HGroup>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							
							
							<mx:AdvancedDataGridColumn headerText="RFC"  dataField="rfc_Cliente" />
							<mx:AdvancedDataGridColumn headerText="Cliente">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
												]]>
											</fx:Script>
											<label:Texto_12 text="{(data as Factura).nombre_Cliente}" textAlign="center" width="100%" maxDisplayedLines="2" verticalCenter="1"  height="100%" />
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn headerText="Cobrador" dataField="cobrador" />
							<mx:AdvancedDataGridColumn headerText="Vendi贸"  dataField="facturadoPor" />
							<mx:AdvancedDataGridColumn headerText="Fecha"  dataField="formatoFecha" />
							<mx:AdvancedDataGridColumn headerText="Monto" dataField="formatoImporteDLS"/>
							<mx:AdvancedDataGridColumn headerText="Estado" dataField="estado" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%" >
											<fx:Script>
												<![CDATA[
													import flash.net.navigateToURL;
													
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
													
													public function verFactura():void{
														/*var facturadoPor:String= ((data as Factura).facturadoPor=="RYNDEM")?"Ryndem":((data as Factura).facturadoPor.replace(" ",""));*/
														if((data as Factura).folioPC != null || (data as Factura).folioPC != ""){
															ver(RutasPdF.GENERAL_RUTA + RutasPdF.COBROS_RUTA + (data as Factura).folioPC  + ".pdf" );
														}
													}
													public function ver($ruta:String):void{
														var request:URLRequest = new URLRequest(encodeURI($ruta));
														navigateToURL(request);
													}
												]]>
											</fx:Script>
											<s:states>
												<s:State name="normal"/>
												<s:State name="hovered"/>
												<s:State name="selected"/>
											</s:states>
											<s:HGroup horizontalAlign="center" width="100%" >
												<!--<linkButton:LinkButtonPQNet label="{(data as Factura).estado}" click="verFactura()" id="lnkFactura" visible="true" includeInLayout="true" />
												<s:Label id="estado" text="{(data as Factura).estado}" includeInLayout="true" />-->
												
												<mx:LinkButton label="{(data as Factura).estado}" color="0x257d92" toolTip="Ver Cotizaci贸n" textDecoration.selected="underline"  horizontalCenter="0" click="verFactura()" id="lnkFactura"
															   includeInLayout="{(data as Factura).folioPC != null ? true:false}"
															   visible="{(data as Factura).folioPC != null ? true:false}"/>
												
												<s:Label  horizontalCenter="0" text="{(data as Factura).estado}" 
														  includeInLayout="{(data as Factura).folioPC == null ? true:false}" 
														  visible="{(data as Factura).folioPC == null ? true:false}" fontSize="12" />
											</s:HGroup>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>	
						</AdvancedDataGrid:columns>
					</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
					
					
					<AdvancedDataGrid:PQNetAdvanceDataGridFooter  id="gridFactDeSistemaBRapida" width="100%" height="100%" anchoColumnas="{['45','24%','=','14%','=','70','=','=','=','90','=','85','=','50'] }" tipoDeConsulta="Facturas" visible="false">
						<AdvancedDataGrid:columns>
							<mx:AdvancedDataGridColumn  headerText="#" dataField="numFila"/>
							<mx:AdvancedDataGridColumn  headerText="Cliente" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
												]]>
											</fx:Script>
											<label:Texto_12 text="{(data as Facturacion).nombre_cliente}" textAlign="center" width="100%" maxDisplayedLines="2" verticalCenter="1"  height="100%"/>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn  headerText="Cobrador" dataField="cobrador" />
							<mx:AdvancedDataGridColumn  headerText="Raz贸n Social" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
												]]>
											</fx:Script>
											<label:Texto_12 text="{(data as Facturacion).rsocial}" textAlign="center" width="100%" maxDisplayedLines="2" verticalCenter="1"  height="100%"/>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn  headerText="RFC" dataField="rfc" />
							<mx:AdvancedDataGridColumn  headerText="Factura" dataField="factura" />
							<mx:AdvancedDataGridColumn  headerText="Vendi贸" dataField="fpor"/>							
							<mx:AdvancedDataGridColumn  headerText="Monto" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
													import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatoMoneda;
													import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
													import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.facturacion.ConsultaFacturacion;
												]]>
											</fx:Script>
											<label:Texto_12 text="${UtilsFormatosNumericos.precisionADosDecimalesConComas((data as Facturacion).importe)}" textAlign="center" width="100%" />
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn  headerText="C.Pago" dataField="CPago" />
							<mx:AdvancedDataGridColumn  headerText="F. Facturaci贸n" dataField="fechaModif" />
							<mx:AdvancedDataGridColumn  headerText="Tipo" dataField="tipo" />
							<mx:AdvancedDataGridColumn  headerText="Refacturada" dataField="refacturada"/>
							<mx:AdvancedDataGridColumn  headerText="Estado" dataField="estado" />
							<mx:AdvancedDataGridColumn  headerText=" ">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.compras.compras.EventoConsultasCompraNuevo;
													import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.finanzas.facturacion.EventoConsultaFacturacion2013;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.facturista.Facturacion;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Compra;
													import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
													import mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.finanzas.facturacion.inspector.InsPConsultaEntrega_Facturacion;
													
													import skins.catalogos.catalogoIconosGrid;
													
													public function verEntrega():void
													{
														var evento1:EventoConsultaFacturacion2013 = new EventoConsultaFacturacion2013( EventoConsultaFacturacion2013.MOSTRAR_CONSULTA_PANEL_MENU );
														evento1.factura = (data as Facturacion).factura;
														evento1.fpor = (data as Facturacion).fpor;
														evento1.idUsuarioLogueado = DatosGlobales.getInstance()._usuario.clave;
														dispatchEvent(evento1);
														
														var refaq:InsPConsultaEntrega_Facturacion = new InsPConsultaEntrega_Facturacion();
														refaq._refacturada = (data as Facturacion).refacturada;
														
														var evt1:EventoConsultaFacturacion2013 = new EventoConsultaFacturacion2013( EventoConsultaFacturacion2013.MOSTRAR_CONSULTA_PANEL_FACTURAS );
														evt1.folio = (data as Facturacion).cpedido == null || (data as Facturacion).cpedido == 'ND' ? null : (data as Facturacion).cpedido ;
														evt1.factura = (data as Facturacion).factura;
														evt1.fpor = (data as Facturacion).fpor;
														evt1.idUsuarioLogueado = DatosGlobales.getInstance()._usuario.clave;
														dispatchEvent(evt1);
														
														var dat:EventoConsultaFacturacion2013 = new EventoConsultaFacturacion2013( EventoConsultaFacturacion2013.ENVIAR_DATOS_FACTURA_FPOR );
														dat.factura = (data as Facturacion).factura;
														dat.fpor = (data as Facturacion).fpor;
														dispatchEvent(dat);
													} 
												]]>
											</fx:Script>
											<s:Image source="{catalogoIconosGrid.getInstance().render_flechitacirculo}" id="imgInfo" horizontalCenter="0" click="verEntrega()"/>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
						</AdvancedDataGrid:columns>
					</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
					
					
					<AdvancedDataGrid:PQNetAdvanceDataGridFooter id="gridFactFueraSistemaBRapida"  width="100%" height="100%" anchoColumnas="{['45','=','25%','=','25%','=','=','=','='] }" tipoDeConsulta="Facturas" visible="false">
						<AdvancedDataGrid:columns>
							<mx:AdvancedDataGridColumn headerText="#"  dataField="numFila" />
							<mx:AdvancedDataGridColumn headerText="Folio">
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%" >
											<fx:Script>
												<![CDATA[
													import flash.net.navigateToURL;
													
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
													
													public function verFactura():void{
														var facturadoPor:String= ((data as Factura).facturadoPor=="RYNDEM")?"Ryndem":((data as Factura).facturadoPor.replace(" ",""));
														ver(RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA + facturadoPor + "/" + (data as Factura).numeroFactura  + ".pdf" );
													}
													public function ver($ruta:String):void{
														var request:URLRequest = new URLRequest(encodeURI($ruta));
														navigateToURL(request);
													}
												]]>
											</fx:Script>
											<s:HGroup horizontalAlign="center" width="100%" >
												<linkButton:LinkButtonPQNet label="{(data as Factura).numeroFactura}" click="verFactura()" id="lnkFactura" visible="true" includeInLayout="true" />
											</s:HGroup>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>						
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn headerText="Folio PC"  dataField="folioPC" />
							<mx:AdvancedDataGridColumn headerText="RFC"  dataField="rfc_Cliente" />
							<mx:AdvancedDataGridColumn headerText="Cliente" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%">
											<fx:Script>
												<![CDATA[
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
												]]>
											</fx:Script>
											<label:Texto_12 text="{(data as Factura).nombre_Cliente}" textAlign="center" width="100%" maxDisplayedLines="2" verticalCenter="1"  height="100%"/>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
							<mx:AdvancedDataGridColumn headerText="Cobrador"  dataField="cobrador" />
							<mx:AdvancedDataGridColumn headerText="Vendi贸"  dataField="facturadoPor" />
							<mx:AdvancedDataGridColumn headerText="Fecha"  dataField="formatoFecha" />
							<mx:AdvancedDataGridColumn headerText="Monto" dataField="formatoImporteDLS"/>
							<mx:AdvancedDataGridColumn headerText="Estado" dataField="estado" >
								<mx:itemRenderer>
									<fx:Component>
										<s:MXAdvancedDataGridItemRenderer autoDrawBackground="false" width="100%" >
											<fx:Script>
												<![CDATA[
													import flash.net.navigateToURL;
													
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
													import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
													
													public function verFactura():void{
														if((data as Factura).folioPC != null || (data as Factura).folioPC != ""){
															ver(RutasPdF.GENERAL_RUTA + RutasPdF.COBROS_RUTA + (data as Factura).folioPC  + ".pdf" );
														}
													}
													public function ver($ruta:String):void{
														var request:URLRequest = new URLRequest(encodeURI($ruta));
														navigateToURL(request);
													}
												]]>
											</fx:Script>
											<s:states>
												<s:State name="normal"/>
												<s:State name="hovered"/>
												<s:State name="selected"/>
											</s:states>
											<s:HGroup horizontalAlign="center" width="100%" >
												<!--<linkButton:LinkButtonPQNet label="{(data as Factura).estado}" click="verFactura()" id="lnkFactura" visible="true" includeInLayout="true" />
												<s:Label id="estado" text="{(data as Factura).estado}" includeInLayout="true" />-->
												
												<mx:LinkButton label="{(data as Factura).estado}" color="0x257d92" toolTip="Ver Cotizaci贸n" textDecoration.selected="underline"  horizontalCenter="0" click="verFactura()" id="lnkFactura"
															   includeInLayout="{(data as Factura).folioPC != null ? true:false}"
															   visible="{(data as Factura).folioPC != null ? true:false}"/>
												
												<s:Label  horizontalCenter="0" text="{(data as Factura).estado}" 
														  includeInLayout="{(data as Factura).folioPC == null ? true:false}" 
														  visible="{(data as Factura).folioPC == null ? true:false}" fontSize="12" />
											</s:HGroup>
										</s:MXAdvancedDataGridItemRenderer>
									</fx:Component>
								</mx:itemRenderer>
							</mx:AdvancedDataGridColumn>
						</AdvancedDataGrid:columns>
					</AdvancedDataGrid:PQNetAdvanceDataGridFooter>
				</s:Group>
			</s:VGroup>
		</s:VGroup>  
	</comun:espacioA>
</comun:ContenedorComparacionConsultas>
