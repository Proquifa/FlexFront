<?xml version="1.0" encoding="utf-8"?>
<graficaPie:ContenedorComparacionTableroClientes xmlns:fx="http://ns.adobe.com/mxml/2009" 
									xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									xmlns:s="library://ns.adobe.com/flex/spark"
									xmlns:mx="library://ns.adobe.com/flex/mx"  
									width="100%" height="100%"
									titulo="PEDIDOS" circulosPedidosBool="true"
									>
	
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="300"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.items.PieSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.clientes.EventoTableroClientes;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import skins.catalogos.catalogoColores;
			import skins.skin.graficas.PieChartPqGris;
			
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			
			private var _listaMensual:ArrayCollection = new ArrayCollection(["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"]);
			
			private var _listaQuincenal:ArrayCollection = new ArrayCollection([{11:"11",valor:"1ra. Enero"},{12:"12",valor:"2da. Enero"},{21:"21",valor:"1ra. Febrero"},{22:"22",valor:"2da. Febrero"},{31:"31",valor:"1ra. Marzo"},{32:"32",valor:"2da. Marzo"},{41:"41",valor:"1ra. Abril"},
				{42:"42",valor:"2da. Abril"},{51:"51",valor:"1ra. Mayo"},{52:"52",valor:"2da. Mayo"},{61:"61",valor:"1ra. Junio"},{62:"62",valor:"2da. Junio"},{71:"71",valor:"1ra. Julio"},{72:"72",valor:"2da. Julio"},{81:"81",valor:"1ra. Agosto"},{82:"82",valor:"2da. Agosto"},
				{91:"91",valor:"1ra. Septiembre"},{92:"92",valor:"2da. Septiembre"},{101:"101",valor:"1ra. Octubre"},{102:"102",valor:"2da. Octubre"},{111:"111",valor:"1ra. Noviembre"},{112:"112",valor:"2da. Noviembre"},{121:"121",valor:"1ra. Diciembre"},{122:"122",valor:"2da. Diciembre"}]);
			
			protected function mostrarLabels( event:ChartItemEvent, $pieChart:PieChartPqGris ):void
			{
				var sItem:PieSeriesItem = event.hitData.chartItem as PieSeriesItem;
				if( sItem.item is ResumenConsulta )
				{
					var resumen:ResumenConsulta = sItem.item as ResumenConsulta;
					$pieChart.lblDataTipBold.text = resumen.conceptoResultado.toUpperCase();
					$pieChart.lblDataTip.text = sItem.percentValue.toFixed(2) + " %" 
						+ '\n' + resumen.piezasTotal + " Pieza" + (resumen.piezasTotal == 1 ? '' : 's')
						+ '\n' + '$' + UtilsFormatosNumericos.precisionADosDecimalesConComas( resumen.total );
				}
			}
			
			public function set recibeLinealPedidos( $lista:ArrayCollection ):void
			{
				if($lista == null ) 
					return;
				
				_linealArrGrafica = $lista;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "PEDIDOS_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
			}
			
			private function filtrarPeriodos( $lista:ArrayCollection ):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objetoPeriodo1:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "PEDIDOS_0") );
				var objetoPeriodo2:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "PEDIDOS_1") );
				var objetoPeriodo3:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "PEDIDOS_2") );
				var objetoPeriodo4:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "PEDIDOS_3") );
				var objetoPeriodo5:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "PEDIDOS_4") );
				objetoPeriodo1.etiquetaX = _event.labelPeriodo1;
				objetoPeriodo2.etiquetaX = _event.labelPeriodo2;
				objetoPeriodo3.etiquetaX = _event.labelPeriodo3;
				objetoPeriodo4.etiquetaX = _event.labelPeriodo4;
				objetoPeriodo5.etiquetaX = _event.labelPeriodo5;
				arrReturn.addItem( objetoPeriodo5 );
				arrReturn.addItem( objetoPeriodo4 );
				arrReturn.addItem( objetoPeriodo3 );
				arrReturn.addItem( objetoPeriodo2 );
				arrReturn.addItem( objetoPeriodo1 );
				return arrReturn;
			}
			
			private function generateObjectItemBarChart( $lista:ArrayCollection):Object
			{
				var objetoReturn:Object = new Object();
				objetoReturn.piezas = 0;
				objetoReturn.pzasCanceladas = 0;
				objetoReturn.montoCanceladoMensual = 0;
				objetoReturn.montoPedidoMensual = 0;
				
				for( var m:int = 0; m < $lista.length;m++ )
				{
					var resumen:ResumenConsulta = $lista[m] as ResumenConsulta;
					
					if( resumen.conceptoResultado == "Pedido")
					{
						objetoReturn.piezas += resumen.piezasTotal;
						objetoReturn.montoPedidoMensual += resumen.total;
					}
					else if( resumen.conceptoResultado == "Cancelada" )
					{
						objetoReturn.pzasCanceladas += resumen.piezasTotal;
						objetoReturn.montoCanceladoMensual += resumen.total;
					}
				}
				objetoReturn.montoCanceladoMensualLabel = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objetoReturn.montoCanceladoMensual ) );
				objetoReturn.montoPedidoMensualLabel = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objetoReturn.montoPedidoMensual ) );
				return objetoReturn;
			}
			
			private function iniciarGrafica( $lista:ArrayCollection):ArrayCollection
			{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objeto:Object;
				var cuenta:int = 1;
				var resumen:ResumenConsulta;
				var m:int;
				
				if(_event != null && _event.parametros.periodo.toLowerCase() == "quincenal")
				{
					objeto = new Object();
					objeto.mes = _listaQuincenal[_event.parametros.rangoMinMes].valor;
					objeto.piezas = 0;
					objeto.pzasCanceladas = 0;
					objeto.montoCanceladoMensual = 0;
					objeto.montoPedidoMensual = 0;
					
					for( m = 0; m < $lista.length;m++ )
					{
						resumen = $lista[m] as ResumenConsulta;
						if( resumen.conceptoResultado == "Pedido")
						{
							objeto.piezas += resumen.piezasTotal;
							objeto.montoPedidoMensual += resumen.total;
						}
						else if( resumen.conceptoResultado == "Cancelada" )
						{
							objeto.pzasCanceladas += resumen.piezasTotal;
							objeto.montoCanceladoMensual += resumen.total;
						}
					}
					objeto.montoCanceladoMensualLabel = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objeto.montoCanceladoMensual ) );
					objeto.montoPedidoMensualLabel = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objeto.montoPedidoMensual ) );
					arrReturn.addItem(objeto);
				}
				else
				{
					while( cuenta < 13)
					{
						if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
						{
							objeto = new Object();
							objeto.mes = _listaMensual[cuenta -1];
							objeto.piezas = 0;
							objeto.pzasCanceladas = 0;
							objeto.montoCanceladoMensual = 0;
							objeto.montoPedidoMensual = 0;
							
							for( m = 0; m < $lista.length;m++ )
							{
								resumen = $lista[m] as ResumenConsulta;
								if(cuenta == resumen.mes)
								{
									if( resumen.conceptoResultado == "Pedido")
									{
										objeto.piezas += resumen.piezasTotal;
										objeto.montoPedidoMensual += resumen.total;
									}
									else if( resumen.conceptoResultado == "Cancelada" )
									{
										objeto.pzasCanceladas += resumen.piezasTotal;
										objeto.montoCanceladoMensual += resumen.total;
									}
								}
							}
							objeto.montoCanceladoMensualLabel = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objeto.montoCanceladoMensual ) );
							objeto.montoPedidoMensualLabel = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( Number( objeto.montoPedidoMensual ) );
							arrReturn.addItem(objeto);
						}
						cuenta++;
					}
				}
				return arrReturn;
			}
			/**
			 * SETTER RAGO MESES 
			 */
			private var _event:EventoTableroClientes;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			public function set recibirFiltros( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "PEDIDOS_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
			}
			
			public function set recibirFiltrosIndividual( $event:EventoTableroClientes ):void
			{
				if( $event == null )
					return;
				
				_event = $event;
				_minimoMeses = _event.parametros.rangoMinMes;
				_maximoMeses = _event.parametros.rangoMaxMes;
				
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "PEDIDOS_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
			}
			
			private function formateoEje($valor:Number, valorPrevio:Object, eje:Object):String
			{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = '$ ' + UtilsFormatosNumericos.precisionADosDecimalesConComas( $valor );
				return strRegreso;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String
			{
				return $etiqueta.toString().toUpperCase();
			}
			
		]]>
	</fx:Script>
	<graficaPie:contenido>
		<s:HGroup width="100%" height="100%" >
			<!-- CHART TODO -->
			<s:VGroup width="100%" height="100%" gap="0" >
				<mx:ColumnChart id="myChart" width="100%" height="100%"
								dataTipRenderer="{PedidosToolTip}"
								mouseSensitivity="5" 
								showDataTips="true" 
								showDataTipTargets="false" 
								dataTipMode="single" 
								paddingRight="40" paddingLeft="20"
								type="stacked"
								seriesFilters="[]"
								>
					<mx:series>
						<mx:ColumnSeries id="colBarRed"
										 yField="montoCanceladoMensual" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
										 />
						<mx:ColumnSeries id="colBarVerde"
										 yField="montoPedidoMensual" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
										 />
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="piezas" categoryField="mes" />
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="montos" title="Monto en DLS" baseAtZero="true" labelFunction="formateoEje" /> 
					</mx:verticalAxis>
					<mx:verticalAxisRenderers>
						<mx:AxisRenderer axis="{montos}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
					</mx:verticalAxisRenderers>
					<mx:horizontalAxisRenderers>
						<mx:AxisRenderer axis="{piezas}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
										 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
					</mx:horizontalAxisRenderers>
				</mx:ColumnChart>
			</s:VGroup>
		</s:HGroup>
	</graficaPie:contenido>
	<comun:espacioB>
		<!-- CHART COMPARAR -->
		<mx:ColumnChart id="myChart1" width="60%" height="100%"
						dataTipRenderer="{PedidosToolTip}"
						mouseSensitivity="5" 
						showDataTips="true" 
						showDataTipTargets="false" 
						dataTipMode="single" 
						paddingRight="40" paddingLeft="20"
						paddingBottom="70" 
						type="stacked"
						seriesFilters="[]"
						>
			<mx:series>
				<mx:ColumnSeries id="colBarRed1"
								 yField="montoCanceladoMensual" 
								 showDataEffect="{fxInterpolateIn}"
								 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"
								 />
				<mx:ColumnSeries id="colBarVerde1"
								 yField="montoPedidoMensual" 
								 showDataEffect="{fxInterpolateIn}"
								 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"
								 />
			</mx:series>
			<mx:horizontalAxis>
				<mx:CategoryAxis id="piezas1" categoryField="etiquetaX" />
			</mx:horizontalAxis>
			<mx:verticalAxis>
				<mx:LinearAxis id="montos1" title="Monto en DLS" baseAtZero="true" labelFunction="formateoEje" /> 
			</mx:verticalAxis>
			<mx:verticalAxisRenderers>
				<mx:AxisRenderer axis="{montos1}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
			</mx:verticalAxisRenderers>
			<mx:horizontalAxisRenderers>
				<mx:AxisRenderer axis="{piezas1}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
								 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
			</mx:horizontalAxisRenderers>
		</mx:ColumnChart>
	</comun:espacioB>			
</graficaPie:ContenedorComparacionTableroClientes>
