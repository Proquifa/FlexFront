<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:evento="skins.botones.evento.*"
		  width="100%" height="300" >
	<fx:Declarations>
		<s:Rotate3D id="rotateEffect" targets="{[button0,button1,button2,button3,button4,button5,button6,button7,button8,button9,button10,button11]}" 
					angleXFrom="0" angleXTo="360" 
					duration="3000"
					autoCenterTransform="true"
					repeatBehavior="reverse"
					effectEnd="rotateEffect.play();"
					/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.EffectEvent;
			
			import spark.effects.Rotate3D;
			private var count:int = 0;
			private var animatingTargets:Object = new Object();
			private var idBotonCicle:String;
			private var isAnimation:Boolean;
			private var idBoton:Array = new Array;
			private var arrayLetras:Array = ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","W","X","Y","Z"];
			
			
			public function stopSorteo( dato:int , folio:Array = null ):void
			{
				if( dato == 0){
					this.groupRandom.visible = this.groupRandom.includeInLayout = true;
					this.groupEstatico.visible = this.groupEstatico.includeInLayout = false;
				}else{
					this.groupRandom.visible = this.groupRandom.includeInLayout = false;
					this.groupEstatico.visible = this.groupEstatico.includeInLayout = true;			
				}
				
				if(folio != null && dato ==1){
					for (var i:int = 0; i < folio.length; i++) 
					{
						if( folio[i] != "-"){
							switch(i) 
							{
								case 0:{sbutton0.label = folio[i];break;}
								case 1:{sbutton1.label = folio[i];break;}
								case 2:{sbutton2.label = folio[i];break;}
								case 4:{sbutton3.label = folio[i];break;}
								case 5:{sbutton4.label = folio[i];break;}
								case 6:{sbutton5.label = folio[i];break;}
								case 7:{sbutton6.label = folio[i];break;}
								case 8:{sbutton7.label = folio[i];break;}
								case 9:{sbutton8.label = folio[i];break;}
								case 11:{sbutton9.label = folio[i];break;}
								case 12:{sbutton10.label = folio[i];break;}
								case 13:{sbutton11.label = folio[i];break;}
							}
						}
					}
					
					
				}
			}
			[Bindable]
			private var validaPrimera:Boolean = false;
			public function startSorteo():void
			{
				rotateEffect.play();
				/* if( !validaPrimera ){
					validaPrimera = true;
					animateStartTombola(count);
					count++;
					isAnimation = true;
					setTimeout(animacionDesencadenada,40);
				}else{
					stopSorteo( 0 );
				} */
				
			}
			
			protected function animacionDesencadenada():void
			{
 				  if(count<12){
					animateStartTombola(count);
					count++;
					setTimeout(animacionDesencadenada,40);
				}   
			}
			
			private function animateStartTombola(botonNumero:int):void
			{
				var efecto:Rotate3D = new Rotate3D;                
				efecto.angleXFrom=0;
				efecto.angleXTo=360;
				efecto.autoCenterTransform=true;
				efecto.repeatBehavior = "reverse" 
				efecto.duration=1000;
				efecto.addEventListener(EffectEvent.EFFECT_END,effectEndHandler); 
				efecto.addEventListener(EffectEvent.EFFECT_UPDATE,rotator_effectUpdateHandler); 
				switch(botonNumero)
				{
					case 0:{efecto.target = button0; animatingTargets[button0] = efecto; break;}
					case 1:{efecto.target = button1; animatingTargets[button1] = efecto; break;}
					case 2:{efecto.target = button2; animatingTargets[button2] = efecto; break;}
					case 3:{efecto.target = button3; animatingTargets[button3] = efecto; break;}
					case 4:{efecto.target = button4; animatingTargets[button4] = efecto; break;}
					case 5:{efecto.target = button5; animatingTargets[button5] = efecto; break;}
					case 6:{efecto.target = button6; animatingTargets[button6] = efecto; break;}
					case 7:{efecto.target = button7; animatingTargets[button7] = efecto; break;}
					case 8:{efecto.target = button8; animatingTargets[button8] = efecto; break;}
					case 9:{efecto.target = button9; animatingTargets[button9] = efecto; break;}
					case 10:{efecto.target = button10; animatingTargets[button10] = efecto; break;}
					case 11:{efecto.target = button11; animatingTargets[button11] = efecto; break;}
				}
				efecto.play();
			}
			
			private function animateCicleTombola():void
			{
				var effect:Rotate3D = new Rotate3D;           
				var currentButton:String;
				effect.angleXFrom=0;
				effect.angleXTo=360;
				effect.autoCenterTransform=true;
				effect.repeatBehavior = "reverse" ;
				effect.duration=1000;
				effect.addEventListener(EffectEvent.EFFECT_END,effectEndHandler); 
				effect.addEventListener(EffectEvent.EFFECT_UPDATE,rotator_effectUpdateHandler);
				
				if(idBoton.length>0){
					
					currentButton = idBoton[0];
					idBoton.shift()
					switch(currentButton)
					{
						case "button0":{effect.target = button0; animatingTargets[button0] = effect; break;}
						case "button1":{effect.target = button1; animatingTargets[button1] = effect; break;}
						case "button2":{effect.target = button2; animatingTargets[button2] = effect; break;}
						case "button3":{effect.target = button3; animatingTargets[button3] = effect; break;}
						case "button4":{effect.target = button4; animatingTargets[button4] = effect; break;}
						case "button5":{effect.target = button5; animatingTargets[button5] = effect; break;}
						case "button6":{effect.target = button6; animatingTargets[button6] = effect; break;}
						case "button7":{effect.target = button7; animatingTargets[button7] = effect; break;}
						case "button8":{effect.target = button8; animatingTargets[button8] = effect; break;}
						case "button9":{effect.target = button9; animatingTargets[button9] = effect; break;}
						case "button10":{effect.target = button10; animatingTargets[button10] = effect; break;}
						case "button11":{effect.target = button11; animatingTargets[button11] = effect; break;}
					}
					effect.play();
				}
			}
			private function effectEndHandler(event:EffectEvent):void
			{
				delete animatingTargets[event.effectInstance.target.id];
				idBoton.push(event.effectInstance.target.id);
				
				if(isAnimation)
					setTimeout(animateCicleTombola,20);
			}
			
			private function randomNumero(tipo:String):String
			{
				var randomNum:Number;
				
				if(tipo == "letras"){
					randomNum = Math.round( Math.random() * 25 );
					return arrayLetras[randomNum];
				}else{
					randomNum = Math.round( Math.random() * 9 );
					return randomNum.toString();
				}
			}
			
			protected function rotator_effectUpdateHandler(event:EffectEvent):void
			{
				switch(event.effectInstance.target.id)
				{
					case "button0":{button0.label = randomNumero("numeros");break;}
					case "button1":{button1.label = randomNumero("numeros");break;}
					case "button2":{button2.label = randomNumero("numeros");break;}
					case "button3":{button3.label = randomNumero("letras");break;}
					case "button4":{button4.label = randomNumero("letras");break;}
					case "button5":{button5.label = randomNumero("letras");break;}
					case "button6":{button6.label = randomNumero("letras");break;}
					case "button7":{button7.label = randomNumero("letras");break;}
					case "button8":{button8.label = randomNumero("numeros");break;}
					case "button9":{button9.label = randomNumero("numeros");break;}
					case "button10":{button10.label = randomNumero("numeros");break;}
					case "button11":{button11.label = randomNumero("numeros");break;}
				}
			}	
			
			
		]]>
	</fx:Script>
	
	
	<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" id="groupRandom" >
		<s:HGroup width="100%" height="135" horizontalAlign="center" gap="5" >
			<evento:buttonEventoColores id="button0" color="0x378899" fontSize="30" label="0" height="135" width="135"/>
			<evento:buttonEventoColores id="button1" color="0x378899" fontSize="45" label="0" height="135" width="135"/>
			<evento:buttonEventoColores id="button2" color="0x378899" fontSize="30" label="0" height="135" width="135" />
			<s:VGroup width="70" height="135" paddingLeft="10" paddingRight="10" verticalAlign="middle">
				<s:Group width="100%" height="30" >
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="0xFFFFFF" />
						</s:fill>
					</s:Rect>
				</s:Group>  
			</s:VGroup>
			<evento:buttonEventoColores id="button3" color="0x378899" fontSize="30" height="135" width="135" label="G" />
			<evento:buttonEventoColores id="button4" color="0x378899" fontSize="30" height="135" width="135" label="D" />
			<evento:buttonEventoColores id="button5" color="0x378899" fontSize="30" height="135" width="135" label="L"/>
			<s:VGroup width="70" height="135" paddingLeft="10" paddingRight="10" verticalAlign="middle">
				<s:Group width="100%" height="30" >
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="0xFFFFFF" />
						</s:fill>
					</s:Rect>
				</s:Group>  
			</s:VGroup>
			<evento:buttonEventoColores id="button6" color="0x378899" fontSize="30" height="135" width="135" label="U" />
			<evento:buttonEventoColores id="button7" color="0x378899" fontSize="30" height="135" width="135" label="F"/>
			<evento:buttonEventoColores id="button8" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
			<evento:buttonEventoColores id="button9" color="0x378899" fontSize="30" height="135" width="135" label="0"/>
			<evento:buttonEventoColores id="button10" color="0x378899" fontSize="30" height="135" width="135" label="1"/>
			<evento:buttonEventoColores id="button11" color="0x378899" fontSize="30" height="135" width="135" label="4"/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" id="groupEstatico" visible="false" includeInLayout="false">
		<s:HGroup width="100%" height="135" horizontalAlign="center" gap="5" >
			<evento:buttonEventoColores id="sbutton0" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
			<evento:buttonEventoColores id="sbutton1" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
			<evento:buttonEventoColores id="sbutton2" color="0x378899" fontSize="30" height="135" width="135" label="2" />
			<s:VGroup width="70" height="135" paddingLeft="10" paddingRight="10" verticalAlign="middle">
				<s:Group width="100%" height="30" >
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="0xFFFFFF" />
						</s:fill>
					</s:Rect>
				</s:Group>  
			</s:VGroup>
			<evento:buttonEventoColores id="sbutton3" color="0x378899" fontSize="30" height="135" width="135" label="A"/>
			<evento:buttonEventoColores id="sbutton4" color="0x378899" fontSize="30" height="135" width="135" label="A"/>
			<evento:buttonEventoColores id="sbutton5" color="0x378899" fontSize="30" height="135" width="135" label="A"/>
			<s:VGroup width="70" height="135" paddingLeft="10" paddingRight="10" verticalAlign="middle">
				<s:Group width="100%" height="30" >
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor color="0xFFFFFF" />
						</s:fill>
					</s:Rect>
				</s:Group>  
			</s:VGroup>
			<evento:buttonEventoColores id="sbutton6" color="0x378899" fontSize="30" height="135" width="135" label="A"/>
			<evento:buttonEventoColores id="sbutton7" color="0x378899" fontSize="30" height="135" width="135" label="A"/>
			<evento:buttonEventoColores id="sbutton8" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
			<evento:buttonEventoColores id="sbutton9" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
			<evento:buttonEventoColores id="sbutton10" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
			<evento:buttonEventoColores id="sbutton11" color="0x378899" fontSize="30" height="135" width="135" label="2"/>
		</s:HGroup>
	</s:VGroup>
	
</s:Group>
