<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.ProductoAlmacen;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Producto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.ListEvent;
			[Bindable]
			private var _productoAlmacen:ProductoAlmacen;
			[Bindable]
			private var _productosAlmacen:ArrayCollection;
			
			/**
			 * Recibe la inyeccion q trae todos los datos del producto almacen
			 */
			public function set recibeProductosAlmacenPorAvanzada ( productos:ArrayCollection ):void{
				if(productos == null){
					return;
				}
				this._productosAlmacen = productos;
				for(var i:int = 0; i < this._productosAlmacen.source.length; i++ ){
					(this._productosAlmacen.getItemAt(i) as ProductoAlmacen).numeroDeFila = i+1;
				}
				this.gridResultados.dataProvider = this._productosAlmacen;
			}
			
			/**
			 * Recibe la inyeccion q trae todos los datos del producto almacen
			 */
			public function set recibeProductoAlmacen ( producto:ProductoAlmacen ):void{
				if(producto == false){
					return;
				}				
				this._productoAlmacen = producto;
				this._productoAlmacen.numeroDeFila = 1;
				this.gridResultados.dataProvider = this._productoAlmacen;
			}	

			
			/**
			 * Con esta funcion se muestra el Nombre del cliente
			 */
			private function mostrarNombreCliente(objeto:Object, columna:DataGridColumn):String{
				var productoAlmacen:ProductoAlmacen = objeto as ProductoAlmacen;
				var cliente:Cliente = productoAlmacen.cliente;
				return cliente.nombre;						
			}
			
			/**
			 * Con esta funcion se muestra la descripción del producto
			 */
			private function mostrarDescripcionProducto(objeto:Object, columna:DataGridColumn):String{
				var productoAlmacen:ProductoAlmacen = objeto as ProductoAlmacen;
				var producto:Producto = productoAlmacen.producto;
				return producto.descripcion;
			}
			
			/**
			 * Con esta funcion se muestra la ubicación de una partida de compra de un Producto almacen
			 */
			private function mostrarUbicacionProducto(objeto:Object, columna:DataGridColumn):String{
				var productoAlmacen:ProductoAlmacen = objeto as ProductoAlmacen;
				var partidaCompra:PartidaCompra = productoAlmacen.pcompra;
				return partidaCompra.ubicacion;
			}
					
			/**
			 * Con esta funcion se muestra el control de una partida de compra de un Producto almacen
			 */
			private function mostrarControlProducto(objeto:Object, columna:DataGridColumn):String{
				var productoAlmacen:ProductoAlmacen = objeto as ProductoAlmacen;
				var producto:Producto = productoAlmacen.producto;
				return producto.control;
			}
			
			/**
			 * Con esta funcion se muestra el manejo de una partida de compra de un Producto almacen
			 */
			private function mostrarManejoProducto(objeto:Object, columna:DataGridColumn):String{
				var productoAlmacen:ProductoAlmacen = objeto as ProductoAlmacen;
				var partidaCompra:Producto = productoAlmacen.producto;
				return partidaCompra.manejo;
			}

			/**
			* Con esta funcion le damos formato a las fechas del grid
			*/
			private function mostrarFormatoDeFecha(objeto:Object, columna:DataGridColumn):String{
			    var fechaDeInspeccion:ProductoAlmacen = objeto as ProductoAlmacen;
			    var formatoDeFecha:String = new String;
			    formatoDeFecha = formatDate.format( fechaDeInspeccion.fechaInspeccion ); 
			    var horas:Number = fechaDeInspeccion.fechaInspeccion.getHours();
			    var minutos:Number = fechaDeInspeccion.fechaInspeccion.getMinutes();
			    if(horas < 10){
			    	formatoDeFecha = formatoDeFecha + " 0" + horas.toString(); 
			    }else{
			    	formatoDeFecha = formatoDeFecha + " " + horas.toString(); 
			    }
			    
			    if(minutos < 10){
			    	formatoDeFecha = formatoDeFecha + ":0" + minutos.toString(); 
			    }else{
			    	formatoDeFecha = formatoDeFecha + ":" + minutos.toString(); 
			    }
			       
			    return formatoDeFecha;    
			}
			
			private function createToolTip(event:ListEvent):void {			
				if(event.columnIndex == 11){
					gridResultados.toolTip = "Orden de compra";
				}
				if(event.columnIndex == 12){
					gridResultados.toolTip = "Producto interno";
				}
				
			}
	
			private function deleteToolTip(obj:Object):void {
				gridResultados.toolTip = null;
			}

			private function itemClickEvent(event:ListEvent):void{
		/* 		if(event.columnIndex == 16 ){
					var verPDF:VisorPDF;
					verPDF = VisorPDF(PopUpManager.createPopUp(this, VisorPDF, true));
					verPDF.folio = this.gridResultados.selectedItem.packingList
					verPDF.tipoDocto = "packingList"
					PopUpManager.centerPopUp( verPDF );
				} */	        	
					var tipoDocumento:String;
					var folioDocumento:String;
					var urlreq:URLRequest;
					var ruta:String;
     		     
					if (event.columnIndex == 16 ){
						ruta = RutasPdF.GENERAL_RUTA + this.gridResultados.selectedItem.packingList +".PDF";
						urlreq = new URLRequest ( ruta );	
					}	
					navigateToURL( urlreq );
			}

		]]>
	</mx:Script>
	<mx:DataGrid id="gridResultados" width="100%" height="100%" itemRollOut="deleteToolTip(event)" itemRollOver="createToolTip(event)" itemClick="itemClickEvent(event)">
		<mx:columns>
			<mx:DataGridColumn headerText="#" width=".04" dataField="numeroDeFila"/>
			<mx:DataGridColumn headerText="Folio de despacho" width=".14" dataField="folioFD"/>
			<mx:DataGridColumn headerText="Tipo" width=".08" dataField="tipo"/>
			<mx:DataGridColumn headerText="Estatus" width=".1" dataField="estatus"/>
			<mx:DataGridColumn headerText="Descripción" width=".1" labelFunction="mostrarDescripcionProducto"/>
			<mx:DataGridColumn headerText="Cantidad" width=".08" dataField="cantidad"/>
			<mx:DataGridColumn headerText="Destino" width=".09" dataField="destino"/>
			<mx:DataGridColumn headerText="Cliente" width=".1" labelFunction="mostrarNombreCliente"/>
			<mx:DataGridColumn headerText="Manejo" width=".1" labelFunction="mostrarManejoProducto"/>
			<mx:DataGridColumn headerText="Control" width=".08" labelFunction="mostrarControlProducto"/>
			<mx:DataGridColumn headerText="Ubicación" width=".1" labelFunction="mostrarUbicacionProducto"/>
			<mx:DataGridColumn headerText="OC" width=".1" dataField="folioOC"/>
			<mx:DataGridColumn headerText="PI" width=".1" dataField="folioPI"/>
			<mx:DataGridColumn headerText="F. Inspección" width=".12" dataField="fechaInspeccion" labelFunction="mostrarFormatoDeFecha"/>
			<mx:DataGridColumn headerText="Inspeccionó" width=".07" dataField="inspector"/>
			<mx:DataGridColumn headerText="Lote inspección" width=".1" dataField="loteInspeccion"/>
			<mx:DataGridColumn headerText="PackingList" width=".13" dataField="packingList">
				<mx:itemRenderer>
					<mx:Component>
						<mx:LinkButton label="{data.packingList}" color="#0033FF" toolTip="Ver packingList"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<mx:DateFormatter id="formatDate" formatString="DD-MMM-YYYY"/>
</mx:VBox>
