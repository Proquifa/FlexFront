<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:mate="http://mate.asfusion.com/">
	<mx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.ModeloPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.componentesExtras.DetallePonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.componentesExtras.EficienciaPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.componentesExtras.GridPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.componentesExtras.ImplicadosPonderacion;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.incidente.componentesExtras.PopUpColaboradores;
			
		]]>
	</mx:Script>
	<mate:Debugger level="{Debugger.ALL}"/>
	<mate:EventHandlers type="{EventoPonderacion.TRAER_PONDERACION}">
		<mate:RemoteObjectInvoker destination="{Destinos.INCIDENTE_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerIncidentesXPonderar"
								  showBusyCursor="true"
								  arguments="{event._usuario}">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="result_obtenerPonderacion"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="fault_obtenerPonderacion"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	<mate:EventHandlers type="{EventoPonderacion.OBTENER_PONDERACION}">
		<mate:MethodInvoker generator="{ModeloPonderacion}"
							method="result_IncidenteSeleccionado"
							arguments="{event._incidente}"/>
	</mate:EventHandlers>
	
	<!--<mate:EventHandlers type="{EventoPonderacion.PASAR_ACCIONES_PONDERACION}">
	<mate:MethodInvoker generator="{ModeloPonderacion}"
	method="result_PasarAccionesPonderacion"
	/>
	</mate:EventHandlers>-->
	
	<mate:EventHandlers type="{EventoPonderacion.TRAER_PONDERACION_CON_INCIDENTE}">
		<mate:RemoteObjectInvoker destination="{Destinos.PONDERACION_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerPonderacionXIdIncidente"
								  showBusyCursor="true"
								  arguments="{event._incidente.idIncidente}">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="result_ponderacionIncidente"
									arguments="{[resultObject,event._incidente.idPendiente]}"/>
				
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="fault_ponderacionIncidente"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	
	<!--<mate:EventHandlers type="{EventoPonderacion.TRAER_IMPLICADOS_PONDERACION}">
	<mate:RemoteObjectInvoker destination="{Destinos.PONDERACION_SERVICE}"
	endpoint="{Destinos.END_POINT}"
	method="obtenerPonderacionXIdIncidente"
	showBusyCursor="true"
	arguments="{event._ponderacion.idIncidente}">
	<mate:resultHandlers>
	<mate:MethodInvoker generator="{ModeloPonderacion}"
	method="result_obtenerImplicados"
	arguments="{resultObject}"/>
	</mate:resultHandlers>
	<mate:faultHandlers>
	<mate:MethodInvoker generator="{ModeloPonderacion}"
	method="fault_obtenerImplicados"
	arguments="{fault}"/>
	</mate:faultHandlers>
	</mate:RemoteObjectInvoker>
	</mate:EventHandlers>-->
	
	<mate:EventHandlers type="{EventoPonderacion.TRAER_IMPLICADOS_PONDERACION}">
		<mate:MethodInvoker generator="{ModeloPonderacion}"
							method="result_obtenerImplicados"
							arguments="{event._ponderacion}"/>
	</mate:EventHandlers>
	
	<mate:EventHandlers type="{EventoPonderacion.TRAER_COLABORADORES_PONDERACION}">
		<mate:RemoteObjectInvoker destination="{Destinos.EMPLEADO_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerEmpleadosSGC"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="result_obtenerColaboradores"
									arguments="{resultObject}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="fault_obtenerColaboradores"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	
	<mate:EventHandlers type="{EventoPonderacion.OBTENER_TODOS_COLABORADORES_PONDERACION}">
		<mate:MethodInvoker generator="{ModeloPonderacion}"
							method="result_todos_colaboradores"
							arguments="{event._ponderacion.implicados}"/>
	</mate:EventHandlers>
	
	
	<mate:EventHandlers type="{EventoPonderacion.ACTUALIZAR_PONDERACION}">
		<mate:RemoteObjectInvoker destination="{Destinos.PONDERACION_SERVICE}"
								  endpoint="{Destinos.END_POINT}"
								  method="actualizarPonderacion"
								  arguments="{event._ponderacion}"
								  showBusyCursor="true">
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="result_actualizarponderacion"
									arguments="{[resultObject,event._ponderacion,event.accion]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloPonderacion}"
									method="fault_actualizarponderacion"
									arguments="{fault}"/>
			</mate:faultHandlers>
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	<!--<mate:EventHandlers type="{EventoPonderacion.MODIFICAR_IMPLICADOS_PONDERACION}">
	<mate:MethodInvoker generator="{ModeloPonderacion}"
	method="agregar_implicados"
	arguments="{event._implicados}"/>
	</mate:EventHandlers>-->
	
	
	<!--<mate:EventHandlers type="{EventoPonderacion.ACTUALIZAR_PONDERACION_IMPLICADOS}">
	<mate:RemoteObjectInvoker destination="{Destinos.PONDERACION_SERVICE}"
	endpoint="{Destinos.END_POINT}"
	method="actualizarPonderacion"
	arguments="{event._ponderacion}"
	showBusyCursor="true">
	<mate:resultHandlers>
	<mate:MethodInvoker generator="{ModeloPonderacion}"
	method=""
	arguments=""/>
	</mate:resultHandlers>
	<mate:faultHandlers>
	<mate:MethodInvoker generator="{ModeloPonderacion}"
	method=""
	arguments=""/>
	</mate:faultHandlers>
	</mate:RemoteObjectInvoker>
	</mate:EventHandlers>-->
	
	
	
	
	<mate:Injectors target="{GridPonderacion}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_obtenerPonderacion" targetKey="recibir_IncidentesPonderacion"/>
	</mate:Injectors>
	
	
	
	
	
	
	<!--<mate:Injectors target="{EficienciaPonderacion}">
	<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_AccionesIncidente" targetKey="recibir_AccionesIncidente"/>
	</mate:Injectors>-->
	
	<mate:Injectors target="{EficienciaPonderacion}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_ponderacionIncidente" targetKey="recibir_PonderacionIncidente"/>
	</mate:Injectors>
	
	<!--el inyector de abajo fue agregado por osva para enviar la ponderacion a detallePonderacion en vez de la eficacia para eliminar el grid-->
	
	<mate:Injectors target="{DetallePonderacion}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_ponderacionIncidente" targetKey="recibir_PonderacionIncidente"/>
	</mate:Injectors>
	
	
	<mate:Injectors target="{ImplicadosPonderacion}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_implicados" targetKey="recibir_Implicados"/>
	</mate:Injectors>
	
	<mate:Injectors target="{PopUpColaboradores}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_todos_colaboradores" targetKey="recibir_Colaboradores">
		</mate:PropertyInjector>
	</mate:Injectors>
	
	<mate:Injectors target="{DetallePonderacion}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_IncidenteSeleccionado" targetKey="recibir_IncidenteSeleccionado"/>
	</mate:Injectors>
	
	<mate:Injectors target="{DetallePonderacion}">
		<mate:PropertyInjector source="{ModeloPonderacion}" sourceKey="return_actualizarponderacion" targetKey="recibir_actualizarponderacion"/>
	</mate:Injectors>
	
</mate:EventMap>
