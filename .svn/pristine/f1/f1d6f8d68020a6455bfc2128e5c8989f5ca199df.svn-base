<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:pqNet="skins.botones.pqNet.*"
		 width="100%" height="100%"
		 resize="calcular(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.OrdenDespacho;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			
			private var _file:File;
			[Bindable]
			public var gapControl:Number = 50;
			[Bindable]
			public var widModificado:int = 785;
			[Bindable]
			public var heiModificado:int = 900;
			[Bindable] private var numeroActual:Number;
			[Bindable]private var numeroMax:Number;
 			private var _arregloImagenes:ArrayCollection = new ArrayCollection();
			private var _tipo:String;
			private var _byteArray:ByteArray;
			private var _currentOrdenDespacho:OrdenDespacho;
			private var _noPedimento:String;
			
			public var variacionW:int = 142.5;
			public var variacionH:int = 158.75;
			
			[Bindable]public var widthImagen:Number;
			[Bindable]public var heightImagen:Number;
			[Bindable]public var font25:Number;
			[Bindable]public var espacio1:Number;
			[Bindable]public var espacio2:Number;
			[Bindable]public var hightImagen:Number;
			public var completo:Boolean;
			public var archivoCargado:Boolean = false;
			
			[Bindable]
			public function get arregloImagenes():ArrayCollection
			{
				return _arregloImagenes;
			}

			public function set arregloImagenes(value:ArrayCollection):void
			{
				if(value == null)
					value = new ArrayCollection();
				else{
					archivoCargado = true;
					grupCargar.visible= grupCargar.includeInLayout = false;
					grupImagen.visible= grupImagen.includeInLayout = true;					
					_arregloImagenes = value;
					recibirImagenes();
				}
			}

			public function get noPedimento():String
			{
				return _noPedimento;
			}
			
			public function set noPedimento(value:String):void
			{
				_noPedimento = value;
			}
			
			[Bindable]
			public function get currentOrdenDespacho():OrdenDespacho
			{
				return _currentOrdenDespacho;
			}
			
			public function set currentOrdenDespacho(value:OrdenDespacho):void
			{
				_currentOrdenDespacho = value;
			}
			
			public function get byteArray():ByteArray
			{
				return _byteArray;
			}
			
			public function set byteArray(value:ByteArray):void
			{
				_byteArray = value;
			}
			
			public function get tipo():String
			{
				return _tipo;
			}
			
			public function set tipo(value:String):void
			{
				_tipo = value;
			}
			
			public function get file():File
			{
				return _file;
			}
			
			public function set file(value:File):void
			{
				_file = value;
			}
			
			public function cargarArchivos(event:MouseEvent):void
			{
				var docFilter:FileFilter;
				file = new File();
				file.addEventListener(Event.SELECT, selectHandler);
				file.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
				file.addEventListener(ProgressEvent.PROGRESS,progressHandler);
				file.addEventListener(Event.COMPLETE,completeHandler);
				docFilter = new FileFilter("Images", "*.jpg;*.png");
				file.browse([docFilter])
			}
			private function selectHandler(event:Event):void
			{
				var file:FileReference = FileReference(event.target);
				file.load();
			}
			private function ioErrorHandler(event:IOErrorEvent):void
			{
				trace("ioErrorHandler: " + event);
			}
			
			private function progressHandler(event:ProgressEvent):void
			{
				var file:FileReference = FileReference(event.target);
				trace("progressHandler: name=" + file.name + "bytesLoaded = " + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
			}
			
			private function completeHandler(event:Event):void
			{
				trace("ARCHIVO CARGADO: " + event);
				
				try
				{
					var img:Loader = new Loader();
					
					imagenVisualizaId.source = event.target.data;
					byteArray = event.target.data;
					grupCargar.visible= grupCargar.includeInLayout = false;
					grupImagen.visible= grupImagen.includeInLayout = true;
					archivoCargado = true;
					_arregloImagenes.addItem(byteArray);
					recibirImagenes();
				}
				catch (error:*){
					alertaSingleton.show("No se encontro archivo");
				}
			}
			
			public function decrementaZoom():void
			{
				if(widModificado > 300 && heiModificado > 300){
					heiModificado = heiModificado - variacionH;
					widModificado = widModificado - variacionW;
				}
			}
			public function incrementaZoom():void
			{
				if(widModificado <= 1160 && heiModificado <= 1280 ){
					widModificado = widModificado + variacionW;
					heiModificado = heiModificado + variacionH;
				}
			}
			
			protected function scrollId_mouseWheelHandler(event:MouseEvent):void
			{
				event.delta = event.delta > 0 ? .5 : -1;
			}
			
			protected function aumentarHoja():void
			{
				if(numeroActual < numeroMax - 1)
				{
					numeroActual++;
					imagenVisualizaId.source = _arregloImagenes[numeroActual];
				}
			}
			protected function restarHoja():void
			{
				if(numeroActual > 0)
				{
					numeroActual--;
					imagenVisualizaId.source = _arregloImagenes[numeroActual];
				}
			}
			public function loaded(e:Event):void
			{
				var bitmap:Bitmap = e.target.content;
				imagenVisualizaId.source = bitmap;
				e.target.removeEventListener(Event.COMPLETE,loaded);
				grupCargar.visible= grupCargar.includeInLayout = false;
				grupImagen.visible= grupImagen.includeInLayout = true;
				archivoCargado = true;
			}
			
			protected function calcular(event:ResizeEvent):void
			{
				if(tipo == "cargar_evidencia"){
					widthImagen = (216/694) * (unscaledWidth);
					heightImagen = (188/935) * (unscaledHeight);
					
					widthImagen = widthImagen > 216 ? 216:widthImagen;
					widthImagen = widthImagen < 108 ? 108:widthImagen;
					heightImagen = heightImagen > 188 ? 188:heightImagen;
					heightImagen = heightImagen < 94 ? 84:heightImagen;
				}
				else if(tipo == "cargar_pedimento"){
					widthImagen = (204/694) * (unscaledWidth);
					heightImagen = (264/935) * (unscaledHeight);
					
					widthImagen = widthImagen > 204 ? 204:widthImagen;
					widthImagen = widthImagen < 102 ? 102:widthImagen;
					heightImagen = heightImagen > 264 ? 264:heightImagen;
					heightImagen = heightImagen < 135 ? 135:heightImagen;
				}
				font25 = (25/974) * (unscaledWidth);
				
				font25 = font25 > 25 ? 25:font25;
				font25 = font25 < 18 ? 18:font25;
				
				
				espacio1 = (20/935) * (unscaledHeight);
				espacio1 = espacio1 > 20 ? 20:espacio1;
				espacio1 = espacio1 < 8 ? 8:espacio1;
				espacio2 = (30/935) * (unscaledHeight);
				espacio2 = espacio2 > 30 ? 30:espacio2;
				espacio2 = espacio2 < 15 ? 15:espacio2;
				
				hightImagen = (255/935) * (unscaledHeight);
				hightImagen = hightImagen > 255 ? 255:hightImagen;
				hightImagen = hightImagen < 134 ? 134:hightImagen;
				
				gapControl = (50/935) * (unscaledHeight);
				gapControl = gapControl > 50 ? 50:gapControl;
				gapControl = gapControl < 5 ? 5:gapControl;
			}
			
			public function reset():void
			{
				byteArray = null;
				archivoCargado = false;
				grupCargar.visible= grupCargar.includeInLayout = true;
				grupImagen.visible= grupImagen.includeInLayout = false;
				_arregloImagenes = new ArrayCollection();
			}
			
			public function recibirImagenes():void
			{
				if (_arregloImagenes == null || _arregloImagenes.length == 0) {
					grupCargar.visible= grupCargar.includeInLayout = true;
					grupImagen.visible= grupImagen.includeInLayout = false;
				}
				numeroActual = 0; 
				/*arregloImagenes = new ArrayCollection();*/
				
				if(_arregloImagenes.length > 0)
				{
					if(_arregloImagenes.length > 1)
					{
						imgHojaMas.visible = imgHojaMas.includeInLayout = true;
						imgHojaMenos.visible = imgHojaMenos.includeInLayout = true;
					}
					else
					{
						imgHojaMas.visible = imgHojaMas.includeInLayout = false;
						imgHojaMenos.visible = imgHojaMenos.includeInLayout = false;
					}
					
					numeroMax = _arregloImagenes.length;
					imagenVisualizaId.source = _arregloImagenes[0];
					completo = true;
					dispatchEvent(new Event("arribadoListo"));
					/*arregloImagenes = ObjectUtil.copy(arregloImagenes) as ArrayCollection;*/
				}
				else
				{
					imgHojaMas.visible = imgHojaMas.includeInLayout = false;
					imgHojaMenos.visible = imgHojaMenos.includeInLayout = false;
					completo = false;
					dispatchEvent( new Event("desarribadoListo") );
				}
				
				var eve:Event = new Event("verificarGuia");
				 dispatchEvent(eve);
			}
			
			protected function eliminarSeleccionada(event:MouseEvent):void
			{
				_arregloImagenes.removeItemAt(numeroActual);
				recibirImagenes();
			}
			
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
		<s:Group width="100%" height="100%" >
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#f3f3f4" />
				</s:fill>
			</s:Rect>
			<s:VGroup gap="0" id="grupCargar" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="true" includeInLayout="true">
				<s:VGroup width="100%"  verticalAlign="middle" horizontalAlign="center">
					<mx:Image source="{catalogoIconosBotones.getInstance().cargar_evidencia}" horizontalCenter="0" verticalCenter="0" width="{widthImagen}" height="{heightImagen}"
							  click="cargarArchivos(event)" buttonMode="true"/>
				</s:VGroup>  
				<s:Spacer height="{espacio1}" />
				<s:Label styleName="tab_texto_14_Helvetica" text=".png / .jpg" color="#888888" fontSize="{font25}" width="100%" maxDisplayedLines="2" textAlign="center"/>
				<s:Spacer height="{espacio2}" />
				<s:Label styleName="tab_texto_14_Helvetica" text="Cargar fotografÃ­a de paquete sellado" color="#888888" fontSize="{font25}" width="100%" maxDisplayedLines="2" textAlign="center"/>
			</s:VGroup>
			<s:VGroup id="grupImagen" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="false" includeInLayout="false">
				
				<s:Scroller width="100%" height="100%" maxWidth="935" maxHeight="962" id="scrollId" mouseWheel="scrollId_mouseWheelHandler(event)">
					<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >						
						<mx:Image id="imagenVisualizaId" width="{widModificado}" height="{heiModificado}" horizontalAlign="center" verticalAlign="middle"/>
					</s:VGroup>  					
				</s:Scroller>
				
				<s:Group width="100%" height="5%" bottom="20">
					<s:VGroup width="100%" height="100%"  gap="{gapControl}">
						<s:HGroup gap="0" width="100%" horizontalAlign="center" verticalAlign="middle">
							<s:Group click="restarHoja()">
								<mx:Image id="imgHojaMenos" source="{catalogoIconosBotones.getInstance().pagina_anterior}"  smoothBitmapContent="true" visible="false"/>
							</s:Group>
							<s:Spacer width="10" />
							<s:Label styleName="Texto_12" text="{' '+(numeroActual + 1).toString() + ' / ' + numeroMax+' '}" paddingTop="0"/>
							<s:Spacer width="10" />
							<s:Group click="aumentarHoja()">
								<mx:Image id="imgHojaMas" source="{catalogoIconosBotones.getInstance().pagina_siguiente}"  smoothBitmapContent="true" visible="false"/>
							</s:Group>
						</s:HGroup>
						
						<s:HGroup gap="5" width="100%" horizontalAlign="center" id="grpZoom">
							<s:Group click="decrementaZoom()">
								<mx:Image id="imgZoomMenos" source="{catalogoIconosBotones.getInstance().zoom_menos}"  smoothBitmapContent="true" />
							</s:Group>
							<s:Group click="incrementaZoom()">
								<mx:Image id="imgZoomMas" source="{catalogoIconosBotones.getInstance().zoom_mas}"  smoothBitmapContent="true"/>
							</s:Group>
						</s:HGroup>
					</s:VGroup>  
					
					<!--<pqNet:botonPqNetLargo  id="btnRecargar"  width="35" right="20" icono="recargarImg" 
											colorBase="0x{catalogoColores.BTN_VERDE_AZUL}" click="cargarArchivos(event)"/>-->
					<s:HGroup width="100%" horizontalAlign="center" left="20" right="20" y="{(grpZoom.y)-(grpZoom.height/2)}">
						
						<mx:Image id="imageEliminar" source="{catalogoIconosBotones.getInstance().basura_cuadrado}" click="eliminarSeleccionada(event)"/>
						<s:Spacer width="100%" />
						<mx:Image id="imageCargar" source="{catalogoIconosBotones.getInstance().tomar_foto}" click="cargarArchivos(event)"/>
					</s:HGroup>  
					
					
				</s:Group>
			</s:VGroup>
			
		</s:Group>
		
	</s:HGroup>
</s:Group>
