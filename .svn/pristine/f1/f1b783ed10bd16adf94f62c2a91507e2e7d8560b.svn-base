<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false"
				resize="renderer_resizeHandler(event)"
				width="80" height="100%"
				depth="51"
				xmlns:label="skins.skin.label.*"
				>
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			
			import mx.charts.ColumnChart;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.events.ResizeEvent;
			
			private const SIZE_TRIANGULO:int = 65;
			private const wTRIANGULO:int = 45;
			
			protected function renderer_resizeHandler(event:ResizeEvent):void
			{
				if (data.item && data.item.valor > 0 ){
					rectGreen.percentHeight = data.item.valor; //MAX = 99%
					txtGreenText.percentHeight = data.item.valor - 1;
					txtRedText.percentHeight = (104 - data.item.valor);
					if ( data.item.valor > 96 )
					{
						txtRedText.visible = false;
					}
					else
					{
						txtRedText.visible = true;
					}
				}
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				gph.graphics.clear();
				if (data.item && data.item.indicador > 0 ){
					if(data.item.valor == 0){
						rectGreen.visible = false;
						txtGreenText.visible = false;
						txtRedText.visible = true;
					}
					else{
						rectGreen.visible = true;
						txtGreenText.visible = true;
						if(data.item.valor < 6){
							rectGreen.percentHeight = 1; //MAX = 99%
						}
						else{
							rectGreen.percentHeight = data.item.valor
						}
						txtGreenText.percentHeight = data.item.valor - 1; //Etiqueta 
						txtRedText.percentHeight = (104 - data.item.valor); //Etiqueta
						if ( data.item.valor > 96 )
						{
							txtRedText.visible = false;
							txtGreenText.visible = true;
						}
						else if( data.item.valor < 4)
						{
							txtRedText.visible = true;
							txtGreenText.visible = false;
						}
						else{
							txtRedText.visible = true;
							txtGreenText.visible = true;
						}
						customPosition();
					}
				}
			}
			
			private function customPosition():void{
				
				if ((this.automationOwner as ColumnSeries).items && (this.automationOwner as ColumnSeries).items.length > 0){
					
					var item:ColumnSeriesItem = (this.automationOwner as ColumnSeries).items[0];
					if (item.itemRenderer )
					{
						var _x:int = x;
						var _y:int = y;
						var xOrigen:Number = wTRIANGULO + wTRIANGULO/2;
						var yOrigen:Number = SIZE_TRIANGULO/2;
						
						var porcentajeMinimo:Number = 0;
						
						if(item.item.valor > 9){
							porcentajeMinimo = (100 - item.item.valor );
						}
						else{
							porcentajeMinimo = (100 - 8);
						}
						var moverPosicion:Number = (grpMain.height * porcentajeMinimo)/100;
						
						var pt : Point = new Point(item.x, item.y);
						var xI:Number = ((this.automationOwner as ColumnSeries).automationOwner as ColumnChart).contentToLocal(pt).x;
						var yI:Number = ((this.automationOwner as ColumnSeries).automationOwner as ColumnChart).contentToGlobal(pt).y;
						pt = new Point(item.itemRenderer.x, item.itemRenderer.y);
						var xR:Number = ((this.automationOwner as ColumnSeries).automationOwner as ColumnChart).contentToLocal(pt).x;
						var yR:Number = ((this.automationOwner as ColumnSeries).automationOwner as ColumnChart).contentToGlobal(pt).y;
						
						_x = xI - (xI - xR) - wTRIANGULO;
						_y = moverPosicion +8; //yI + moverPosicion - (this.height/2) + 10;
						
						_x = _x < 0 ? _x * -1 : _x;
						
						
						gph.graphics.beginFill(0x3399af);
						gph.graphics.moveTo(-wTRIANGULO/2, _y - yOrigen);
						gph.graphics.lineTo(-wTRIANGULO/2, _y + yOrigen);
						gph.graphics.lineTo(wTRIANGULO/2, _y);
						gph.graphics.lineTo(-wTRIANGULO/2, _y - yOrigen);
						gph.graphics.endFill();
						
						
						porcentaje.text = item.item.valor + '%';
						//porcentaje.text = Util.formatoHorasIndicador(item.item.valor);
						porcentaje.x = -wTRIANGULO/2 + 2;
						porcentaje.y = _y - 6;
					}
					
				} 
			}
			
		]]>
	</fx:Script>
	
	
	<s:Group id="grpMain" width="100%" height="96%" maxWidth="80" bottom="0">
		
		<s:Rect id="rectGris" width="100%" height="100%" horizontalCenter="0" depth="51" radiusX="35" bottom="0" >
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="#eaeaea" />
					<s:GradientEntry color="#eaeaea" alpha="0" />
					<s:GradientEntry color="#eaeaea" alpha="0" />
					<s:GradientEntry color="#eaeaea" alpha="0" />
				</s:LinearGradient>
			</s:fill>
			
		</s:Rect>
		<s:Group width="75%" height="100%" horizontalCenter="0" depth="51" bottom="0">
		<s:Rect id="rectRed" width="100%" height="99%" horizontalCenter="0" depth="51" radiusX="30" bottom="0" >
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="#e80404" />
					<s:GradientEntry color="#d80303" />
					<s:GradientEntry color="#b90303" />
					<s:GradientEntry color="#a40403" />
				</s:LinearGradient>
			</s:fill>
			
			<s:stroke>
				<s:SolidColorStroke color="#bbbbbb" weight="1"/>
			</s:stroke>
		</s:Rect>
			<s:VGroup id="txtRedText" gap="0" width="100%" height="49.5%" depth="51" top="0" verticalAlign="middle" horizontalCenter="0" horizontalAlign="center">
				<s:Label fontFamily="Helvetica" fontWeight="bold" color="#000000" fontSize="12" text="FT" />
			</s:VGroup>
		</s:Group>
		<s:Group width="75%" height="99%" horizontalCenter="0" depth="51" bottom="0">
			<s:Rect id="rectGreen" width="100%" height="49.5%" horizontalCenter="0" depth="51" radiusX="30" bottom="0" >
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="#a4d05d" />
						<s:GradientEntry color="#75ba43" />
						<s:GradientEntry color="#429f24" />
						<s:GradientEntry color="#12810f" />
					</s:LinearGradient>
				</s:fill>
				
				<s:stroke>
					<s:SolidColorStroke color="#bbbbbb" weight="1"/>
				</s:stroke>
			</s:Rect>
			<s:VGroup id="txtGreenText" gap="0" width="100%" height="49.5%" depth="51" bottom="0" verticalAlign="middle" horizontalCenter="0" horizontalAlign="center">
				<s:Label fontFamily="Helvetica" fontWeight="bold" color="#000000" fontSize="12" text="ET" />
			</s:VGroup>
		</s:Group>
		<s:Rect id="rectSombra" width="75%" height="99%" horizontalCenter="0" depth="51" radiusX="30" bottom="0">
			<s:fill>
				<s:SolidColor color="red"  />
			</s:fill>
			<s:filters>
				<s:DropShadowFilter inner="true" blurX="8" blurY="25" distance="4" 
									strength="1.5" color="#959595" angle="90" knockout="true" 
									quality="{BitmapFilterQuality.MEDIUM}"
									/>
			</s:filters>
			<s:stroke>
				<s:SolidColorStroke color="#bbbbbb" weight="1" alpha="0.7" />
			</s:stroke>
		</s:Rect>
		
		<s:Group id="gph" depth="51" />
		<label:TituloHelvetica_10_Blanco fontWeight="normal" fontSize="13" id="porcentaje" depth="51" />
		
	</s:Group>
	
</s:ItemRenderer>