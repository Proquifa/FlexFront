<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:otros="skins.otros.*"
				autoDrawBackground="false"
				width="100%" height="100%"
				resize="resizeHandler(event)" 
				xmlns:ns="vista.vistas.ev_AtenderPoolDeVisitas.Componentes.checkBox.*"
				>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosBotones;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			[Bindable] public var sizeFont:Number;
			[Bindable] public var widthLogo:Number;
			[Bindable] public var heightLogo:Number;
			
			override public function set data(value:Object):void{
				super.data = value;
				
			}
			
			protected function resizeHandler(event:ResizeEvent):void
			{
				sizeFont = (18 / 637) * (unscaledWidth);
				sizeFont = sizeFont > 18 ? 18:sizeFont;
				sizeFont = sizeFont < 11 ? 11:sizeFont;
				
				widthLogo = (20 / 1370) * (grpVistaPrincipal.width);
				widthLogo = widthLogo > 20 ? 20:widthLogo;
				widthLogo = widthLogo < 15 ? 15:widthLogo;
				
				heightLogo = widthLogo;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	
	<s:Group width="100%" height="100%" >
		
		<s:HGroup width="100%" height="100%" id="grpVistaPrincipal" paddingBottom="10">
			<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" fontWeight="bold" color="#008894" 
					 text="{(itemIndex+1)}" />
			<mx:Image smoothBitmapContent="true" source="{catalogoIconosEtiquetas.getInstance().crm_icono}" width="{widthLogo}" height="{heightLogo}" />
			<s:Label styleName="tab_texto_14_Helvetica" fontSize="{sizeFont}" fontWeight="bold" color="#3e3e3d" 
					 text="Titulo de Documento.pdf" />
			
			
		</s:HGroup>  
		
	</s:Group>
	
</s:ItemRenderer>
