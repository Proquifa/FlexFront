package mx.com.proquifa.vista.modelo
{
	import flash.events.Event;
	import flash.events.EventDispatcher;
	import flash.events.IEventDispatcher;
	import flash.utils.clearTimeout;
	import flash.utils.setTimeout;
	
	import mx.collections.ArrayCollection;
	import mx.utils.ObjectUtil;
	
	public class ModeloComprasCompradorMaster extends EventDispatcher
	{
		
		///// este mapa aqui es 
		///////////////////////////// OBTIENE NUMERO PENDIENTES  ///////////////////////////// 
		
		private var listaTempRegistroOC:ArrayCollection;
		private var listaTempMonitorearOC:ArrayCollection;
		private var listaTempBackOrder:ArrayCollection;
		private var listaTempTramitarCompra:ArrayCollection;
		private var numeroPendientes:ArrayCollection;
		private var numeroPendientesTemporal:ArrayCollection;
		public function setObtenerPendientesGestorCompras(data:ArrayCollection):void
		{
			numeroPendientesTemporal = data;
			asignarIndicador();

		}
		
		[Bindable(event="obtenerNumeroDePendientesModeloGestorCompras")]
		public function get enviarObtenerPendientesGestorCompras():ArrayCollection
		{
			return numeroPendientes;
		}
		
		private var detener:uint;
		private function asignarIndicador():void
		{
			
			if(listaTempRegistroOC.length != 0 && listaTempRegistroOC != null)
			{
				for(var j:int=0; j < listaTempRegistroOC.length; j++)
				{
					numeroPendientesTemporal.addItem(listaTempRegistroOC[j]);
				}
				
			}
			
			if(listaTempMonitorearOC.length != 0 && listaTempMonitorearOC != null)
			{
				for(var j:int=0; j < listaTempMonitorearOC.length; j++)
				{
					numeroPendientesTemporal.addItem(listaTempMonitorearOC[j]);
				}
				
			}
			
			
			if(listaTempBackOrder.length != 0 && listaTempBackOrder != null)
			{
				for(var N:int=0; N < listaTempBackOrder.length; N++)
				{
					numeroPendientesTemporal.addItem(listaTempBackOrder[N]);
				}
				
			}
			
			if(listaTempTramitarCompra.length != 0 && listaTempTramitarCompra != null)
			{
				for(var k:int=0; k < listaTempTramitarCompra.length; k++)
				{
					numeroPendientesTemporal.addItem(listaTempTramitarCompra[k]);
				}
				
			}
			
			var temp:ArrayCollection = new ArrayCollection();
			var arrayAux:Array;
			var objectAux:Object = new Object();
			objectAux.pendiente = "";
			objectAux.conteo = "";
			if(numeroPendientesTemporal.length != 0){
				for(var x:int=0; x < numeroPendientesTemporal.length; x++){
					arrayAux = (numeroPendientesTemporal[x] as String).split("/");
					objectAux.pendiente = arrayAux[0];
					objectAux.conteo = arrayAux[1];
					temp.addItem(ObjectUtil.copy(objectAux));
				}
			}
			numeroPendientes = temp;
			dispatchEvent(new Event("obtenerNumeroDePendientesModeloGestorCompras"));
			
			/*clearTimeout(detener);*/
		}
		

		public function setObtenerIndicadorPendienteRC(data:ArrayCollection):void
		{
			listaTempRegistroOC = data;
		}
		
		
	
		public function setObtenerIndicadorPendienteMO(data:ArrayCollection):void
		{
			listaTempMonitorearOC = data;
		}
		

	
		public function setObtenerIndicadorPendienteBO(data:ArrayCollection):void
		{
			listaTempBackOrder = data;
		
		}
		
		public function setObtenerIndicadorPendienteTramitarCompra(data:ArrayCollection):void
		{
			listaTempTramitarCompra = data;
			
		}
		
		
	
		/**
		 ************************************************************** error **************************************************************
		 */
		
		public function ModeloComprasCompradorMaster(target:IEventDispatcher=null)
		{
			super(target);
		}
	}
}

