<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="889" height="645" xmlns:label="skins.skin.label.*"
			   skinClass="skins.titleWindow.skinTitleWindowBlanca"  xmlns:otros="skins.otros.*" 
			   xmlns:contac="mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.contactos.*"
			   xmlns:largo="skins.botones.largo.*" xmlns:pqNet="skins.botones.pqNet.*"> 
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Resize id="fxResize"  target="{this}" duration="300" effectEnd="{this.grpTodo.visible = true }"/>
		<s:Resize id="fxCierraPop" target="{this}" widthTo="0" heightTo="0" duration="150" effectEnd="salirPopUp()"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoGenerico;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaCatalogoService;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoParaContactoService;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.FuncionesEstaticas;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoAlertas;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			
			private var _vieneD:String;
			public var _checkBox:Boolean;
			
			
			[Bindable]
			private var _contactos:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var _descripcionContacto:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var _idContacto:int;
			
			public function get vieneD():String
			{
				return _vieneD;
			}
			
			public function set vieneD(value:String):void
			{
				_vieneD = value;
			}
			
			public function get btnasociarEnabled():Boolean
			{
				return _btnasociarEnabled;
			}
			
			public function set btnasociarEnabled(value:Boolean):void
			{
				_btnasociarEnabled = value;
				asociarcontacto.visible = value;
			}
			
			//public function agregaComponente(event:Event):void{
			//this.agregaBusqueda(new BuscaContacto());
			//this.agregaDescripcion(new DescripcionContacto());
			//this.dispatchEvent(new EventoGenerico(EventoGenerico.CIERRA_POPUP));
			//}
			
			/*public function agregaBusqueda(componente:DisplayObject):void{
			if(componente == null){
			return ;
			}
			this.espacioBusqueda.removeAllChildren();
			this.espacioBusqueda.addChild(componente);
			}*/
			
			/* public function agregaDescripcion(componente:DisplayObject):void{
			if(componente == null){
			return ;
			}
			this.descripcioncontacto.removeAllChildren();
			this.descripcioncontacto.addChild(componente); 
			} */
			
			public function set recibeBusquedaContactos(contacto:ArrayCollection):void{
				
				_descripcionContacto = new ArrayCollection();
				//this.addEventListener(EventoParaContactoService.OCULTAR_CHECKBOX, ocultaCheck);
				
				if(contacto.length == 0){
					
					this._contactos.removeAll();
					
					var evt:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.OBTEN_DESCRIPCION_CONTACTO);
					evt.descripcionContacto = this._descripcionContacto;
					dispatchEvent(evt);
					
					//this.totalcontactos.text = _contactos.length.toString() +" "+"Contactos";
					
					return ;
				}
				this._contactos= contacto;
				
				/**********************************Ordenar alfabeticamente***************************/
				var tipos:Sort = new Sort();
				tipos.fields = [new SortField("nombre",true)];
				_contactos.sort = tipos;
				_contactos.refresh(); 
				/***************************************************/
				
				if(_contactos.length > 1 || _contactos.length == 0){
					//this.totalcontactos.text = _contactos.length.toString() +" "+"Contactos";	
				}else{
					//this.totalcontactos.text = _contactos.length.toString() +" "+"Contacto";
				}
				
				if(this._idContacto != 0){
					for(var d:int = 0 ; d<_contactos.length ; d++){
						if(_idContacto == _contactos[d].idContacto){
							this._descripcionContacto.addItem(_contactos.getItemAt(d));
							this.listacontacto.selectedIndex = d;
							//this.descripcioncontacto.checkasociado.selected = true;
						}
					}
				}else{
					this._descripcionContacto.addItem(_contactos.getItemAt(0));	
				}
				
				var event:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.OBTEN_DESCRIPCION_CONTACTO);
				event.descripcionContacto = this._descripcionContacto;
				dispatchEvent(event);
			}
			public function ocultaCheck(evt:EventoParaContactoService):void{
				if(evt.checkBox == true){
					this.descripcioncontacto.checkasociado.visible = true;
					this.descripcioncontacto.checkasociado.width = 30;
				}else{
					this.descripcioncontacto.checkasociado.visible = false;
					this.descripcioncontacto.checkasociado.width = 0;
				}
			}
			
			private function clickList(event:IndexChangeEvent):void{
				_descripcionContacto = new ArrayCollection();
				for(var d:int = 0 ; d<_contactos.length ; d++){
					if(this._contactos[d].idContacto == event.currentTarget.selectedItems[0].idContacto){
						this._descripcionContacto.addItem(_contactos.getItemAt(d));
					}
				}
				
				var evt:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.OBTEN_DESCRIPCION_CONTACTO);
				evt.descripcionContacto = this._descripcionContacto;
				dispatchEvent(evt);
			}
			
			
			public function resetContacto():void{
				this._descripcionContacto = new ArrayCollection();
			}
			
			
			public function set agregaTipoBoton(boton:int):void{
				if(boton == 1){
					this.asociarcontacto.visible = true;
				}
			}
			
			public function set checkBoxSeleccionado(check:Boolean):void{
				this._checkBox = check;	
			}
			
			private function clickContacto():void{
				
				if(this._checkBox == true){
					this._descripcionContacto;
					//var evento:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.RECIBIR_DATOS_CONTACTO);
					var evento:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.SELECCIONAR_CONTACTO);
					evento.contactoSeleccionado = this._descripcionContacto;
					evento.vieneD = this.vieneD;
					dispatchEvent(evento);
					this.visible = false;	
				}else{
					//Alert.show( "No ha seleccionado ningún contacto para asociar","Advertencia !!");
					/* var trivent:EventoAlertaPqNet = new EventoAlertaPqNet(EventoAlertaPqNet.MOSTRAR_ALERTA);
					trivent.mensaje = "No ha seleccionado ningún contacto para asociar";
					trivent.encabezado = "Advertencia !!";
					dispatchEvent(trivent);  */
					alertaSingleton.show(catalogoAlertas.CONTACTO_ERR_asociarContacto, catalogoAlertas.TIT_ADV_informacionIncompleta,"ObtenerContacto");
				}
				
			}
			
			private function salirPopUp():void{
				//PopUpManager.removePopUp(this);
				var evt:EventoParaContactoService = new EventoParaContactoService(EventoParaContactoService.CIERRA_POPUP);
				dispatchEvent(evt);
			}
			
			
			private var _btnasociarEnabled:Boolean;
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup height="100%" width="865" paddingLeft="18" paddingRight="18" paddingBottom="18" id="grpTodo">
		<s:HGroup >
			<s:Image source="@Embed('skins/imagenes/iconos/etiquetas/contactos.png')"/>
			<label:labelTitulo_Otros text="Contactos" textAlign="center"/>
		</s:HGroup>
		<otros:divisionHueca width="848" id="linea1"/>
		
		<mx:HBox width="100%" id="espacioBusqueda">
			<!--<s:VGroup width="100%">
			
			</s:VGroup>-->
			<contac:BuscaContacto id="compBuscaContacto"/>
		</mx:HBox>
		
		<otros:divisionHueca width="846" id="linea2"/>
		
		<s:HGroup width="845" height="100%">
			<mx:VBox id="lista" width="100%" height="100%" >
				<s:List width="100%" height="100%" id="listacontacto" borderVisible="false" dataProvider="{this._contactos}" change="clickList(event)"
						itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.consultas.comun.contactos.ListaContacto">
				</s:List>
				
				<!--<otros:division id="linea3"/>
				<s:Label id="totalcontactos" width="100%" fontSize="14" textAlign="center" color="#999999"/>
				<s:Label text="Total" color="#999999" fontSize="14" width="100%" textAlign="center"/>
				<otros:division id="linea4"/>-->
			</mx:VBox>
			<otros:VDivisionHueca color="#FFFFFF"/>
			<mx:VBox width="100%" height="100%" >
				<contac:DescripcionContacto width="100%" id="descripcioncontacto"/>
			</mx:VBox>
		</s:HGroup>
		
		<otros:divisionHueca width="846" id="linea5"/>
		
		<s:HGroup width="847"  height="48" paddingTop="10">
			<pqNet:botonPqNetLargo id="salircontacto" label="Salir" click="salirPopUp()" icono="iconosalir" fontFamily="Helvetica" />
			<!--<s:Button styleName="botonNegroOld" label="Salir" id="salircontacto" click="salirPopUp()" visible="true"/>-->
			<s:Spacer width="100%"/>
			<pqNet:botonPqNetLargo id="asociarcontacto" label="Asociar" click="clickContacto()" icono="iconoasociar" fontFamily="Helvetica" />
			<!--<s:Button styleName="botonNegroOld" label="Asociar" id="asociarcontacto" visible="false" click="clickContacto()"/>-->
		</s:HGroup>
		
	</s:VGroup>
</s:TitleWindow>