<?xml version="1.0" encoding="utf-8"?>
<mx:DataGrid  borderVisible="false" verticalGridLineColor="#000000" xmlns:fx="http://ns.adobe.com/mxml/2009" 
			  xmlns:s="library://ns.adobe.com/flex/spark" 
			  horizontalGridLines="true" verticalGridLines="false"
			  xmlns:mx="library://ns.adobe.com/flex/mx" 
			  horizontalSeparatorSkin="skins.skin.datagrid.pqNet.componentes.lineaHorizontal" 
			  headerStyleName="headerGrid2"
			  styleName="miDataGrid"
			  initialize="completeHandler(event)"
			  headerHeight="50"
			  resize="resizeHandler(event)"
			  horizontalScrollPolicy="auto"
			  verticalAlign="middle"
			  >
	<!--			 verticalAlign="middle" -->
		<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.miDataGrid{
			rollOverColor: #e6e6e6;  
			selectionColor: #e9e9e9; 
			textSelectedColor: #000000;
			alternatingItemColors: #FFFFFF,#FFFFFF;
			fontFamily: Helvetica;
			fontSize: 12;
			fontWeight:normal;
			fontStyle:normal;
			textAlign:center;
			headerBackgroundSkin:ClassReference("skins.skin.datagrid.pqNet.componentes.headerGridPqNet");
			headerSeparatorSkin:ClassReference("skins.skin.datagrid.pqNet.componentes.headerGridPqNet");
		}
		
		.headerGrid2
		{
			color: #000000;
			fontFamily: Helvetica;
			fontWeight:bold;
			fontStyle:normal;
			fontSize: 14;
		}
		
	</fx:Style>
	<fx:Metadata>
		[Event(name="reajustarTamanoLetra",type="mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoComun")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoComun;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.core.ClassFactory;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import skins.skin.datagrid.pqNet.componentes.GestorCompraHeader;
			import skins.skin.datagrid.pqNet.componentes.HeaderRendererCatorce;
			import skins.skin.datagrid.pqNet.componentes.PrincipioDeFilaRenderer;
			import skins.skin.datagrid.pqNet.componentes.headerGestorCompra;
			private var primer:ClassFactory;
			
			
			/**
			 * el total de tus porcentajes debe ser menor de 100
			 */
			[Bindable]	public var porcentajesColumnasPq:Array = new Array();
			public var indexOld:int;
			private var _middleVertical:Boolean = true;
			
			private var _gestorCompra:Boolean = false;
			
			private static var fontH:Number = 19;
			private static var fontL:Number = 16;
			private static var tamHeader:Number = 50;
			
			
			private var _autoSize:Boolean;
			private var _autoImage:Boolean;		
			private var _autoHeight:Boolean;
			private var _sizeAdjust:Number;
			private var _sizeHeight:Number;
			
			
			
			protected function completeHandler(event:FlexEvent):void
			{
				if( (this.columns[0] as DataGridColumn).itemRenderer == null ) (this.columns[0] as DataGridColumn).itemRenderer = new ClassFactory( PrincipioDeFilaRenderer );
				for(var b:int=0; b < this.columns.length; b++){
					if (!gestorCompra)
					{
						if(  (this.columns[b] as DataGridColumn).headerRenderer == null ) (this.columns[b] as DataGridColumn).headerRenderer = new ClassFactory( HeaderRendererCatorce );
					}
					else
					{
						if(  (this.columns[b] as DataGridColumn).headerRenderer == null ) (this.columns[b] as DataGridColumn).headerRenderer = new ClassFactory( GestorCompraHeader );
					}
				}
			}
			
			protected function resizeHandler(event:ResizeEvent):void
			{
				
				for(var g:int = 0; g  < this.porcentajesColumnasPq.length; g++)
				{
					(this.columns[g] as DataGridColumn).visible = int(porcentajesColumnasPq[g]) == 0 ? false:true;
					(this.columns[g] as DataGridColumn).width = (event.currentTarget.width * (int(porcentajesColumnasPq[g])/100  ) ); 
				}
				refresh();
				
			}
			
			
			public function refresh():void
			{
				var classfactory:ClassFactory = new ClassFactory(headerGestorCompra);
				if(autoSize)
				{
					var sizeFont:Number = (fontH / sizeAdjust) * (this.parent.width);
					sizeFont = sizeFont > fontH ? fontH:sizeFont;  
					GestorCompraHeader.sizeFont = sizeFont;
					
					var sizeLblFont:Number = (fontL / sizeAdjust) * (this.parent.width);
					sizeLblFont = sizeLblFont > fontL ? fontL:sizeLblFont;  
					
					var evt:EventoComun = new EventoComun(EventoComun.REAJUSTAR_LETRA);
					evt.current = sizeLblFont;
					dispatchEvent(evt);
					
					if(autoHeight)
					{
						var header:Number = (tamHeader/sizeHeight) * (this.parent.height);
						this.headerHeight = header;
					}
					
					if(autoImage)
					{
						var imgWidth:Number = (15/sizeAdjust) * (this.parent.width);
						GestorCompraHeader.sizeWidth = imgWidth;
						var imgHeight:Number = (25/sizeHeight) * (this.parent.height);
						GestorCompraHeader.sizeHeight = imgHeight;
					}
				}
				else
				{
					GestorCompraHeader.sizeFont = fontH;
					GestorCompraHeader.sizeWidth = 15;
					GestorCompraHeader.sizeHeight = 25;
				}
				
			}
			
			
			public function get middleVertical():Boolean
			{
				return _middleVertical;
			}
			
			public function set middleVertical(value:Boolean):void
			{
				_middleVertical = value;
			}
			
			public function get gestorCompra():Boolean
			{
				return _gestorCompra;
			}
			
			public function set gestorCompra(value:Boolean):void
			{
				_gestorCompra = value;
				if (value)
				{
					this.styleName = "gridGestorCompra";
				}
			}
			
			public function get autoSize():Boolean
			{
				return _autoSize;
			}
			
			public function set autoSize(value:Boolean):void
			{
				_autoSize = value;
			}
			
			public function get sizeAdjust():Number
			{
				return _sizeAdjust;
			}
			
			public function set sizeAdjust(value:Number):void
			{
				_sizeAdjust = value;
			}
			
			public function get sizeHeight():Number
			{
				return _sizeHeight;
			}
			
			public function set sizeHeight(value:Number):void
			{
				_sizeHeight = value;
			}
			
			public function get autoHeight():Boolean
			{
				return _autoHeight;
			}
			
			public function set autoHeight(value:Boolean):void
			{
				_autoHeight = value;
			}

			public function get autoImage():Boolean
			{
				return _autoImage;
			}

			public function set autoImage(value:Boolean):void
			{
				_autoImage = value;
			}
		
			
			
		]]>
	</fx:Script>
</mx:DataGrid>