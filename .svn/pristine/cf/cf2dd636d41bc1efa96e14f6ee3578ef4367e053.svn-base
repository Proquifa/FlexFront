<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 width="100%" height="100%"
		 xmlns:otros="skins.otros.*"
		 resize="calc(event)"
		 creationComplete="init(event)"
		 >
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.HorarioCalendario;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.HorarioTiempo;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.Sprint;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.VisitaCliente;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			import mx.events.ResizeEvent;
			import mx.utils.ObjectUtil;
			
			import vista.evento.EventoEVAgendarVisita;
			import vista.modelo.ModeloEVAgendarVisita;
			import vista.vistas.ev_AgendarVisita.Componentes.VistaListaHora;
			import vista.vistas.ev_AgendarVisita.Componentes.VistaListaSemanaAgendar;
			[Bindable]private var sizeFontProvee:Number;
			[Bindable]private var sizeFont:Number;
			[Bindable]private var sizeFont1:Number;
			private var nombreDias:Array = ["Domingo","Lunes","Martes","Miércoles","Jueves","Viernes","Sábado"];
			
			[Bindable]public var visitasVisibles:ArrayCollection = new ArrayCollection;
			
			[Bindable] public var sprint:Sprint;
			
		
			
			protected function calc(event:ResizeEvent):void
			{
				sizeFontProvee = (40/1504) * (unscaledWidth);
				sizeFontProvee = sizeFontProvee > 40 ? 40:sizeFontProvee;
				sizeFontProvee = sizeFontProvee < 20 ? 20:sizeFontProvee;
				
				sizeFont = (20/1504) * (unscaledWidth);
				sizeFont = sizeFont > 20 ? 20:sizeFont;
				sizeFont = sizeFont < 10 ? 10:sizeFont;
				
				sizeFont1 = (20/1504) * (unscaledWidth);
				sizeFont1 = sizeFont1 > 13 ? 13:sizeFont1;
				sizeFont1 = sizeFont1 < 10 ? 10:sizeFont1;
			}
			
			protected function init(event:FlexEvent):void
			{
				var fecha:Date = new Date();
				txtFecha.text = fecha.getDate()+" de "+UtilsFecha.regresaNombreMesPrimeraMayuscula(fecha.getMonth())+" del "+fecha.getFullYear();
				txtFechaDia.text = nombreDias[fecha.getDay()];
				
				addEventListener(EventoEVAgendarVisita.MANDA_ITEM_SELECCIONADO,recibeItem);
				/*cargarListaDia();
				
				cargarListaSemana();*/
			}
			
			private function cargarListaDia(listaVisitas:ArrayCollection):void
			{
				/*if(listaVisitas.length > 0){
					gridPorDia.dataProvider = listaVisitas[0].calendario; 
				}*/
				
				var today:Date = new Date()
				var encontrado:Boolean;
				var indiceEncontrado:int;
				for (var i:int = 0; i < listaVisitas.length; i++) 
				{
					var temp:HorarioCalendario = listaVisitas[i];
					if(today.getDate() == temp.numeroDia && today.getMonth() == temp.numeroMes && today.getFullYear() == temp.anio){
						encontrado = true;
						indiceEncontrado = i;
						break;
					}
				}
				
				if(encontrado){
					gridPorDia.dataProvider = listaVisitas[indiceEncontrado].calendario; 
				}else{
					gridPorDia.dataProvider = crearDiaVacioActual();
				}
			}
			
			public function set cambiarVista(indice:int):void
			{
				stackPrincipal.selectedIndex = indice;
			}
			
			private function cargarListaSemana(listaVisitas:ArrayCollection):void
			{
				grpLista.removeAllElements();
				acomodarCalendariosEnSemana(listaVisitas);
				var numeroDias:int = 5;
				var listaHora:VistaListaHora = new VistaListaHora;
				if(listaVisitas.length > 0){
					/*listaHora.dataProvider = listaVisitas[0].calendario*/
					listaHora.dataProvider = crearCalendarioNuevo();
					grpLista.addElement(listaHora);
					
					for (var j:int = 0; j < numeroDias; j++) 
					{
						var listaVista:VistaListaSemanaAgendar = new VistaListaSemanaAgendar;
						if(j==0)
							listaVista.dataProvider = objDia1.calendario;
						else if(j==1)
							listaVista.dataProvider = objDia2.calendario;
						else if(j==2)
							listaVista.dataProvider = objDia3.calendario;
						else if(j==3)
							listaVista.dataProvider = objDia4.calendario;
						else if(j==4)
							listaVista.dataProvider = objDia5.calendario;
						listaVista.id = "listaSemana"+j;
						grpLista.addElement(listaVista);
					}
				}
			}
			
			protected function scroll_mouseWheelChangingHandler(event:FlexMouseEvent):void
			{
				var move:Number = scroll.viewport.verticalScrollPosition;
				if(event.delta < 0)
					scroll.viewport.verticalScrollPosition = move+10;
				else
					scroll.viewport.verticalScrollPosition = move-10;
			}
			
			public function setSprint(sprint:Sprint):void
			{
				this.sprint = sprint;
				/*seleccionarFechaDia();*/
				/*var listaFechas:ArrayCollection = seleccionarFechaSemana();*/
				
				listaFechasSemana();
				var listaFechas:ArrayCollection = ModeloEVAgendarVisita.convertirRangoFechasLista(sprint.fechaInicio,sprint.fechaFin);
				visitasVisibles = listaFechas;
				/*cargarItemsVisita(ObjectUtil.copy(listaFechas) as ArrayCollection);*/
				cargarItemsVisita(listaFechas);
			}
			
			private function cargarItemsVisita(listaFechas:ArrayCollection):void
			{
				/*for (var i:int = 0; i < listaFechas.length; i++) 
				{
					var obj:Object = new Object;
					obj.visitaCliente = new ArrayCollection;
					obj.mes = 0;
					obj.dia = 0;
					
					visitasVisibles.addItem(obj);
				}*/
				
				for each (var fechas:HorarioCalendario in listaFechas) 
				{
					fechas.calendario = new ArrayCollection;
					fechas.totalHoras = 0;
					
					var listaDia:ArrayCollection = new ArrayCollection;
					for (var i:int = 0; i < 24; i++) 
					{
						var obj:HorarioTiempo = new HorarioTiempo;
						obj.hora = "";
						obj.descripcion = "";
						obj.horario = "";
						obj.visitaCliente = new VisitaCliente;//QUITAR POSIBLEMENTE
						obj.totalHoras = 0;
						obj.hora = i+":00";
						
						listaDia.addItem(obj);
					}
					/*fechas.visitaCliente = new ArrayCollection;*/
					fechas.calendario = listaDia;
				}
				
				cargarListaDia(listaFechas);
				
				cargarListaSemana(listaFechas);
				
				visitasVisibles = listaFechas;
			}
			
			public function acomodarVisita(visita:VisitaCliente):void
			{
				var horafinal:int = 0;
				var horaFaux:int = 0;
				var horaIaux:int = 0;
				var auxContador:int = 0;
				var horarioDisponible:Boolean;
				var objAux:Object = new Object();
				for each (var vistaTemp:Object in visitasVisibles) 
				{
					if(visita.fechaVisita.date == vistaTemp.numeroDia && visita.fechaVisita.month == vistaTemp.numeroMes){
						var objTemp:Object = vistaTemp.calendario[visita.fechaVInicioHora];
						var hora:String = regresarCadenaTiempo(visita.fechaVInicioHora)
							+":"+regresarCadenaTiempo(visita.fechaVInicioMinuto)+" - "
							+regresarCadenaTiempo(visita.fechaVFinHora)+":"
							+regresarCadenaTiempo(visita.fechaVFinMinuto);
						
						
									
						objTemp.totalHoras += visita.fechaVFinHora - visita.fechaVInicioHora;
						objTemp.horario = hora;
						objTemp.descripcion = visita.nombreCliente;
						objTemp.visitaCliente = ObjectUtil.copy(visita) as VisitaCliente;
						
						/*se le resta 1 a la hora final*/
						horaIaux = visita.fechaVInicioHora;
						horafinal = visita.fechaVFinHora -1;
						
						vistaTemp.calendario.setItemAt(objTemp,visita.fechaVInicioHora);
						
					 /*  vistaTemp.calendario.setItemAt(objTemp,horafinal);*/
						
						if(horafinal > visita.fechaVInicioHora )
						{
							/*horaFaux = horafinal - 1;*/
							/*objAux.descripcion = "objetoVacio"; */
							
							for (var j:int = (visita.fechaVInicioHora+1) ; j <= horafinal ; j++) 
							{
								/*objAux.hora = j;*/
								objAux = vistaTemp.calendario.getItemAt(j);
								objAux.visitaCliente = ObjectUtil.copy(visita) as VisitaCliente;
								objAux.descripcion = "objetoVacio"; 
								vistaTemp.calendario.setItemAt(objAux,j);
							}
							
							
						}
						   var totalHoras:int = 0;
						for each (var i:Object in vistaTemp.calendario) 
						{
							auxContador = auxContador +1;
							if(auxContador == horafinal){
								totalHoras = totalHoras;
							}
							else{
								totalHoras += i.totalHoras;
							}
							
								
						}
						vistaTemp.totalHoras = totalHoras;
						
						if (vistaTemp.calendario == objDia1.calendario )
							hrsTotal1.text = vistaTemp.totalHoras+" HRS.";
						else if (vistaTemp.calendario == objDia2.calendario )
							hrsTotal2.text = vistaTemp.totalHoras+" HRS.";
							
						else if (vistaTemp.calendario == objDia3.calendario )
							hrsTotal3.text = vistaTemp.totalHoras+" HRS.";
							
						else if (vistaTemp.calendario == objDia4.calendario )
							hrsTotal4.text = vistaTemp.totalHoras+" HRS.";
							
						else if (vistaTemp.calendario == objDia5.calendario )
							hrsTotal5.text = vistaTemp.totalHoras+" HRS.";
						
						/*if(horafinal > visita.fechaVInicioHora )
						{
							objAux = vistaTemp.calendario.getItemAt(horafinal);
							objAux.descripcion = "objetoVacio";
							vistaTemp.calendario.setItemAt(objAux,horafinal);
						}*/
						
						
						break;
					}
				}
				asginarTotales();
			}
			
			
			public function verificarHorarioDisponible(visitaAG:VisitaCliente):Boolean{
				var horarioDisponible:Boolean;
				for each (var vistaTemp:Object in visitasVisibles) 
				{
					if(visitaAG.fechaVisita.date == vistaTemp.numeroDia && visitaAG.fechaVisita.month == vistaTemp.numeroMes){
						
						for (var h:int = visitaAG.fechaVInicioHora ; h <= visitaAG.fechaVFinHora ; h++) 
						{
							if(vistaTemp.calendario[h].horario == "" && vistaTemp.calendario[h].descripcion == ""){
								trace("horario disponible");
								horarioDisponible = true;
							}
								
							else {
								trace("horario no disponible");
								horarioDisponible = false;
								break;
							}
							
						}
						
						break;
					}
				}
				
				return horarioDisponible;
			}
			
			
			
			public function limpiarvisitaDeHorarioAnterior(visita:VisitaCliente):void{
				var horafinal:int = 0;
				var horaFaux:int = 0;
				var horaIaux:int = 0;
				var auxContador:int = 0;
				var horarioDisponible:Boolean;
				var objAux:Object = new Object();
				for each (var vistaTemp:Object in visitasVisibles) 
				{
					if(visita.fechaVisita.date == vistaTemp.numeroDia && visita.fechaVisita.month == vistaTemp.numeroMes){
						var objTemp:Object = vistaTemp.calendario[visita.fechaVInicioHora];
						var hora:String = "";
						
						
						
						objTemp.totalHoras += 0;
						objTemp.horario = hora;
						objTemp.descripcion = "";
						objTemp.visitaCliente = ObjectUtil.copy(visita) as VisitaCliente;
						
						/*se le resta 1 a la hora final*/
						horaIaux = visita.fechaVInicioHora;
						horafinal = visita.fechaVFinHora -1;
						
						vistaTemp.calendario.setItemAt(objTemp,visita.fechaVInicioHora);
						
						
						
						if(horafinal > visita.fechaVInicioHora )
						{
							
							
							for (var j:int = (visita.fechaVInicioHora) ; j <= horafinal ; j++) 
							{
								
								objAux = vistaTemp.calendario.getItemAt(j);
								objAux.visitaCliente = null;
								objAux.totalHoras = 0;
								objAux.descripcion = "";
								vistaTemp.calendario.setItemAt(objAux,j);
							}
							
							
						}
						var totalHoras:int = 0;
						for each (var i:Object in vistaTemp.calendario) 
						{
							auxContador = auxContador +1;
							if(auxContador == horafinal){
								totalHoras = totalHoras;
							}
							else{
								totalHoras += i.totalHoras;
							}
							
							
						}
						
						break;
					}
				}
			
			}

			
			private function regresarCadenaTiempo(tiempo:int):String
			{
				var tiempoString:String = "";
				if(tiempo < 10)
					tiempoString = "0"+tiempo;
				else
					tiempoString = ""+tiempo
				return tiempoString;
			}
			
			private function asginarTotales():void
			{
				var total:int = 0;
				if(visitasVisibles.length > 0){
					var componente:String = "";
					for (var i:int = 0; i < visitasVisibles.length; i++) 
					{
						/*if(i == 0)
							hrsTotal1.text = visitasVisibles[i].totalHoras+" HRS.";
						else if(i == 1)
							hrsTotal2.text = visitasVisibles[i].totalHoras+" HRS.";
						else if(i == 2)
							hrsTotal3.text = visitasVisibles[i].totalHoras+" HRS.";
						else if(i == 3)
							hrsTotal4.text = visitasVisibles[i].totalHoras+" HRS.";
						else if(i == 4)
							hrsTotal5.text = visitasVisibles[i].totalHoras+" HRS.";*/
						
						total += visitasVisibles[i].totalHoras;
					}
				}
				
				lblTotalHoras.text = ""+total;
			}
			
			[Bindable]private var calendarioVacio:ArrayCollection;
			private function crearDiaVacioActual():ArrayCollection
			{
				if(!calendarioVacio){
					var listaDia:ArrayCollection = new ArrayCollection;
					for (var i:int = 0; i < 24; i++) 
					{
						var obj:HorarioTiempo = new HorarioTiempo;
						obj.hora = "";
						obj.descripcion = "";
						obj.horario = "";
						obj.visitaCliente = new VisitaCliente;
						obj.totalHoras = 0;
						obj.hora = i+":00";
						
						listaDia.addItem(obj);
					}
					calendarioVacio = listaDia;
				}
				
				return calendarioVacio;
			}
			private function crearCalendarioNuevo():ArrayCollection
			{
				var listaDia:ArrayCollection = new ArrayCollection;
				for (var i:int = 0; i < 24; i++) 
				{
					var obj:HorarioTiempo = new HorarioTiempo;
					obj.hora = "";
					obj.descripcion = "";
					obj.horario = "";
					obj.visitaCliente = new VisitaCliente;
					obj.totalHoras = 0;
					obj.hora = i+":00";
					
					listaDia.addItem(obj);
				}
				
				return listaDia;
			}
			
			[Bindable]private var objDia1:HorarioCalendario = new HorarioCalendario; [Bindable]private var objDia2:HorarioCalendario = new HorarioCalendario;
			[Bindable]private var objDia3:HorarioCalendario = new HorarioCalendario; [Bindable]private var objDia4:HorarioCalendario = new HorarioCalendario;
			[Bindable]private var objDia5:HorarioCalendario = new HorarioCalendario;
			public function listaFechasSemana():void
			{
				var nombreDiasCorto:Array = ["Dom","Lun","Mar","Miér","Jue","Vie","Sáb"];
				var nombreDias:Array = ["Domingo","Lunes","Martes","Miércoles","Jueves","Viernes","Sábado"];
				var today:Date = new Date();
				var inicio:int;
				if(today.getDay()==1)
					inicio = today.getDate();
				else if(today.getDay()==2)
					inicio = today.getDate()-1;
				else if(today.getDay()==3)
					inicio = today.getDate()-2;
				else if(today.getDay()==4)
					inicio = today.getDate()-3;
				else if(today.getDay()==5)
					inicio = today.getDate()-4;
				else if(today.getDay()==6)
					inicio = today.getDate()-5;
				else if(today.getDay()==7)
					inicio = today.getDate()-6;
				////// 6 y 7 para fines de semana
				var fechaTemp:Date;
				if(today.getDate() < 7){
					var beforeTemp:Date = new Date(today.fullYear,today.month,0);
					
					var diaMaximo:int = beforeTemp.date
					var mesAnterior:int = today.month-1;
					var diaRestados:int = beforeTemp.date + inicio;
					var before:Date = new Date(beforeTemp.fullYear,mesAnterior,diaRestados);
					var j:int;
					inicio = 1;
					for ( j = 0; j < 5; j++) 
					{
						
						if(diaRestados <= diaMaximo){
							fechaTemp = new Date(before.getFullYear(),before.getMonth(),diaRestados);	
							diaRestados++;
						}else{
							fechaTemp = new Date(today.getFullYear(),today.getMonth(),inicio);
							inicio++
						}
						
						if(j==0){
							objDia1.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia1.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia1.numeroDia = fechaTemp.getDate();
							objDia1.numeroMes = fechaTemp.getMonth();
							objDia1.anio = fechaTemp.getFullYear();
							objDia1.calendario
						}else if(j==1){
							objDia2.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia2.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia2.numeroDia = fechaTemp.getDate();
							objDia2.numeroMes = fechaTemp.getMonth();
							objDia2.anio = fechaTemp.getFullYear();
						}else if(j==2){
							objDia3.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia3.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia3.numeroDia = fechaTemp.getDate();
							objDia3.numeroMes = fechaTemp.getMonth();
							objDia3.anio = fechaTemp.getFullYear();
						}else if(j==3){
							objDia4.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia4.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia4.numeroDia = fechaTemp.getDate();
							objDia4.numeroMes = fechaTemp.getMonth();
							objDia4.anio = fechaTemp.getFullYear();
						}else if(j==4){
							objDia5.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia5.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia5.numeroDia = fechaTemp.getDate();
							objDia5.numeroMes = fechaTemp.getMonth();
							objDia5.anio = fechaTemp.getFullYear();
						}
					}
					
				}else{
					for (j = 0; j < 5; j++) 
					{
						fechaTemp = new Date(today.getFullYear(),today.getMonth(),inicio);
						if(j==0){
							objDia1.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia1.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia1.numeroDia = fechaTemp.getDate();
							objDia1.numeroMes = fechaTemp.getMonth();
							objDia1.anio = fechaTemp.getFullYear();
						}else if(j==1){
							objDia2.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia2.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia2.numeroDia = fechaTemp.getDate();
							objDia2.numeroMes = fechaTemp.getMonth();
							objDia2.anio = fechaTemp.getFullYear();
						}else if(j==2){
							objDia3.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia3.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia3.numeroDia = fechaTemp.getDate();
							objDia3.numeroMes = fechaTemp.getMonth();
							objDia3.anio = fechaTemp.getFullYear();
						}else if(j==3){
							objDia4.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia4.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia4.numeroDia = fechaTemp.getDate();
							objDia4.numeroMes = fechaTemp.getMonth();
							objDia4.anio = fechaTemp.getFullYear();
						}else if(j==4){
							objDia5.siglasDia = nombreDiasCorto[fechaTemp.getDay()];
							objDia5.diaNombre = nombreDias[fechaTemp.getDay()];
							objDia5.numeroDia = fechaTemp.getDate();
							objDia5.numeroMes = fechaTemp.getMonth();
							objDia5.anio = fechaTemp.getFullYear();
						}
						inicio++;
					}
				}
				/*fechas = value;
				
				enviarHorarioElejido(objDia1);*/
			}
			
			public function acomodarCalendariosEnSemana(value:ArrayCollection):void
			{
				var dia1:Boolean;var dia2:Boolean;var dia3:Boolean;
				var dia4:Boolean;var dia5:Boolean;
				/*for each (var calendario:HorarioCalendario in visitasVisibles) */
				for each (var calendario:HorarioCalendario in value) 
				{
					if(calendario.numeroDia == objDia1.numeroDia && calendario.numeroMes == objDia1.numeroMes && calendario.anio == objDia1.anio){
						objDia1.calendario = calendario.calendario;
						dia1 = true;
					}else if(calendario.numeroDia == objDia2.numeroDia && calendario.numeroMes == objDia2.numeroMes && calendario.anio == objDia2.anio){
						objDia2.calendario = calendario.calendario;
						dia2 = true;
					}else if(calendario.numeroDia == objDia3.numeroDia && calendario.numeroMes == objDia3.numeroMes && calendario.anio == objDia3.anio){
						objDia3.calendario = calendario.calendario;
						dia3 = true;
					}else if(calendario.numeroDia == objDia4.numeroDia && calendario.numeroMes == objDia4.numeroMes && calendario.anio == objDia4.anio){
						objDia4.calendario = calendario.calendario;
						dia4 = true;
					}else if(calendario.numeroDia == objDia5.numeroDia && calendario.numeroMes == objDia5.numeroMes && calendario.anio == objDia5.anio){
						objDia5.calendario = calendario.calendario;
						dia5 = true;
					}
				}
				if(!dia1)
					objDia1.calendario = crearCalendarioNuevo();
				if(!dia2)
					objDia2.calendario = crearCalendarioNuevo();
				if(!dia3)
					objDia3.calendario = crearCalendarioNuevo();
				if(!dia4)
					objDia4.calendario = crearCalendarioNuevo();
				if(!dia5)
					objDia5.calendario = crearCalendarioNuevo();
				
			}
			
			
			
			public function recibeItem(even:EventoEVAgendarVisita):void{
				
				var VisitaAC:VisitaCliente = new VisitaCliente();
				VisitaAC =	even.visita;
				
			}
			
		]]>
	</fx:Script>
	<pq:MobViewStack id="stackPrincipal" width="100%" height="100%" paddingBottom="10">
		<s:VGroup width="100%" height="100%" gap="0">
			<s:HGroup height="10%" width="100%" verticalAlign="bottom">
				<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" 
						  fontFamily="Helvetica" fontSize="{sizeFontProvee}" paddingTop="5" id="txtFechaDia"/>
				
				<s:Label  height="100%" textAlign="center" color="#5f5f5f" verticalAlign="bottom"
						  fontFamily="Helvetica" fontSize="{sizeFontProvee}" paddingTop="5" id="txtFecha"/>
			</s:HGroup>
			<s:Spacer height="15" />
			<s:Rect width="100%" height="1">
				<s:fill>
					<s:SolidColor color="#0b8894" />
				</s:fill>
			</s:Rect>
			
			<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
					id="gridPorDia" contentBackgroundAlpha="0" itemRenderer="vista.vistas.ev_AgendarVisita.IR.IR_ListaPorDia"
					/>
		</s:VGroup>
		<s:VGroup width="100%" height="100%" gap="0">
			<s:HGroup height="10%" width="100%" verticalAlign="bottom" id="encabezadoSemana">
				<s:HGroup width="80" height="100%" >
					<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" text="TIEMPO"
							  fontFamily="Helvetica" fontSize="{sizeFont}" paddingTop="5" width="100%" />
				</s:HGroup>
				<s:HGroup width="100%" height="100%" horizontalAlign="center">
					<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" text="{objDia1.siglasDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
					<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="bottom" text="{objDia1.numeroDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
				</s:HGroup>
				<s:HGroup width="100%" height="100%" horizontalAlign="center">
					<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" text="{objDia2.siglasDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
					<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="bottom" text="{objDia2.numeroDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
				</s:HGroup>
				<s:HGroup width="100%" height="100%" horizontalAlign="center">
					<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" text="{objDia3.siglasDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
					<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="bottom" text="{objDia3.numeroDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
				</s:HGroup>
				<s:HGroup width="100%" height="100%" horizontalAlign="center">
					<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" text="{objDia4.siglasDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
					<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="bottom" text="{objDia4.numeroDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
				</s:HGroup>
				<s:HGroup width="100%" height="100%" horizontalAlign="center">
					<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="bottom" text="{objDia5.siglasDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
					<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="bottom" text="{objDia5.numeroDia}"
							  fontFamily="Helvetica" fontSize="{sizeFontProvee-10}" paddingTop="5" />
				</s:HGroup>
				
			</s:HGroup>
			<s:Spacer height="15" />
			<s:Rect width="100%" height="1">
				<s:fill>
					<s:SolidColor color="#0b8894" />
				</s:fill>
			</s:Rect>
			<s:Scroller width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="on" id="scroll" mouseWheelChanging="scroll_mouseWheelChangingHandler(event)">
				<s:HGroup width="100%" height="100%" id="grpLista" gap="0" >
				</s:HGroup>  
			</s:Scroller>
			<s:Rect id="recta" width="100%" height="1" depth="2">
				<s:fill>
					<s:SolidColor id="solidC" color="#f3f3f3"/>
				</s:fill>
				<s:filters>
					<s:DropShadowFilter alpha="0.5" angle="90" blurX="4" blurY="4" color="#000000" 
										distance="2" knockout="false" 
										quality="{BitmapFilterQuality.HIGH}" strength="1"/>
				</s:filters>
			</s:Rect>
			<s:VGroup width="100%" height="20%" gap="0">
				<s:HGroup width="100%" height="100%" verticalAlign="middle" gap="0">
					<s:HGroup width="80" height="100%" gap="0">
						<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="A VISITAR"
								  fontFamily="Helvetica" fontSize="{sizeFont1}" width="100%" fontWeight="bold" />
					</s:HGroup>
					<s:HGroup width="100%" height="100%" gap="0">
						<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
						<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="middle" text="0 HRS." id="hrsTotal1"
								  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
						<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
					</s:HGroup>
					<s:HGroup width="100%" height="100%" gap="0">
						<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="middle" text="0 HRS." id="hrsTotal2"
								  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
						<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
					</s:HGroup>
					<s:HGroup width="100%" height="100%" gap="0">
						<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="middle" text="0 HRS." id="hrsTotal3"
								  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
						<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
					</s:HGroup>
					<s:HGroup width="100%" height="100%" gap="0">
						<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="middle" text="0 HRS." id="hrsTotal4"
								  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
						<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
					</s:HGroup>
					<s:HGroup width="100%" height="100%" gap="0">
						<s:Label  height="100%" textAlign="center" color="#404040" verticalAlign="middle" text="0 HRS." id="hrsTotal5"
								  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
					</s:HGroup>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="0" verticalAlign="middle">
					<s:Group width="100%" height="100%" >
						<s:Rect width="100%" height="100%" >
							<s:fill>
								<s:SolidColor color="#f2f3f5" />
							</s:fill>
						</s:Rect>
						<s:HGroup width="100%" height="100%" >
							
							<s:HGroup width="80" height="100%" >
								<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="ASIGNADO"
										  fontFamily="Helvetica" fontSize="{sizeFont1}" width="100%" fontWeight="bold" />
							</s:HGroup>
							
							<s:HGroup width="100%" height="100%" >
								<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="9 HRS."
										  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
							</s:HGroup>
							<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
							<s:HGroup width="100%" height="100%" >
								<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="9 HRS."
										  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
							</s:HGroup>
							<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
							<s:HGroup width="100%" height="100%" >
								<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="9 HRS."
										  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
							</s:HGroup>
							<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
							<s:HGroup width="100%" height="100%" >
								<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="9 HRS."
										  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
							</s:HGroup>
							<otros:LineaDivision width="1" height="100%" color="#f4f4f4" depth="5"/>
							<s:HGroup width="100%" height="100%" >
								<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="9 HRS."
										  fontFamily="Helvetica" fontSize="{sizeFont}" width="100%" fontWeight="bold" />
							</s:HGroup>
						</s:HGroup>  
					</s:Group>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="0" verticalAlign="middle">
					<s:Group width="100%" height="100%" >
						<s:Rect width="100%" height="100%" >
							<s:fill>
								<s:SolidColor color="#e6f3f4" />
							</s:fill>
						</s:Rect>
						<s:HGroup width="80" height="100%" >
							<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="TOTAL"
									  fontFamily="Helvetica" fontSize="{sizeFont1}" width="100%" fontWeight="bold" />
						</s:HGroup>
						<s:HGroup width="100%" height="100%" horizontalAlign="center">
							<s:Label  height="100%" textAlign="center" color="#bd1d2f" verticalAlign="middle" id="lblTotalHoras"
									  fontFamily="Helvetica" fontSize="{sizeFont}" fontWeight="bold" />
							<s:Label  height="100%" textAlign="center" color="#0b8894" verticalAlign="middle" text="DE 45 HRS." 
									  fontFamily="Helvetica" fontSize="{sizeFont}" fontWeight="bold" />
						</s:HGroup>
					</s:Group>
				</s:HGroup>
			</s:VGroup>  
				
		</s:VGroup>
	</pq:MobViewStack>
	
</s:Group>
