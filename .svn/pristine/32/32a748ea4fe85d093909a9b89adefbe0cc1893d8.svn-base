<?xml version="1.0" encoding="utf-8"?>
<vistas:PanelPropiedadesPlantillas xmlns:fx="http://ns.adobe.com/mxml/2009" 
								   xmlns:s="library://ns.adobe.com/flex/spark"
								   xmlns:mx="library://ns.adobe.com/flex/mx"
								   xmlns:comboPqNet="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" 
								   xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*" 
								   xmlns:vistas="mx.com.proquifa.proquifanet.rsl.vista.vistas.*" 
								   xmlns:dateField="skins.skin.dateField.*"
								   xmlns:pqNet="skins.botones.pqNet.*" 
								   xmlns:label="skins.skin.label.*"
								   xmlns:otros="skins.otros.*"
								   creationComplete="panelpropiedadesplantillas1_creationCompleteHandler(event)"
								   titulo="CONSULTA CONFIRMACIÓN"
								   >
	
	
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.EventoEsperar;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.consultas.ventas.confirmacion.EventoConsultaConfirmacion;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;

			
			private var currentFolioFactura:String;
			private var currentFInicio:Date;
			private var currentFFin:Date;
			private var currentSolicito:int;
			private var currentEstado:String;
			private var currentPrioridad:String;
			private var currentTipo:String;
			private var currentProveedores:int;
			private var numFiltrosModificados:int;
			private var keyModificados:Object;
			
			[Bindable] private var _listaBotones:ArrayCollection = new ArrayCollection( [{valor:'Avanzada',llave:1},{valor:'Rápida',llave:0} ] );
			
			private function realizarBusquedaRapida():void{
				var tempFolio:String = StringUtil.trim(txtBuscaRapida.text);
				if( tempFolio.length >0){
					
					//configurar Espera
					var eventEspera:EventoEsperar = new EventoEsperar(EventoConsultaConfirmacion.CONFIGURAR_ESPERA);
					eventEspera.mensaje = "iniciarEspera";
					eventEspera.idButtons = [];
					eventEspera.tipoEventos = [];
					eventEspera.idButtons.push("btnBusquedaRapida");
					eventEspera.tipoEventos.push("BUSCAR_DOCUMENTOS_POR_FOLIO");
					dispatchEvent(eventEspera);
					
					var evento:EventoConsultaConfirmacion = new EventoConsultaConfirmacion(EventoConsultaConfirmacion.BUSCAR_DOCUMENTOS_POR_FOLIO);
					currentFolioFactura = evento.folio = txtBuscaRapida.text;
					dispatchEvent(evento);
				}
			}
			
			protected function txtBuscaRapida_keyUpHandler(event:KeyboardEvent):void
			{
				var tempFolio:String = StringUtil.trim(txtBuscaRapida.text);
				if(tempFolio.length >0){
					if(tempFolio != currentFolioFactura){
						btnBusquedaRapida.CambiarToActualizarTipoBoton(false);
					}else{
						btnBusquedaRapida.CambiarToActualizarTipoBoton(true);
					}
				}
			}
			
			protected function filtros_changeEvent(event:*):void
			{
				switch(event.currentTarget.id)
				{
					case "dtpFInicio":
					{
						CompararYControlarBoton(event.newDate.time, currentFInicio.time,"dtpFInicio",btnBusqueda);
						break;
					}
					case "dtpFFin":
					{
						CompararYControlarBoton(event.newDate.time, currentFFin.time,"dtpFFin",btnBusqueda);
						break;
					}
					case "cmbSolicito":
					{
						CompararYControlarBoton(cmbSolicito.selectedItem.llave, currentSolicito,"cmbSolicito",btnBusqueda);
						break;
					}
					case "cmbEstatus":
					{
						CompararYControlarBoton(cmbEstatus.selectedItem.valor, currentEstado,"cmbEstatus",btnBusqueda);
						break;
					}
					case "cmbPrioridad":
					{
						CompararYControlarBoton(cmbPrioridad.selectedItem.valor, currentPrioridad,"cmbPrioridad",btnBusqueda);
						break;
					}
					case "cmbTipo":
					{
						CompararYControlarBoton(cmbTipo.selectedItem.valor, currentTipo,"cmbTipo",btnBusqueda);
						CompararYControlarBoton(cmbTipo.selectedItem.valor, currentTipo,"cmbTipo",btnBusqueda);
						break;
					}
					case "cmbProveedores":
					{
						CompararYControlarBoton(cmbProveedores.selectedItem.llave, currentProveedores,"cmbProveedores",btnBusqueda);
						break;
					}
						
					default:
					{
						break;
					}
				}
			}
			
			private function resetControlDeCambiosEnFiltros():void
			{
				numFiltrosModificados =0;
				keyModificados=  new Object();
			}
			
			private function CompararYControlarBoton($dato1:Object,$dato2:Object,$currentFiltroModif:String,$button:botonPqNetLargo):void
			{
				if($dato1 != $dato2){
					if(!keyModificados.hasOwnProperty($currentFiltroModif)){
						$button.CambiarToActualizarTipoBoton(false);
						keyModificados[$currentFiltroModif]=$currentFiltroModif;
						numFiltrosModificados ++;
					}
				}else{
					if(numFiltrosModificados==1){
						$button.CambiarToActualizarTipoBoton(true);
						numFiltrosModificados =0;
						keyModificados=  new Object();
					}else{
						delete keyModificados[$currentFiltroModif];
						numFiltrosModificados --;
					}
				}
			}
			
			public function set actualizarEsperaYBloqueo($actualizarEstadoEspera:Object):void
			{
				var currenIdButton:String;
				if($actualizarEstadoEspera.hasOwnProperty("idCurrentButtons")){
					
					for (var i:int = 0; i < $actualizarEstadoEspera.idCurrentButtons.length; i++) 
					{
						currenIdButton = $actualizarEstadoEspera.idCurrentButtons[i];
						switch(currenIdButton)
						{
							case "btnBusqueda":
							{
								if(btnBusqueda.isCurrentButtonActualizar){
									btnBusqueda.isBusyActualizar= $actualizarEstadoEspera.isBusy;
								}else if(!$actualizarEstadoEspera.isBusy){
									btnBusqueda.CambiarToActualizarTipoBoton(true);
								}
								break;
							}
							case "btnBusquedaRapida":
							{
								if(btnBusquedaRapida.isCurrentButtonActualizar){
									btnBusquedaRapida.isBusyActualizar= $actualizarEstadoEspera.isBusy;
								}else if(!$actualizarEstadoEspera.isBusy){
									btnBusquedaRapida.CambiarToActualizarTipoBoton(true);
								}
								break;
							}
						}
					}
				}
			}
			
			public static var botonMenu:ButtonBar = new ButtonBar();
			public static var busqueda:int = 0;
			private function seleccionaBoton(event:IndexChangeEvent):void{
				if((event.currentTarget as ButtonBar).selectedItem == null){
					event.preventDefault();
				}else{
					this.vstBusqueda.selectedIndex = event.currentTarget.selectedItem.llave;
					busqueda = vstBusqueda.selectedIndex;
					botonMenu.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				}
			}
			
			protected function panelpropiedadesplantillas1_creationCompleteHandler(event:FlexEvent):void
			{
				dtpFInicio.text  = UtilsFecha.formatoFechaDDMMMYYYY( new Date );
				dtpFInicio.selectedDate = new Date();
				dtpFFin.text = UtilsFecha.formatoFechaDDMMMYYYY( new Date );
				dtpFFin.selectedDate = new Date();
				vstBusqueda.selectedIndex = 1;
				
				var evt:EventoConsultaConfirmacion = new EventoConsultaConfirmacion(EventoConsultaConfirmacion.MOSTRAR_OCULTAR_TAB_GRAFICAS)
				evt.tabGrafica = true;
				dispatchEvent(evt);
				
				realizarBusquedaInicial();
				
			}
			
			protected function obtenerProveedores(event:*):void{
				
				filtros_changeEvent(event);
				cargarProveedores();
			}
			
			protected function cargarProveedores():void{
				if (cmbTipo.selectedItem != undefined){
					if(cmbTipo.selectedItem.valor == "--TODOS--"){
						cmbProveedores.dataProvider = new ArrayCollection([{valor:"--TODOS--",llave:0}]);
						cmbProveedores.selectedIndex = 0;
					}else{
						cmbProveedores.cargaProveedoresPorTipo("--TODOS--",cmbTipo.selectedItem.valor);
					}
				}
				else{
					setTimeout(cargarProveedores,300);
				}
			}
			
			public function realizarBusqueda():void{
				//configurar Espera
				var eventEspera:EventoEsperar = new EventoEsperar(EventoConsultaConfirmacion.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("btnBusqueda");
				eventEspera.tipoEventos.push("OBTENER_TOP_COTPHARMA");
				dispatchEvent(eventEspera);
				
				var event:EventoConsultaConfirmacion = new EventoConsultaConfirmacion(EventoConsultaConfirmacion.OBTENER_TOP_COTPHARMA);
				event.pcotPharma.estado = cmbEstatus.selectedItem.valor;
				event.pcotPharma.prioridad = cmbPrioridad.selectedItem.valor;
				event.pcotPharma.TProvee = cmbTipo.selectedItem.valor;
				event.pcotPharma.proveedor = cmbProveedores.selectedItem.llave;
				event.pcotPharma.FInicio = dtpFInicio.selectedDate;
				event.pcotPharma.fFin = dtpFFin.selectedDate;
				event.idEmpleado = cmbSolicito.selectedItem.llave;
				dispatchEvent(event);
				
				currentFInicio = event.pcotPharma.FInicio;
				currentFFin = event.pcotPharma.fFin;
				currentEstado = event.pcotPharma.estado;
				currentPrioridad = event.pcotPharma.prioridad;
				currentTipo = event.pcotPharma.TProvee;
				currentSolicito = event.idEmpleado;
				currentProveedores = event.pcotPharma.proveedor;
				
				//Resetaer
				resetControlDeCambiosEnFiltros();
			}
			
			public function realizarBusquedaInicial():void{
				
				//configurar Espera
				var eventEspera:EventoEsperar = new EventoEsperar(EventoConsultaConfirmacion.CONFIGURAR_ESPERA);
				eventEspera.mensaje = "iniciarEspera";
				eventEspera.idButtons = [];
				eventEspera.tipoEventos = [];
				eventEspera.idButtons.push("btnBusqueda");
				eventEspera.tipoEventos.push("OBTENER_TOP_COTPHARMA");
				dispatchEvent(eventEspera);
				
				var event:EventoConsultaConfirmacion = new EventoConsultaConfirmacion(EventoConsultaConfirmacion.OBTENER_TOP_COTPHARMA);
				event.idEmpleado = 0;
				event.pcotPharma.estado = "--TODOS--";
				event.pcotPharma.prioridad = "--TODOS--";
				event.pcotPharma.TProvee = "--TODOS--";
				event.pcotPharma.proveedor = 0;
				event.pcotPharma.FInicio = dtpFInicio.selectedDate;
				event.pcotPharma.fFin = dtpFFin.selectedDate;
				dispatchEvent(event);
				
				//Para Researt filtros
				resetControlDeCambiosEnFiltros();
				
				currentFInicio = event.pcotPharma.FInicio;
				currentFFin = event.pcotPharma.fFin;
				currentEstado = event.pcotPharma.estado;
				currentPrioridad = event.pcotPharma.prioridad;
				currentTipo = event.pcotPharma.TProvee;
				currentSolicito = event.idEmpleado;
				currentProveedores = event.pcotPharma.proveedor;
			}
			
		]]>
	</fx:Script>
	
	
	<vistas:contenido>
		<s:VGroup width="100%" height="100%" >
			<pq:MobViewStack width="100%" height="100%" id="espacioInfoGenerales" creationPolicy="all" >
				<s:NavigatorContent width="100%" height="100%">
					<s:VGroup width="100%" height="100%" horizontalAlign="center" gap="10">
						
						<s:VGroup width="100%" gap="0">
							<s:Spacer height="13"/>
							<s:ButtonBar changing="seleccionaBoton(event)" selectedIndex="0" id="btnBarra" labelField="valor" dataProvider="{this._listaBotones}" width="100%" requireSelection="true" />
							<s:Spacer height="30"/>
							<otros:divisionHueca width="100%"/>
						</s:VGroup>
						
						<pq:MobViewStack width="100%" height="37%" id="vstBusqueda">
							<!--BusquedaRapida-->
							<s:NavigatorContent width="100%" height="100%">
								<s:VGroup width="100%" id="porFolio" >
									<s:Spacer height="15"/>
									<label:Titulo_w100  text="Folio" paddingTop="0" />
									<s:TextInput id="txtBuscaRapida" width="100%" fontStyle="normal" enter="realizarBusquedaRapida()" toolTip="Folio" keyUp="txtBuscaRapida_keyUpHandler(event)"/>
									<s:Spacer height="15"/>
									<pqNet:botonPqNetLargo id="btnBusquedaRapida" width="100%" click="realizarBusquedaRapida()" botonRedondo="true" icono="ojomordor"/>
									<s:Spacer height="15"/>
									<otros:divisionHueca width="100%"/>
								</s:VGroup>
							</s:NavigatorContent>
							
							<!--BusquedaAvanzada-->
							<s:NavigatorContent width="100%" height="100%">
								<s:VGroup width="100%" height="100%" horizontalAlign="center">
									<s:HGroup width="100%" >
										<s:VGroup width="50%">
											<label:Titulo_w100  text="Del" paddingTop="0" />
											<dateField:DatePickerSpanish id="dtpFInicio"  width="130"  change="filtros_changeEvent(event)"/>
										</s:VGroup>
										<s:Spacer width="100%"/>
										<s:VGroup width="50%">
											<label:Titulo_w100  text="Al" paddingTop="0" />
											<dateField:DatePickerSpanish id="dtpFFin" width="130" change="filtros_changeEvent(event)"/>
										</s:VGroup>
									</s:HGroup>	
									<s:Spacer height="1"/>
									<label:Titulo_w100  text="Solicitó" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbSolicito" creationComplete="{cmbSolicito.cargarEmpleadosPorSoloPorTipo('esac','--TODOS--') }" width="100%" change="filtros_changeEvent(event)"/>
									<s:Spacer height="1"/>
									<label:Titulo_w100  text="Estado" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbEstatus" creationComplete="{cmbEstatus.cargarEstadoConfirmacion('--TODOS--') }" width="100%" change="filtros_changeEvent(event)"/>
									<s:Spacer height="1"/>
									<label:Titulo_w100  text="Prioridad" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbPrioridad" creationComplete="{cmbPrioridad.cargarPrioridadConfirmacion('--TODOS--') }" width="100%" change="filtros_changeEvent(event)"/>
									<s:Spacer height="1"/>
									<label:Titulo_w100  text="Tipo Proveedor" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbTipo" creationComplete="{cmbTipo.cargarTipoProveedorConfirmacion('--TODOS--') }" width="100%" change="obtenerProveedores(event)"/>
									<s:Spacer height="1"/>
									<label:Titulo_w100  text="Proveedor" paddingTop="0" />
									<comboPqNet:ComboCatalogos id="cmbProveedores" width="100%" creationComplete="cargarProveedores()" change="filtros_changeEvent(event)"/>
									<s:Spacer height="15"/>
									<pqNet:botonPqNetLargo id="btnBusqueda"	width="100%" click="realizarBusqueda()" botonRedondo="true" icono="iconoActualizarNormal"/>
									<s:Spacer height="15"/>
									<otros:divisionHueca width="100%"/>
								</s:VGroup>
							</s:NavigatorContent>
						</pq:MobViewStack>
					</s:VGroup>
				</s:NavigatorContent>
			</pq:MobViewStack>
		</s:VGroup>
	</vistas:contenido>
</vistas:PanelPropiedadesPlantillas>