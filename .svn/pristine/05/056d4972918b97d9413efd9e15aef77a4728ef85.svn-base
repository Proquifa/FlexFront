<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:mate="http://mate.asfusion.com/"
			   xmlns:debug="com.asfusion.mate.utils.debug.*"
			   >
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.ActionListEvent;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.alertPqNet.EventoAlertaPqNet;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.popup.ModeloPopUp;
			import mx.com.proquifa.vista.eventos.EventoGestorCompras;
			import mx.com.proquifa.vista.eventos.registrarDespacho.EventoRegistrarDespacho;
			import mx.com.proquifa.vista.modelo.gestorCompras.ModeloGestorCompras;
			import mx.com.proquifa.vista.modelo.registrarDespacho.ModeloRegistrarDespacho;
			import mx.com.proquifa.vista.vistas.gestorCompras.componentes.registrarDespacho.VistaListaPartidas;
			import mx.com.proquifa.vista.vistas.gestorCompras.componentes.registrarDespacho.VistaLlenarPedimento;
			import mx.com.proquifa.vista.vistas.gestorCompras.componentes.registrarDespacho.VistaOperacionOrdenesRegistradas;
			import mx.com.proquifa.vista.vistas.gestorCompras.componentes.registrarDespacho.VistaRegistrarDespacho;
			import mx.com.proquifa.vista.vistas.gestorCompras.componentes.registrarDespacho.Graficas.GraficaBarraTipoTransitoRegistrarDespacho;
			
			protected function eventhandlers1_startHandler(event:ActionListEvent):void
			{
				trace((event.originalEvent as EventoGestorCompras).docOtro);
			}
			
		]]>
	</mx:Script>
	
	<mate:Debugger level="{Debugger.ALL}"/>	
	
	<!-- /////////////	OBTIENE ORDENES DESPACHO REGISTRADAS   ///////////	-->
	
	<mate:EventHandlers type="{EventoRegistrarDespacho.OBTENER_ORDEN_DESPACHO_REGISTRADAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.ORDENES_DESPACHO}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerOrdenesDespachoRegistrarDespacho"
								  arguments="{[event.usuario]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="setOrdenDespachoRegistradas"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="errorOrdenDespacho"
									arguments="{fault}" />
			</mate:faultHandlers> 
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	<mate:Injectors targets="{VistaRegistrarDespacho}">
		<mate:PropertyInjector source="{ModeloRegistrarDespacho}" 
							   sourceKey="obtenerOrdenDespachoRegistradas"
							   targetKey="obtenerOrdenesRegistradas"/>
	</mate:Injectors>
	<mate:Injectors targets="{GraficaBarraTipoTransitoRegistrarDespacho}">
		<mate:PropertyInjector source="{ModeloRegistrarDespacho}" 
							   sourceKey="obtenerTotalesTrasito"
							   targetKey="recibeInfoGraficos"/>
	</mate:Injectors>
	
	<!-- /////////////	OBTIENE TOTALES POR PROVEEDOR DE ORDENES DE DESPACHO REGISTRADAS   ///////////	-->
	
	<mate:EventHandlers type="{EventoRegistrarDespacho.OBTENER_ORDEN_DESPACHO_REGISTRADAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.ORDENES_DESPACHO}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerTotalesRegistrarDespacho"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="setObtenerTotalesOrden"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="errorOrdenDespacho"
									arguments="{fault}" />
			</mate:faultHandlers> 
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	<mate:Injectors targets="{VistaRegistrarDespacho}">
		<mate:PropertyInjector source="{ModeloRegistrarDespacho}" 
							   sourceKey="enviarTotalesOrden"
							   targetKey="recibeTotalPie"/>
	</mate:Injectors>
	
	<!-- /////////////	OBTIENE PARTIDAS DE PRODUCTOS DE ORDENES DE DESPACHO REGISTRADAS   ///////////	-->
	
	<mate:EventHandlers type="{EventoRegistrarDespacho.OBTENER_PARTIDAS_PRODUCTO_ORDEN_DESPACHO_REGISTRADAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.ORDENES_DESPACHO}"
								  endpoint="{Destinos.END_POINT}"
								  method="obtenerResumenOrdenDespacho"
								  arguments="{[event.idOrdenDespacho]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="setPartidasDeOrden"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="errorOrdenDespacho"
									arguments="{fault}" />
			</mate:faultHandlers> 
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	<mate:Injectors targets="{VistaListaPartidas}">
		<mate:PropertyInjector source="{ModeloRegistrarDespacho}" 
							   sourceKey="enviarPartidasDeOrden"
							   targetKey="recibeUniversoProductos"/>
	</mate:Injectors>
	
	<!-- /////////////	CERRAR PENDIENTE ORDENES DE DESPACHO REGISTRADAS   ///////////	-->
	
	<mate:EventHandlers type="{EventoRegistrarDespacho.CERRAR_PENDIENTE_ORDEN_DESPACHO_REGISTRADAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.ORDENES_DESPACHO}"
								  endpoint="{Destinos.END_POINT}"
								  method="cerrarPendienteRegistrarDespacho"
								  arguments="{[event.ordenDespacho,event.usuario]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="setRespuestaCierreOrden"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="errorOrdenDespacho"
									arguments="{fault}" />
			</mate:faultHandlers> 
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	<mate:Injectors targets="{VistaOperacionOrdenesRegistradas}">
		<mate:PropertyInjector source="{ModeloRegistrarDespacho}" 
							   sourceKey="enviarRespuestaCierreOrden"
							   targetKey="recibeRespuesta"/>
	</mate:Injectors>
	
	<!-- /////////////	OBTIEN LA IMAGEN DEL PDF PARA VISUALIZADOR   ///////////	-->
	
	<mate:EventHandlers type="{EventoRegistrarDespacho.OBTIENE_IMAGENES_ORDEN_DESPACHO_REGISTRADAS}">
		<mate:RemoteObjectInvoker destination="{Destinos.ORDENES_DESPACHO}"
								  endpoint="{Destinos.END_POINT}"
								  method="cargarDocumentoRegistrarDespacho"
								  arguments="{[event.ordenDespacho]}"
								  showBusyCursor="true">
			
			<mate:resultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="setListaImagenes"
									arguments="{[resultObject]}"/>
			</mate:resultHandlers>
			<mate:faultHandlers>
				<mate:MethodInvoker generator="{ModeloRegistrarDespacho}"
									method="errorOrdenDespacho"
									arguments="{fault}" />
			</mate:faultHandlers> 
		</mate:RemoteObjectInvoker>
	</mate:EventHandlers>
	
	
	<mate:Injectors targets="{VistaLlenarPedimento}">
		<mate:PropertyInjector source="{ModeloRegistrarDespacho}" 
							   sourceKey="envirListaImagenes"
							   targetKey="recibirListaImagenes"/>
	</mate:Injectors>
	
</mate:EventMap>




