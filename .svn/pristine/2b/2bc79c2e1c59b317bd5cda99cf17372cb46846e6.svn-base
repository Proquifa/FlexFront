<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:registrarVisita="mx.com.proquifa.vista.vistas.registrarVisita.*"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:otros="skins.otros.*" 
		 width="100%" height="100%" xmlns:componentes="mx.com.proquifa.vista.vistas.registrarVisita.componentes.*" 
		 creationComplete="init(event)" resize="calc(event)"
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.comun.EventoComboCatalogos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.OrdenDespacho;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Query;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			import mx.com.proquifa.vista.eventos.EventoGuardiaSeguridad;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import skins.catalogos.catalogoIconosBotoneras;
			public var universo:ArrayCollection;
			public var universoActual:ArrayCollection;
			[Bindable]public var totalVisita:int;
			[Bindable] public var sizeFont:Number;
			
			protected function init(event:FlexEvent):void
			{
				botoneraGuardia.addEventListener(EventoGuardiaSeguridad.CLIC_BOTONERA,cambiarTipoLista);
				/*cargarContactosFletera(true);*/
			}
			public function cambiarTipoLista(event:EventoGuardiaSeguridad):void
			{
				var odLista:ArrayCollection = new ArrayCollection();
				var todos:Boolean;
				var punteros:Array;
				var punterosAux:Array;
				var query:Query;
				var orden:OrdenDespacho;
				var tipoVista:String;
				var contador:int = 0;
				EventoGuardiaSeguridad.indiceSeleccionado = -1;
				punteros = new Array();
				query = new Query(universo,["fletera","nombreAgenteAduanal","tipoVisita"],true);
				
				/*if(botoneraGuardia.tipoSelect == "todos")
					todos=true;*/
					
				if(botoneraGuardia.tipoSelect == "fleteras" || botoneraGuardia.tipoSelect == "todos"){
					punteros = query.getPunteros(["fletera",null,null],"fletera");
					tipoVista = "FL";
				}
				else if(botoneraGuardia.tipoSelect == "agente"){
					punteros = query.getPunteros([null,"nombreAgenteAduanal",null],"nombreAgenteAduanal");
					tipoVista = "AA";
				}
				
				var listaTemp:ArrayCollection = new ArrayCollection();
				if(!todos){
					orden = new OrdenDespacho();
					var i:int = 1;
					contador = 0;
					for each (var campos:String in punteros) 
					{
						if(botoneraGuardia.tipoSelect == "fleteras" || botoneraGuardia.tipoSelect == "todos")
							punterosAux = query.getPunteros([campos,null],"fletera");
						else if(botoneraGuardia.tipoSelect == "agente")
							punterosAux = query.getPunteros([null,campos],"nombreAgenteAduanal");
						
						for each(var campTemporal:String in punterosAux){
							orden = ObjectUtil.copy(query.universo.getItemAt(punterosAux[0])) as OrdenDespacho;
							orden.tipoVista = tipoVista;
							listaTemp.addItem(orden);
						}
						
						/*orden = ObjectUtil.copy(query.universo.getItemAt(punteros[contador])) as OrdenDespacho;
						orden.tipoVista = tipoVista;
						listaTemp.addItem(orden);
						i++;
						contador++;*/
					}
					
					/*query = new Query(listaTemp,["fletera","nombreAgenteAduanal"],true);
					if(botoneraGuardia.tipoSelect == "fleteras" || botoneraGuardia.tipoSelect == "todos")
						punteros = query.getPunteros(["fletera",null],"fletera");
					else if(botoneraGuardia.tipoSelect == "agente")
						punteros = query.getPunteros([null,"nombreAgenteAduanal"],"nombreAgenteAduanal");*/
					
					/*contador = 0;
					for each(var campos:String in punteros){
						if(botoneraGuardia.tipoSelect == "fleteras" || botoneraGuardia.tipoSelect == "todos")
							punterosAux = query.getPunteros([campos,null],"fletera");
						else if(botoneraGuardia.tipoSelect == "agente")
							punterosAux = query.getPunteros([null,campos],"nombreAgenteAduanal");
						
						for each(var campTemporal:String in punterosAux){
							orden = ObjectUtil.copy(query.universo.getItemAt(punterosAux[0])) as OrdenDespacho;
							orden.tipoVista = tipoVista;
							odLista.addItem(orden);
						}
						
					}*/
					
					gridOrdenes.dataProvider = listaTemp;
					universoActual = ObjectUtil.copy(odLista) as ArrayCollection;
				}
				/*else{
					
					//QUITAR DESPUES, ESTA ES PARA TODOS
					punteros = query.getPunteros(['fletera'],'fletera');
					orden = new OrdenDespacho();
					var i:int = 1;
					contador = 0;
					for each (var fletera:String in punteros) 
					{
						punteros = query.getPunteros([fletera]);
						
						orden = ObjectUtil.copy(query.universo.getItemAt(punteros[contador])) as OrdenDespacho;
						orden.numFila = i;
						orden.tipoVista = "FL";
						odLista.addItem(orden);
						i++;
						contador++;
					}
					gridOrdenes.dataProvider = odLista;
					universoActual = ObjectUtil.copy(odLista) as ArrayCollection;
				}*/
				totalVisita = gridOrdenes.dataProvider.length
				dispatchEvent(new Event("asignarTipoVista"));
			}
			private function acomodarIndices():void
			{
				
			}
			public var current:OrdenDespacho;
			protected function cambioIndice(event:IndexChangeEvent):void
			{
				EventoGuardiaSeguridad.indiceSeleccionado = gridOrdenes.selectedIndex - 1; 
				if(botoneraGuardia.tipoSelect == "fleteras" || botoneraGuardia.tipoSelect == "todos"){
					var eve:EventoGuardiaSeguridad = new EventoGuardiaSeguridad(EventoGuardiaSeguridad.CAMBIO_LISTA_TIPO_FLETERA);
					eve.fletera = gridOrdenes.selectedItem.fletera;
					dispatchEvent(eve);
				}
				if(botoneraGuardia.tipoSelect == "agente"){
					var eve:EventoGuardiaSeguridad = new EventoGuardiaSeguridad(EventoGuardiaSeguridad.CAMBIO_LISTA_TIPO_AGENTE_ADUANAL);
					eve.agenteAduanal = gridOrdenes.selectedItem.nombreAgenteAduanal;
					dispatchEvent(eve);
				}
				if(gridOrdenes.selectedItem != null)
					EventoGuardiaSeguridad.idFletera = gridOrdenes.selectedItem.idFletera;
				
				if(gridOrdenes.selectedItem){
					if((gridOrdenes.selectedItem as OrdenDespacho).fletera == "")
						cargarContactosFletera(false);
					else
						cargarContactosFletera(true);
					
				}
			}
			
			protected function no_programado(event:MouseEvent):void
			{
				dispatchEvent(new Event("agerVisitaNoProgramada"));
			}
			
			protected function txtBuscador_changingHandler(event:TextOperationEvent):void
			{
				gridOrdenes.dataProvider = UtilsGrid.queryCampoXLikeDosCampos(universoActual,"fletera","horaMinuto",txtBuscador.text);
			}
			
			protected function calc(event:ResizeEvent):void
			{
				sizeFont = (17 / 572) * (unscaledWidth);
				sizeFont = sizeFont > 17 ? 17:sizeFont;
				sizeFont = sizeFont < 11 ? 11:sizeFont;
			}
			
			public function cargarContactosFletera(fletera:Boolean):void
			{
				var eveContacto:EventoComboCatalogos = new EventoComboCatalogos(EventoComboCatalogos.OBTENER_CONTACTOS_FLETERA);
				/*eveContacto.fletera = gridOrdenes.selectedItem.fletera;*/
				/*if(fletera == null)
				if(gridOrdenes.selectedItem.fletera != null)
				eveContacto.fletera = (gridOrdenes.selectedItem.fletera as String).toUpperCase();
				else
				eveContacto.fletera = fletera;*/
				
				eveContacto.isSolicitudDeHabilitados = true;
				if(fletera)
					eveContacto.tipo = "fletera";
				else
					eveContacto.tipo = "agenteAduanal";
				dispatchEvent(eveContacto);
			}
			
			
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" paddingBottom="20" paddingTop="14" paddingRight="20" horizontalAlign="center" gap="20" >
		
		<componentes:GuardiaSeguridad_botoneraVisita id="botoneraGuardia" width="100%" height="100%"/>
		<s:TextInput id="txtBuscador" prompt="Nombre, hora" width="100%" skinClass="skins.textinput.busqueda.skinTextInputBusqueda2D" change="txtBuscador_changingHandler(event)"/>
		
		<s:List width="100%" height="100%" borderVisible="false" horizontalScrollPolicy="off"
				id="gridOrdenes" contentBackgroundAlpha="0" change="cambioIndice(event)"
				itemRenderer="mx.com.proquifa.vista.vistas.registrarVisita.componentes.IR.IR_RegistarVisitaOrden"
				/>
		<s:VGroup width="100%" gap="10">
			<otros:division width="100%" grueso="1"/>
			<label:Texto_14_Helvetica id="lblTotalesVisitas" text="{ totalVisita+' '+(totalVisita == 1?'Visita':'Visitas')}" width="100%" textAlign="center" fontSize="{sizeFont}"/>
			<otros:division width="100%" grueso="1"/>
		</s:VGroup>  
		<mx:Image source="{catalogoIconosBotoneras.getInstance().no_programada}" click="no_programado(event)"/>
	</s:VGroup>  
</s:Group>
