<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*" 
		 xmlns:label="skins.skin.label.*"  xmlns:otros="skins.otros.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SolidColor id="sc1" color="#0099FF" alpha=".5"/>
		<s:SolidColor id="scPorCobrar" color="red" alpha=".5"/>
		<s:SolidColor id="scVerdeEnTiempo" color="#32CD32" alpha=".5"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.CategoryAxis;
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.chartClasses.CartesianTransform;
			import mx.charts.chartClasses.DataTransform;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Compra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.proveedor.OCTableroProveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.events.EventListenerRequest;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.GridEvent;
			[Bindable]
			private var _ocComprasGrafica:ArrayCollection;
			[Bindable]
			private var _ocComprasTab:ArrayCollection;
			[Bindable]
			private var _datosC:ObjetoTabla;
			
			private function maxConfirmacionCanceladas():void{	
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			public function actualizar():void{
				/* 				this.srvPedidos.send();
				this.srvGraficoPedidos.send(); */
			}
			
/* 			private function formateoEje(valor:Object, valorPrevio:Object, eje:Object):String{
				return this.formateoMoneda.format(valor);
			}
			
			public function dtFunc(hd:HitData):String {
				return 	"<B>No. pzas. pedidas:</B> "+ hd.item.piezas + "<BR>" + 
					"<B>No. pzas. canceladas:</B> "+ hd.item.pzasCanceladas + "<BR>" + 
					"<B>Monto pedido: </B>"+ this.formateoMoneda.format(hd.item.montoPedidoMensual) + "<BR>" +
					"<B>Monto cancelado: </B>" +this.formateoMoneda.format(hd.item.montoCanceladoMensual);
			} */
			
			private function gridItemClickEvent(event:ListEvent):void{	 	        	
				var tipoDocumento:String;
				var folioDocumento:String;
				var urlreq:URLRequest;
				var ruta:String;
				if (event.columnIndex == 1 ){
					var path:Object = Util.rutaNueva(this.gridPedidos.selectedItem.clave);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COMPRAS_RUTA + path.ruta + this.gridPedidos.selectedItem.clave +"-P.pdf";
					urlreq = new URLRequest ( ruta );	
					navigateToURL( urlreq );
				}	     
			}   
			
			/*        		private function gridItemClickEvent(event:ListEvent):void {	 
			var visor:VisorPDF;       
			if (event.columnIndex == 1) {	
			visor = VisorPDF(PopUpManager.createPopUp( this, VisorPDF , true));
			visor.tipoDocto="Pedido";
			visor.folio = this.gridPedidos.selectedItem.cpedido;
			}
			} */
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaTabla;
				}else{
					this.navegador.selectedChild = vistaGrafico;
				}
			}
			
			private function generaArchivo():void{ 
				var file2:File = new File();
				
				var dato0:Number = new Number;
				var dato1:String = new String;
				var dato2:String = new String;
				var dato3:String = new String;
				var dato4:String = new String;
				var dato5:String = new String;
				var dato6:String = new String;
				
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				//hoja = this.tablaVentasPeriodo.dataProvider as ArrayCollection;
				var longitud:int =  new int ;
				//longitud = gridPedidos.dataProvider.source.length
				longitud = this._ocComprasTab.length;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Compra");
				fila1[2] = hoja.addItem("Empresa");
				fila1[3] = hoja.addItem("Monto");
				fila1[4] = hoja.addItem("Moneda");
				fila1[5] = hoja.addItem("Tipo de cambio");
				fila1[6] = hoja.addItem("Monto USD");
				
				for(var i:int = 0 ; i<longitud ; i++ ){
					fila1 = new Array();	
					
					dato0 = (this.gridPedidos.dataProvider[i] ).numeroDeFila;
					dato1 = (this.gridPedidos.dataProvider[i] ).clave;
					dato2 = (this.gridPedidos.dataProvider[i] ).empresa;
					dato3 = '"'+ (this.gridPedidos.dataProvider[i] ).montoTotalFormato +'"'; /* this.aplicarFormato((this.gridPedidos.dataProvider[i] ).monto); */
					dato4 = (this.gridPedidos.dataProvider[i] ).moneda;
					dato5 = '"'+ (this.gridPedidos.dataProvider[i] ).tipoCambio +'"'; /* this.aplicarFormatoTipoCambio((this.gridPedidos.dataProvider[i] ).tipoCambio); */
					dato6 = '"'+(this.gridPedidos.dataProvider[i] ).montoTotalDolaresFormato +'"'; /* this.aplicarFormato((this.gridPedidos.dataProvider[i] ).montoDolares); */
					
					fila1[0] = dato0;
					fila1[1] = dato1;
					fila1[2] = dato2;
					fila1[3] = dato3;
					fila1[4] = dato4;
					fila1[5] = dato5;
					fila1[6] = dato6;
					
					hoja.addItem('\r' + fila1 );
					fila1 = null;
					
				}
				
				file2.save( hoja, "MaxOCconfirmadasCanceladas.csv");
				
			}
			
	/* 		private function aplicarFormato(data:Number):String{
				return formatoExcel.format(data).toString();
			}
			
			private function aplicarFormatoTipoCambio(dato:Number):String{
				return formatoTipoCambio.format(dato).toString();
			} */
			
			public function seleccionaTabla():void{
				this.navegador.selectedChild = this.vistaTabla;
			}
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}
			/**
			 * Metodo que recibe del mapa  Compras Grafica
			 */
			public function set obtenerOCCompras(comprasGraf:ArrayCollection):void{
				if (comprasGraf==null){
					return ;
				}
				this._ocComprasGrafica = comprasGraf;
			}
			
			public function set cargaDatosCompras(datosCompra:ObjetoTabla):void{
				if(datosCompra == null){
					return;
				}
				this._datosC = datosCompra;
				var evento:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.CARGA_DATOS_COMPRAS);
				evento.idProveedor = _datosC.idProveedor;
				evento.anioInt = _datosC.anioInt;
				evento.periodo = _datosC.periodo;
				evento.tipoPeriodo = _datosC.tipoPeriodo;
				evento.mes = _datosC.mes;
				dispatchEvent(evento);
			}
			
			/**
			 * Metodo que recibe del mapa  para Compras en la  tabla
			 */
			public function set obtenerOCComprasTabla(compra:ArrayCollection):void{
				if (compra==null){
					return ;
				}
				this._ocComprasTab = compra;
			}		
		]]>
	</fx:Script>
	<s:Panel width="100%" height="100%" title="COMPRAS">

<!--		<mx:CurrencyFormatter id="formatoExcel" precision="2" currencySymbol="$" useThousandsSeparator="false"/>
		<mx:NumberFormatter id="formatoTipoCambio" decimalSeparatorFrom="." decimalSeparatorTo="." precision="2" useThousandsSeparator="false" rounding="none"/>
		<mx:CurrencyFormatter id="formateoMoneda" precision="2"/>-->
		
		<mx:ViewStack  id="navegador" width="100%" height="100%">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<label:labelSubtitulo text="Compras"/>
				<mx:Legend id="idLegend" dataProvider="{myChart}" direction="vertical"/>
				<mx:ColumnChart width="100%" height="100%" id="myChart" dataProvider="{this._ocComprasGrafica}"			
								mouseSensitivity="5" showDataTips="true" dataTipMode="multiple"> <!--dataTipFunction="dtFunc"-->
					<mx:series>
						<mx:ColumnSeries 						
							id="serieAET"
							xField="etiquetaMes" 
							yField="cantidadesT" 
							displayName="Cantidad Confirmada"
							fills="{[scVerdeEnTiempo]}" 
							/>
						<mx:ColumnSeries 	                	
							id="serieAFT"
							xField="etiquetaMes" 
							yField="cantidadesFT" 
							displayName="Cantidad Cancelada"
							fills="{[scPorCobrar]}" 
							/>	                
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="vMes" categoryField="etiquetaMes" title="Meses"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="vCantidad" baseAtZero="true" title="Cantidad de partidas"/>
					</mx:verticalAxis>			
				</mx:ColumnChart>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio2" click="maxConfirmacionCanceladas()" width="60"/>
				</mx:HBox>
			</mx:VBox>		
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<label:labelSubtitulo text="Compras"/>
				<mx:DataGrid id="gridPedidos" dataProvider="{this._ocComprasTab}" textAlign="center" width="100%" height="100%"  itemClick="gridItemClickEvent(event)" variableRowHeight="true">
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numeroDeFila" width="50"/>
						<mx:DataGridColumn headerText="Compra" dataField="clave"  width="170">
							<mx:itemRenderer>
								<fx:Component>
									<mx:LinkButton label="{data.clave}" color="blue" toolTip="Ver OCompra" />
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="Empresa" dataField="empresa"/>
						<mx:DataGridColumn headerText="Monto" dataField="montoTotalFormato" width="150"/>
						<mx:DataGridColumn headerText="Moneda" dataField="moneda" width="150"/>
						<mx:DataGridColumn headerText="Tipo de cambio" dataField="tipoCambio" width="150"/>
						<mx:DataGridColumn  headerText="Monto USD" dataField="montoTotalDolaresFormato" width="150"/>
					</mx:columns>
				</mx:DataGrid>
				<!--<s:DataGrid id="gridPedidos" dataProvider="{this._ocComprasTab}" 
							 width="100%" height="100%"  gridClick="gridItemClickEvent(event)" variableRowHeight="true">
					<s:columns>
						<s:ArrayList>
							<formato:GridColumnFormato formato="numfila" headerText="#" guardarFormato="numeroDeFila" /> 
							<s:GridColumn headerText="Compra" dataField="clave" > 
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<mx:LinkButton label="{data.clave}" color="blue" toolTip="Ver OCompra" />
										</s:GridItemRenderer>							      
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn headerText="Empresa" dataField="empresa">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label width="100%" height="100%" text="{data.empresa}" verticalAlign="middle" textAlign="center"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<formato:GridColumnFormato formato="moneda" headerText="Monto" dataField="montoTotal"  guardarFormato="totalMonto"/>
							<s:GridColumn headerText="Moneda" dataField="moneda">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label width="100%" height="100%" text="{data.moneda}" verticalAlign="middle" textAlign="center" verticalCenter="8"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn  headerText="Tipo de cambio" dataField="tipoCambio">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label width="100%" height="100%" text="{data.tipoCambio}" verticalAlign="middle" textAlign="center"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<formato:GridColumnFormato formato="moneda" headerText="Monto USD" dataField="montoTotalDolares" guardarFormato="totalDolares"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>-->
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="70"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxConfirmacionCanceladas()" width="70"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" click="generaArchivo()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	</s:Panel>
</s:Group>
