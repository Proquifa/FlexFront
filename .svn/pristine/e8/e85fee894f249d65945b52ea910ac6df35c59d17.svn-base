<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:componentes ="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" width="100%" height="100%" 
		 xmlns:graficas="skins.skin.graficas.*">

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.cobrosypagos.Factura;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.utils.ObjectUtil;
			
			public function recibeDatapProvider( $datos:ArrayCollection ):void{
				var universo:ArrayCollection = new ArrayCollection();
				universo = ObjectUtil.copy( $datos ) as ArrayCollection;				
				var universoParaClientes:ArrayCollection = new ArrayCollection();
				var arregloResumenConsulta:ArrayCollection = new ArrayCollection();
				var resumenConsulta:ResumenConsulta = new ResumenConsulta();
				var seAgrego:Boolean;
				
				
				for each (var obj:Factura in $datos) 
				{
					if ( obj.rutaRelacionada.zonaMensajeria == "DHL" || obj.rutaRelacionada.zonaMensajeria == "ESTAFETA" || 
						obj.rutaRelacionada.zonaMensajeria == "FEDEX" || obj.rutaRelacionada.zonaMensajeria == "UPS") {
						obj.rutaRelacionada.zonaMensajeria = 'GUADALAJARA';
					}
				}
				
				
				//se agrupa todo el universo por cliente
				for( var m:int = 0; m < universo.length; m++ ){
					if(universoParaClientes.length == 0 ){ 
						universoParaClientes.addItem( universo[m] );
					}else{
						seAgrego= false;
						for( var x:int = 0; x < universoParaClientes.length; x++ ){
							if( ( universoParaClientes[x] as Factura ).nombre_Cliente == ( universo[m] as Factura ).nombre_Cliente ){
								seAgrego = true;
								x = universoParaClientes.length;
							}
						}
						if( !seAgrego ){
							universoParaClientes.addItem( universo[m] );
						}
					}
				}
				//se generan los datos para la grafica
				for( var i:int = 0; i < $datos.length; i++){
					( $datos[i] as Factura).numFila = i+1;
					var currentItem:Factura = $datos[i] as Factura;
					resumenConsulta = new ResumenConsulta();
					resumenConsulta.etiqueta = currentItem.rutaRelacionada.zonaMensajeria;
					resumenConsulta.total = currentItem.montoFacturaDLS;
					resumenConsulta.totalEntregas = 1;
					resumenConsulta.partidas = currentItem.rutaRelacionada.numeroPartidasRuta;
					resumenConsulta.piezasTotal = currentItem.numeroPiezasPedidoRelacionado;
					if( arregloResumenConsulta.length == 0 ){
						arregloResumenConsulta.addItem( resumenConsulta );
					}else{
						seAgrego=false;
						for( var n:int = 0; n < arregloResumenConsulta.length; n++ ){
							if( (arregloResumenConsulta[n] as ResumenConsulta).etiqueta ==  currentItem.rutaRelacionada.zonaMensajeria ){
								(arregloResumenConsulta[n] as ResumenConsulta).total = (arregloResumenConsulta[n] as ResumenConsulta).total + resumenConsulta.total;
								//solo se suman las cantidades necesarias//(arregloResumenConsulta[n] as ResumenConsulta).clientes = (arregloResumenConsulta[n] as ResumenConsulta).clientes + resumenConsulta.clientes;
								(arregloResumenConsulta[n] as ResumenConsulta).totalEntregas = (arregloResumenConsulta[n] as ResumenConsulta).totalEntregas + resumenConsulta.totalEntregas;
								(arregloResumenConsulta[n] as ResumenConsulta).partidas = (arregloResumenConsulta[n] as ResumenConsulta).partidas + resumenConsulta.partidas;
								(arregloResumenConsulta[n] as ResumenConsulta).piezasTotal = (arregloResumenConsulta[n] as ResumenConsulta).piezasTotal + resumenConsulta.piezasTotal;
								seAgrego = true;
								n = arregloResumenConsulta.length;
							}
						}
						if( !seAgrego ){
							arregloResumenConsulta.addItem( resumenConsulta );
						}
					}
				}
				//se recorre el arreglo filtrado para la grafica y se agrega el total de cientes
				for( var r:int = 0; r < arregloResumenConsulta.length; r++ ){
					for( var rr:int = 0; rr < universoParaClientes.length; rr++ ){
						if( (arregloResumenConsulta[r] as ResumenConsulta ).etiqueta == ( universoParaClientes[rr] as Factura).rutaRelacionada.zonaMensajeria ){
							(arregloResumenConsulta[r] as ResumenConsulta ).clientes = (arregloResumenConsulta[r] as ResumenConsulta ).clientes + 1;
						}
					}
				}
				myChart.dataProvider = myChart.aplicarFormatoConsultaEntregas( arregloResumenConsulta);
			}
		]]>
	</fx:Script>
	<s:Spacer width="100%" height="30%"/>
	<graficas:PieChartPqGris id="myChart" width="100%" height="100%"  etiquetasHabilitadas="true" habilitarResumen="true"
							 dataProvider="{null}" lineasHabilitadas="true"
							 showDataTips="false"  innerRadius=".5">  
		<graficas:series>
			<graficas:pieSeriesPqNet field="total"/>
		</graficas:series>
	</graficas:PieChartPqGris>
	<componentes:tituloChartTablero width="100%" text="ZONA" textAlign="center"/>
	<s:Spacer width="100%" height="5%"/>
</s:VGroup>