<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:formato ="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.*" creationComplete="init()"
		 xmlns:label="skins.skin.label.*"  xmlns:otros="skins.otros.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:SolidColor id="sc1" color="#0099FF" alpha=".3"/>
		<s:SolidColor id="sc2" color="red" alpha=".3"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.utils.flash_proxy;
			
			import mx.charts.CategoryAxis;
			import mx.charts.HitData;
			import mx.charts.LinearAxis;
			import mx.charts.chartClasses.CartesianTransform;
			import mx.charts.chartClasses.DataTransform;
			import mx.charts.chartClasses.Series;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTableroProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.comun.EventoTablero;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.compras.PartidaCompra;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.tableros.compras.proveedores.ObjetoTabla;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.grid.numFila;
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			
			import spark.events.GridEvent;
			[Bindable]	
			private var _partidaTiempo:ArrayCollection = new ArrayCollection();	
			[Bindable]
			private var _oCompraRecibida:ArrayCollection = new ArrayCollection();	
			[Bindable]
			private var _datosR:ObjetoTabla;
			
			private function init():void{
				this.myChart;
				this.gridPedidos;
			}
			
			
			private function maxOCRecibido():void{	
				//var evt:Event = new Event("maxOCRecibido",true,false);
				var evt:EventoTablero = new EventoTablero(EventoTablero.VOLVER_A_TABLERO);
				dispatchEvent(evt);			
			}
			
			public function actualizar():void{
				this.myChart;
			}
			
			private function gridItemClickEvent(event:ListEvent):void{	 	        	
				var tipoDocumento:String;
				var folioDocumento:String;
				var urlreq:URLRequest;
				var ruta:String;
				
				if (event.columnIndex == 1 ){
					var path:Object = Util.rutaNueva(this.gridPedidos.selectedItem.compra);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COMPRAS_RUTA + path.ruta + this.gridPedidos.selectedItem.compra +"-P.pdf";
					urlreq = new URLRequest ( ruta );	
					navigateToURL( urlreq );
				}	     
			}   
			
			public function set vista(tipoVista:String):void{
				if (tipoVista == "tabla"){
					this.navegador.selectedChild = vistaTabla;
				}else{
					this.navegador.selectedChild = vistaGrafico;
				}
			}
			
			/**
			 * Metodo que recibe del mapa las partidas en tiempo y fuera de  tiempo
			 */
			public function set obtenerPartidasEnTiempo(partida:ArrayCollection):void{
				if (partida==null){
					return ;
				}
				this._partidaTiempo = partida;
			}
			
			public function set cargaDatosRecibida(datoRecibida:ObjetoTabla):void{
				if(datoRecibida == null){
					return;
				}
				this._datosR = datoRecibida;
				var evento:EventoTableroProveedores = new EventoTableroProveedores(EventoTableroProveedores.CARGA_DATOS_RECIBIDAS);
				evento.idProveedor = _datosR.idProveedor;
				evento.anioInt = _datosR.anioInt;
				evento.periodo = _datosR.periodo;
				evento.tipoPeriodo = _datosR.tipoPeriodo;
				evento.mes = _datosR.mes;
				dispatchEvent(evento);
			}
			
			public function set obtenerPartidasCompraEnTyFT(ocRecibida:ArrayCollection): void{
				if (ocRecibida == null){
					return;
				}
				this._oCompraRecibida = ocRecibida;
			}
			
			private function generaArchivo():void{ 
				var file2:File = new File();
				
				var dato0:String = new String;
				var dato1:String = new String;
				var dato2:String = new String;
				var dato3:String = new String;
				var dato4:String = new String;
				var dato5:String = new String;
				var dato6:String = new String;
				var dato7:String = new String;
				var dato8:String = new String;
				var dato9:String = new String;
				var dato10:String = new String;
				var dato11:String = new String;
				var dato12:String = new String;
				
				var hoja:ArrayCollection = new ArrayCollection();
				var fila1:Array = null;
				//hoja = this.tablaVentasPeriodo.dataProvider as ArrayCollection;
				var longitud:int =  new int ;
				longitud = this._oCompraRecibida.length;
				fila1 = new Array();
				fila1[0] = hoja.addItem("#");
				fila1[1] = hoja.addItem("Orden compra");
				fila1[2] = hoja.addItem("Factura Proveedor");
				fila1[3] = hoja.addItem("Concepto");
				fila1[4] = hoja.addItem("Cantidad");
				fila1[5] = hoja.addItem("FEA (UE)");
				fila1[6] = hoja.addItem("FRA (UE)");
				fila1[7] = hoja.addItem("FEA (USA)");
				fila1[8] = hoja.addItem("FRA (USA)");
				fila1[9] = hoja.addItem("FEA (MEX)");
				fila1[10] = hoja.addItem("FRA (MEX)");
				fila1[11] = hoja.addItem("TR");
				fila1[12] = hoja.addItem("Estado");
				
				
				for(var i:int = 0 ; i<longitud ; i++ ){
					fila1 = new Array();	
					gridPedidos.selectedIndex = i;
					trace(gridPedidos.selectedItem);
					dato0 = (this.gridPedidos.dataProvider[i] ).numeroDeFila;
					dato1 = (this.gridPedidos.dataProvider[i] ).compra;
					dato2 = (this.gridPedidos.dataProvider[i] ).facturaProveedor;
					dato3 = '"'+ (this.gridPedidos.dataProvider[i] ).descripcionProducto +'"';
					dato4 = (this.gridPedidos.dataProvider[i] ).cantidad;
					dato5 = (this.gridPedidos.dataProvider[i] ).fechaPharmaUEFormato;
					dato6 = (this.gridPedidos.dataProvider[i] ).fechaRealArriboUEFormato;
					dato7 = (this.gridPedidos.dataProvider[i] ).fechaPharmaFormato;
					dato8 = (this.gridPedidos.dataProvider[i] ).fechaRealArriboUSAFormato;
					dato9 = (this.gridPedidos.dataProvider[i] ).fechaProquifaFormato;
					dato10 = (this.gridPedidos.dataProvider[i] ).fechaRealArriboPQFFormato;
					dato11 = (this.gridPedidos.dataProvider[i] ).tiempoRespuesta;
					dato12 = (this.gridPedidos.dataProvider[i] ).estado;
					
					fila1[0] = dato0;
					fila1[1] = dato1;
					fila1[2] = dato2;
					fila1[3] = dato3;
					fila1[4] = dato4;
					fila1[5] = dato5;
					fila1[6] = dato6;
					fila1[7] = dato7;
					fila1[8] = dato8;
					fila1[9] = dato9;
					fila1[10] = dato10;
					fila1[11] = dato11;
					fila1[12] = dato12;
					
					hoja.addItem('\r' + fila1 );
					fila1 = null;
					
				}
				
				file2.save( hoja, "MaxOCRecibido.csv");
				
			}
			
			
			public function fallo(evento:FaultEvent):void{
				Alert.show(evento.message.toString(), "ERROR");
			}
			
			public function seleccionaTabla():void{
				this.navegador.selectedChild = this.vistaTabla;
			}
			public function seleccionarGrafica():void{
				this.navegador.selectedChild = this.vistaGrafico;
			}
		]]>
	</fx:Script>
	<!--<s:Panel width="100%" height="100%" title="OC RECIBIDA" dropShadowVisible="false">-->
		<!--<mx:CurrencyFormatter id="formateoMoneda" precision="2"/>-->
		<!--<mx:DateFormatter id="validadorfecha" formatString="DD-MMM-YYYY"/>-->
		
		<mx:ViewStack  id="navegador" width="100%" height="100%">
			<mx:VBox id="vistaGrafico" width="100%" height="100%">
				<label:labelSubtitulo text="Oc recibida"/>
				<mx:Legend id="idLegend" dataProvider="{myChart}" direction="vertical"/>
				<mx:ColumnChart width="100%" height="100%" id="myChart" dataProvider="{this._partidaTiempo}"			
								mouseSensitivity="5" showDataTips="true" dataTipMode="multiple"> 
					<mx:series>
						<mx:ColumnSeries 						
							id="serieAET"
							xField="etiquetaMes" 
							yField="cantidadesT" 
							displayName="Cantidad En tiempo"
							fills="{[sc1]}" 
							/>
						<mx:ColumnSeries 	                	
							id="serieAFT"
							xField="etiquetaMes" 
							yField="cantidadesFT" 
							displayName="Cantidad Fuera de tiempo"
							fills="{[sc2]}" 
							/>	                
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="vMes" categoryField="etiquetaMes" title="Meses"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="vCantidad" baseAtZero="true" title="Cantidad de partidas"/>
					</mx:verticalAxis>			
				</mx:ColumnChart>
				<mx:HBox id="controlbar2" width="100%" paddingBottom="10" paddingTop="10">
					<mx:Button label="Tabla" id="btnTabla" click="navegador.selectedChild = vistaTabla" width="60"/>
					<mx:Button label="Inicio" id="btnInicio2" click="maxOCRecibido()" width="60"/>
				</mx:HBox>
			</mx:VBox>		
			<mx:VBox id="vistaTabla" width="100%" height="100%">
				<label:labelSubtitulo text="Oc recibida"/>
				<mx:DataGrid id="gridPedidos" dataProvider="{this._oCompraRecibida}"  width="100%" height="100%" itemClick="gridItemClickEvent(event)" 
							 variableRowHeight="true" textAlign="center" >
					<mx:columns>
						<mx:DataGridColumn headerText="#" dataField="numeroDeFila" width="50"/>
						<mx:DataGridColumn headerText="Orden compra" dataField="compra" >
							<mx:itemRenderer>
								<fx:Component>
									<mx:LinkButton label="{data.compra}" color="blue" toolTip="Ver OC" textAlign="center" verticalCenter="5" horizontalCenter="5"/>
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="Factura Proveedor" dataField="facturaProveedor" />
						<mx:DataGridColumn headerText="Concepto" dataField="descripcionProducto" />
						<mx:DataGridColumn headerText="Cantidad" dataField="cantidad"/>
						<mx:DataGridColumn headerText="FEA (UE)" dataField="fechaPharmaUEFormato" id="fechaUE"/>
						<mx:DataGridColumn headerText="FRA (UE)" dataField="fechaRealArriboUEFormato"/>
						<mx:DataGridColumn headerText="FEA (USA)" dataField="fechaPharmaFormato"/>
						<mx:DataGridColumn headerText="FRA (USA)" dataField="fechaRealArriboUSAFormato" />						
						<mx:DataGridColumn headerText="FEA (MEX)" dataField="fechaProquifaFormato"/> 
						<mx:DataGridColumn headerText="FRA (MEX)" dataField="fechaRealArriboPQFFormato"/>
						<mx:DataGridColumn headerText="TR" dataField="tiempoRespuesta">
							<mx:itemRenderer>
								<fx:Component>
									<mx:Label width="100%" height="100%" toolTip="Tiempo de Respuesta" text="{data.tiempoRespuesta}" textAlign="center" />
								</fx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="Estado" dataField="estado" />
					</mx:columns>
				</mx:DataGrid>
				<!--<s:DataGrid id="gridPedidos" dataProvider="{this._oCompraRecibida}"
							 width="100%" height="100%" gridClick="gridItemClickEvent(event)" 
							 variableRowHeight="true" >
					<s:columns>
						<s:ArrayList>	
						<formato:GridColumnFormato formato="numfila" headerText="#" dataField="numfila" id="numerofila" guardarFormato="numeroDeFila"/>
						<s:GridColumn headerText="Orden compra" dataField="compra" >
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<mx:LinkButton label="{data.compra}" color="blue" toolTip="Ver OC" textAlign="center" verticalCenter="5" horizontalCenter="5"/>
									</s:GridItemRenderer>							      
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						
						<s:GridColumn headerText="Factura Proveedor" dataField="facturaProveedor" >
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:Label width="100%" height="100%" text="{data.facturaProveedor}" textAlign="center" verticalAlign="middle"/>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						
						<s:GridColumn headerText="Concepto" dataField="descripcionProducto" /> 
						
						<s:GridColumn headerText="Cantidad" dataField="cantidad">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:Label width="100%" height="100%" text="{data.cantidad}" textAlign="center" verticalAlign="middle"/>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						
						<formato:GridColumnFormato formato="fecha" headerText="FEA (UE)" dataField="fechaPharmaUE" guardarFormato="fechaformatoUE" id="fechaUE"/> 
						
						<formato:GridColumnFormato formato="fecha" headerText="FRA (UE)" dataField="fechaRealArriboUE" guardarFormato="fechaFormatoRAUE"/>
						
						<formato:GridColumnFormato formato="fecha" headerText="FEA (USA)" dataField="fechaPharma" guardarFormato="fechaFormatoPharma" /> 
						
						<formato:GridColumnFormato formato="fecha" headerText="FRA (USA)" dataField="fechaRealArriboUSA" guardarFormato="fechaFormatoRAUSA" />
						
						<formato:GridColumnFormato formato="fecha" headerText="FEA (MEX)" dataField="fechaProquifa" guardarFormato="fechaFormatoProquifa"/>  
						
						<formato:GridColumnFormato formato="fecha" headerText="FRA (MEX)" dataField="fechaRealArriboPQF" guardarFormato="fechaFormatoRAPQF" />
						
						<s:GridColumn headerText="TR" dataField="tiempoRespuesta">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:Label width="100%" height="100%" toolTip="Tiempo de Respuesta" text="{data.tiempoRespuesta}" textAlign="center" verticalAlign="middle"/>
									</s:GridItemRenderer>					
								</fx:Component>
							</s:itemRenderer>	
						</s:GridColumn>		
						<s:GridColumn headerText="Estado" dataField="estado" >
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:Label width="100%" height="100%" text="{data.estado}" textAlign="center" verticalAlign="middle"/>
									</s:GridItemRenderer>									
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>-->
				<mx:HBox id="controlbar1" width="100%" paddingBottom="10" paddingTop="10">
					<s:Button styleName="botonNegroOld" label="Gráfico" id="btnGrafico" click="navegador.selectedChild = vistaGrafico" width="75"/>
					<s:Button styleName="botonNegroOld" label="Inicio" id="btnInicio" click="maxOCRecibido()" width="75"/>
					<mx:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Exportar" id="btnExportar" width="75" click="generaArchivo()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:ViewStack>
	<!--</s:Panel>-->
</s:Group>
