<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:botonesToggle="skins.botonesToggle.*" 
		 xmlns:otros="skins.otros.*" creationComplete="init()" paddingBottom="15">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.graficosEstadisticaGestionarVisitas.ChartEstadisticaContactosGVisitas;
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.graficosEstadisticaGestionarVisitas.ChartEstadisticaNivelDecisionGVisitas;
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.graficosEstadisticaGestionarVisitas.ChartEstadisticaOrigenGVisitas;
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.graficosEstadisticaGestionarVisitas.ChartEstadisticaUrgenciaGVisitas;
			
			public var grafica1:ChartEstadisticaContactosGVisitas = new ChartEstadisticaContactosGVisitas();
			public var grafica2:ChartEstadisticaNivelDecisionGVisitas = new ChartEstadisticaNivelDecisionGVisitas();
			public var grafica3:ChartEstadisticaOrigenGVisitas = new ChartEstadisticaOrigenGVisitas();
			public var grafica4:ChartEstadisticaUrgenciaGVisitas = new ChartEstadisticaUrgenciaGVisitas();
			[Bindable] private var _arrGrafico:ArrayCollection = new ArrayCollection(); 
			[Bindable] private var _arrVisitas:ArrayCollection = new ArrayCollection();
			[Bindable] private var _arrButton:ArrayCollection = new ArrayCollection([{label:"Solicitudes"},
																					{label:"Visitas"}]);
			
			private var _numSolicitudes:int = 0;
			private var _numVisitas:int = 0;
			private var _et:int = 0;
			private var _ft:int = 0;
			private var objSolicitud:SolicitudVisita;
			
			private function init():void{
				var graf:ArrayCollection = new ArrayCollection();
				graf.addItem(grafica1);
				graf.addItem(grafica2);
				graf.addItem(grafica3);
				graf.addItem(grafica4);
				
				for(var d:int = 0; d<graf.length ; d++){
					this.espacioGrafico.addElement(graf[d]);
				}
			}
			
			public function set recibeListaContactos($lista:ArrayCollection):void{
				if($lista == null) return;
				_numSolicitudes = 0;
				_et = 0;
				_ft = 0;
				
				_arrGrafico = $lista;
				grafica1.recibeContactos(_arrGrafico,'Solicitudes');
				grafica2.recibeNivelDecision(_arrGrafico,'Solicitudes');
				grafica3.recibeOrigen(_arrGrafico,'Solicitudes');
				grafica4.recibeUrgencia(_arrGrafico,'Solicitudes');
				
				var arrTemp:ArrayCollection = ObjectUtil.copy(_arrGrafico) as ArrayCollection;
				
				if(arrTemp.length != 0){
					this.cliente.text = ((arrTemp[0] as SolicitudVisita).cliente.nombre == null ? 'ND' : (arrTemp[0] as SolicitudVisita).cliente.nombre) +' · '+ ((arrTemp[0] as SolicitudVisita).cliente.nivelIngreso == null ? 'ND' : (arrTemp[0] as SolicitudVisita).cliente.nivelIngreso);
					this.detalles.text = ((arrTemp[0] as SolicitudVisita).cliente.industria == null ? 'ND' : (arrTemp[0] as SolicitudVisita).cliente.industria ) +' · '+ ((arrTemp[0] as SolicitudVisita).cliente.rol == null ? 'ND' : (arrTemp[0] as SolicitudVisita).cliente.rol) +' · '+ ((arrTemp[0] as SolicitudVisita).cliente.sector == null ? 'ND' : (arrTemp[0] as SolicitudVisita).cliente.sector);
				}
				
				for(var i:int = 0; i<arrTemp.length ; i++){
					if((arrTemp[i] as SolicitudVisita).folioVisita != 'ND'){
						arrTemp.removeItemAt(i);
						i = i - 1;
					}
				}
				
				while(arrTemp.length > 0 ){
					objSolicitud = new SolicitudVisita();
					objSolicitud = (arrTemp[0] as SolicitudVisita);
					for(var d:int = 0; d<arrTemp.length ;  d++){
						if(objSolicitud.contacto.idContacto == (arrTemp[d] as SolicitudVisita).contacto.idContacto){
							_numSolicitudes += 1;	
							if((arrTemp[d] as SolicitudVisita).tiempoRealizacion == 'FT' ){
								_ft += 1;
							}else{
								_et += 1;
							}
							arrTemp.removeItemAt(d);
							d = d - 1;
						}	
					}
					
				}

			//	if(_arrGrafico.length != 0){
			//		this.cliente.text = ((_arrGrafico[0] as SolicitudVisita).cliente.nombre == null ? 'ND' : (_arrGrafico[0] as SolicitudVisita).cliente.nombre) +' · '+ ((_arrGrafico[0] as SolicitudVisita).cliente.nivelIngreso == null ? 'ND' : (_arrGrafico[0] as SolicitudVisita).cliente.nivelIngreso);
			//		this.detalles.text = ((_arrGrafico[0] as SolicitudVisita).cliente.industria == null ? 'ND' : (_arrGrafico[0] as SolicitudVisita).cliente.industria ) +' · '+ ((_arrGrafico[0] as SolicitudVisita).cliente.rol == null ? 'ND' : (_arrGrafico[0] as SolicitudVisita).cliente.rol) +' · '+ ((_arrGrafico[0] as SolicitudVisita).cliente.sector == null ? 'ND' : (_arrGrafico[0] as SolicitudVisita).cliente.sector);
					this.infoConteo.text = _numSolicitudes +(_numSolicitudes == 1 ? ' Solicitud · ' : ' Solicitudes · ')+ _et + ' ET · '+ _ft +' FT';	
			//	}
				
				botoneraBarra.selectedIndex = 0;
			}
			
			private function seleccionBotonBar(evt:Event):void{
				_arrVisitas = new ArrayCollection();
				_numSolicitudes = 0;
				_et = 0;
				_ft = 0;
				var clase:String;
				var propiedad:String;
				
				grafica1.recibeContactos(_arrGrafico,evt.target.selectedItem.label);
				grafica2.recibeNivelDecision(_arrGrafico,evt.target.selectedItem.label);
				grafica3.recibeOrigen(_arrGrafico,evt.target.selectedItem.label);
				grafica4.recibeUrgencia(_arrGrafico,evt.target.selectedItem.label);
				
				
				var arrTemp:ArrayCollection = ObjectUtil.copy(_arrGrafico) as ArrayCollection;
				
				if(evt.target.selectedItem.label == 'Solicitudes'){
					clase = 'contacto';
					propiedad = 'idContacto';
					for(var i:int = 0; i<arrTemp.length ; i++){
						if((arrTemp[i] as SolicitudVisita).folioVisita != 'ND'){
							arrTemp.removeItemAt(i);
							i = i - 1;
						}
					}
				}else{
					propiedad = 'folioVisita';
					for(var f:int = 0; f<arrTemp.length ; f++){
						if((arrTemp[f] as SolicitudVisita).folioVisita == 'ND'){
							arrTemp.removeItemAt(f);
							f = f - 1;
						}
					}
				} 

				while(arrTemp.length > 0 ){
					objSolicitud = new SolicitudVisita();
					objSolicitud = (arrTemp[0] as SolicitudVisita);
					for(var d:int = 0; d<arrTemp.length ;  d++){
						if(evt.target.selectedItem.label == 'Solicitudes'){
							if((objSolicitud as SolicitudVisita)[clase][propiedad] == (arrTemp[d] as SolicitudVisita)[clase][propiedad]){
								_numSolicitudes += 1;	
								if((arrTemp[d] as SolicitudVisita).tiempoRealizacion == 'FT' ){
									_ft += 1;
								}else{
									_et += 1;
								}
								arrTemp.removeItemAt(d);
								d = d - 1;
							}	
						}else{
							if((objSolicitud as SolicitudVisita)[propiedad] == (arrTemp[d] as SolicitudVisita)[propiedad]){
								_numSolicitudes += 1;	
								if((arrTemp[d] as SolicitudVisita).tiempoRealizacion == 'FT' ){
									objSolicitud.fueraDeTiempo += 1;
									//_ft += 1;
								}else{
									objSolicitud.enTiempo += 1;
									//_et += 1;
								}
								
								arrTemp.removeItemAt(d);
								d = d - 1;
							}
						}	
					}
					
					if(evt.target.selectedItem.label != 'Solicitudes'){
						objSolicitud.fueraDeTiempo >= 1 ? _ft += 1 : (objSolicitud.enTiempo >= 1 ? _et += 1 : _et = 0);
						_arrVisitas.addItem(objSolicitud);	
					}
				}
				
				_numVisitas = _arrVisitas.length;
				//this.cliente.text = (_arrGrafico[0] as SolicitudVisita).cliente.nombre +' · '+ (_arrGrafico[0] as SolicitudVisita).cliente.nivelIngreso;
				//this.detalles.text = ((_arrGrafico[0] as SolicitudVisita).cliente.industria == null ? '' : (_arrGrafico[0] as SolicitudVisita).cliente.industria ) +' · '+ ((_arrGrafico[0] as SolicitudVisita).cliente.rol == null ? '' : (_arrGrafico[0] as SolicitudVisita).cliente.rol) +' · '+ ((_arrGrafico[0] as SolicitudVisita).cliente.sector == null ? '' : (_arrGrafico[0] as SolicitudVisita).cliente.sector);
				if(evt.target.selectedItem.label == 'Solicitudes'){
					this.infoConteo.text = _numSolicitudes +(_numSolicitudes == 1 ? (clase == 'contacto' ? ' Solicitud · ' : ' Visita · ') : (clase == 'contacto' ? ' Solicitudes · ' : ' Visitas · '))+ _et + ' ET · '+ _ft +' FT';	
				}else{
					this.infoConteo.text = _numVisitas + (_numVisitas == 1 ? ' Visita · ' : ' Visitas · ') + _et + ' ET · '+ _ft +' FT';
				}
			}
			
		]]>
	</fx:Script>
	
	<s:HGroup width="100%" paddingTop="11" paddingBottom="10">
		<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_grafica}"/>
		<s:Label  text="ESTÁDISTICA" fontWeight="bold" fontSize="25" height="100%" verticalAlign="middle" fontFamily="Bank Gothic"/>
		<s:VGroup width="100%" height="100%" textAlign="right">
			<s:Label text="[ GESTIÓN DE VISITA ]" color="#999999" fontWeight="bold" verticalAlign="middle" fontSize="25" fontFamily="Bank Gothic" height="100%" width="100%"/>
		</s:VGroup> 
	</s:HGroup>
	
	<otros:divisionHueca width="100%"/>
	
	<s:HGroup width="100%">
		<s:VGroup width="100%">
			<s:Label id="cliente" fontWeight="bold" fontSize="18" fontFamily="Bank Gothic"/>
			<s:Label id="detalles" fontSize="15" color="0x{catalogoColores.LABEL_GRIS}" fontFamily="Bank Gothic"/>
		</s:VGroup>
		<s:ButtonBar width="100%" height="30" id="botoneraBarra" selectedIndex="0" 
					 dataProvider="{_arrButton}" change="seleccionBotonBar(event)"/>
		<!--<botonesToggle:ButtonBarColores width="100%" height="30" id="botoneraBarra" selectedIndex="0" 
										dataProvider="{_arrButton}" change="seleccionBotonBar(event)" />-->
		<s:VGroup width="100%" height="100%">
			<s:Label height="100%" width="100%" id="infoConteo" verticalAlign="middle" fontWeight="bold" fontSize="18" textAlign="right" fontFamily="Bank Gothic"/>
		</s:VGroup>
	</s:HGroup>
	<otros:divisionGruesa width="100%"/>
	<s:HGroup id="espacioGrafico" width="100%" height="100%">
		
	</s:HGroup>
	<otros:divisionGruesa width="100%"/>
</s:VGroup>
