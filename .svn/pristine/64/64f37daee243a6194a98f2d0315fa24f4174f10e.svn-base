<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="init(),busquedaRapida(event)"
		 xmlns:label="skins.skin.label.*"  
		 xmlns:otros="skins.otros.*">
	<fx:Script>
		<![CDATA[
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.RutasPdF;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.BusquedaRapidaCR;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:NumberFormatter id="formatoMoneda" precision="2" useNegativeSign="true" useThousandsSeparator="true" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.utils.Util;
			
			[Bindable]
			private var _facturas:ArrayCollection;
			[Bindable]
			private var _facturasCompletas:ArrayCollection;
			[Bindable]
			private var _graficaRefacturacion:ArrayCollection;
			[Bindable]
			private var _graficaMontoFacturado:ArrayCollection;
			[Bindable]
			private var _totalFacturado:Number;
			[Bindable]
			private var _totalRazones:int;
			[Bindable]
			private var _datosClickGrafica:ArrayCollection = new ArrayCollection();
			
			public function cambiarBusquedaR():void{		
				var evento:Event = new Event("cambiarBusquedaRapida",true,false);
				this.dispatchEvent(evento);
			} 
			
			public function agregarVentanaTipoBusqueda( ventana:DisplayObject ):void{
				if(ventana == null){
					return;
				}
				this.espacioBusqueda.removeAllChildren();
				this.espacioBusqueda.addChild( ventana );
			}
			
			public function inicia():void{
				addEventListener("cambiarBusquedaAvanzada",busquedaRapida);
			} 
			
			public function init():void{
				addEventListener("cambiarBusquedaRapida",busquedaAvanzada);
				addEventListener("cambiarBusquedaAvanzada",busquedaRapida);
			}
			
			
			public function busquedaAvanzada(event:Event):void{
				this.agregarVentanaTipoBusqueda(new BAConsultaFacturacion() );
			}
			public function busquedaRapida(evento:Event):void{
				this.agregarVentanaTipoBusqueda( new BusquedaRapidaCR() );
			}
			
			private function itemClickEvent(event:ListEvent):void{

				var urlreq:URLRequest;
				var ruta:String;
				
				var path:Object;     		     
				if (event.columnIndex == 3 ){
					path = Util.rutaNueva(this.gridFacturacion.selectedItem.fechaFacturacion);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA + path.ruta + this.gridFacturacion.selectedItem.FPor +"/"+ this.gridFacturacion.selectedItem.factura  +".pdf";
					urlreq = new URLRequest ( ruta );
					navigateToURL( urlreq );
				}	
				
				if (event.columnIndex == 6 ){
					path = Util.rutaNueva(this.gridFacturacion.selectedItem.fechaFacturacion);
					ruta = RutasPdF.GENERAL_RUTA + RutasPdF.FACTURAS_RUTA + path.ruta + this.gridFacturacion.selectedItem.FPor +"/"+ this.gridFacturacion.selectedItem.factura  +".xml";
					urlreq = new URLRequest ( ruta );
					navigateToURL( urlreq );
				}   
				
				if (event.columnIndex == 7 && gridFacturacion.selectedItem.CPedido != "ND"){ 
					if( gridFacturacion.selectedItem.FPor == "Pharma" && (gridFacturacion.selectedItem.nombre_cliente == "PRO" || gridFacturacion.selectedItem.nombre_cliente == "PROVEEDORA")){
						path = Util.rutaNueva(this.gridFacturacion.selectedItem.CPedido);
						ruta = RutasPdF.GENERAL_RUTA + RutasPdF.COMPRAS_RUTA + path.ruta + this.gridFacturacion.selectedItem.CPedido +".pdf";
						urlreq = new URLRequest ( ruta );
						navigateToURL( urlreq );
						
					}else{
						path = Util.rutaNueva(this.gridFacturacion.selectedItem.CPedido);
						ruta = RutasPdF.GENERAL_RUTA + RutasPdF.PEDIDOS_RUTA + path.ruta + this.gridFacturacion.selectedItem.CPedido +".pdf";
						urlreq = new URLRequest ( ruta );
						navigateToURL( urlreq );						
					}          					               	
				}
			}
			
			public function set obtenerFacturas(factura:ArrayCollection):void{
				if(factura == null){
					_facturas.removeAll();
					return ;
				}
				this._facturasCompletas = factura;
				this._facturas = factura;
				_totalFacturado = 0;
				
				for(var d:int = 0; d<_facturas.length ; d++){
					
					if(this._facturas[d].razones == "A solicitud del cliente"){
						var razon1:int = razon1 + 1;
					}else if(this._facturas[d].razones == "Errores en proceso de facturación"){
						var razon2:int = razon2 + 1;
					}else if(this._facturas[d].razones == "A solicitud de el área de finanzas"){
						var razon3:int = razon3 + 1;
					}else if(this._facturas[d].razones == "A solicitud de la dirección"){
						var razon4:int = razon4 + 1;
					}else if(this._facturas[d].razones == "Por cierre de ruta más Fin de mes"){
						var razon5:int = razon5 + 1;
					}
					
					if(this._facturas[d].refacturada == "SI" ){
						var refacturada:int = refacturada + 1;
					}else{
						var facturada:int = facturada + 1 ;
					}
					
					if(this._facturas[d].totalFormato != "ND"){
						this._facturas[d].totalFormato = this._facturas[d].totalFormato + " " +this._facturas[d].moneda;
					}
					if(this._facturas[d].totalIVAFormato != "ND"){
						this._facturas[d].totalIVAFormato = this._facturas[d].totalIVAFormato + " " +this._facturas[d].moneda;
					}
					if(this._facturas[d].importeFormato != "ND"){
						this._facturas[d].importeFormato = this._facturas[d].importeFormato + " " +this._facturas[d].moneda;
					}
					
					if(this._facturas[d].moneda == "USD"){
						_totalFacturado = _totalFacturado + this._facturas[d].importe;
					}else{
						var convertir:Number = this._facturas[d].importe / this._facturas[d].PDolar;
						_totalFacturado = _totalFacturado + convertir;
					}

				}
				
				if(razon1 == 0 && razon2 == 0 && razon3 == 0 && razon4 == 0 && razon5 == 0){
					_graficaRefacturacion = new ArrayCollection([{total:1,razones:"Sin refacturación"}]);				
				}else{
					_graficaRefacturacion = new ArrayCollection([{total:razon1,razones:"A solicitud del cliente"},
																{total:razon2,razones:"Errores en proceso de facturación"},
																{total:razon3,razones:"A solicitud de el área de finanzas"},
																{total:razon4,razones:"A solicitud de la dirección"},
																{total:razon5,razones:"Por cierre de ruta más Fin de mes"}]);	
				}
				
				_graficaMontoFacturado = new ArrayCollection([{total:refacturada , tipo:"Refacturado"},
															{total:facturada , tipo:"Facturado"}]);
				
				_totalRazones = razon1+razon2+razon3+razon4+razon5;
				_totalRazones.toString();
				_totalFacturado.toString();
			}
			
			public function verTablaRefacturacion(motivo:String,autorizo:String,fnueva:String,fantigua:String, razon:String, refacturada:String ):void{
				
				if(refacturada == "NO"){
					return ;
				}else{
					var formularioRefacturacion:DatosRefacturacion;
					formularioRefacturacion = DatosRefacturacion(PopUpManager.createPopUp(this, DatosRefacturacion, true));
					formularioRefacturacion._motivo = motivo; 
					formularioRefacturacion._autorizo = autorizo;
					formularioRefacturacion._factura = fnueva;
					formularioRefacturacion._amparo = fantigua;
					formularioRefacturacion._razones = razon;
				}				
			}
			
 			private function clicRegion(evt:ChartItemEvent):void{  
				this._datosClickGrafica.removeAll();
				this.viewFacturacion.selectedChild = this.stackGrid;
				if(evt.hitData.item.tipo == "Refacturado"){
					for(var d:int = 0 ;  d<_facturasCompletas.length ; d++){
						if(this._facturasCompletas[d].refacturada == "SI"){
						 	this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(d));
						}
					}
				}else{
					for(var a:int = 0 ;  a<_facturasCompletas.length ; a++){
						if(this._facturasCompletas[a].refacturada == "NO"){
							this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(a));
						}
					}
				}
				_facturas = new ArrayCollection();
				_facturas = _datosClickGrafica;
			}
			
			private function clickRegionCausa(event:ChartItemEvent):void{
				this._datosClickGrafica.removeAll();
				this.viewFacturacion.selectedChild = this.stackGrid;
				
					if(event.hitData.item.razones == "A solicitud del cliente"){
						for(var i:int=0; i<_facturasCompletas.length ; i++){
							if(this._facturasCompletas[i].razones == "A solicitud del cliente"){
								this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(i));
							}
						}
					}
					if(event.hitData.item.razones == "Errores en proceso de facturación"){
						for( i=0; i<_facturasCompletas.length ; i++){
							if(this._facturasCompletas[i].razones == "Errores en proceso de facturación"){
								this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(i));	
							}
						}
					}
					if(event.hitData.item.razones == "A solicitud de el área de finanzas"){
						for(i=0; i<_facturasCompletas.length ; i++){
							if(this._facturasCompletas[i].razones == "A solicitud de el área de finanzas"){
								this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(i));
							}
						}
					}
					if(event.hitData.item.razones == "A solicitud de la dirección"){
						for(i=0; i<_facturasCompletas.length ; i++){
							if(this._facturasCompletas[i].razones == "A solicitud de la dirección"){
								this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(i));
							}
						}	
					}
					if(event.hitData.item.razones == "Por cierre de ruta más Fin de mes"){
						for(i=0; i<_facturasCompletas.length ; i++){
							if(this._facturasCompletas[i].razones == "Por cierre de ruta más Fin de mes"){
								this._datosClickGrafica.addItem(_facturasCompletas.getItemAt(i));
							}
						}
					}
					
				_facturas = new ArrayCollection();
				_facturas = _datosClickGrafica;
			}
			
		]]>
	</fx:Script>
	
	<mx:VBox width="100%" height="100%">
		<label:labelTitulo_Otros top="20" text="Consulta facturación" width="100%"/>
		<mx:HBox width="100%" id="espacioBusqueda" >
			<!--<mx:VBox width="100%" >
				
			</mx:VBox>-->
		</mx:HBox>
		
		<mx:ViewStack id="viewFacturacion" width="100%" height="100%">
			<s:NavigatorContent id="stackGrid" width="100%" height="100%">
			<mx:VBox height="100%" width="100%">	
				<mx:VBox width="100%" height="100%">
					<!--<mx:HBox id="espacioTablas" height="100%" width="100%" />-->
					<mx:VBox width="100%" height="100%">
						<mx:DataGrid id="gridFacturacion" width="100%" height="100%" itemClick="itemClickEvent(event)" dataProvider="{this._facturas}">
							<mx:columns>
								<mx:DataGridColumn headerText="#" dataField="numFila"/>
								<mx:DataGridColumn headerText="Fecha de facturación" dataField="fechaFacturacion"/>
								<mx:DataGridColumn headerText="Facturó" dataField="FPor"/>
								<mx:DataGridColumn headerText="Factura" dataField="factura">
									<mx:itemRenderer>
										<fx:Component>
											<mx:LinkButton  label="{data.factura}" color="#0C4AFC" textDecoration="underline"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn headerText="Tipo" dataField="tipo"/>
								<mx:DataGridColumn headerText="Medio" dataField="medio"/>
								<mx:DataGridColumn headerText="XML" dataField="factura">
									<mx:itemRenderer>
										<fx:Component>
											<mx:LinkButton  label="{data.factura}" color="#0C4AFC" textDecoration="underline"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn headerText="Pedido" dataField="CPedido">
									<mx:itemRenderer>
										<fx:Component>
											<mx:LinkButton  label="{data.CPedido}" color="#0C4AFC" textDecoration="underline"/>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
								<mx:DataGridColumn headerText="Cliente" dataField="nombre_cliente"/>
								<mx:DataGridColumn headerText="Subtotal" dataField="importeFormato" />
								<mx:DataGridColumn headerText="IVA" dataField="totalIVAFormato"/>
								<mx:DataGridColumn headerText="Total" dataField="totalFormato"/>
								<mx:DataGridColumn headerText="Estatus" dataField="estado"/>
								<mx:DataGridColumn headerText="¿Refacturada?" dataField="refacturada">
									<mx:itemRenderer>
										<fx:Component>
											<mx:LinkButton click="mandaRefacturacion()" label="{data.refacturada}" color="#0C4AFC" textDecoration="underline">
												<fx:Script>
													<![CDATA[
														private function mandaRefacturacion():void {
															this['outerDocument'].verTablaRefacturacion(data.razones,data.autorizo,data.facturaNueva,data.facturaAntigua,data.razonPop, data.refacturada);
														}
													]]>
												</fx:Script>
											</mx:LinkButton>
										</fx:Component>
									</mx:itemRenderer>
								</mx:DataGridColumn>
							</mx:columns>
						</mx:DataGrid>
					</mx:VBox>
				</mx:VBox>	
				<mx:HBox width="100%" >
					<s:Spacer width="100%"/>
					<s:Button styleName="botonNegroOld" label="Grafica" textAlignLast="center" click="viewFacturacion.selectedChild = stackGrafica;"/>
						<!--<s:Button styleName="botonNegroOld" label="aqui" click="tablaRefacturacion()"/>-->
				</mx:HBox>
			</mx:VBox>	
			</s:NavigatorContent>
			
			
			<s:NavigatorContent id="stackGrafica" width="100%" height="100%" >
				<mx:VBox height="100%" width="100%">
					<mx:Grid width="100%" height="100%">
						<mx:GridRow width="100%" height="20%">					
							<mx:GridItem width="100%" height="100%">							
								<!--<mx:Label id="lblFacturadoDls" text="{montosTot}"  width="100%" height="100%" fontStyle="normal" fontWeight="normal" textAlign="center" fontSize="24"/>-->
								<s:Spacer width="100%"/>
							<s:VGroup height="100%" width="100%">
								<s:VGroup height="40%" width="100%">
									<label:labelSubtitulo text="Monto total facturado en dólares" textAlign="center" />
								</s:VGroup>
								<s:HGroup height="100%" width="100%">
									<s:Spacer width="100%"/>
									<s:Label text="{'$' + formatoMoneda.format(this._totalFacturado)}" textAlign="center" fontSize="25"/>
									<s:Spacer width="100%"/>
								</s:HGroup>
							</s:VGroup>	
								<s:Spacer width="100%"/>
							</mx:GridItem>
							<mx:GridItem width="100%" height="100%">
								<!--<mx:Label text="{razonesTot}" width="100%" height="100%" textAlign="center" fontSize="24" fontWeight="normal"/>-->
								<s:Spacer width="100%"/>
								<s:VGroup height="100%" width="100%">	
									<s:VGroup height="40%" width="100%">
										<label:labelSubtitulo text="Causas de la refacturación" textAlign="center"/>
									</s:VGroup>
									<s:HGroup height="100%" width="100%">
										<s:Spacer width="100%"/>
										<s:Label text="{'TOTAL: ' + this._totalRazones}" textAlign="center" fontSize="25"/>
										<s:Spacer width="100%"/>
									</s:HGroup>
								</s:VGroup>	
								<s:Spacer width="100%"/>
							</mx:GridItem>												
						</mx:GridRow>
						<mx:GridRow width="100%" height="80%">
							<mx:GridItem width="100%" height="100%" id="griditem1">							
								<mx:Legend dataProvider="{graficoPie}" direction="vertical" fontWeight="normal" height="62"/>
								<mx:PieChart id="graficoPie"  showAllDataTips="true" width="100%" height="100%" dataProvider="{this._graficaMontoFacturado}" itemClick="clicRegion(event)" mouseSensitivity="1" dataTipMode="multiple">	
									<mx:series>
										<!--<mx:PieSeries field="Monto" nameField="facturado"  displayName="Monto Facturado"-->
										<mx:PieSeries field="total" nameField="tipo" id="pieSeriesId"    
													 explodeRadius=".1" />   <!--fills="{[sc1, scPorCobrar]}"-->
									</mx:series>								
								</mx:PieChart>
							</mx:GridItem>							
							<mx:GridItem width="100%" height="100%" id="griditemgraf2" >															
								<mx:Legend dataProvider="{pieRefac}" direction="vertical" id="idLegend" />
								<mx:PieChart id="pieRefac"  showAllDataTips="true" width="100%" height="100%"  dataProvider="{this._graficaRefacturacion}" itemClick="clickRegionCausa(event)">							
									<mx:series>
										<mx:PieSeries field="total" nameField="razones" id="pieSeries2"
													   explodeRadius=".1" >
											<!--<mx:showDataEffect>
												<mx:SeriesInterpolate duration="2000" easingFunction="{Elastic.easeOut}"/>
											</mx:showDataEffect>-->
										</mx:PieSeries>  <!--fills="{[scSinProgramacion,scMorado,scVerdeEnTiempo,sc1,scPorCobrar]}"-->
									</mx:series>
								</mx:PieChart>
							</mx:GridItem>					
						</mx:GridRow>
					</mx:Grid>				
					<mx:HBox width="100%" >
						<s:Spacer width="100%"/>
						<mx:Button label="Tabla"  id="btnTabla" click="viewFacturacion.selectedChild = stackGrid;"/>
					</mx:HBox>
				</mx:VBox>
			</s:NavigatorContent>
		</mx:ViewStack>
	</mx:VBox>
	
</s:Group>
