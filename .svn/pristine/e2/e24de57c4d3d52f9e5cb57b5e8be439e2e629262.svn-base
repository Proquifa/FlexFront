<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		
		creationComplete="completeHandler(event)" destructionPolicy="never"
		
		backgroundColor="#eaeaea" actionBarVisible="false" xmlns:pq="vista.componentes.comun.pq.*" >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Modulo;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoIconosBotoneras;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import vista.gestion.reportes.DefaultReporteSeguimientoMobil;
			import vista.gestion.tableros.DefaultTableroClientesMobil;
			import vista.gestion.tableros.DefaultTableroProveedoresMobil;
			
			private var emp:Empleado = DatosGlobales.getInstance()._usuario;
			
			private var vistasDefault:ArrayCollection = new ArrayCollection([
				DefaultReporteSeguimientoMobil,
				DefaultTableroClientesMobil,
				DefaultTableroProveedoresMobil
				//DefaultConsultaCobrosMobil,
				//DefaultConsultaPagosMobil
			]);
			
			protected function completeHandler(event:FlexEvent):void
			{
					listMenu.dataProvider = arrMenu;
					listMenu.selectedIndex = 0;
					gestionClickHandler();
					//navigator.pushView( vistasDefault[1] );
					for( var g:int = 0; g < emp.modulos.length; g++ )
					{
							var current:Modulo = emp.modulos[g] as Modulo;
							var viewSelected:String = nombreVistaDefault( current );
							var iconView:String = nombreVistaDefault( current, true );
							/* valido si el modulo ya tiene una vista (View) */
							
							if( vistasDefault.toString().indexOf( viewSelected) > -1 )
							{
										/* agrego el icono si existe en el catalogo */
										 if( catalogoIconosBotoneras.getInstance().hasOwnProperty( iconView ) )
												current.iconMobil = iconView;
										 else
											 trace( 'icono no encontrado en catalogoIconosBotoneras: ' + iconView );
										 
										 current.nombre = current.nombre.toUpperCase();
										
										if( current.tipo == "Tablero" )
										{
											listaTableros.dataProvider.addItem( current );
										}
										else if( current.tipo == "Consulta" )
										{
											listaConsultas.dataProvider.addItem( current );
										}
										else if( current.tipo == "Reporte" )
										{
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											
											/* listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current );
											listaReportes.dataProvider.addItem( current ); */
										}
							 }
							else
							{
								trace(" Warning: se buscaba '" + viewSelected + "'. Modulo omitido" );
							} 
					}
					
			}
			/**
			 * Regresa un string con el nombre del View correspondiente a cada modulo usando la propiedad tipo y nombre agregando el prefijo Default y el postfijo Mobil, por ejemplo: DefaultTableroClientesMobil
			 */
			protected function nombreVistaDefault( $modulo:Modulo, $iconoFormat:Boolean = false ):String
			{
				var strReturn:String = 'NotSet';
				if( $iconoFormat )
				{
					strReturn = 'mob' 
						+ cleanBadCharacters( $modulo.tipo)
						+ cleanBadCharacters( $modulo.nombre);
				}
				else
				{
						strReturn = 'Default' 
							+ cleanBadCharacters( $modulo.tipo)
							+ cleanBadCharacters( $modulo.nombre)
							+ 'Mobil';
				}
				//trace( ' V ' + strReturn );
				return strReturn;
			}
			/**
			 * Quito los espacios y acentos en el nombre del modulo
			*/
			protected function cleanBadCharacters( $str:String ):String
			{
				var strReturn:String = $str;
				/* quito posibles acentos  */
				strReturn = strReturn.toLowerCase();
				strReturn = strReturn.replace('á', 'a' );
				strReturn = strReturn.replace('é', 'e' );
				strReturn = strReturn.replace('í', 'i' );
				strReturn = strReturn.replace('ó', 'o' );
				strReturn = strReturn.replace('ú', 'u' );
				/*  los nombres vienen con espacios, Capitaliso cada palabra para mantener la notacion camello */
				strReturn = strReturn.replace(/\b./g, function( ...m):String{return m[0].toUpperCase()} );
				/* retiro los espacios entre palabras */
				strReturn = strReturn.split(' ').join('');
				return strReturn;
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				var idx:int = -1;
				var cModuloStr:String = nombreVistaDefault( event.currentTarget.selectedItem as Modulo );
				for( var g:int = 0; g < vistasDefault.length; g++ )
				{
					if( vistasDefault[ g ].toString().indexOf( cModuloStr ) > -1 )
						idx = g;
				}
				navigator.pushView( vistasDefault[idx] );
			}
			
			private var arrMenu:ArrayCollection = new ArrayCollection([ "TABLEROS", "CONSULTAS", "REPORTES" ]);
			
			protected function gestionClickHandler():void
			{
				if( listMenu.selectedIndex == -1 )
					return;
				
				listaTableros.visible = false;
				listaConsultas.visible = false;
				listaReportes.visible = false;
				
				if( listMenu.selectedIndex == 0 )
				{
						listaTableros.visible = true;
				}
				else if( listMenu.selectedIndex == 1 )
				{
						listaConsultas.visible = true;
				}
				else
				{
						listaReportes.visible = true;
				}
			}
			
		]]>
	</fx:Script>
	<!-- LOGO -->
	<s:BitmapImage source="{ catalogoIconosEtiquetas.getInstance().mobil_logonet_negro }" top="25" left="150" />
	
	<!-- MENU SELECCION -->
	<s:List id="listMenu" width="80%" height="60" bottom="0" horizontalCenter="0" depth="100" selectedIndex="0"
				fontStyle="normal" fontWeight="bold" fontSize="15"
				itemRenderer="vista.componentes.comun.renderers.MenuGestionRenderer" contentBackgroundAlpha="0"
				click="gestionClickHandler()" >
		<s:layout>
			<s:HorizontalLayout horizontalAlign="center" gap="0"  />
		</s:layout>
	</s:List>
	
	<!-- TABLEROS -->
	<s:List id="listaTableros" dataProvider="{ new ArrayCollection() }"
			contentBackgroundAlpha="0"
			top="100" bottom="100"
			borderVisible="false"
			click="clickHandler(event)"
			horizontalCenter="0"
			itemRenderer="vista.componentes.comun.renderers.RendererMobilGestion"
			>
		<s:layout>
			<s:TileLayout requestedRowCount="3" requestedColumnCount="4" horizontalAlign="center" 
						  horizontalGap="25" verticalGap="25" />
		</s:layout>
	</s:List>
	<!-- CONSULTAS -->
		<s:List id="listaConsultas" dataProvider="{ new ArrayCollection() }"
				contentBackgroundAlpha="0"
				top="100" bottom="100"
				borderVisible="false"
				click="clickHandler(event)"
				horizontalCenter="0"
				itemRenderer="vista.componentes.comun.renderers.RendererMobilGestion"
				>
			<s:layout>
				<s:TileLayout requestedRowCount="3" requestedColumnCount="4" horizontalAlign="center" 
							  horizontalGap="25" verticalGap="25" />
			</s:layout>
		</s:List>
	<!-- REPORTES -->
	<!--<pq:PaginadorGestion id="listaReportes" />-->
	<s:List id="listaReportes" dataProvider="{ new ArrayCollection() }"
			contentBackgroundAlpha="0"
			top="100" bottom="100"
			borderVisible="false"
			click="clickHandler(event)"
			horizontalCenter="0"
			itemRenderer="vista.componentes.comun.renderers.RendererMobilGestion"
			>
		<s:layout>
			<s:TileLayout requestedRowCount="3" requestedColumnCount="4" horizontalAlign="center" 
						  horizontalGap="25" verticalGap="25" />
		</s:layout>
	</s:List>
</s:View>
