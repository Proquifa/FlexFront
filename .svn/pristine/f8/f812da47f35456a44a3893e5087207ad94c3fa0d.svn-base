<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas  creationComplete="insertar()" 
			creationPolicy="all" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="316"
			xmlns:estructura="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.admon.popup.estructura.*" 
			xmlns:label="skins.skin.label.*" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:otros="skins.otros.*">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.admon.EventoProceso;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.admon.objetos.Proceso;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.admon.objetos.SubProceso;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.controls.Alert;
			
			public function cambio(event:MouseEvent):void{
				if(event.target.label == "Editar"){
					this.visor.selectedIndex = 1;
					this.insertar();
				}
				if(event.target.label == "Cancelar"){
					//this.eliminarvacios();
					this._proceso.borrarSubProcesosVacios();
					this.visor.selectedIndex = 0;
				}
			}
			
			private var catEmpleados:ArrayCollection = new ArrayCollection();
			
			
			
			public function set recibirEmpleados(empleados:ArrayCollection):void{
				this.catEmpleados = new ArrayCollection();
				if(empleados.length > 0){
					this.catEmpleados = DatosGlobales.getInstance().catGerentes;
				}
			}
			
			[Bindable]
			public var _proceso:Proceso = new Proceso();
			[Bindable]
			public var _catalogo:ArrayCollection = new ArrayCollection();
			
			private function insertar():void{
					if(this._proceso.subprocesos.length == 0){
						var nuevo2:SubProceso = new SubProceso();
						nuevo2.catalogoEmpleados = this.catEmpleados;
							this._proceso.subprocesos.addItem(nuevo2);
							this._proceso.subprocesos.refresh();
					}
					else{
						if(this._proceso.subprocesos[this._proceso.subprocesos.length -1].nombre != ""){
							var nuevo:SubProceso = new SubProceso();
							nuevo.catalogoEmpleados = this.catEmpleados;
							this._proceso.subprocesos.addItem(nuevo);
							this._proceso.subprocesos.refresh();
						}
						if(this._proceso.subprocesos.length == 0){
							
						}
					}
					//this._proceso.subprocesos[this._proceso.subprocesos.length-1] = new SubProceso();
			}
			
			public function set confirmacion_eliminarsubproceso(_subproceso:SubProceso):void{
				//trace(_subproceso.nombre);
				if(_subproceso == null){
					return;
				}
				if(this._proceso.idProceso == _subproceso.idProceso){
					for(var m:int = 0; m<this._proceso.subprocesos.length;m++){
						if(this._proceso.subprocesos[m].idSubproceso == _subproceso.idSubproceso){
							this._proceso.subprocesos.removeItemAt(m);
							this._proceso.set_subprocesosDescripcion();
							return;
						}
					}
				}
			}
			
			public function set confirmacion_crearsubproceso(_subproceso:SubProceso):void{
				if(_subproceso == null){
					return;
				}
				if(this._proceso.idProceso == _subproceso.idProceso){
					for(var m:int = 0; m<this._proceso.subprocesos.length;m++){
						if(this._proceso.subprocesos[m].nombre == _subproceso.nombre){
							this._proceso.subprocesos[m].idSubproceso = _subproceso.idSubproceso;
							this._proceso.subprocesos[m].idProceso = _subproceso.idProceso;
							this.insertar();
							this._proceso.set_subprocesosDescripcion();
							return;
						}
					}
				}
			}
			
			public function set confirmacion_actualizarsubproceso(_subproceso:SubProceso):void{
				if(_subproceso == null){
					return;
				}
				if(this._proceso.idProceso == _subproceso.idProceso){
					for(var m:int = 0; m<this._proceso.subprocesos.length; m++){
						if(this._proceso.subprocesos[m].idSubproceso == _subproceso.idSubproceso){
							this._proceso.subprocesos[m].nombre = _subproceso.nombre;
							this._proceso.subprocesos[m].idEmpleado = _subproceso.idEmpleado; 
							this._proceso.set_subprocesosDescripcion();
							return;
						}
					}
				}
			}
			
			
			private function eliminarvacios():void{
				for(var m:int = 0; m<this._proceso.subprocesos.length;m++){
						if(this._proceso.subprocesos[m].nombre == ""){
							this._proceso.subprocesos.removeItemAt(m);
						}
					}
			}
			
			
			private function actualizarProceso():void{
				if(this.cbresponsable.selectedIndex == -1){
					Alert.show("Seleccione un Empleado como responsable del proceso");
					return;
				}
				var event:EventoProceso = new EventoProceso(EventoProceso.ACTUALIZAR_PROCESO);
				event._proceso = this._proceso;
				if(this.cbresponsable.selectedItem.clave != this._proceso.idEmpleado){
					event._proceso.idEmpleado = this.cbresponsable.selectedItem.clave;
					this.dispatchEvent(event);	
				}
				
			}
			
			
			public function set confirmacion_actualizarproceso(proceso:Proceso):void{
				if(proceso == null){
					return;
				}
				if(this._proceso.idProceso == proceso.idProceso){
					this._proceso.idEmpleado = proceso.idEmpleado;
					this._proceso.actualizarUsuario();
					this.visor.selectedIndex = 0;
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:ViewStack id="visor" height="100%" width="100%">
		<mx:Canvas height="100%" width="100%">
			<label:labelSubtitulo x="9" y="5" text="{_proceso.nombre}" />
			<mx:Label x="10" y="43" text="Responsable:" fontWeight="bold"/>
			<mx:Label x="8" y="62" text="{_proceso.nombreEmpleado}"  id="label1"/>
			<mx:Label x="10" y="85" text="Sub-procesos asociados:" fontWeight="bold" id="label2"/>
			<mx:List  right="10" left="10" dataProvider="{this._proceso.subprocesos}" labelField="nombre" paddingLeft="10" paddingRight="10"  y="103" height="156">
				<mx:itemRenderer>
					<mx:Component>
						<mx:HBox width="100%">
							<mx:Label text="{data.nombre}"/>
							<s:Spacer width="100%"/>
							<mx:Label visible="{data.responsable != null}" text="{'Responsable : ' + data.responsable}"/>
						</mx:HBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:List>
			<!--<mx:Text  text="{_proceso.subprocesosDescripcion}" right="10" left="10" width="100%" paddingLeft="10" paddingRight="10"  y="93" id="textarea1"/>-->
			<s:Button styleName="botonNegroOld" y="277" width="100" label="Editar" horizontalCenter="0"  click="cambio(event)"/>
			<otros:division right="15" left="15"  y="303" width="100%"/>		
		</mx:Canvas>
		<mx:Canvas height="100%" width="100%">
			<label:labelSubtitulo x="9" y="5" text="{_proceso.nombre}"/>
			<mx:Label x="10" y="43" text="Responsable:" fontWeight="bold"/>
			<mx:Label x="10" y="85" text="Sub-procesos asociados:" fontWeight="bold" />
			<mx:HBox horizontalAlign="center" horizontalCenter="0" width="100%" y="268">
				<s:Button styleName="botonNegroOld"  width="100" label="Cancelar" horizontalCenter="0"  click="cambio(event)"/>
				
			</mx:HBox>
			<otros:division right="15" left="15"  y="294" width="100%"/>		
			<mx:List id="listasubprocesos" right="10" left="10" dataProvider="{this._proceso.subprocesos}" paddingLeft="10" paddingRight="10"  y="104" height="156">
				<mx:itemRenderer>
					<mx:Component>
						<estructura:ItemEstructura>
							
						</estructura:ItemEstructura>
					</mx:Component>
				</mx:itemRenderer>
			</mx:List>
			
			<mx:HBox width="100%" right="10" left="10" y="60">
				<mx:ComboBox  id="cbresponsable" prompt="Seleccione un responsable" selectedIndex="{this._proceso.indexcombo}" labelField="nombre" dataProvider="{this._catalogo}" width="100%" ></mx:ComboBox>
				<s:Button styleName="botonNegroOld"   label="Guardar" horizontalCenter="0"  click="actualizarProceso()"/>
			</mx:HBox>
		</mx:Canvas>
	</mx:ViewStack>
	
	
</mx:Canvas>
