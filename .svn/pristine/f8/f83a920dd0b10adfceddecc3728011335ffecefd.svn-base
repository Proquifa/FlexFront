<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" paddingRight="12" paddingLeft="10"
		 xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="inicioPrueba()"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.pq.*"
		 xmlns:otros="skins.otros.*" xmlns:botonesToggle="skins.botonesToggle.*"> 
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.reportes.ventas.notificados.EventoReporteNotificadosNew;
			import mx.controls.Alert;
			import mx.utils.ObjectUtil;
			
			import spark.events.IndexChangeEvent;
			private var $universo:ArrayCollection = new ArrayCollection();
			private var _etiqueta:String;
			private var _cliente:String;
			private var _diaSeleccionado:String;
			private var _responsable:String;
			private var _TipodeNotificacion:String; 
			private var _marca:String;
			private var _control:String;
			private var _tipoResponsable:String;
			private var _todos:String;
			private var _labelFiltroMonto:String;
			
			private var _objLabels:Object = new Object();
			private var _arrEtiquetaDia:Array = [ "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" ];
			
			[Bindable]	private var _arrButton:ArrayCollection = new ArrayCollection([{label:"TODO"},{label:"> $10,000"},
																					{label:"$2,001 - $10,000"},{label:"0 - $2,000"}]);
			[Bindable] private var _dia:String ="";
			private var _switch:String;
			
			/* [Bindable]private var _listaGral:ArrayCollection = new ArrayCollection(); */
			private function inicioPrueba():void{
				
			} 
			
			public function set obtenerSwitch($switch:String):void{
				_switch=$switch;
				/* if (_switch == 'AVISO'){
					botoneraTODO.visible=true;
					botoneraTODO.includeInLayout=true;
				}else{
					botoneraTODO.visible=false;
					botoneraTODO.includeInLayout=false;
				} */
			}
			
			public function set obtenerTodos($todos:String):void{
				_todos = $todos;
				if(_todos == "1"){
					botoneraBarra.selectedIndex = 0;
				}
			}
			
			public function set recibirDatosBotonera( $datosBotonera:Object ):void{
				_etiqueta = $datosBotonera.etiqueta;
				_cliente = $datosBotonera.cliente;
				_diaSeleccionado = $datosBotonera.diaSeleccionado;
				_responsable = $datosBotonera.responsable;
				_TipodeNotificacion = $datosBotonera.tipodeNotificacion;
				_marca = $datosBotonera.marca;
				_control = $datosBotonera.control;
				_tipoResponsable = $datosBotonera.tipoResponsable;
				
			}
			
			public function set recibirTitulo( $dia:Object):void{
				
				var fechaHoy:Date = new Date();
				var fechaAyer:Date = new Date();
				fechaAyer.setDate( fechaHoy.getDate() - 1 );
				var fechaManana:Date = new Date();
				fechaManana.setDate( fechaHoy.getDate() + 1 );
				_objLabels.hoy = _arrEtiquetaDia[ fechaHoy.day ] + ' ' + fechaHoy.date;
				_objLabels.ayer = _arrEtiquetaDia[ fechaAyer.day ] + ' ' + fechaAyer.date;
				_objLabels.manana = _arrEtiquetaDia[ fechaManana.day ] + ' ' + fechaManana.date;
				
				if( $dia == "DIA0" 	) _dia = "HOY / " + _objLabels.hoy;
				if( $dia == "DIA-1" 	) _dia = "AYER / " + _objLabels.ayer;
				if( $dia == "DIA-2" 	) _dia = "ANTIER";
				if( $dia == "DIA-3" 	) _dia = "ANTE ANTIER";
				if( $dia == "PASADO" ) _dia = "PASADO";
				if( $dia == "DIA1" 	) _dia = "MAÑANA / " + _objLabels.manana;
				if( $dia == "DIA2" 	) _dia = "PASADO MAÑANA";
				if( $dia == "DIA3" 	) _dia = "POSPASADO";
				if( $dia == "FUTURO" ) _dia = "FUTURO";
				if( $dia == null ) _dia = "TODO";
				
			}
			
			public function set recibirReportesNot($lista:ArrayCollection):void{
				
				if($lista == null){
					return;
				}
					
				if ($lista[0].etiqueta == null){
					
					lstGeneral.dataProvider = $lista == null ? new ArrayCollection() : ObjectUtil.copy( $lista ) as ArrayCollection; 
					if(_switch == 'AVISO'){
						var evt:EventoReporteNotificadosNew = new EventoReporteNotificadosNew(EventoReporteNotificadosNew.FILTRAR_DATOS_CLIENTE)
						evt.cliente = "";
						evt.concepto = "";
						evt.tipoProducto = "";
						evt.marca="";
						dispatchEvent(evt);
					}
					if(_switch == 'MODIF'){
						var evtModi:EventoReporteNotificadosNew = new EventoReporteNotificadosNew(EventoReporteNotificadosNew.FILTRAR_DATOS_CLIENTE_MODIF)
						evtModi.cliente = "";
						evtModi.concepto = "";
						evtModi.etiqueta = "MODIF";
						evtModi.tipoProducto = "";
						evtModi.marca="";
						dispatchEvent(evtModi);
					}  
					return;
				}
				
				
				 lstGeneral.dataProvider = ObjectUtil.copy($lista) as ArrayCollection; 
		
				 if (lstGeneral != null){
					 lstGeneral.selectedIndex=0;
					 _switch == 'AVISO' ? clickPrimero() : clickPrimeroModif();
				 }
				
				
				}
			
			
			private function clickPrimero():void
			{
				var evto:EventoReporteNotificadosNew = new EventoReporteNotificadosNew(EventoReporteNotificadosNew.FILTRAR_DATOS_CLIENTE)
				evto.cliente = lstGeneral.selectedItem.cliente;
				evto.concepto = lstGeneral.selectedItem.concepto;
				dispatchEvent(evto);
			}
			
			private function clickPrimeroModif():void
			{
				var evto:EventoReporteNotificadosNew = new EventoReporteNotificadosNew(EventoReporteNotificadosNew.FILTRAR_DATOS_CLIENTE_MODIF)
				evto.etiqueta = "MODIF";
				evto.cliente = lstGeneral.selectedItem.cliente;
				evto.folio = lstGeneral.selectedItem.folio;
				dispatchEvent(evto);
			}
			
			private function botonera():void
			{
				var labelMonto:EventoReporteNotificadosNew = new EventoReporteNotificadosNew( EventoReporteNotificadosNew.OBTENER_LABEL_MONTO );
				labelMonto.clasificacion = botoneraBarra.selectedItem.label;
				dispatchEvent(labelMonto);
				
				if (_switch == 'AVISO'){
					var evt:EventoReporteNotificadosNew = new EventoReporteNotificadosNew( EventoReporteNotificadosNew.FILTRAR_DATOS_VISTA );
					var boton:String = botoneraBarra.selectedItem.label;
					
					if (boton == 'TODO'){
						evt.clasificacion ="";
					}
					if (boton == '> $10,000'){
						evt.clasificacion ="> $10,000";
					}
					if (boton == '$2,001 - $10,000'){
						evt.clasificacion ="$2,001-$10,000";
					}
					if (boton == '0 - $2,000'){
						evt.clasificacion ="0 - $2,000";
					}
					
					evt.etiqueta = _etiqueta;
					evt.cliente = _cliente;
					evt.diaFiltro = _diaSeleccionado;
					evt.responsable = _responsable;
					evt.tipoProducto = _TipodeNotificacion; 
					evt.marca =  _marca;
					evt.control = _control;
					evt.tipoResponsable = _tipoResponsable;
					dispatchEvent(evt);
				}
				if (_switch == 'MODIF'){
					var evt1:EventoReporteNotificadosNew = new EventoReporteNotificadosNew( EventoReporteNotificadosNew.FILTRAR_DATOS_VISTA_MODIF );
					var boton1:String = botoneraBarra.selectedItem.label;
					if (boton1 == 'TODO'){
						evt1.clasificacion ="";
					}
					if (boton1 == '> $10,000'){
						evt1.clasificacion ="> $10,000";
					}
					if (boton1 == '$2,001 - $10,000'){
						evt1.clasificacion ="$2,001-$10,000";
					}
					if (boton1 == '0 - $2,000'){
						evt1.clasificacion ="0 - $2,000";
					}
					
					evt1.etiqueta = _switch;
					evt1.cliente = _cliente;
					evt1.diaFiltro = _diaSeleccionado;
					evt1.responsable = _responsable;
					evt1.tipoResponsable = _tipoResponsable;
					dispatchEvent(evt1);
				}
			}
			
			protected function caretChangeHandler(event:IndexChangeEvent):void
			{
				if(this.lstGeneral.selectedIndex != -1 && this.lstGeneral.selectedItem.cliente == null ){
					if(event != null && lstGeneral.dataProvider.length > 0 ){
						if( event.newIndex != -1 ){
							event.preventDefault();
						}
					} 
				}
			}
			
			protected function changingHandler(event:IndexChangeEvent):void
			{
				if(this.lstGeneral.selectedIndex != -1 && this.lstGeneral.selectedItem.cliente == null ){
					if(event != null && lstGeneral.dataProvider.length > 0 ){
						if( event.newIndex != -1 ){
							event.preventDefault(); 
						}
					} 
				}
			}
			
			[Bindable(event="regresaLabelFiltroMonto")]
			public function get regresaLabelFiltroMonto():String
			{
				return _labelFiltroMonto;
			}
			
				
		]]>
	</fx:Script>
	<s:VGroup  width="100%" paddingTop="6" id="botoneraTODO" >
		<botonesToggle:ButtonBarColores width="100%" height="30" id="botoneraBarra" selectedIndex="0" dataProvider="{_arrButton}" textAlign="center" change="botonera()"  requireSelection="true" />
		<otros:divisionGruesa width="100%"/>
	</s:VGroup>	
	<s:HGroup width="100%" height="50" >
		<s:Label text="{this._dia}" fontSize="18" height="100%" fontWeight="bold" paddingBottom="15" textAlign="center" verticalAlign="bottom" />
	</s:HGroup>
	<!--<s:Spacer height="-15"/>-->
	<otros:divisionGruesa width="100%"/>
	<pq:ListPq width="100%" id="lstGeneral" horizontalScrollPolicy="off" changing="changingHandler(event)" caretChange="caretChangeHandler(event)" change="{_switch == 'AVISO' ? clickPrimero() : clickPrimeroModif() }"
			itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.reportes.ventas.notificados.itemRenderer.NotificadosIRGeneral"/>
	
</s:VGroup>

