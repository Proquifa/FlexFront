<?xml version="1.0" encoding="utf-8"?>
<comun:ContenedorComparacionTableroProductos xmlns:fx="http://ns.adobe.com/mxml/2009" 
									titulo="OC EN TRÁNSITO" xmlns:graficaPie="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*"
									circulosOCTransitoBool="true"
									xmlns:s="library://ns.adobe.com/flex/spark"
									xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:chekbox="skins.skin.chekbox.*" xmlns:otros="skins.otros.*" xmlns:graficas="skins.skin.graficas.*"
									xmlns:pq="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.*" xmlns:comun="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.*" >
	
	<fx:Declarations>
		<mx:SeriesInterpolate id="fxInterpolateIn" duration="300"/>
		<s:SolidColorStroke id="trazoGruezo" color="0x{catalogoColores.LABEL_NEGRO}" weight="3"/>
		<s:SolidColorStroke id="trazoDelgado" color="0x{catalogoColores.LABEL_NEGRO}" weight="1"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.compras.proveedores.EventoTabProveedores;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.tableros.productos.EventoTableroProductos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.consultas.comun.ResumenConsulta;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsGrid;
			
			import skins.catalogos.catalogoColores;
			
			private var _fecha:Date = new Date();
			private var _linealArrGrafica:ArrayCollection = new ArrayCollection();
			private const _tamanioMinimo:int = 170;
			
			private var _listaMensual:ArrayCollection = new ArrayCollection([
				"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"
			]);
			
			private function formateoEje($valor:Number, $valorPrevio:Object, $eje:Object):String{
				var strRegreso:String = "";
				if($valor != 0 ) strRegreso = String($valor) ;
				return strRegreso;
			}
			
			public function set resumenComparativaOCRecibidaProd(comparativa:ArrayCollection):void{
				if(comparativa == null) return;
				
				_linealArrGrafica = comparativa;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "OC_Recibidas_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
			}
			
			private function filtrarPeriodos( $lista:ArrayCollection ):ArrayCollection{
				var arrReturn:ArrayCollection = new ArrayCollection();
				var objetoPeriodo1:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "OC_Recibidas_0") );
				var objetoPeriodo2:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "OC_Recibidas_1") );
				var objetoPeriodo3:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "OC_Recibidas_2") );
				var objetoPeriodo4:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "OC_Recibidas_3") );
				var objetoPeriodo5:Object = generateObjectItemBarChart( UtilsGrid.queryCampoX( $lista, "etiqueta", "OC_Recibidas_4") );
				objetoPeriodo1.etiquetaX = _event.labelPeriodo1;
				objetoPeriodo2.etiquetaX = _event.labelPeriodo2;
				objetoPeriodo3.etiquetaX = _event.labelPeriodo3;
				objetoPeriodo4.etiquetaX = _event.labelPeriodo4;
				objetoPeriodo5.etiquetaX = _event.labelPeriodo5;
				arrReturn.addItem( objetoPeriodo5 );
				arrReturn.addItem( objetoPeriodo4 );
				arrReturn.addItem( objetoPeriodo3 );
				arrReturn.addItem( objetoPeriodo2 );
				arrReturn.addItem( objetoPeriodo1 );
				return arrReturn;
			}
			
			private function generateObjectItemBarChart( arrPie:ArrayCollection):Object{
				var objeto:Object = new Object();
				objeto.proveedorFT = 0;
				objeto.montoCantidadFT = 0;
				objeto.ocFT = 0;
				objeto.partidasFT = 0;
				objeto.piezasFT = 0;
				
				objeto.proveedorT = 0;
				objeto.montoCantidadT = 0;
				objeto.ocT = 0;
				objeto.partidasT = 0;
				objeto.piezasT = 0;
				
				for( var i:int = 0 ; i < arrPie.length ; i++){
					if(arrPie[i].conceptoResultado == "FUERA DE TIEMPO"){
						objeto.proveedorFT += arrPie[i].clientes_proveedores;
						objeto.montoCantidadFT += arrPie[i].total;
						objeto.ocFT += arrPie[i].ocompras;
						objeto.partidasFT += arrPie[i].partidas;
						objeto.piezasFT += arrPie[i].piezasTotal;
					}else{
						objeto.proveedorT += arrPie[i].clientes_proveedores;
						objeto.montoCantidadT += arrPie[i].total;
						objeto.ocT += arrPie[i].ocompras;
						objeto.partidasT += arrPie[i].partidas;
						objeto.piezasT += arrPie[i].piezasTotal;
					}
					
				}
				
				objeto.piezasFT == 1 ? objeto.piezasFTLabel = objeto.piezasFT + ' pza' : objeto.piezasFTLabel = objeto.piezasFT + ' pzas';
				objeto.piezasT == 1 ?  objeto.piezasTLabel = objeto.piezasT + ' pza': objeto.piezasTLabel = objeto.piezasT + ' pzas';
				return objeto;
			}
			
			private function iniciarGrafica( arrPie:ArrayCollection):ArrayCollection{
				
				var _ocTransitoGraf:ArrayCollection = new ArrayCollection();
				var cuenta:int = 1;
				while( cuenta < 13){
					if(cuenta >= _minimoMeses && cuenta <= _maximoMeses)
					{
					var objeto:Object = new Object();
					objeto.proveedorFT = 0;
					objeto.montoCantidadFT = 0;
					objeto.ocFT = 0;
					objeto.partidasFT = 0;
					objeto.piezasFT = 0;
					
					objeto.proveedorT = 0;
					objeto.montoCantidadT = 0;
					objeto.ocT = 0;
					objeto.partidasT = 0;
					objeto.piezasT = 0;
					objeto.etiquetaMes = _listaMensual[cuenta -1];
					
					for(var i:int = 0 ; i < arrPie.length ; i++){
						if(cuenta == (arrPie[i] as ResumenConsulta).mes){
							if(arrPie[i].conceptoResultado == "FUERA DE TIEMPO"){
								objeto.proveedorFT += arrPie[i].clientes_proveedores;
								objeto.montoCantidadFT += arrPie[i].total;
								objeto.ocFT += arrPie[i].ocompras;
								objeto.partidasFT += arrPie[i].partidas;
								objeto.piezasFT += arrPie[i].piezasTotal;
							}else{
								objeto.proveedorT += arrPie[i].clientes_proveedores;
								objeto.montoCantidadT += arrPie[i].total;
								objeto.ocT += arrPie[i].ocompras;
								objeto.partidasT += arrPie[i].partidas;
								objeto.piezasT += arrPie[i].piezasTotal;
							}
							arrPie.removeItemAt(i);
							i = i - 1;	
						}
					}
					
					objeto.piezasFT == 1 ? objeto.piezasFTLabel = objeto.piezasFT + ' pza' : objeto.piezasFTLabel = objeto.piezasFT + ' pzas';
					objeto.piezasT == 1 ?  objeto.piezasTLabel = objeto.piezasT + ' pza': objeto.piezasTLabel = objeto.piezasT + ' pzas';
					
					_ocTransitoGraf.addItem(objeto);
					}
					cuenta ++;
				}
				return _ocTransitoGraf;
			}
			
			private var _event:EventoTableroProductos;
			private var _minimoMeses:int=1;
			private var _maximoMeses:int=12;
			private var _keyAnterior:String = "";
			
			public function set recibeFiltros(etiqueta:EventoTableroProductos):void{
				if(etiqueta == null) return;
				_event = etiqueta;
				_minimoMeses = _event.parametros.mesInicio;
				_maximoMeses = _event.parametros.mesFin;
				myChart.dataProvider = iniciarGrafica( UtilsGrid.queryCampoX( _linealArrGrafica, "etiqueta", "OC_Recibidas_0") );
				var arrMinisChart:ArrayCollection = filtrarPeriodos( _linealArrGrafica );
				myChart1.dataProvider = arrMinisChart;
			}
			
			private function lblFunction( $value:Object, $etiqueta:Object ):String
			{
				return $etiqueta.toString().toUpperCase();
			}
			
		]]>
	</fx:Script>
	
	<graficaPie:contenido>
		<s:HGroup width="100%" height="100%" >
			<s:VGroup width="100%" height="100%" gap="0" >
				<mx:ColumnChart id="myChart"  width="100%" height="100%" type="stacked"
								dataTipMode="single" dataTipRenderer="{DataTipRenderRecibidas_Productos}" showDataTipTargets="false"
								mouseSensitivity="5" showDataTips="true" 
								paddingRight="40" paddingLeft="20" seriesFilters="[]"> 
					<mx:series>
						<mx:ColumnSeries id="colBarRed"
										 yField="piezasFT"
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"/>
						<mx:ColumnSeries id="colBarVerde"
										 yField="piezasT" 
										 showDataEffect="{fxInterpolateIn}"
										 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"/>
					</mx:series>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="vMes" categoryField="etiquetaMes"  />
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis id="vCantidad" baseAtZero="true" labelFunction="formateoEje"/>				
					</mx:verticalAxis>
					<mx:verticalAxisRenderers>
						<mx:AxisRenderer axis="{vCantidad}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
					</mx:verticalAxisRenderers>
					<mx:horizontalAxisRenderers>
						<mx:AxisRenderer axis="{vMes}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
										 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
					</mx:horizontalAxisRenderers>
				</mx:ColumnChart>
			</s:VGroup>	
		</s:HGroup>	
	</graficaPie:contenido>
	<comun:espacioB>
		<!-- CHART COMPARAR -->
		<mx:ColumnChart id="myChart1" width="60%" height="100%"
						dataTipRenderer="{DataTipRenderRecibidas_Productos}"
						mouseSensitivity="5" 
						showDataTips="true" 
						showDataTipTargets="false" 
						dataTipMode="single" 
						paddingRight="40" paddingLeft="20"
						paddingBottom="70" 
						seriesFilters="[]">
			<mx:series>
				<mx:ColumnSet type="stacked">
					<mx:ColumnSeries id="colBarRed1"
									 yField="piezasFT" 
									 showDataEffect="{fxInterpolateIn}"
									 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarRedRenderer"/>
					<mx:ColumnSeries id="colBarVerde1"
									 yField="piezasT" 
									 showDataEffect="{fxInterpolateIn}"
									 itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.tableros.clientes.componentes.BarGreenRenderer"/>
				</mx:ColumnSet>
			</mx:series>
			<mx:horizontalAxis>
				<mx:CategoryAxis id="vMes1" categoryField="etiquetaX" />
			</mx:horizontalAxis>
			<mx:verticalAxis>
				<mx:LinearAxis id="vCantidad1" baseAtZero="true" labelFunction="formateoEje" /> 
			</mx:verticalAxis>
			<mx:verticalAxisRenderers>
				<mx:AxisRenderer axis="{vCantidad}" showLine="false" tickPlacement="none" styleName="axisVerticalLabels" />
			</mx:verticalAxisRenderers>
			<mx:horizontalAxisRenderers>
				<mx:AxisRenderer axis="{vMes1}" axisStroke="{trazoGruezo}" tickStroke="{trazoDelgado}"
								 fontFamily="Helvetica" fontSize="11" fontWeight="bold" fontStyle="normal" labelFunction="lblFunction"/>
			</mx:horizontalAxisRenderers>
		</mx:ColumnChart>
	</comun:espacioB>
</comun:ContenedorComparacionTableroProductos>	