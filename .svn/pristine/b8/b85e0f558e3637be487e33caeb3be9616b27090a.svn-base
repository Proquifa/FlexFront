<?xml version="1.0" encoding="utf-8"?>
<contenedores:VGroupConPaddingStandardPqNet 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:contenedores="skins.skin.contenedores.*"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:label="skins.skin.label.*"
	xmlns:otros="skins.otros.*"
	xmlns:pqNet="skins.botones.pqNet.*"
	xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*"
	xmlns:textinput="skins.skin.textinput.*"
	width="100%" height="100%" gap="10"
	>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.EventoCatProGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.acuerdos.EventoCatProAcuerdos;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empresa;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Proveedor;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.EffectEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import spark.events.IndexChangeEvent;
			
			private var _currentProveedor:Proveedor;
			private var currentProveedorModificado:Proveedor;
			private var listaParaSerGuardada:ArrayCollection;
			
			private function showTipoCambio_effectEndHandler(event:EffectEvent):void
			{
				grpTipoDeCambio.percentHeight = 100;
				grpTipoDeCambio.visible = true;
			}
			
			private function cmbMonedaCompra_changeHandler(event:IndexChangeEvent):void
			{
				
				if(cmbMonedaCompra.selectedItem.valor != "--NINGUNO--" && cmbMonedaVenta.selectedItem.valor != "--NINGUNO--" )
				{
					
					if(cmbMonedaCompra.selectedItem.valor != cmbMonedaVenta.selectedItem.valor)
					{
						if(!showTipoCambio.isPlaying && !hideTipoCambio.isPlaying)
						{
							if(!grpTipoDeCambio.visible)
							{
								grpTipoDeCambio.includeInLayout = true;
								showTipoCambio.play();
							}
						}
						else
						{
							hideTipoCambio.stop();
							showTipoCambio.stop();
							
							//Házlo AHORAA!!!!!
							grpTipoDeCambio.width = 250;
							grpTipoDeCambio.alpha = 1;
						}
					}
					else
					{
						if(!hideTipoCambio.isPlaying && !showTipoCambio.isPlaying)
						{
							if(grpTipoDeCambio.visible)
								hideTipoCambio.play();
						}
						else
						{
							showTipoCambio.stop();
							hideTipoCambio.stop();
							
							//Házlo AHORAA!!!!!
							grpTipoDeCambio.alpha = 0;
							grpTipoDeCambio.width = 0;
							grpTipoDeCambio.includeInLayout = grpTipoDeCambio.visible = false;
						}
					}
				}
				else
				{
					if(!hideTipoCambio.isPlaying && !showTipoCambio.isPlaying)
					{
						if(grpTipoDeCambio.visible)
							hideTipoCambio.play();
					}
					else
					{
						showTipoCambio.stop();
						hideTipoCambio.stop();
						
						//hazlo ya
						grpTipoDeCambio.alpha = 0;
						grpTipoDeCambio.width = 0;
						grpTipoDeCambio.includeInLayout = grpTipoDeCambio.visible = false;
					}
				}
				
				
				
				if(cmbMonedaCompra.selectedIndex == currentSeleccionCombos.cmbMonedaCompra && cmbMonedaVenta.selectedIndex == currentSeleccionCombos.cmbMonedaVenta)
				{
					txtTipoDeCambio.text = currentSeleccionCombos.tipoCambio;
				}
				else
				{
					txtTipoDeCambio.text = "";
				}
			}
			
			protected function hideTipoCambio_effectEndHandler(event:EffectEvent):void
			{
				if(event.effectInstance.playheadTime >= (event.currentTarget as Parallel).compositeDuration)
				{
					grpTipoDeCambio.includeInLayout =  grpTipoDeCambio.visible = false;
					
				}
			}
			
			private function habilitaryDeshabilitarTodo($isHabilitado:Boolean):void
			{
				
				cmbMonedaCompra.openButton.enabled = $isHabilitado;
				cmbMonedaCompra.textInput.enabled = $isHabilitado;
				cmbMonedaCompra.focusEnabled = $isHabilitado;
				
				cmbMonedaVenta.openButton.enabled = $isHabilitado;
				cmbMonedaVenta.textInput.enabled = $isHabilitado;
				cmbMonedaVenta.focusEnabled = $isHabilitado;
				
				txtTipoDeCambio.editable = $isHabilitado; 
				grpDatosMoneda.mouseChildren = $isHabilitado;
				
				if(lstEmpresasCompra.dataProvider != null)
				{
					
					if(lstEmpresasCompra.dataProvider.length > 0)
					{
						var currentItem:Empresa = lstEmpresasCompra.dataProvider[0] as Empresa;
						var i:int;
						
						if($isHabilitado)
						{
							if(!currentItem.isEditando)
							{
								for (i = 0; i < lstEmpresasCompra.dataProvider.length; i++) 
								{
									currentItem = lstEmpresasCompra.dataProvider[i] as Empresa;
									currentItem.isEditando = $isHabilitado;
								}
							}
						}
						else
						{
							if(currentItem.isEditando)
							{
								for (i = 0; i < lstEmpresasCompra.dataProvider.length; i++) 
								{
									currentItem = lstEmpresasCompra.dataProvider[i] as Empresa;
									currentItem.isEditando = $isHabilitado;
								}
							}
						}
					}
				}
			}
			
			
			public function get currentProveedor():Proveedor
			{
				return _currentProveedor;
			}
			
			public function set currentProveedor(value:Proveedor):void
			{
				_currentProveedor = value;
				inicializarVista(value);
				
				if(_currentProveedor != null)
				{
					var solicitarRelacion:EventoCatProAcuerdos = new EventoCatProAcuerdos(EventoCatProAcuerdos.SOLICITAR_LA_RELACION_EMPRESAR_POR_PROVEEDOR);
					solicitarRelacion.idProveedor = _currentProveedor.idProveedor;
					dispatchEvent(solicitarRelacion);
				}
			}
			
			private var currentSeleccionCombos:Object; 
			private function inicializarVista($pro:Proveedor):void
			{
				txtTipoDeCambio.text = "";
				lblFua.fecha = null;
				grpTipoDeCambio.visible = grpTipoDeCambio.includeInLayout = false;
				currentSeleccionCombos = new Object;
				
				if($pro != null)
				{
					if(($pro as Proveedor).monedaCompra == null ||  StringUtil.trim(($pro as Proveedor).monedaCompra).length <= 0 )
					{
						cmbMonedaCompra.selectedIndex = cmbMonedaCompra.seleccionarValor("--Ninguno--","valor2");
					}
					else
					{
						cmbMonedaCompra.selectedIndex = cmbMonedaCompra.seleccionarValor(_currentProveedor.monedaCompra,"valor2");
					}
					
					if(($pro as Proveedor).monedaVenta == null ||  StringUtil.trim(($pro as Proveedor).monedaVenta).length <= 0 )
					{
						cmbMonedaVenta.selectedIndex = cmbMonedaVenta.seleccionarValor("--Ninguno--","valor2");
					}
					else
					{
						cmbMonedaVenta.selectedIndex = cmbMonedaVenta.seleccionarValor(_currentProveedor.monedaVenta,"valor2");
					}
					
					currentSeleccionCombos.cmbMonedaCompra = cmbMonedaCompra.selectedIndex;
					currentSeleccionCombos.cmbMonedaVenta = cmbMonedaVenta.selectedIndex;
					currentSeleccionCombos.tipoCambio = _currentProveedor.tipoCambio > 0 ? _currentProveedor.tipoCambio.toString() : "";
					
					setFUA(_currentProveedor.FUATipoCambio);
					
					cmbMonedaCompra.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
					
				}
				
				habilitaryDeshabilitarTodo(false);
			}
			
			
			private function setFUA($fua:Date):void
			{
				if($fua != null)
				{
					if(lblFua.fecha == null)
					{
						lblFua.fecha = $fua;	
					}
					else
					{
						if(lblFua.fecha.time < $fua.time)
						{
							lblFua.fecha = $fua;
						}
					}
				}
			}
			
			protected function btnEditar_clickHandler(event:MouseEvent):void
			{
				habilitaryDeshabilitarTodo(true);
				grpBotonEditar.visible = false;
				grpGuardarCancelar.visible = true;
				
			}
			
			protected function btnCancelar_clickHandler(event:MouseEvent):void
			{
				grpGuardarCancelar.visible = false;
				grpBotonEditar.visible = true;
				inicializarVista(currentProveedor);
				
				lstEmpresasCompra.dataProvider = ObjectUtil.copy(respaldoListaRespaldo) as ArrayCollection;
			}
			
			protected function btnGuardar_clickHandler(event:MouseEvent):void
			{
				
				if(cmbMonedaCompra.selectedIndex == 0 )
				{
					alertaSingleton.show("Es necesario indicar la moneda de compra.",catalogoAlertas.TIT_ADV_informacionIncompleta);
					return;
				}
				else if(cmbMonedaVenta.selectedIndex == 0)
				{
					alertaSingleton.show("Es necesario indicar la moneda de venta.",catalogoAlertas.TIT_ADV_informacionIncompleta);
					return;
				}
				
				if(grpTipoDeCambio.visible && StringUtil.trim(txtTipoDeCambio.text).length <=0)
				{
					alertaSingleton.show("Es necesario indicar el tipo de cambio.",catalogoAlertas.TIT_ADV_informacionIncompleta);
					return;
				}
				
				var actualizarProveedor:EventoCatProGeneral = new EventoCatProGeneral(EventoCatProGeneral.ACTUALIZAR_MONEDAS_COMPRA_VENTA);
				actualizarProveedor.proveedorSeleccionado = currentProveedor;
				actualizarProveedor.proveedorSeleccionado.monedaCompra = cmbMonedaCompra.selectedItem.valor2;
				actualizarProveedor.proveedorSeleccionado.monedaVenta = cmbMonedaVenta.selectedItem.valor2;
				
				if(!grpTipoDeCambio.visible)
					actualizarProveedor.proveedorSeleccionado.tipoCambio = 0;
				else
					actualizarProveedor.proveedorSeleccionado.tipoCambio = Number(StringUtil.trim(txtTipoDeCambio.text));
				
				currentProveedorModificado = actualizarProveedor.proveedorSeleccionado;
				currentProveedor.cambioEnTipoCambio = true;
				actualizarProveedor.ventana = "CatProveedor_Compra/Venta_Moneda ( idProveedor:"+currentProveedor.idProveedor+" )";
				dispatchEvent(actualizarProveedor);
				
				listaParaSerGuardada = ObjectUtil.copy(lstEmpresasCompra.dataProvider) as ArrayCollection;
				
				habilitaryDeshabilitarTodo(false);
				grpGuardarCancelar.visible = false;
				grpBotonEditar.visible = true;
				
			}
			
			
			public function set recibeConfirmaActualizarMonedaCompraVenta($confirmaGuardado:Boolean):void{
				if( $confirmaGuardado == true)
				{
					var actualizarLista:EventoCatProAcuerdos = new EventoCatProAcuerdos(EventoCatProAcuerdos.SOLICITAR_ACTUALIZAR_LISTA_EMPRESAS_RELACIONADAS_CON_EL_PROVEEDOR);
					actualizarLista.listaEmpresas = listaParaSerGuardada;
					actualizarLista.ventana = "CatProveedor_Compra/Venta_ListaEmpresas ( idProveedor:"+currentProveedor.idProveedor+" )";
					dispatchEvent(actualizarLista);
				}
			}
			
			private var respaldoListaRespaldo:ArrayCollection;
			public function set recibeListaRelacionEmpresasProProveedor($listaEmpresas:ArrayCollection):void
			{
				if($listaEmpresas == null)
				{
					return;
				}
				
				respaldoListaRespaldo = ObjectUtil.copy($listaEmpresas) as ArrayCollection;
				if(respaldoListaRespaldo.length > 0)
				{
					setFUA((respaldoListaRespaldo[0] as Empresa).fechaUltimaActualizacion); 
				}
				lstEmpresasCompra.dataProvider = $listaEmpresas;
				
			}
			
			public function set recibeConfirmacionDeGuardadoListaRelacionEmpresas($recibeConfirmacion:Boolean):void
			{
				if($recibeConfirmacion)
				{
					var evtd:EventoCatProGeneral = new EventoCatProGeneral(EventoCatProGeneral.ACTUALIZA_PROVEEDORES_DE_GENERALES);
					evtd.idProveedor = currentProveedorModificado.idProveedor;
					evtd.habilitado = currentProveedorModificado.habilitado;
					dispatchEvent( evtd ); 
					
					var $evtP:EventoCatProGeneral = new EventoCatProGeneral( EventoCatProGeneral.OBTENER_PROVEEDORES );
					$evtP.busquedaProveedores = 'Todos';
					$evtP.empleado = DatosGlobales.getInstance()._usuario;
					dispatchEvent($evtP);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Parallel id="showTipoCambio" effectEnd="showTipoCambio_effectEndHandler(event)" target="{grpTipoDeCambio}"> 
			<s:Resize widthFrom="0" widthTo="250" duration="200"/>
			<s:Fade alphaFrom="0" alphaTo="1" startDelay="100" duration="100"/>
		</s:Parallel>
		
		<s:Parallel id="hideTipoCambio" effectEnd="hideTipoCambio_effectEndHandler(event)" target="{grpTipoDeCambio}">
			<s:Resize widthFrom="250" widthTo="0" duration="200"/>
			<s:Fade alphaFrom="1" alphaTo="0" duration="150"/>
		</s:Parallel>
	</fx:Declarations>
	
	<s:HGroup width="100%" verticalAlign="bottom" >
		<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_compraVentaGris}"/>
		<label:TituloBankGothic_30 text="Compra/Venta"/>
		<s:Spacer width="100%"/>
		<s:HGroup height="100%" verticalAlign="bottom" horizontalAlign="right">
			<label:Texto_13_VerdeAzul text="Última actualización: "/>
			<label:Fecha_13_VerdeAzul id="lblFua" fecha="{null}"/>
		</s:HGroup>
	</s:HGroup>
	
	<otros:divisionGruesa width="100%"/>
	<s:Group width="100%" height="100%" >
		
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" maxWidth="1050" horizontalCenter="0" gap="10">
			
			<label:Titulo_16_pTop10 width="100%" text="MONEDAS" textAlign="right"/>
			<otros:division width="100%"/>
			
			<s:HGroup gap="20" id="grpDatosMoneda" >
				<s:VGroup width="250" gap="10" >
					<label:Titulo text="Moneda de compra:" paddingTop="0"/>
					<cmbCat:ComboCatalogos id="cmbMonedaCompra" width="100%" creationComplete="{ cmbMonedaCompra.cargaMoneda('--NINGUNO--' );}" height="28" change="cmbMonedaCompra_changeHandler(event)"/>
					
					<label:Titulo text="Moneda de venta:" paddingTop="0"/>
					<cmbCat:ComboCatalogos id="cmbMonedaVenta" width="100%" creationComplete="{ cmbMonedaVenta.cargaMoneda('--NINGUNO--' );}" height="28" change="cmbMonedaCompra_changeHandler(event)"/>
				</s:VGroup>
				
				<s:VGroup id="grpTipoDeCambio" gap="10" width="0" visible="false" includeInLayout="false" height="100%" verticalAlign="bottom">
					<label:Titulo text="Tipo de cambio:"/>
					<textinput:txtInputBlancoDefaultPQNet id="txtTipoDeCambio" width="100%" restrict=".0-9" />
				</s:VGroup>
			</s:HGroup>
			
			<label:Titulo_16_pTop10 width="100%" text="EMPRESAS QUE COMPRAN" textAlign="right"/> 
			<otros:division width="100%"/>
			
			<s:VGroup  id="grpListaEmpresasCompra" width="100%" height="500" gap="0">
				
				<s:VGroup width="100%">
					<s:HGroup width="100%">
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_menulineas}"/>
						<label:Titulo text="CATÁLOGO DE CONCEPTOS"  height="100%" verticalAlign="middle" paddingTop="0"/> 
					</s:HGroup>
					<otros:division id="divListaEmpresasCompra" width="100%" visible="true" includeInLayout="true"/>
				</s:VGroup>
				
				<s:List id="lstEmpresasCompra" borderVisible="false" horizontalScrollPolicy="off" width="100%" height="100%"
						itemRenderer="mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.acuerdos.itemRenderer.CatProIR_ConceptosEmpresaQueCompra"
						>
				</s:List>
			</s:VGroup>
			
		</s:VGroup>  
	</s:Group>  
	
	<otros:divisionGruesa width="100%"/>
	<s:Group width="100%" id="grpBotones">
		<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle" id="grpBotonEditar"  >
			<pqNet:botonPqNetLargo label="Editar" id="btnEditar" colorBase="0x{catalogoColores.LABEL_VERDE_AZUL}" click="btnEditar_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup width="100%" id="grpGuardarCancelar" visible="false">
			<pqNet:botonPqNetLargo label="Guardar" id="btnGuardar" click="btnGuardar_clickHandler(event)"/>
			<s:Spacer width="100%"/>
			<pqNet:botonPqNetLargo label="Cancelar" colorBase="0x{catalogoColores.LABEL_ROJO_CLARO }" id="btnCancelar" click="btnCancelar_clickHandler(event)"/>
		</s:HGroup>
	</s:Group>
</contenedores:VGroupConPaddingStandardPqNet>
