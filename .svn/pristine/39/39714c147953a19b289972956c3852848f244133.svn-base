<?xml version="1.0" encoding="utf-8"?>
<s:Button xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  skinClass="skins.botones.evento.skinButtonColoresConImagenEventoDefault"
		  creationComplete="inicio(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import skins.catalogos.catalogoIconosBotones;
			
			import spark.layouts.HorizontalAlign;
			
			private var _color:uint;
			private var _icono:String ='';
			private var _conTexto:Boolean = false;
			private var _horizontal:String = HorizontalAlign.RIGHT;
			
			
			protected function inicio(event:FlexEvent):void
			{
				skinButtonColoresConImagenEventoDefault(skin).color = color;
				skinButtonColoresConImagenEventoDefault(skin).conTexto = conTexto;
				if (icono != "" ){
					skinButtonColoresConImagenEventoDefault(skin).icono.visible = true;
					skinButtonColoresConImagenEventoDefault(skin).icono.includeInLayout = true;
					skinButtonColoresConImagenEventoDefault(skin).icono.source = catalogoIconosBotones.getInstance()[icono];
				}
				skinButtonColoresConImagenEventoDefault(skin).horizontal = horizontal;
			}
			
			[Inspectable(category="Colors",defaultValue="0xC8C8C8")]
			public function get color():uint
			{
				return _color;
			}
			
			public function set color(value:uint):void
			{
				_color = value;
				if (skin != null ){
					skinButtonColoresConImagenEventoDefault(skin).color = color;
				}
			}
			
			[Inspectable(category="Common", defaultValue="editar", enumeration="editarEvento,editarSelected,guardarEvento,guardarOver,lupa,sorteo,exportarEvento,checkin,grafica,nuevo,editarGrande,descargarArchivos,direccion")]
			[Bindable]
			public function get icono():String
			{
				return _icono;
			}
			
			public function set icono(value:String):void
			{
				_icono = value;
				if (value != "" && skin != null ){
					skinButtonColoresConImagenEventoDefault(skin).icono.source = catalogoIconosBotones.getInstance()[value];
				}
			}
			
			
			[Inspectable(category="Effects",defaultValue="false", enumeration="false,true")]
			public function get conTexto():Boolean
			{
				return _conTexto;
			}
			
			public function set conTexto(value:Boolean):void
			{
				_conTexto = value;
				if (skin != null ){
					skinButtonColoresConImagenEventoDefault(skin).conTexto = conTexto;
				}
			}
			
			[Inspectable(category="Effects",defaultValue="right", enumeration="right,left")]
			public function get horizontal():String
			{
				return _horizontal;
			}

			public function set horizontal(value:String):void
			{
				_horizontal = value;
				if (skin != null ){
					skinButtonColoresConImagenEventoDefault(skin).horizontal = _horizontal;
				}
			}
			
			
		]]>
	</fx:Script>
	
	
</s:Button>
