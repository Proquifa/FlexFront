<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:label="skins.skin.label.*" 
		 xmlns:toggleButton="skins.skin.botones.toggleButton.*" 
		 xmlns:otros="skins.otros.*"
		 width="100%" height="100%"
		 >
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.clientes.comerciales.oferta.EventoCatClientes_Oferta;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.catalogos.proveedores.comerciales.EventoCatProOferta;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.FormulaPrecio;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.ConfiguracionPrecioProducto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.catalogos.proveedores.CostoFactor;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Producto;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFormatosNumericos;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.catalogos.proveedores.CatProZonaTrabajo;
			import mx.core.IToolTip;
			import mx.events.ToolTipEvent;
			import mx.managers.ToolTipManager;
			
			import spark.components.supportClasses.GroupBase;
			
			import skins.catalogos.catalogoIconosBotones;
			import skins.skin.toolTip.toolTipDefaultPQNet;
			
			
			[Bindable]
			public var isProveedorNacional:Boolean;
			
			[Bindable]
			private var currentCostoFactor:CostoFactor;
			
			[Bindable]
			private var currentProducto:Producto;
			
			[Bindable]
			private var currentConfiguracion:ConfiguracionPrecioProducto;
			
			[Bindable] 
			private var _currentNI:String;
			
			[Bindable]
			private var costoCompra:Number;
			
			
			private var _listaPrecios:Array;
			private var _currentIndex:int;
			private var _Tool_formula:String;
			private var _currentNivel:String;
			private var _idCliente:Number;
			private var _currentFormulaPrecio:FormulaPrecio;
			
			private var verde:uint = 0x70a047;
			private var rojo:uint = 0xd10c0c;
			private var naranja:uint = 0xff6600;
			
			
			public function get dataProvider():Array
			{
				return _listaPrecios;
			}
			
			public function set dataProvider(value:Array):void
			{
				if(value != null && value.length > 0 )
				{
					_listaPrecios = value;
					grpFactoresSinInfo.visible = false;
					grpFactoresConInformacion.visible = true;
					mostrarInfoEnElPanel(0);
				}
				else
				{
					//limpiar panel
					grpFactoresSinInfo.visible = true;
					grpFactoresConInformacion.visible = false;
				}
			}
			
			
			public function mostrarInfoEnElPanel($index:int):void
			{
				_currentIndex = $index;
				_currentNI = parentDocument.parent._nivelCli;
				_currentNivel = parentDocument.parent.currentNivel;
				_idCliente = parentDocument.parent._idCliente;
				currentConfiguracion = _listaPrecios[$index] as ConfiguracionPrecioProducto;
				
				currentCostoFactor = currentConfiguracion.costoFactorProducto;
				currentProducto =  currentConfiguracion.producto;
				costoCompra =  currentConfiguracion.costoCompra;
				
				
				//NA Stock y Flete
				if (currentCostoFactor.fleteExpressDisable ){
					currentCostoFactor.precioUFExpress_String = "FE · NA";
				}
				
				if (currentCostoFactor.stockDisable ) {
					currentCostoFactor.precioUStock_String = "Stock · NA";
				}
				
				if(_currentNivel != "Clasificacion")
				{
					var soliFormula:EventoCatClientes_Oferta = new EventoCatClientes_Oferta(EventoCatClientes_Oferta.OBTENER_INFORMACION_DE_LA_FORMULA_PRECIO);
					soliFormula.idProveedor =  currentConfiguracion.idProveedor;
					soliFormula.idConfigFamilia =  currentConfiguracion.idConfiguracionFamilia;
					soliFormula.idProducto = currentProducto.idProducto;
					soliFormula.nivel = _currentNI;
					soliFormula.idCliente = _idCliente;
					dispatchEvent(soliFormula);
					
				}
				else
				{
					var formClasif:EventoCatClientes_Oferta = new EventoCatClientes_Oferta(EventoCatClientes_Oferta.OBTENER_VALORES_FORMULA_CLASIFICACION_CLIENTE);
					formClasif.idProveedor =  currentConfiguracion.idProveedor;
					formClasif.idConfigFamilia =  currentConfiguracion.idConfiguracionFamilia;
					formClasif.idProducto = currentProducto.idProducto;
					formClasif.nivel = _currentNI;
					formClasif.idCliente = _idCliente;
					dispatchEvent(formClasif);
				}
				
				
				if(currentCostoFactor.precioUTemporalCliente && currentCostoFactor.precioUTemporalCliente.toString().length > 0)
				{
					visibleTemporal(true);
					var valorPrecio:Number = currentProducto.costo;
					var valorTemp:Number = currentCostoFactor.precioUTemporalCliente;
					var total:Number = ((valorTemp / valorPrecio)-1) * 100;
					lblDifenrencialTemp.text = redondeo(total);
					
					if (total < 0 )
						lblDifenrencialTemp.setStyle("color",rojo);
					else if (total == 0 )
						lblDifenrencialTemp.setStyle("color",naranja);
					else
						lblDifenrencialTemp.setStyle("color",verde);
				}
				else
					visibleTemporal(false);
				
			}
			
			private function visibleTemporal($valor:Boolean):void
			{
				lbl_0.visible = lbl_0.includeInLayout = $valor;
				lbl_1.visible = lbl_1.includeInLayout = $valor;
				lbl_2.visible = lbl_2.includeInLayout = $valor;
				lbl_3.visible = lbl_3.includeInLayout = $valor;
				lblDifenrencialTemp.visible = lblDifenrencialTemp.includeInLayout = $valor;
			}
			
			private function redondeo($valor:Number):String
			{
				return UtilsFormatosNumericos.precisionADosDecimales($valor) + "%";
			}
			
			
			public function set recibeInfoFormulaPrecio(value:FormulaPrecio):void
			{
				if(value == null || value.valorAduana == 0)
					return;
				
				var _Tool_valorAduana:String = "";
				var _Tool_numeroPiezas:String = "";
				var _Tool_precioLista:String = "";
				var _Tool_fletePC:String = "";
				
				_currentFormulaPrecio = value;
				
				//   ESTO ES PARA PROBAR QUE CAMBIE LA FORMULA
				/* _currentFormulaPrecio.clienteCompuestaCostoF = false;
				_currentFormulaPrecio.clienteCompuestaFactorU = false; */
				
				
				if(_currentNI == "AAplus")
					lblNivelIngreso.text = "AA+";
				else
					lblNivelIngreso.text = _currentNI;
				
				if(_currentFormulaPrecio.minimoOrdebCompra < 0)
				{
					lblMontoMinimo.text = "NA";
				}
				else
				{
					lblMontoMinimo.text = currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(_currentFormulaPrecio.minimoOrdebCompra);
				}
				
				var valorAduanaString:String ="";
				lblDescuento.text = _currentFormulaPrecio.descuento + "%";
				lblValorEnAduana.text = valorAduanaString = currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(_currentFormulaPrecio.valorAduana);
				_Tool_valorAduana = lblValorEnAduana.text = currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(_currentFormulaPrecio.valorAduana);
				_Tool_numeroPiezas = _currentFormulaPrecio.numeroPiezas.toString();
				_Tool_precioLista = "$"+UtilsFormatosNumericos.precisionASeisDecimalesConComas( _currentFormulaPrecio.precioLista);
				_Tool_fletePC =  "$"+UtilsFormatosNumericos.precisionASeisDecimalesConComas( _currentFormulaPrecio.flete);
				_Tool_formula = _Tool_valorAduana + " = (" + _Tool_numeroPiezas + "pzas * "+_Tool_precioLista+" ) + "+_Tool_fletePC;
				
				var importacion:Number = UtilsFormatosNumericos.truncarDecimalesFloor((_currentFormulaPrecio.valorAduana * (_currentFormulaPrecio.igi/100)),2) + 
					UtilsFormatosNumericos.truncarDecimalesFloor((_currentFormulaPrecio.valorAduana * (_currentFormulaPrecio.dta /100)),2) + _currentFormulaPrecio.honorariosAgenteA; 
				
				var importacionString:String = UtilsFormatosNumericos.precisionASeisDecimalesConComas(importacion);
				lblImportacion.text = "(" + currentProducto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " * " + 
					_currentFormulaPrecio.igi + "%)" + " + ("+currentProducto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " * " + 
					_currentFormulaPrecio.dta + "%) + " + _currentFormulaPrecio.honorariosAgenteAString + " = " +
					currentProducto.monedaSimbolo + importacionString;
				
				
				var costoDeVenta:Number;
				var costoDeVentaString:String;
				if(isProveedorNacional)
				{
					costoDeVenta = (_currentFormulaPrecio.valorAduana + _currentFormulaPrecio.costoConsularizacion + _currentFormulaPrecio.fleteDocumentacion + _currentFormulaPrecio.permiso + _currentFormulaPrecio.fleteDestino);
					costoDeVentaString = UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoDeVenta);
					lblCostoVenta.text = currentProducto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " + " +
						currentProducto.monedaSimbolo +_currentFormulaPrecio.costoConsularizacionString + " + "+currentProducto.monedaSimbolo + _currentFormulaPrecio.fleteDocumentacionString + " + " +
						currentProducto.monedaSimbolo + _currentFormulaPrecio.permisoString + " + " + currentProducto.monedaSimbolo + _currentFormulaPrecio.fleteDestinoString + " = " +
						currentProducto.monedaSimbolo + costoDeVentaString;
				}
				else
				{
					costoDeVenta = (_currentFormulaPrecio.valorAduana + importacion + _currentFormulaPrecio.costoConsularizacion + _currentFormulaPrecio.fleteDocumentacion + _currentFormulaPrecio.permiso + _currentFormulaPrecio.fleteDestino);
					costoDeVentaString = UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoDeVenta);
					lblCostoVenta.text = currentProducto.monedaSimbolo + _currentFormulaPrecio.valorAduanaString + " + " +currentProducto.monedaSimbolo + importacionString + " + " +
						currentProducto.monedaSimbolo +_currentFormulaPrecio.costoConsularizacionString + " + "+currentProducto.monedaSimbolo + _currentFormulaPrecio.fleteDocumentacionString + " + " +
						currentProducto.monedaSimbolo + _currentFormulaPrecio.permisoString + " + " + currentProducto.monedaSimbolo + _currentFormulaPrecio.fleteDestinoString + " = " +
						currentProducto.monedaSimbolo + costoDeVentaString;
				}
				
				var costoFijo:Number;
				var costoFijoString:String;
				var valorString:String = UtilsFormatosNumericos.precisionASeisDecimalesConComas(_currentFormulaPrecio.valor);
				
				if(_currentFormulaPrecio.compuestaCostoF)
				{
					costoFijo = UtilsFormatosNumericos.truncarDecimalesFloor((costoDeVenta * (_currentFormulaPrecio.costoFijo / 100)),2);
					costoFijoString = UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoFijo);
					lblCostoFijo.text = currentProducto.monedaSimbolo + costoDeVentaString +" * "+ _currentFormulaPrecio.costoFijo + "% = " + currentProducto.monedaSimbolo + costoFijoString;
				}
				else
				{
					costoFijo = UtilsFormatosNumericos.truncarDecimalesFloor((_currentFormulaPrecio.valor * (_currentFormulaPrecio.costoFijo / 100)),2);
					costoFijoString = UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoFijo);
					lblCostoFijo.text =  currentProducto.monedaSimbolo + valorString +" * "+ _currentFormulaPrecio.costoFijo + "% = " + currentProducto.monedaSimbolo + costoFijoString;
				}
				
				var utilidad:Number;
				var utilidadString:String;
				if(_currentFormulaPrecio.compuestaFactorU)
				{
					utilidad = UtilsFormatosNumericos.truncarDecimalesFloor((costoDeVenta * (_currentFormulaPrecio.utilidad /100)),2);
					utilidadString = UtilsFormatosNumericos.precisionASeisDecimalesConComas(utilidad);
					lblUtilidad.text = currentProducto.monedaSimbolo + costoDeVentaString + " * " + _currentFormulaPrecio.utilidad + "% = " + currentProducto.monedaSimbolo + utilidadString;
				}
				else
				{
					utilidad = UtilsFormatosNumericos.truncarDecimalesFloor((_currentFormulaPrecio.valor * (_currentFormulaPrecio.utilidad /100)),2);
					utilidadString = UtilsFormatosNumericos.precisionASeisDecimalesConComas(utilidad);
					lblUtilidad.text =  currentProducto.monedaSimbolo + valorString + " * " + _currentFormulaPrecio.utilidad + "% = " + currentProducto.monedaSimbolo + utilidadString;
				}
				
				
				
				var precioTotal:Number = (costoDeVenta + costoFijo + utilidad);
				var precioTotalString:String = UtilsFormatosNumericos.precisionASeisDecimalesConComas(precioTotal);
				lblPrecioTotal.text = currentProducto.monedaSimbolo + costoDeVentaString +" + "+ currentProducto.monedaSimbolo + costoFijoString +" + " + currentProducto.monedaSimbolo + utilidadString + " = " + 
					currentProducto.monedaSimbolo + precioTotalString;
				
				
				var costoVentaUni:Number;
				var costoFijoUni:Number;
				var utilidadUni:Number;
				
				if(_currentNI == "FEXPRESS")
				{
					lblNivelIngreso.text = "FE";
				}
				else if(_currentNI == "STOCK")
				{
					lblNivelIngreso.text = "Stock";
				}
				else if(_currentNI == "PUBLICO")
				{
					lblNivelIngreso.text = "PÚBLICO";
					_currentNI = "PÚBLICO";
				}
				else if(_currentNI == "AAplus")
				{
					lblNivelIngreso.text = "AA+";
				}
				
				costoVentaUni = UtilsFormatosNumericos.truncarDecimalesFloor((costoDeVenta / _currentFormulaPrecio.numeroPiezas),2);
				lblCostoVentaUni.text = currentProducto.monedaSimbolo + costoDeVentaString +" / " +_currentFormulaPrecio.numeroPiezas + " = "+ currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoVentaUni);
				
				costoFijoUni = UtilsFormatosNumericos.truncarDecimalesFloor((costoFijo / _currentFormulaPrecio.numeroPiezas),2);
				lblCostoFijoUni.text = currentProducto.monedaSimbolo + costoFijoString +" / " +_currentFormulaPrecio.numeroPiezas + " = "+ currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoFijoUni);
				
				utilidadUni = UtilsFormatosNumericos.truncarDecimalesFloor((utilidad / _currentFormulaPrecio.numeroPiezas),2);	
				lblUtilidadUni.text = currentProducto.monedaSimbolo + utilidadString +" / " +_currentFormulaPrecio.numeroPiezas + " = "+ currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(utilidadUni);
				
				var precioUni:Number = costoVentaUni + costoFijoUni + utilidadUni;
				lblPrecioUni.text = currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoVentaUni) +" + " +
					currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(costoFijoUni) + " + "+ 
					currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(utilidadUni)+ " = "+ 
					currentProducto.monedaSimbolo + UtilsFormatosNumericos.redondearNEAREST(precioUni)+".00";
				
			}
			
			public function cambiarIndex($index:int):void
			{
				mostrarInfoEnElPanel($index);	
			}
			
			
			
			protected function hgroup1_toolTipShowHandler(event:ToolTipEvent):void
			{
				var myTip:IToolTip;
				myTip = ToolTipManager.currentToolTip;
				
				var currentWidth:Number = event.currentTarget.width;
				var point:Point = new Point(event.currentTarget.x,event.currentTarget.y);
				var gPoint:Point = (event.currentTarget.parent as GroupBase).localToGlobal(point);
				
				myTip.x = (gPoint.x);
				myTip.y = (gPoint.y - (myTip.height + 5));
				
			}
			
			
			protected function createCustomToolTip($text:String,eve:ToolTipEvent):void
			{
				var customTolTip:toolTipDefaultPQNet = new toolTipDefaultPQNet;
				
				if(isProveedorNacional)
				{
					if(eve.currentTarget.id == "grpCostoVentaTotal")
					{
						customTolTip.bodyText = "Costo de venta total = Valor en aduana + Consularización + Envío de documentos + permiso + Almacén destino";
					}
					else
					{
						customTolTip.bodyText = $text;	
					}
				}
				else
				{
					customTolTip.bodyText = $text;	
				}
				
				if($text == "costoFijo")
				{
					if(_currentFormulaPrecio.compuestaCostoF)
						customTolTip.bodyText = "Costo fijo total = \nCosto de venta * Factor de costo fijo";
					else
						customTolTip.bodyText = "Costo fijo total = \nVALOR * Factor de costo fijo";
				}
				
				if($text == "utilidad")
				{
					if(_currentFormulaPrecio.compuestaFactorU)
						customTolTip.bodyText = "Utilidad total = \nCosto de venta total * Factor de utilidad";
					else
						customTolTip.bodyText = "Utilidad total = \nVALOR * Factor de utilidad";
				}
				
				eve.toolTip = customTolTip;
			}
			
			
			private function generaTool($valor:ConfiguracionPrecioProducto):String
			{
				if(currentCostoFactor.precioUTemporalCliente && currentCostoFactor.precioUTemporalCliente.toString().length > 0)
					return "Vigencia: " + UtilsFecha.formatoFechaDDMMMYY(currentCostoFactor.caduca);
				else
					return "";
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="grpFactoresSinInfo" width="100%" height="100%">
		<label:Titulo_22_pTop10 text="Sin productos" paddingTop="0" verticalCenter="0" horizontalCenter="0"/>
	</s:Group>
	
	<s:VGroup id="grpFactoresConInformacion" width="100%" height="100%" horizontalAlign="center" gap="10">
		<label:Titulo_25_VerdeAzul_pTop10 id="lblPrecioLista" text="{UtilsFormatosNumericos.redondearNEAREST(currentProducto.costo) +' '+ currentProducto.monedaAbreviatura}" paddingTop="0"/>
		<label:Titulo_14_VerdeAzul_pTop10 text="Privado" width="100%" textAlign="center" paddingTop="0"/>
		
		
		
		<s:HGroup width="100%" horizontalAlign="center" gap="3">
			<s:Spacer width="100%" />
			
			<s:VGroup horizontalAlign="center" paddingLeft="20">
				<label:Texto id="df" text="{_currentNI == 'AAplus'? 'AA+':_currentNI}"/>
				<mx:Image id="lbl_0" source="{catalogoIconosBotones.getInstance().reloj_amarillo }" toolTip="{generaTool(currentConfiguracion)}" smoothBitmapContent="true"/>
			</s:VGroup>  
			
			<s:VGroup >
				<label:Texto text="·"/>
				<label:Texto id="lbl_1" text="·"/>
			</s:VGroup>
			
			<s:VGroup >
				<label:Texto text="{currentProducto.monedaSimbolo + UtilsFormatosNumericos.precisionASeisDecimalesConComas(currentCostoFactor.precioUCliente)}"/>
				<label:Monto_14_Texto id="lbl_2" montoCantidad="{currentCostoFactor.precioUTemporalCliente}"  especificarSigno=" {currentProducto.monedaSimbolo}" color="#f2ba29"/>
			</s:VGroup>
			
			<s:VGroup >
				<label:Texto text="·"/>
				<label:Texto id="lbl_3" text="·"/>
			</s:VGroup>
			
			<s:VGroup >
				<label:Texto text="{currentCostoFactor.diferencialCliente}%"/>
				<label:Texto id="lblDifenrencialTemp" />
			</s:VGroup>
			
			<s:Spacer width="100%" />
		</s:HGroup>  
		
		
		
		<s:HGroup width="100%" horizontalAlign="right" >
			<label:TextoUperCaseRojo text="{currentProducto.licencia}" />
		</s:HGroup>
		
		
		<otros:division width="100%"/>
		<label:Titulo_25_VerdeAzul_pTop10 id="lblNivelIngreso" text="{_currentNI == 'AAplus'? 'AA+':_currentNI} "/>
		<s:VGroup width="100%" height="100%" gap="0" paddingTop="5">
			<s:HGroup width="100%" horizontalAlign="center">
				<s:Spacer width="50%" />
				<s:VGroup horizontalAlign="right">
					<s:HGroup gap="10">
						<label:Titulo text="Monto Mínimo OC:" paddingTop="0"/>
					</s:HGroup>
					<s:Spacer height="15"/>
					<s:HGroup gap="10">	
						<label:Titulo_14_pTop10 text="Descuento:" paddingTop="0"/>
					</s:HGroup>
					<s:Spacer height="15"/>
					<s:HGroup toolTip=" " toolTipCreate="createCustomToolTip('Valor en aduana = \n (Número de piezas * precio de lista con descuento)\n + flete PC\n'+_Tool_formula,event)" gap="10" toolTipShow="hgroup1_toolTipShowHandler(event)">
						<label:Titulo_14_pTop10 text="Valor en aduana:" paddingTop="0"/>
					</s:HGroup>
				</s:VGroup>  
				<s:VGroup horizontalAlign="left">
					<s:HGroup gap="10">
						<label:Texto width="100%" id="lblMontoMinimo"/>
					</s:HGroup>
					<s:Spacer height="15"/>
					<s:HGroup gap="10">	
						<label:Texto width="100%" id="lblDescuento"/>
					</s:HGroup>
					<s:Spacer height="15"/>
					<s:HGroup  gap="10">
						<label:Texto width="100%" id="lblValorEnAduana"/>
					</s:HGroup>
				</s:VGroup>  
				<s:Spacer width="100%" />
			</s:HGroup>
			<s:Spacer height="20" />
			<otros:division width="100%"/>
			<s:Spacer height="20"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Importación = \n(Valor en aduana * IGI) + (Valor en aduana * DTA) + \nHonorarios AA ',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Importación:" paddingTop="0"/>
				<label:Texto width="100%" id="lblImportacion"/>
			</s:VGroup>  
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo de venta total = \nValor en aduana + Importación + Consularización + \nEnvío de documentos + permiso + Almacén destino',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo de venta total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoVenta"/>
			</s:VGroup>  
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('costoFijo',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo fijo total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoFijo"/>
			</s:VGroup>  
			<s:Spacer height="15"/>
			
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('utilidad',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Utilidad total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblUtilidad"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Precio total = \nCosto de venta total + Costo fijo total + Utilidad total',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Precio total:" paddingTop="0"/>
				<label:Texto width="100%" id="lblPrecioTotal"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo de venta unitario = \nCosto de venta total / Número de piezas',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo de venta unitario:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoVentaUni"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Costo fijo unitario = \nCosto fijo total / Número de piezas',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Costo fijo unitario:" paddingTop="0"/>
				<label:Texto width="100%" id="lblCostoFijoUni"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Utilidad unitaria = \nUtilidad total / Número de piezas',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Utilidad unitaria:" paddingTop="0"/>
				<label:Texto width="100%" id="lblUtilidadUni"/>
			</s:VGroup>
			<s:Spacer height="15"/>
			<s:VGroup toolTip=" " width="100%" toolTipCreate="createCustomToolTip('Precio unitario = \nCosto de venta unitario + Costo fijo unitario + Utilidad unitaria',event)" toolTipShow="hgroup1_toolTipShowHandler(event)" gap="10">
				<label:Titulo_14_pTop10 text="Precio unitario:" paddingTop="0"/>
				<label:Texto width="100%" id="lblPrecioUni"/>
			</s:VGroup>
			
		</s:VGroup> 
		
	</s:VGroup>
</s:Group>
