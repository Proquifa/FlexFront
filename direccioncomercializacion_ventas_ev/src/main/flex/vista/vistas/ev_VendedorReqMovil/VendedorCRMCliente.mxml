<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:otros="skins.otros.*" xmlns:pqNet="skins.botones.pqNet.*"
		 xmlns:cmbCat="mx.com.proquifa.proquifanet.rsl.vista.vistas.componentes.comun.combos.*" creationComplete="group1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.alertPqNet.ResultAlert;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.CatalogoItem;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Cliente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Contacto;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Direccion;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Empleado;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.alertaSingleton;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import skins.catalogos.catalogoAlertas;
			import skins.catalogos.catalogoIconosEtiquetas;
			
			import vista.evento.EventoEVReqMovil;
			import vista.evento.EventoEvExpoMed;
			[Bindable]
			private var _datosComboRol:ArrayCollection = new ArrayCollection([{valor:'--NINGUNO--',llave:0 },
				{valor:'DISTRIBUIDOR',llave:1 },
				{valor:'LABORATORIO',llave:2 }]);
			[Bindable]
			private var _datosComboIndustria:ArrayCollection = new ArrayCollection([{valor:'--NINGUNO--',llave:0 },
				{valor:'ALIMENTOS Y BEBIDAS',llave:1 },
				{valor:'CLINICA HOSPITALARIA',llave:2 },
				{valor:'FARMACEUTICA',llave:3 },
				{valor:'OTRA',llave:4 }]);
			[Bindable]
			private var _datosComboSector:ArrayCollection = new ArrayCollection([{valor:'--NINGUNO--',llave:0 },
				{valor:'PRIVADO',llave:1 },
				{valor:'PUBLICO',llave:2 }]);
			
			[Bindable]
			private var _perteneceExpoFarma:Boolean = false;
			[Bindable]
			private var _origenDelaExpo:String;
			private var _origen:String;
			public function validaOrigen( $origen:String = '' ):void{
				
				if( $origen == 'expoPharma' || $origen == "expoMed"){
					lblESAC.visible = lblESAC.includeInLayout = false;
					txtESAC.visible = txtESAC.includeInLayout = false;
					espacioTxtEsac.includeInLayout = false;
					
					_perteneceExpoFarma = true;
					
					if($origen == "expoPharma")
						_origenDelaExpo = "ExpoPharma";
					else
						_origenDelaExpo = "ExpoMed";
						
					
					this.cmbPais.cargaPaises("--NINGUNO--");
					btnRegistrar.label = 'Registrar'
						
				}else{
					
					//_perteneceExpoFarma = false;
					this.cmbPais.cargaPaises();
				}
				_origen = $origen;
			}
			
			private function validaContenido():void{
				if(txtNombreCliente.text == "" ){
					alertaSingleton.show('Es obligatorio el nombre del cliente',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}				
				if(txtESAC.text == "" ) {
					alertaSingleton.show('Es obligatoria el esac',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtEV.text == "" ) {
					alertaSingleton.show('Es obligatoria el EV',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtEstado.text == "" && !_perteneceExpoFarma ){
					alertaSingleton.show('Es obligatorio el Estado',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtDireccion.text == "" && !_perteneceExpoFarma ) {
					alertaSingleton.show('Es obligatoria la Dirección',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtDelegacion.text == "" && !_perteneceExpoFarma ) {
					alertaSingleton.show('Es obligatoria la delegación',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtCP.text == "" && !_perteneceExpoFarma ) {
					alertaSingleton.show('Es obligatorio el CP',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtNombreContacto.text == "" ) {
					alertaSingleton.show('Es obligatorio el nombre del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtTituloContacto.text == "" ) {
					alertaSingleton.show('Es obligatorio el titulo del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtPuesto.text == "" ) {
					alertaSingleton.show('Es obligatorio la descripcion del puesto del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if( cmbPuesto.selectedIndex == 0 ){
					alertaSingleton.show('Es obligatorio el puesto del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtDepartamento.text == "" ) {
					alertaSingleton.show('Es obligatorio el departamento del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtTel1.text == "" ) {
					alertaSingleton.show('Es obligatorio el telefono del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				if(txtEMail.text == "" ) {
					alertaSingleton.show('Es obligatorio el Email del Contacto',catalogoAlertas.TIT_ADV_operacionImposible);
					return;
				}
				warningGuardar();
			}
			private var _esacAleatorio:Empleado = new Empleado();
			public function set obtenEmpleadoAleatorio( $dato:Empleado ):void{
				if( $dato == null ){
					return;
				}
				_idCliente = 0;
				this.txtESAC.text = $dato.usuario;
				_esacAleatorio = $dato;
			}
			
			private var _soloUnaVez:Boolean;
			
			private function warningGuardar():void{
				_soloUnaVez = true;
				alertaSingleton.show( "Se agregara al nuevo cliente. \n Todos los datos son correctos?" ,catalogoAlertas.TIT_ADV_atencion,'EVGuardaNuevoCliente','','','SI','NO')
			}
			public function set recibeDelAlert( $dato:ResultAlert ):void{
				if( $dato == null || $dato.vieneD == null ){
					return;
				}
				if( $dato.vieneD == "EVGuardaNuevoCliente" && $dato.botonSeleccionado == "SI"){
					registrarNuevoCliente();
				}
			}
			[Bindable]
			private var _seGuardoBienCliente:Boolean;
			private function registrarNuevoCliente():void{
				if( _soloUnaVez ){
					btnRegistrar.enabled = false;
					var evt:EventoEVReqMovil = new EventoEVReqMovil(EventoEVReqMovil.GUARDA_CLIENTE_NUEVO);
					evt.cliente = new Cliente();
					evt.cliente.nombre = txtNombreCliente.text;
					evt.cliente.industria = cmbIndustria.selectedItem.valor;
					evt.cliente.rol = cmbRol.selectedItem.valor;
					evt.cliente.sector = cmbSector.selectedItem.valor;
					evt.cliente.ejecutivoVenta = _esacAleatorio.usuario;
					
					//evt.cliente.agregadoExpo = this._perteneceExpoFarma;
					evt.cliente.origenRegistro = this._origenDelaExpo;
					
					evt.cliente.pais =  ( cmbPais.selectedItem as CatalogoItem ).valor;
					evt.cliente.estado = txtEstado.text;
					evt.cliente.calle = txtDireccion.text;
					evt.cliente.delegacion = txtDelegacion.text;
					evt.cliente.codigoPostal = txtCP.text;
					
					evt.cliente.idEjecutivoVenta = DatosGlobales.getInstance()._usuario.idEmpleado; 
					dispatchEvent( evt );
					this.btnRegistrar.enabled = false;
					_soloUnaVez = false;
					_seGuardoBienCliente = true;
				}
			}
			private var _idCliente:int;
			[Bindable]
			private var _seGuardoBienContacto:Boolean;
			public function set confirmaRegistroCliente( $idCliente:Number ):void{
				if( isNaN( $idCliente ) || $idCliente == 0 || $idCliente == -1){
					this.btnRegistrar.enabled = true;
					return;
				}
				if(_seGuardoBienCliente){
					_idCliente =  ObjectUtil.copy( $idCliente ) as Number;
					$idCliente = 0;
					/// si se confirma que, el cliente se guardo correctamente, se guarda el contacto con el id del cliente
					var evt:EventoEVReqMovil = new EventoEVReqMovil(EventoEVReqMovil.GUARDA_CONTACTO_NUEVO );
					//datos default contacto
					evt.nuevoContacto = new Contacto();
					evt.nuevoContacto.empresa = this.txtNombreCliente.text;
					evt.nuevoContacto.idEmpresa = _idCliente;
					evt.nuevoContacto.habilitado = true;
					evt.nuevoContacto.tipo = 'Clientes';
					//tomados de la vista para el contacto
					evt.nuevoContacto.nombre = txtNombreContacto.text;
					evt.nuevoContacto.titulo = txtTituloContacto.text;
					evt.nuevoContacto.puesto = txtPuesto.text;
					evt.nuevoContacto.departamento = txtDepartamento.text;
					evt.nuevoContacto.nivelDecision = this.cmbDecision.selectedItem.valor;
					evt.nuevoContacto.nivelPuesto = this.cmbPuesto.selectedItem.valor;
					evt.nuevoContacto.telefono = txtTel1.text;
					evt.nuevoContacto.telefonoN = txtTel2.text;
					evt.nuevoContacto.fax = txtFax.text;
					evt.nuevoContacto.EMail = txtEMail.text;
					//direccion del contacto
					evt.tipo = "inserta";
					evt.nuevoContacto.direccion = new Direccion();
					evt.nuevoContacto.direccion.idCliente = _idCliente;
					evt.nuevoContacto.direccion.pais =  ( cmbPais.selectedItem as CatalogoItem ).valor;
					evt.nuevoContacto.direccion.estado = txtEstado.text;
					evt.nuevoContacto.direccion.calle = txtDireccion.text;
					evt.nuevoContacto.direccion.municipio = txtDelegacion.text;
					evt.nuevoContacto.direccion.codigoPostal = txtCP.text;
					if( _perteneceExpoFarma && cmbPais.selectedIndex == 0 && txtEstado.text == '' && txtDireccion.text == '' && txtDelegacion.text == '' &&  txtCP.text == '') {
						evt.nuevoContacto.direccion = null;
					}
					
					//evt.nuevoContacto.agregadoExpo = _perteneceExpoFarma;
					evt.nuevoContacto.origenRegistro = this._origenDelaExpo;
					
					
					//datos aparte para el modelo
					evt.ubicacion = 'CRM';
					dispatchEvent( evt );
					var evtLimpi:EventoEVReqMovil = new EventoEVReqMovil( EventoEVReqMovil.LIMPIA_ID_CLIENTE );
					dispatchEvent(evtLimpi);
					_seGuardoBienCliente = false;
					_seGuardoBienContacto = true;
				}
			}
			public function set confirmaClienteYContactoNuevo( $dato:Number ):void{
				if( isNaN( $dato ) || $dato == 0 || $dato == -1){
					$dato = 0;
					this.btnRegistrar.enabled = true;
					return;
				}
				if( _seGuardoBienContacto ){
					limpiaVentana();
					
					if(_origen == "expoPharma" || _origen == "normal"){
						var evt:EventoEVReqMovil;
						evt = new EventoEVReqMovil( EventoEVReqMovil.CARAGAR_CONTACTOS );
						evt.idEmpleado = DatosGlobales.getInstance()._usuario.idEmpleado;
						dispatchEvent( evt );
					}else{
						
						dispatchEvent( new EventoEvExpoMed(EventoEvExpoMed.CARGAR_TODOS_LOS_CONTACTOS_HABILITADOS));
					}
					
					alertaSingleton.show(catalogoAlertas.CONF_seGuardaronLosDatos,catalogoAlertas.TIT_CONF_operacionExitosa);
					_seGuardoBienContacto = false;
				}
			}
			
			public function set recibirContactos( $lista:ArrayCollection ):void{
				if($lista == null){
					return;
				}
				$lista = new ArrayCollection();
				if( !isNaN( _idCliente ) && _idCliente > 0 ){
					var evt:EventoEVReqMovil = new EventoEVReqMovil( EventoEVReqMovil.MUESTRA_NUEVO_CLIENTE );
					evt.idCliente = _idCliente;
					dispatchEvent( evt );
				}
				_idCliente = 0;
				var $evtLimpia:EventoEVReqMovil = new EventoEVReqMovil( EventoEVReqMovil.LIMPIA_ID_CONTACTO );
				dispatchEvent( $evtLimpia );
			}
			
			public function set recibirContactosParaExpoMed( $lista:ArrayCollection ):void{
				if($lista == null){
					return;
				}
				$lista = new ArrayCollection();
				if( !isNaN( _idCliente ) && _idCliente > 0 ){
					var evt:EventoEVReqMovil = new EventoEVReqMovil( EventoEVReqMovil.MUESTRA_NUEVO_CLIENTE );
					evt.idCliente = _idCliente;
					dispatchEvent( evt );
				}
				_idCliente = 0;
				var $evtLimpia:EventoEVReqMovil = new EventoEVReqMovil( EventoEVReqMovil.LIMPIA_ID_CONTACTO );
				dispatchEvent( $evtLimpia );
			}
			
			
			private function limpiaVentana():void{
				this.cmbPais.selectedIndex = 0;
				this.cmbRol.selectedIndex = 0;
				this.cmbSector.selectedIndex = 0;
				this.cmbIndustria.selectedIndex = 0;
				this.cmbDecision.selectedIndex = 0;
				this.cmbPuesto.selectedIndex = 0;
				//Cliente
				this.txtNombreCliente.text = "";
				this.txtESAC.text = "";
				this.txtEstado.text = "";
				this.txtDireccion.text = "";
				this.txtDelegacion.text = "";
				this.txtCP.text = "";
				//Contacto
				this.txtNombreContacto.text = "";
				this.txtTituloContacto.text = "";
				this.txtPuesto.text = "";
				this.txtDepartamento.text = "";
				this.txtTel1.text = "";
				this.txtTel2.text = "";
				this.txtFax.text = "";
				this.txtEMail.text = "";
				this.btnRegistrar.enabled = true;
			}
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				if( _perteneceExpoFarma ){
					this.cmbPais.cargaPaises("--NINGUNO--");
				}else{
					this.cmbPais.cargaPaises();
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup width="100%" height="100%" horizontalAlign="center">
		<s:HGroup width="100%" height="100%" paddingBottom="15">
			<s:Scroller	width="100%" height="100%">
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_clienteSmall}"/>
						<s:Spacer width="5"/>
						<s:Label fontWeight="bold" text="Cliente" fontSize="15"/>
					</s:HGroup>
					<otros:divisionGruesa width="100%"/>
					<s:Spacer height="15"/>
					<s:Label text="Nombre:" fontWeight="bold"/>
					<s:TextInput id="txtNombreCliente" width="100%" fontStyle="normal"/>
					<s:Spacer height="15"/>
					<s:Label text="Industria:" fontWeight="bold" />
					<s:ComboBox width="100%" dataProvider="{ _datosComboIndustria }" labelField="valor" selectedIndex="0" id="cmbIndustria"/>
					<s:Spacer height="15"/>
					<s:Label text="Rol Industrial:" fontWeight="bold"/>
					<s:ComboBox width="100%" dataProvider="{_datosComboRol}" labelField="valor" selectedIndex="0" id="cmbRol"/>
					<s:Spacer height="15"/>
					<s:Label text="Sector:" fontWeight="bold"/>
					<s:ComboBox width="100%" dataProvider="{_datosComboSector}" labelField="valor" selectedIndex="0" id="cmbSector"/>
					<s:Spacer height="15" id="espacioTxtEsac"/>
					<s:Label text="ESAC:" fontWeight="bold" id="lblESAC"/>
					<s:Label width="100%" id="txtESAC" fontStyle="normal" />
					<s:Spacer height="15"/>
					<s:Label text="EV:" fontWeight="bold"/>
					<s:Label width="100%" id="txtEV" fontStyle="normal" text="{DatosGlobales.getInstance()._usuario.usuario}"/>
				</s:VGroup>
			</s:Scroller>
			<otros:VDivisionHueca height="100%"/>
			<s:Scroller	width="100%" height="100%">
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_direcccionSmall}"/>
						<s:Spacer width="5"/>
						<s:Label fontWeight="bold" text="Dirección" fontSize="15"/>
					</s:HGroup>
					<otros:divisionGruesa width="100%"/>
					<s:Spacer height="15"/>
					<s:Label text="País:" fontWeight="bold"/>
					<cmbCat:ComboCatalogos width="100%" id="cmbPais" />
					<s:Spacer height="15"/>
					<s:Label text="Estado:" fontWeight="bold"/>
					<s:TextInput width="100%" id="txtEstado" fontStyle="normal"/>
					<s:Spacer height="15"/>
					<s:Label text="Calle, número y colonia:" fontWeight="bold"/>
					<s:TextArea width="100%" height="100%" id="txtDireccion" minHeight="50" fontStyle="normal"/>
					<s:Spacer height="15"/>
					<s:Label text="Delegación o Municipio:" fontWeight="bold"/>
					<s:TextInput width="100%" id="txtDelegacion" fontStyle="normal"/>
					<s:Spacer height="15"/>
					<s:Label text="Código Postal:" fontWeight="bold"/>
					<s:TextInput width="100%" id="txtCP" fontStyle="normal" restrict="0-9" maxChars="5"/>
				</s:VGroup>
			</s:Scroller>
			<otros:VDivisionHueca height="100%"/>
			<s:Scroller	width="100%" height="100%">
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Image source="{catalogoIconosEtiquetas.getInstance().etiquetas_telSmall }"/>
						<s:Spacer width="5"/>
						<s:Label fontWeight="bold" text="Contacto" fontSize="15"/>
					</s:HGroup>
					<otros:divisionGruesa width="100%"/>
					<s:HGroup width="100%">
						<s:Label text="Nombre:" width="65%" fontWeight="bold"/>
						<s:Spacer width="15"/>
						<s:Label text="Título:" width="35%" fontWeight="bold"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<s:TextInput width="65%" fontStyle="normal" id="txtNombreContacto" />
						<s:Spacer width="15"/>
						<s:TextInput width="35%" fontStyle="normal" id="txtTituloContacto" maxChars="5" />
					</s:HGroup>
					<s:Spacer width="15"/>
					<s:HGroup width="100%">
						<s:Label text="Departamento:" fontWeight="bold" width="50%"/>
						<s:Spacer width="15"/>
						<s:Label text="Nivel de decisión:" fontWeight="bold" width="50%"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<s:TextInput width="50%" fontStyle="normal" id="txtDepartamento" />
						<s:Spacer width="15"/>
						<cmbCat:ComboCatalogos width="50%" id="cmbDecision" creationComplete="this.cmbDecision.cargarDecision('--NINGUNO--')"/>
					</s:HGroup>
					<s:Spacer width="15"/>
					<s:HGroup width="100%">
						<s:Label text="Puesto:" fontWeight="bold" width="50%"/>
						<s:Spacer width="15"/>
						<s:Label text="Descripción del puesto:" fontWeight="bold" width="50%"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<cmbCat:ComboCatalogos id="cmbPuesto" creationComplete="this.cmbPuesto.cargarPuestos('--NINGUNO--')" width="50%"  />
						<s:Spacer width="15"/>
						<s:TextInput width="50%" fontStyle="normal" id="txtPuesto" />
					</s:HGroup>
					<s:Spacer height="15"/>
					<s:Label text="Tel 1:" fontWeight="bold"/>
					<s:TextInput width="100%" fontStyle="normal" id="txtTel1" />
					<s:Spacer height="15"/>
					<s:Label text="Tel 2:" fontWeight="bold"/>
					<s:TextInput width="100%" fontStyle="normal" id="txtTel2" />
					<s:Spacer height="15"/>
					<s:Label text="Fax:" fontWeight="bold"/>
					<s:TextInput width="100%" fontStyle="normal" id="txtFax" />
					<s:Spacer height="15"/>
					<s:Label text="E-Mail:" fontWeight="bold"/>
					<s:TextInput width="100%" fontStyle="normal" id="txtEMail" />
				</s:VGroup>
			</s:Scroller>
		</s:HGroup>
		<otros:division width="100%"/>
		<s:Spacer height="15"/>
		<pqNet:botonPqNetLargo label="Registrar para requisitar" id="btnRegistrar" click="validaContenido()"/>
	</s:VGroup>
</s:Group>
