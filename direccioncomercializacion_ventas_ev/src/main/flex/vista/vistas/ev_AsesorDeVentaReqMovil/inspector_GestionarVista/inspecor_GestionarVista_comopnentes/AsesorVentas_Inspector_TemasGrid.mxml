<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="vgroup1_creationCompleteHandler(event)"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:pqNet="skins.skin.datagrid.pqNet.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.soliciud.EventoSolicitudGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.Visita;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.solicitud.popUP.SolicitudReferenciasPopUop;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import vista.evento.EventoEVGestionarVisitas;
			
			private var _popUpReferencias:SolicitudReferenciasPopUop = null;
			[Bindable] private var _listaReferencias:ArrayCollection;
			
			public function set obtenerVisita( $dato:Visita ):void{
				if( $dato == null ){
					return;
				}
				if( $dato.solicitudes != null && $dato.solicitudes.length > 0 ){
					for( var i:int = 0; i < $dato.solicitudes.length; i++ ){
						( $dato.solicitudes[i] as SolicitudVisita ).numFila = i + 1;
					}
				}
				gridTemas.dataProvider = ObjectUtil.copy($dato.solicitudes) as ArrayCollection;
			}
			
			public function itemSeleccionado(renglon:ListEvent):void{
				if(renglon.columnIndex == 8){
					if(renglon.currentTarget.selectedItem.existeReferencia == true){
						if(_popUpReferencias == null){
							_listaReferencias = new ArrayCollection();
							_popUpReferencias = SolicitudReferenciasPopUop( PopUpManager.createPopUp( this, SolicitudReferenciasPopUop, true ) );
							_popUpReferencias.addEventListener( EventoSolicitudGeneral.CERRAR_POP_UP, cerrarPopUp );
							_popUpReferencias.grpPrincipal.enabled = false;
							//_popUpReferencias.addEventListener( EventoSolicitudGeneral.ENVIA_REFERENCIAS, recibeReferencias );
						}else{	
							PopUpManager.addPopUp( _popUpReferencias, this, true);
						}
						_popUpReferencias.group1_creationCompleteHandler( _listaReferencias );
						PopUpManager.centerPopUp( _popUpReferencias);
						
						var consulta:EventoSolicitudGeneral = new EventoSolicitudGeneral(EventoSolicitudGeneral.CONSULTA_POP_REFERENCIAS);
						consulta.vieneD = 'consulta';
						dispatchEvent(consulta);
						
						var event:EventoEVGestionarVisitas = new EventoEVGestionarVisitas(EventoEVGestionarVisitas.OBTENER_LISTA_REFERENCIAS);
						event.idSolicitudVisita = renglon.currentTarget.selectedItem.idSolicitudVisita;
						dispatchEvent(event);
					}
				}	
			}
			
			private function cerrarPopUp( $evt:EventoSolicitudGeneral ):void{
				PopUpManager.removePopUp( _popUpReferencias );
			}
			
			private function acomodaPopUp( evt:Event ):void{
				if (_popUpReferencias != null ){
					setTimeout(retraso, 600);
				}
			}
			
			private function retraso():void{
				PopUpManager.centerPopUp(_popUpReferencias);
			}
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void{
				this.addEventListener( ResizeEvent.RESIZE, acomodaPopUp );
				gridTemas.porcentajesColumnasPq= new Array([5,11,11,37,8,6,8,6,5]);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<pqNet:dataGridPqNet width="100%" height="100%" id="gridTemas" itemClick="itemSeleccionado(event)" porcentajesColumnasPq="{[4,11,11,38,8,6,8,6,4]}"
						 rowHeight="66" variableRowHeight="true" horizontalScrollPolicy="off"   sortableColumns="false">
		<pqNet:columns>
			<mx:DataGridColumn headerText="#" dataField="numFila"/>
			<mx:DataGridColumn headerText="FOLIO" fontSize="12" id="folio" fontFamily="Tahoma" headerRenderer="skins.skin.datagrid.pqNet.componentes.HeaderRendererCatorce">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Incidente;
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
									
									import skins.catalogos.catalogoColores;
									import skins.catalogos.catalogoIconosGrid;
								]]>
							</fx:Script>
							<s:states>
								<s:State name="normal"/>
								<s:State name="hovered"/>
								<s:State name="selected"/>
							</s:states>
							<s:VGroup width="100%" textAlign="center" horizontalCenter="0" verticalCenter="0" >
								<s:Label width="100%" text="{(data as SolicitudVisita).folio}" color="0x{catalogoColores.LABEL_VERDE_AZUL}" fontWeight="bold"/>
								<s:Label width="100%" text="FDR {UtilsFecha.formatoFechaDDMMMYY((data as SolicitudVisita).fechaDeseadaRealizacion)}" color="{(data as SolicitudVisita).tiempoRealizacion == 'FT' ? uint('0xd10c0c') : uint('0x70a047')}" />
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Visita relacionada" fontSize="12" fontFamily="Tahoma" id="visitaRelacionada"  headerRenderer="skins.skin.datagrid.pqNet.componentes.HeaderRendererCatorce">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.incidentes.Incidente;
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
									
									import skins.catalogos.catalogoColores;
								]]>
							</fx:Script>
							<s:VGroup width="100%" textAlign="center" horizontalCenter="0" verticalCenter="0" >
								<s:Label width="100%" text="{(data as SolicitudVisita).folioVisitaOrigen == 'ND' ? 'No relacionada' : (data as SolicitudVisita).folioVisitaOrigen}" color="0x{catalogoColores.LABEL_VERDE_AZUL}" horizontalCenter="0" fontWeight="bold"/>
								<s:Label width="100%" text="FR {UtilsFecha.formatoFechaDDMMMYY((data as SolicitudVisita).visita.fechaEstimadaRealizacion)}" color="0x{catalogoColores.LABEL_GRIS}" />	
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="TEMA A TRATAR" fontFamily="Tahoma" dataField="justificacion" id="justificacion" fontSize="12" headerRenderer="skins.skin.datagrid.pqNet.componentes.HeaderRendererCatorce" itemRenderer="skins.skin.datagrid.pqNet.componentes.VerMasRenderer"/>
			<mx:DataGridColumn headerText="Origen" fontFamily="Tahoma" fontSize="12" id="solicita" headerRenderer="skins.skin.datagrid.pqNet.componentes.HeaderRendererCatorce">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									
									import skins.catalogos.catalogoColores;
									
								]]>
							</fx:Script>
							<s:VGroup width="100%" textAlign="center" horizontalCenter="0" verticalCenter="0" >
								<s:Label width="100%" text="{(data as SolicitudVisita).empleado.usuario}"  horizontalCenter="0" fontWeight="bold"/>
								<s:Label width="100%" text="{(data as SolicitudVisita).empleado.departamento}" color="0x{catalogoColores.LABEL_GRIS}" />
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		<mx:DataGridColumn headerText="Urgencia">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer width="100%"  autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									
									import skins.catalogos.catalogoColores;
									import skins.catalogos.catalogoIconosGrid;
									[Bindable]
									private var imagen:Class; 
									override public function set data(value:Object):void{
										super.data = value;
										//imagen = new Class();
										if( (data as SolicitudVisita ).urgencia.toUpperCase() == 'ALTA' ){
											this.lblColores.setStyle('color', '0x'+catalogoColores.LABEL_ROJO);
											imgColor.source = catalogoIconosGrid.getInstance().render_circuloRojo;
										}else if( (data as SolicitudVisita ).urgencia.toUpperCase() == 'MEDIA' ){
											this.lblColores.setStyle('color', '0x'+catalogoColores.LABEL_AMARILLO);
											imgColor.source  = catalogoIconosGrid.getInstance().render_circuloNaranja;
										}else if((data as SolicitudVisita ).urgencia.toUpperCase() == 'BAJA' ){
											this.lblColores.setStyle('color', '0x'+catalogoColores.LABEL_VERDE);
											imgColor.source  = catalogoIconosGrid.getInstance().render_circuloVerde;
										}
									}
								]]>
							</fx:Script>
							<s:VGroup width="100%"   horizontalAlign="center" verticalCenter="0">
								<s:Label   width="100%" textAlign="center" id="lblColores" text="{(data as SolicitudVisita ).urgencia.toUpperCase() }"/>
								<s:Image id="imgColor" />
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="En espera desde" >
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer width="100%" height="100%" autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
									
									import skins.catalogos.catalogoColores;
									
								]]>
							</fx:Script>
							<s:VGroup width="100%" textAlign="center" horizontalCenter="0" verticalCenter="0" >
								<s:Label width="100%" text="{UtilsFecha.formatoFechaDDMMMYYYYHHMM((data as SolicitudVisita).fechaSolicitud).substr(0,11)}" color="0x{catalogoColores.LABEL_MORADO_FUERTE}"  horizontalCenter="0"/>
								<s:Label width="100%" text="{UtilsFecha.formatoFechaDDMMMYYYYHHMM((data as SolicitudVisita).fechaSolicitud).substr(12)} hrs" color="0x{catalogoColores.LABEL_MORADO}"  horizontalCenter="0"/>
								<s:Label width="100%" text="{(data as SolicitudVisita).tiempoRealizacion}" color="{(data as SolicitudVisita).tiempoRealizacion == 'FT' ? uint('0xd10c0c') : uint('0x70a047')}"  horizontalCenter="0"/>
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Días de atraso" dataField="numFila">
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer width="100%" autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									
									import skins.catalogos.catalogoColores;
								]]>
							</fx:Script>
							<s:VGroup width="100%"  horizontalAlign="center" verticalCenter="0">
								<s:Label width="100%" textAlign="center" fontWeight="bold" text="{ (data as SolicitudVisita).diasAtraso }"/>
							</s:VGroup>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn headerText="Clip" id="clip" >
				<mx:headerRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false">
							<fx:Script>
								<![CDATA[
									import skins.catalogos.catalogoIconosGrid;
									[Bindable] public var normalIcon:Class;
									override public function set data(value:Object):void{
										super.data = value;
										this.normalIcon = catalogoIconosGrid.getInstance().render_clipsitonegro;
									}
								]]>
							</fx:Script>
							<mx:Image source="{normalIcon}" horizontalCenter="0" verticalCenter="0" />
						</s:MXItemRenderer>
					</fx:Component>
				</mx:headerRenderer>
				<mx:itemRenderer>
					<fx:Component>
						<s:MXItemRenderer autoDrawBackground="false" width="100%" >
							<fx:Script>
								<![CDATA[
									import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
									
									import skins.catalogos.catalogoIconosGrid;
									[Bindable]
									private var normalIcon:Class;
									[Bindable]
									private var hoveredIcon:Class;
									
									override public function set data(value:Object):void{
										super.data = value;
										if((data as SolicitudVisita).existeReferencia == false ){
											this.normalIcon = catalogoIconosGrid.getInstance().render_clipsitogris;																	
										}else{
											this.normalIcon = catalogoIconosGrid.getInstance().render_clipsito;	
										}	
										this.hoveredIcon = catalogoIconosGrid.getInstance().render_clipsitoblanco;// cambiar
									}
								]]>
							</fx:Script>
							<s:states>
								<s:State name="normal"/>
								<s:State name="hovered"/>
								<s:State name="selected"/>
							</s:states>
							<mx:Image source="{normalIcon}" horizontalCenter="0" verticalCenter="0"/>
						</s:MXItemRenderer>
					</fx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</pqNet:columns>
	</pqNet:dataGridPqNet>
</s:VGroup>
