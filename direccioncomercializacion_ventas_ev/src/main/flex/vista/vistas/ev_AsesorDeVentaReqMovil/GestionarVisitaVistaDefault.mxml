<?xml version="1.0" encoding="utf-8"?>
<contenedores:VGroupConPaddingStandardPqNet xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"  creationComplete="inicio()"
		 xmlns:pqNet="skins.skin.datagrid.pqNet.*" xmlns:otros="skins.otros.*" xmlns:label="skins.skin.label.*" 
		 xmlns:contenedores="skins.skin.contenedores.*"> <!--width="400" height="300"-->
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.soliciud.EventoSolicitudGeneral;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
			import mx.com.proquifa.proquifanet.rsl.vista.utils.DatosGlobales;
			import mx.com.proquifa.proquifanet.rsl.vista.vistas.plantillaProquifa.solicitud.VistaDefaultSolicitud;
			import mx.utils.ObjectUtil;
			
			import vista.evento.EventoEVGestionarVisitas;
			import vista.evento.EventoEVReqMovil;
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.ChartGestionarVisitasClientes;
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.ChartGestionarVisitasETVsFT;
			import vista.vistas.ev_AsesorDeVentaReqMovil.graficosGestionarVisitas.ChartGestionarVisitasUrgencias;
			
			public var grafica1:ChartGestionarVisitasETVsFT = new ChartGestionarVisitasETVsFT();
			public var grafica2:ChartGestionarVisitasUrgencias = new ChartGestionarVisitasUrgencias();
			public var grafica3:ChartGestionarVisitasClientes = new ChartGestionarVisitasClientes();
			private var _vistaSolicitud:VistaDefaultSolicitud = new VistaDefaultSolicitud();
			[Bindable] private var _numclientes:int;
			[Bindable] private var _numsolicitudes:int;
			[Bindable] private var _numet:int;
			[Bindable] private var _numft:int;
			private var _idUsuario:int;
			
			private function inicio():void{
				
				var graf:ArrayCollection = new ArrayCollection();
				graf.addItem(grafica1);
				graf.addItem(grafica2);
				graf.addItem(grafica3);
				
				for(var d:int = 0; d<graf.length ; d++){
					this.grpGraficas.addElement(graf[d]);
				}
				
			}
			
			public function set gestionarVisita($idEmpleado:Number):void
			{	
				if(!isNaN($idEmpleado)){
					
					var event:EventoEVGestionarVisitas = new EventoEVGestionarVisitas(EventoEVGestionarVisitas.GESTIONAR_VISITA_PRINCIPAL);
					event.idEjecutivoVentas = DatosGlobales.getInstance()._usuario.idEmpleado;
					dispatchEvent(event); 
					
				}
			}
			
			public function set recibeIdUsuario($idUsuario:int):void{
				_idUsuario = $idUsuario;
			}
			
			public function set recibeSolicitudes($solicitudes:ArrayCollection):void{
				if($solicitudes == null) return;
				var strInicio:String = '';
				var strFin:String = '';
				_numclientes = 0;
				_numsolicitudes = 0;
				_numet = 0;
				_numft = 0;
				this.dgGestionarVista.dataProvider = new Object();
				var arrTemp:ArrayCollection = ObjectUtil.copy($solicitudes) as ArrayCollection;
				
				_numclientes = arrTemp.length
				for(var d:int = 0 ; d<arrTemp.length ; d++){
					strInicio = (arrTemp[d] as SolicitudVisita).cliente.nivelIngreso.substr(0,1);
					strFin = (arrTemp[d] as SolicitudVisita).cliente.nivelIngreso.substr(1,2);
					strInicio == 'A' ? strInicio = 'ALTO' : (strInicio == 'B' ? strInicio = 'BAJO' : strInicio = 'MEDIO');
					strFin == 'A' ? strFin = 'ALTO' : (strFin == 'B' ? strFin = 'BAJO' : strFin = 'MEDIO');
					(arrTemp[d] as SolicitudVisita).cliente.niActual =  strInicio + ' · ' + strFin;
					_numsolicitudes = _numsolicitudes + (arrTemp[d] as SolicitudVisita).numSolicitudes;
					_numet = _numet + (arrTemp[d] as SolicitudVisita).enTiempo;
					_numft = _numft + (arrTemp[d] as SolicitudVisita).fueraDeTiempo;
				}
				
				this.dgGestionarVista.dataProvider = arrTemp;
				
				//grafica1.recibeSolicitudes(arrTemp);
				//grafica2.recibeSolicitudes(arrTemp);
				grafica3.recibeSolicitudes(arrTemp);
			}
			
			public function set recibeUniversoSolicitudes($universo:ArrayCollection):void{
				if($universo == null) return;
				var arrTemp:ArrayCollection = ObjectUtil.copy($universo) as ArrayCollection;
				grafica1.recibeSolicitudes(arrTemp);
				grafica2.recibeSolicitudes(arrTemp);
			}
			
		]]>
	</fx:Script>
	<!--<s:VGroup width="100%" height="100%" paddingLeft="15" paddingRight="15">-->  <!--paddingLeft="15" paddingRight="15"-->
		<s:HGroup width="100%" >
			<s:Label text="GESTIONAR VISITA" fontWeight="bold" fontSize="25" paddingTop="13" paddingBottom="5" fontFamily="Bank Gothic"/>	 
		</s:HGroup>
		<otros:divisionHueca width="100%"/>
		<s:HGroup width="100%" paddingTop="8">
			<s:Label fontWeight="bold" fontSize="20" text="Listado" fontFamily="Bank Gothic"/>
			<s:Spacer width="100%"/>
			<s:Label fontWeight="bold" text="{_numclientes} Clientes : {_numsolicitudes} Solicitudes de visita · {_numet} ET · {_numft} FT"  verticalAlign="bottom" fontSize="20" fontFamily="Bank Gothic"/>
		</s:HGroup>	
		<otros:divisionGruesa width="100%"/>
		<s:HGroup width="100%" height="100%">
			<pqNet:dataGridPqNet width="100%" height="100%" id="dgGestionarVista" rowHeight="90" horizontalScrollPolicy="auto" textAlign="center" porcentajesColumnasPq="[5,27,15,10,15,7,15,5]" sortableColumns="false"><!--[5,22,15,10,20,7,15,5]-->
				<pqNet:columns>
					<mx:DataGridColumn headerText="#" dataField="numFila" fontSize="12"/>
					<mx:DataGridColumn headerText="Cliente" fontFamily="Tahoma" >
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false"  >
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									
									<s:VGroup width="100%" >
										<s:Label text="{data.cliente.nombre}" width="100%"  fontWeight="bold" textAlign="center"/>	
										<s:Label text="{data.cliente.pais}:{data.cliente.ruta}" width="100%" color="0x{catalogoColores.LABEL_GRIS}"  textAlign="center"/>
										<s:Label text="{data.cliente.niActual}" width="100%"  color="0x{catalogoColores.LABEL_AZUL}" textAlign="center"/>
									</s:VGroup>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="Número de solicitudes" fontFamily="Tahoma"  textAlign="center"  fontSize="12">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									
									<s:VGroup width="100%" textAlign="center">
										<s:Label text="{data.numSolicitudes}{data.numSolicitudes == 1 ? ' solicitud' : ' solicitudes'}" width="100%" horizontalCenter="0" fontWeight="bold"/>	
										<s:Label text="{data.numContactos} {data.numContactos == 1 ? ' contacto distinto' : ' contactos distintos'} " width="100%" horizontalCenter="0"/>
										<s:Label text="{data.numOrigen} {data.numOrigen == 1 ? ' origen' : ' origenes' }" width="100%" horizontalCenter="0" color="0x{catalogoColores.LABEL_GRIS}"/>
									</s:VGroup>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="Urgencia" fontFamily="Tahoma" fontSize="12">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
											
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									
									<s:VGroup width="100%" >  
										<s:Group width="100%" textAlign="center">
											<s:Label text="{data.numUrgenciaAlta} : ALTA" width="100%" color="0x{catalogoColores.LABEL_ROJO}" visible="{data.numUrgenciaAlta == 0 ? false : true}"/>	
											<s:Ellipse width="10" height="10" horizontalCenter="40" verticalCenter="0" depth="50" visible="{data.numUrgenciaAlta == 0 ? false : true}">
												<s:fill>
													<s:SolidColor id="elipse32" color="0x{catalogoColores.LABEL_ROJO}"/>
												</s:fill>  
											</s:Ellipse>
										</s:Group>
										<s:Group width="100%" textAlign="center">
											<s:Label text="{data.numUrgenciaMedia} : MEDIA" width="100%" color="0x{catalogoColores.LABEL_AMARILLO}" visible="{data.numUrgenciaMedia == 0 ? false : true}"/>	
												<s:Ellipse width="10" height="10" horizontalCenter="40" verticalCenter="0" depth="50" visible="{data.numUrgenciaMedia == 0 ? false : true}">
													<s:fill>
														<s:SolidColor id="elipse2" color="0x{catalogoColores.LABEL_AMARILLO}"/>
													</s:fill>  
												</s:Ellipse>
										</s:Group>
										<s:Group width="100%" textAlign="center">
											<s:Label text="{data.numUrgenciaBaja} : BAJA" width="100%" color="0x{catalogoColores.LABEL_VERDE}" visible="{data.numUrgenciaBaja == 0 ? false : true}"/>	
											<s:Ellipse width="10" height="10" horizontalCenter="40" verticalCenter="0" depth="50" visible="{data.numUrgenciaBaja == 0 ? false : true}">
												<s:fill>
													<s:SolidColor id="elipse" color="0x{catalogoColores.LABEL_VERDE}"/>
												</s:fill>  
											</s:Ellipse>
										</s:Group>
										
									</s:VGroup>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="FDR" fontFamily="Tahoma" dataField="ubicacion" fontSize="12">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
											
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									
									<s:VGroup width="100%" textAlign="center">
										<s:Label text="{(data as SolicitudVisita).enTiempo} en tiempo" width="100%" color="0x{catalogoColores.LABEL_AZUL}" horizontalCenter="0" />	
										<s:Label text="{(data as SolicitudVisita).fueraDeTiempo} comprometidas" width="100%" color="0x{catalogoColores.LABEL_ROJO}" horizontalCenter="0"/>
									</s:VGroup>
									
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="Tiempo{'\n'}(@72 Hrs)" fontFamily="Tahoma" dataField="tiempo"  fontSize="12">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
											
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									
									<s:VGroup width="100%" textAlign="center">
										<s:Label text="{(data as SolicitudVisita).enTiempo} : ET" width="100%" color="0x{catalogoColores.LABEL_AZUL}" horizontalCenter="0" />	
										<s:Label text="{(data as SolicitudVisita).fueraDeTiempo} : FT" width="100%" horizontalCenter="0" color="0x{catalogoColores.LABEL_ROJO}"/>
									</s:VGroup>
									
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="Solicitud más antigua" fontFamily="Tahoma" dataField="antigua"  fontSize="12">
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
											import mx.com.proquifa.proquifanet.rsl.vista.utils.UtilsFecha;
											
											import skins.catalogos.catalogoColores;
										]]>
									</fx:Script>
									
									<s:Label text="{UtilsFecha.formatoFechaDDMMMYY((data as SolicitudVisita).fechaSolicitud)}" color="0x{catalogoColores.LABEL_ROJO}" horizontalCenter="0" fontWeight="bold"/>	
									
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="" >
						<mx:itemRenderer>
							<fx:Component>
								<s:MXItemRenderer autoDrawBackground="false">
									<fx:Script>
										<![CDATA[
											import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.SolicitudVisita;
											
											import skins.catalogos.catalogoIconosGrid;
											
											import vista.evento.EventoEVGestionarVisitas;
											import vista.evento.EventoEVReqMovil;
											public function verSolicitudes():void{
												var evento:EventoEVReqMovil = new EventoEVReqMovil(EventoEVReqMovil.CAMBIA_SOLICITUDES);
												dispatchEvent(evento);	 
												
												var evt:EventoEVGestionarVisitas = new EventoEVGestionarVisitas(EventoEVGestionarVisitas.LISTA_CONTACTOS);
												evt.idCliente = (data as SolicitudVisita).cliente.idCliente;
												dispatchEvent(evt);
												
												var event:EventoEVGestionarVisitas = new EventoEVGestionarVisitas(EventoEVGestionarVisitas.REINICIA_BOTONERA);
												dispatchEvent(event);
													
											}
										]]>
									</fx:Script>
									<s:Image source="{catalogoIconosGrid.getInstance().render_flechitacirculo}" click="verSolicitudes()" id="imgInfo" horizontalCenter="0"/>
								</s:MXItemRenderer>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</pqNet:columns>
			</pqNet:dataGridPqNet>
		</s:HGroup>
		<otros:divisionGruesa width="100%"/>
		<s:HGroup width="100%" height="100%" paddingTop="35" id="grpGraficas" >
			
		</s:HGroup>
	<!--</s:VGroup>	-->
	
</contenedores:VGroupConPaddingStandardPqNet>