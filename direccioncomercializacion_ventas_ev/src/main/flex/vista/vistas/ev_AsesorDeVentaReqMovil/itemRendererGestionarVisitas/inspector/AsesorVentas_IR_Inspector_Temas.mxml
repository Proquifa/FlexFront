<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
				autoDrawBackground="true" xmlns:otros="skins.otros.*" xmlns:componentes="skins.skin.datagrid.pqNet.componentes.*">
	<fx:Script>
		<![CDATA[
			import flash.utils.setTimeout;
			
			import mx.com.proquifa.proquifanet.rsl.vista.eventos.incidentes.EventoGestionIncidente;
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.ventas.visita.Temas;
			import mx.events.ResizeEvent;
			
			import skins.catalogos.catalogoColores;
			import skins.catalogos.catalogoIconosGrid;
			
			import vista.evento.EventoEVGestionarVisitas;
			
			override public function set data(value:Object):void{
				super.data = value;
				lblVerMas.grpTodo.paddingLeft = 10;
				if( value != null){
					this.visible = true;
					this.includeInLayout = true;
					this.percentHeight = 100;
					this.autoDrawBackground = true;
					grpGeneral.visible = false;
					grpGeneral.includeInLayout = false;
					grpTotal.visible = false;
					grpTotal.includeInLayout = false;
					this.addEventListener( ResizeEvent.RESIZE, actualizaTamano );
					if( isNaN( ( data as Temas ).totalTemas )  ){
						grpGeneral.visible = true;
						grpGeneral.includeInLayout = true;
						if( ( data as Temas ).eliminar ){
							this.visible = false;
							this.includeInLayout = false;
							this.height = 0;
						}
					}else{
						this.autoDrawBackground = false;
						grpTotal.visible = true;
						grpTotal.includeInLayout = true;
						lblTotal.text = '';
						( data as Temas ).totalTemas == 1 ? lblTotal.text = ( data as Temas ).totalTemas + ' asunto' : lblTotal.text = ( data as Temas ).totalTemas + ' asuntos';
					}
				}
			}
			protected function edita():void{
				var evt:EventoEVGestionarVisitas = new EventoEVGestionarVisitas( EventoEVGestionarVisitas.EDITA_TEMA_INSPECTOR );
				evt.tema = new Temas();
				evt.tema = this.data as Temas;
				dispatchEvent( evt );
			}
			protected function elimina():void{
				var evt:EventoEVGestionarVisitas = new EventoEVGestionarVisitas( EventoEVGestionarVisitas.ELIMINA_TEMA_INSPECTOR );
				evt.tema = new Temas();
				evt.tema = this.data as Temas;
				evt.tema.eliminar = true;
				dispatchEvent( evt );
			}
			private function actualizaTamano(evt:Event):void{
				setTimeout( retardo, 800 );
			}
			private function retardo():void{
				this.lblVerMas.width = ( this.width - 30);
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="hovered"/>
		<s:State name="selected"/>
	</s:states>
	<s:Group width="100%" height="100%">
		<s:HGroup width="100%" id="grpGeneral" gap="0">
			<s:Rect width="6" height="100%" visible="false" visible.selected="true" >
				<s:fill>
					<s:SolidColor color="0x{catalogoColores.LABEL_VERDE_AZUL}"/>
				</s:fill>
			</s:Rect>
			<s:VGroup width="100%" height="100%"  >
				<s:HGroup width="100%" paddingLeft="10" paddingRight="10" paddingTop="10">
					<s:Label fontSize="14" fontWeight="bold" color="0x{ catalogoColores.LABEL_AZUL_ESPECTRAL}" width="100%" text="#{ (data as Temas).numFila }"/>
					<s:Image source="{ catalogoIconosGrid.getInstance().render_engrane}" id="imgEngrane"
							 mouseOver="{ imgEngrane.source = catalogoIconosGrid.getInstance().render_engraneBlanco }"
							 mouseOut="{ imgEngrane.source = catalogoIconosGrid.getInstance().render_engrane}"
							 click="edita()"/>
					<!--source.hovered="{ catalogoIconosGrid.getInstance().render_engraneBlanco }"-->
					<s:VGroup paddingTop="3">
						<s:Image source="{ catalogoIconosGrid.getInstance().render_botebasuraazul}" id="imgBasura" 
								 mouseOver="{ imgBasura.source = catalogoIconosGrid.getInstance().render_botedebasurablanco }"
								 mouseOut="{ imgBasura.source = catalogoIconosGrid.getInstance().render_botebasuraazul }"
								 click="elimina()"/>
					</s:VGroup>
					<!--source.hovered="{ catalogoIconosGrid.getInstance().render_botedebasurablanco }" -->
				</s:HGroup>
				<s:Label text="{ (data as Temas).asunto }" width="100%" fontWeight="bold" paddingLeft="10" paddingRight="10" paddingTop="10" />
				<componentes:VerMasRenderer id="lblVerMas" textAlingDercha="true" etiqueta="{ ( data as Temas ).argumentos }" width="100%"  data="{this.data}" color="0x{catalogoColores.LABEL_GRIS}" colorGris="true"/> 
				<otros:division width="100%"/>
			</s:VGroup>
		</s:HGroup>
		<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="false" includeInLayout="false" id="grpTotal">
			<s:Spacer height="20"/>
			<s:Label color="0x{catalogoColores.LABEL_CASI_NEGRO}" fontSize="14" fontWeight="bold" id="lblTotal" />
			<s:Label color="0x{catalogoColores.LABEL_GRIS}" text="TOTAL"/>
 			<s:Spacer height="20"/>
		</s:VGroup> 
	</s:Group>
</s:ItemRenderer>
