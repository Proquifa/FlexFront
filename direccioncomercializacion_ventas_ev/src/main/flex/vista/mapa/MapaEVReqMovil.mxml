<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:mate="http://mate.asfusion.com/">
	<!--dispatcher="{new GlobalDispatcher()}"-->
	
	<fx:Script>
		<![CDATA[
			import mx.com.proquifa.proquifanet.rsl.vista.modelo.comun.Destinos;
			
			import vista.evento.EventoEVReqMovil;
			import vista.evento.EventoEvExpoMed;
			import vista.modelo.ModeloEVReqMovil;
			import vista.modelo.ModeloEvExpoMed;
			import vista.vistas.ev_VendedorReqMovil.VendedorBusquedaCliente;
			import vista.vistas.ev_VendedorReqMovil.VendedorCRMCliente;
			import vista.vistas.ev_VendedorReqMovil.VendedorRequisitar;
			import vista.vistas.ev_VendedorReqMovil.graficosExpoFarma.ExpoFarmaColumnChartRegistro;
			import vista.vistas.ev_VendedorReqMovil.graficosExpoFarma.ExpoFarmaGraficoPieClientes;
			import vista.vistas.ev_VendedorReqMovil.graficosExpoFarma.ExpoFarmaGraficoPieContactos;
			import vista.vistas.popUp.VendedorContactosPopUp;
			import vista.vistas.popUp.VendedorRutasContactosPopUp;
			import vista.vistas.popUp.expofarma.CuestionarioExpoFarma;
			import vista.vistas.popUp.expofarma.CuestionarioExpoMed;
			import vista.vistas.popUp.expofarma.SorteoExpoFarma;
		]]>
	</fx:Script>
	<fx:Declarations>
		
		<!--<mate:Debugger level="{Debugger.ALL}"/>-->
		
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<!-- //////////////////////////////////////////////////////////////////////////////////// Evento para obtener las empresas por contactos  ////////////////////////////-->
		<mate:EventHandlers type="{ EventoEVReqMovil.CARAGAR_CONTACTOS}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  arguments="{[event.idEmpleado]}"
									  method="findContactosPorIdEmpleado"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<!--method="obtenerContactos"-->
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setObtenContactos"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   targets="{ [VendedorBusquedaCliente,VendedorCRMCliente,VendedorContactosPopUp]}">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="ObtenContactos"
								   targetKey="recibirContactos"/>
		</mate:Injectors>
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para cargar las direcciones del Cliente seleccionado //////////////-->
		<mate:EventHandlers type="{ EventoEVReqMovil.CARGAR_DIRECCIONES_CLIENTE }">
			<mate:RemoteObjectInvoker destination="{ Destinos.DIRECCIONES_CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="findDireccionesCliente"
									  arguments="{[event.idCliente]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setDireccionesCliente"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorRutasContactosPopUp }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="DireccionesCliente"
								   targetKey="recibeDirecciones"/>
		</mate:Injectors>
		
		<!-- /////////////////////////////////////////////////// Evento para guardar cargar un ESAC aleatoriamente /////////////////////-->
		<mate:EventHandlers type="{ EventoEVReqMovil.CARGA_ESAC_ALEATORIAMENTE }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EMPLEADO_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerEsacParaNuevoCliente"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setObtenEmpleado"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorCRMCliente }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="ObtenEmpleado"
								   targetKey="obtenEmpleadoAleatorio"/>
		</mate:Injectors>
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para guardar Cliente_Empresa -->
		<mate:EventHandlers type="{ EventoEVReqMovil.GUARDA_CLIENTE_NUEVO}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CLIENTE_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="insertarCliente"
									  arguments="{[event.cliente]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setGuardaCliente"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorCRMCliente }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="GuardaCliente"
								   targetKey="confirmaRegistroCliente"/>
		</mate:Injectors>
		<!-- ////////////////////////////////// Evento para guardar Contacto nuevo desde desde BusquedaCliente(popUp) y desde CRM despues de agregar Cliente -->
		<mate:EventHandlers type="{ EventoEVReqMovil.GUARDA_CONTACTO_NUEVO}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="insertarNuevoContacto"
									  arguments="{[event.nuevoContacto,event.tipo]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setConfirmaContactoNuevo"
										arguments="{[resultObject,event]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorCRMCliente }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="ConfirmaContactoNuevoCRM"
								   targetKey="confirmaClienteYContactoNuevo"/>
		</mate:Injectors>
		<mate:Injectors			   target="{ VendedorContactosPopUp }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="ConfirmaContactoNuevo"
								   targetKey="recibeContacto"/>
		</mate:Injectors>
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para editar Contacto -->
		<mate:EventHandlers type="{ EventoEVReqMovil.EDITA_CONTACTO }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="editarContacto"
									  arguments="{[event.nuevoContacto,event.tipo]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setConfirmaContactoNuevo"
										arguments="{[resultObject,event]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para graficos de Expo Farma -->
		<mate:EventHandlers type="{ EventoEVReqMovil.OBTENER_INFO_GRAFICOS_EXPOFARMA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="graficaExpoFarma"
									  
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setInfoGraficoExpoFarma"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="errorExpoFarma"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   targets="{[ExpoFarmaColumnChartRegistro,ExpoFarmaGraficoPieContactos,ExpoFarmaGraficoPieClientes]}">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="infoGraficoExpoFarma"
								   targetKey="recibeInfoGraficos"/>
		</mate:Injectors>

		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para generar una requisicion -->
		<mate:EventHandlers type="{ EventoEVReqMovil.GENERA_REQUISICION }">
			<mate:RemoteObjectInvoker destination="{ Destinos.REQUISICION_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="insertarRequisicionMovil"
									  arguments="{[event.requisicion,event.listaPRequisicion,event.nuevoContacto]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setConfirmaRequisicion"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorRequisitar }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="ConfirmaRequisicion"
								   targetKey="confirmaRequisicion"/>
		</mate:Injectors>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// LIMPIA ID CLIENTE -->
		<mate:EventHandlers type="{ EventoEVReqMovil.LIMPIA_ID_CLIENTE}">
			<mate:MethodInvoker generator="{ModeloEVReqMovil}" method="limpiaID"/>
		</mate:EventHandlers>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// LIMPIA ID CLIENTE -->
		<mate:EventHandlers type="{ EventoEVReqMovil.LIMPIA_ID_CONTACTO}">
			<mate:MethodInvoker generator="{ModeloEVReqMovil}" method="limpiaIDContacto"/>
		</mate:EventHandlers>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para generar un registro en la expo -->
		<mate:EventHandlers type="{ EventoEVReqMovil.REGISTRO_EXPO_FARMA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="insertarRegistroExpoFarma"
									  arguments="{[event.registroExpo]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setRegistroExpo"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorBusquedaCliente }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="RegistroExpo"
								   targetKey="confirmaRegistoExpo"/>
		</mate:Injectors>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para guardar cuestionario en la expo Farma -->
		<mate:EventHandlers type="{ EventoEVReqMovil.GUARDA_EXPORFARMA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="registrarEncuestaFarma"
									  arguments="{[event.idRegistroExpoFarma,event.tipo,event.respuesta1,event.otros1,event.otros2,event.publicaciones,event.otrosPublicaciones,event.iso, event.time]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setGuardaCuestionario"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para guardar cuestionario en la expo Clinicos -->
		<mate:EventHandlers type="{ EventoEVReqMovil.GUARDA_EXPORFARMA_CLINICA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="registrarEncuestaClinicos"
									  arguments="{[event.idRegistroExpoFarma,event.tipo,event.respuesta1,event.respuesta2,event.respuesta3,event.respuesta4,event.respuesta5,event.respuesta6,event.respuesta7, event.time]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setGuardaCuestionario"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para guardar cuestionario en la expo Alimentos -->
		<mate:EventHandlers type="{ EventoEVReqMovil.GUARDA_EXPORFARMA_ALIMENTOS }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="registrarEncuestaAlimentos"
									  arguments="{[event.idRegistroExpoFarma,event.tipo,event.respuesta1,event.iso,event.respuesta2,event.respuesta3,event.respuesta4,event.respuesta5,event.respuesta6,event.publicaciones,event.time]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setGuardaCuestionario"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<!-- //////////////////////////////////////////////////////////////////////////////////////Injector para confirmar el guardado de todos los Cuestionarios -->
		<mate:Injectors			   target="{ CuestionarioExpoFarma }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="GuardaCuestionario"
								   targetKey="confirmaCuestionarioExpo"/>
		</mate:Injectors>
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para obtener ganador sorte -->
		<mate:EventHandlers type="{ EventoEVReqMovil.OBTENER_GANADOR_EXPOFARMA }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_FARMA_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerClientesRandom"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="setSorteExpoFarma"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEVReqMovil}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ SorteoExpoFarma }">
			<mate:PropertyInjector source="{ ModeloEVReqMovil }" 
								   sourceKey="SorteExpoFarma"
								   targetKey="ganadorSorteExpoFarma"/>
		</mate:Injectors>
		
		
		<!-- //////////////////////////////////////////////////////////////////////////////////////	EVENTOS PARA EXPOMED /////////////////////////////////////////////////////////////////////////////////////// -->
		
		<!-- //////////////////////////////////////////////////////////////////////////////////////	Obtener todos los contactos ////////////////////// -->
		<mate:EventHandlers type="{ EventoEvExpoMed.CARGAR_TODOS_LOS_CONTACTOS_HABILITADOS}">
			<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="obtenerContactosExpoMed"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="setObtenerContactosParaExpoMed"
										arguments="{resultObject}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors	targets="{ [VendedorBusquedaCliente,VendedorCRMCliente,VendedorContactosPopUp]}"> <!--,VendedorCRMCliente,VendedorContactosPopUp-->
			<mate:PropertyInjector source="{ ModeloEvExpoMed }" 
								   sourceKey="regresarTodosLosContactos"
								   targetKey="recibirContactosParaExpoMed"/>
		</mate:Injectors>
		
		
		<mate:EventHandlers type="{ EventoEvExpoMed.REGISTRO_EXPO_MED }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_MED_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="insertarRegistroExpoMed"
									  arguments="{[event.registroExpoMed]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="setRegistroExpo"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   target="{ VendedorBusquedaCliente }">
			<mate:PropertyInjector source="{ ModeloEvExpoMed }" 
								   sourceKey="RegistroExpo"
								   targetKey="confirmaRegistoExpo"/>
		</mate:Injectors>
		
		<!--===========================================================================GUARDAR CUESTIONARIO EXPO MED ===========================-->
		<mate:EventHandlers type="{ EventoEvExpoMed.MANDAR_CUESTIONARIO_EXPO_MED }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_MED_SERVICE}"
									  endpoint="{ Destinos.END_POINT }"
									  method="registrarEncuestaMed"
									  arguments="{[event.idRegistro,event.respuesta1,event.respuesta2,event.otros2,event.respuesta3,event.respuesta4,event.otros4,event.respuesta5,event.otros5, event.tiempo]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="setGuardaCuestionarioExpoMed"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors	target="{ CuestionarioExpoMed }">
			<mate:PropertyInjector source="{ ModeloEvExpoMed }" 
								   sourceKey="GuardaCuestionarioExpoMed"
								   targetKey="confirmaCuestionarioExpo"/>
		</mate:Injectors>
		
		
		<mate:EventHandlers type="{ EventoEvExpoMed.OBTENER_INFO_GRAFICOS_EXPO_MED }">
			<mate:RemoteObjectInvoker destination="{ Destinos.EXPO_MED_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="graficaExpoMed"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="setInfoGraficoExpoMed"
										arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="errorExpoFarma"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		<mate:Injectors			   targets="{[ExpoFarmaColumnChartRegistro,ExpoFarmaGraficoPieContactos,ExpoFarmaGraficoPieClientes]}">
			<mate:PropertyInjector source="{ ModeloEvExpoMed }" 
								   sourceKey="infoGraficoExpoMed"
								   targetKey="recibeInfoGraficos"/>
		</mate:Injectors>
		
		
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////// Evento para editar Contacto -->
		<mate:EventHandlers type="{ EventoEvExpoMed.EDITAR_CONTACTO_EXPO_MED }">
			<mate:RemoteObjectInvoker destination="{ Destinos.CONTACTO_SERVICE }"
									  endpoint="{ Destinos.END_POINT }"
									  method="editarContactoExpo"
									  arguments="{[event.nuevoContacto,event.tipo]}"
									  showBusyCursor="true">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="setConfirmaContactoNuevoExpoMed"
										arguments="{[resultObject,event]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{ModeloEvExpoMed}"
										method="error"
										arguments="{fault}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:Injectors			   target="{ VendedorCRMCliente }">
			<mate:PropertyInjector source="{ ModeloEvExpoMed }" 
								   sourceKey="ConfirmaContactoNuevoCRMExpoMed"
								   targetKey="confirmaClienteYContactoNuevo"/>
		</mate:Injectors>
		<mate:Injectors			   target="{ VendedorContactosPopUp }">
			<mate:PropertyInjector source="{ ModeloEvExpoMed }" 
								   sourceKey="ConfirmaContactoNuevoExpoMed"
								   targetKey="recibeContacto"/>
		</mate:Injectors>
	</fx:Declarations>
</mate:EventMap>
